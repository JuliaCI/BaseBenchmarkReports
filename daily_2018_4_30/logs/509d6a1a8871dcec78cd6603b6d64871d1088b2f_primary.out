cset: moving following pidspec: 13368
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.394529509 seconds)
loading group "string"... done (took 0.495441357 seconds)
loading group "linalg"... done (took 9.737060485 seconds)
loading group "parallel"... done (took 0.170334764 seconds)
loading group "find"... done (took 1.287319423 seconds)
loading group "tuple"... done (took 2.027175492 seconds)
loading group "dates"... done (took 1.377074338 seconds)
loading group "micro"... done (took 0.193728964 seconds)
loading group "io"... done (took 0.518587203 seconds)
loading group "scalar"... done (took 56.83149021 seconds)
loading group "sparse"... done (took 13.761600612 seconds)
loading group "broadcast"... done (took 1.306666819 seconds)
loading group "union"... done (took 10.282527886 seconds)
loading group "simd"... done (took 3.519181874 seconds)
loading group "random"... done (took 13.078700803 seconds)
loading group "problem"... done (took 2.163423962 seconds)
loading group "array"... done (took 24.618726109 seconds)
loading group "misc"... done (took 1.119018931 seconds)
loading group "sort"... done (took 3.706053306 seconds)
loading group "collection"... done (took 21.754742686 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.608680955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126602259 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200916189 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.336701498 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.228121482 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164162682 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140690937 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.238804198 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.564061514 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.196481785 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137849453 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.497585762 seconds)
done (took 6.179410724 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25393085 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241819493 seconds)
    (2/2) benchmarking "String"...
    done (took 0.159960473 seconds)
  done (took 1.084466829 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077898665 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.158029522 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107987704 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09275088 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093988546 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107437358 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093308439 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108358423 seconds)
  done (took 1.448627415 seconds)
done (took 3.551546169 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494398054 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.868588173 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.489728899 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142567939 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309569394 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290729466 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267983446 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.197347135 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089384643 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089736923 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170364975 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.406631424 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.378587126 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.957194662 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093210115 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096233157 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130407089 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.778443273 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080525661 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121845136 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488099589 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.179333707 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098837247 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.119060384 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185721203 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13076121 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160804365 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099234646 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673114312 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131647451 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.175758246 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096636704 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160859253 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183582676 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.192241049 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108988195 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679027912 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201087709 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090274563 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100751919 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.661744915 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.117313961 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181386508 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103947659 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088120423 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182387012 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.090822801 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079117001 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109859092 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086713501 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162138557 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.45016282 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104618771 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168499301 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092565042 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699991371 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096969246 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272031944 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126324401 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095206403 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089777058 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088851037 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156797208 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.0938654 seconds)
  done (took 19.833990761 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147236827 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163087579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07931497 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155555398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122517023 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081089386 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10075117 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080130247 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124926142 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178973854 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13774308 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15207258 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091990673 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09180235 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127749889 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247759494 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109194183 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120542815 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089639852 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090937286 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138490976 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097018311 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10715026 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091754943 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16941158 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203205796 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110212299 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122527883 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090006248 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096224274 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142190702 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14439398 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091871824 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089464637 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.186707865 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106494191 seconds)
  done (took 5.182948001 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203505281 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121930459 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204702092 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159311966 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.145700019 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165484616 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123323194 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264212022 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197794612 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.180735395 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113694595 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.120408864 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07909256 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081669987 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.184730203 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082494286 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.485209174 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148921666 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160461117 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127408497 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102385166 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082474398 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386092687 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0886859 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082744392 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102783252 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064477233 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196590355 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086175332 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.145146262 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085376293 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085020165 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134179059 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193273712 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135288738 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122920251 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084886528 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.094297518 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221300363 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087715701 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080690115 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131387298 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118433957 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129405625 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.080890958 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09856611 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219593284 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078432662 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100862757 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.051103696 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194774843 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120669255 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.07895889 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289974202 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.118291842 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08046137 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080343648 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.800972423 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.115076102 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085227972 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098534897 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08377204 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080178525 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426752371 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09692453 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.047447717 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084370936 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.161239999 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079212997 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097574112 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086963691 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085938125 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.100116563 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103740144 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080996773 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097956018 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082502458 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079874315 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081223065 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128912724 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084748968 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094938063 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145082116 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099707615 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117266105 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111853805 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097404873 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079618246 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130268311 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081675842 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08052595 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165993001 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080426325 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.132511713 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080584235 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142269838 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082280781 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.237050405 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083428371 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087635497 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.142807567 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.084687703 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12493402 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084381214 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113428327 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08159967 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101296431 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079116392 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080863217 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158572885 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080888923 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08053896 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081335345 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109225026 seconds)
  done (took 27.631411365 seconds)
done (took 53.334281207 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.43752147 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078373646 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080401858 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096282065 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078730307 seconds)
  done (took 1.535609405 seconds)
done (took 2.276292516 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3249159 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.185931262 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10263991 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18395467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086404674 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.191076255 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178836221 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094553174 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202983275 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084067751 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181336112 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083800521 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103232523 seconds)
  done (took 2.772241898 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10125092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10723348 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101557373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11701029 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083376107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099554898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115893064 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108368308 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098475635 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108669455 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082212654 seconds)
  done (took 1.860859728 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098606095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107403508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098262006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111499339 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08373466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096865117 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112363017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104863722 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096358255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108054339 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082859285 seconds)
  done (took 1.840738759 seconds)
done (took 7.210575296 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.056219805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.233525981 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.16213433 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.204677095 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344257421 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.230342379 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.541173338 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.1509095 seconds)
  done (took 13.810750208 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.122041249 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090934727 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.150447214 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091554824 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093661553 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109416613 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093411322 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089776249 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.107620731 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090641425 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089240571 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107509462 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094591096 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.094759165 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105986271 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090081796 seconds)
  done (took 2.431146476 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.141845298 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139703114 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096137999 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098665014 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111669896 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098528056 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099538122 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11241622 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093768493 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09303991 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116255647 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.096700948 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096148008 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107567951 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.096145523 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116105923 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10764839 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.0969025 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11452382 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113543787 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09779153 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094678136 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111758842 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097795455 seconds)
  done (took 3.377426458 seconds)
done (took 20.361222355 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.147697513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101661673 seconds)
  done (took 0.998251207 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139292105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153299709 seconds)
  done (took 1.045532219 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112017713 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092174357 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136719567 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103909244 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091100996 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105177685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115675006 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104852523 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090999158 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090914127 seconds)
  done (took 1.798748561 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.097058367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094629736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119594384 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.132119833 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115960422 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.091992132 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094409455 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093103746 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110781586 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089192771 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094978008 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121185403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094672315 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124262045 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094431018 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095167636 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113794743 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09303583 seconds)
  done (took 2.626114081 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093723503 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091483608 seconds)
  done (took 0.942336898 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095009812 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09005182 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09156562 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10731585 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090350526 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089567936 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104757332 seconds)
  done (took 1.424834668 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483436292 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.256693061 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.349930362 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106991822 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.142574828 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.342862173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143178883 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.101894258 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.220579529 seconds)
  done (took 2.938054591 seconds)
done (took 12.529151315 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092312002 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.217460238 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609604612 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111576049 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08883085 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156069632 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.276881324 seconds)
done (took 2.318297235 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.337300068 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.138661239 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079294364 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.088176788 seconds)
  done (took 1.401948441 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083894522 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098095685 seconds)
  done (took 0.9481199 seconds)
done (took 3.113748028 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09067404 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.119575978 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104621527 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087537256 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087163502 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.087868272 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.104940854 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08790815 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.087186731 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105709519 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087398142 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087907657 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.087591931 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.103924475 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088369069 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087666636 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101953981 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087488275 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087934539 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087401369 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101862561 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088450393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088038068 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.102892617 seconds)
  done (took 3.051041159 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104942207 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.089706446 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107466974 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091862029 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09134762 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106379211 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091703793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090227009 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.1078217 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089926744 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092022632 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.106998237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089744214 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091607487 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08930977 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10814522 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092468304 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090099084 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104892432 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093485585 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.09258314 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104679564 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09212832 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092358304 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10715812 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09208076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089292003 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.104618393 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092228405 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092270073 seconds)
  done (took 3.655341684 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098195275 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084879919 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088273886 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112004406 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085652494 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08886167 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100784166 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086347993 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0897143 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087856116 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105044613 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087728711 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086184088 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105743077 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089358564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091476524 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113197293 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08638721 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085919315 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089797587 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106793988 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086743616 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088294507 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.103552855 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088054965 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086672061 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089811984 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104690516 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089063908 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089348886 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107095998 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.091786917 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088941268 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.113974079 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.091104411 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088115487 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094007328 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.101694501 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089129358 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085618082 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10095424 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.088165765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085946482 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.110422059 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089439607 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090335546 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086160563 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.105368732 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.089677212 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09111934 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.101335407 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08644898 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090907664 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090107485 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.10621906 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085183369 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089093882 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101034858 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.089547072 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089352733 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085391714 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10139456 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093243307 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089708344 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.118288328 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.094181797 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086454377 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106428981 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.089183878 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.093793113 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.108662965 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098063906 seconds)
  done (took 7.550685754 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103034375 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097892788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090101664 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105260871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089719644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089698846 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109810971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089621099 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090516998 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112213298 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089212818 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091083655 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106261853 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090291062 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089932995 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090659708 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110812986 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089203528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090110525 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105527947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089805044 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093349309 seconds)
  done (took 2.888171044 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233083679 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095002023 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137540245 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118104867 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106231821 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118571604 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09313371 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096433199 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109852766 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098120738 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098265246 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109655183 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.104984441 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112569027 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097937692 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099256812 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110474559 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09842523 seconds)
  done (took 2.814394586 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105407966 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094891847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126981 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091266974 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090568214 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091589046 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113230489 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110454731 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107682829 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091875888 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097095294 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111062509 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092196719 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091058996 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091422844 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106849981 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092721786 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091671195 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112968423 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095756248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097308477 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113453359 seconds)
  done (took 2.994402054 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105378644 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091484737 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124735227 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09385376 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089288128 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107607932 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09550127 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091408358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.11352808 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092524092 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092597532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090690113 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.120830114 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091087171 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.09701493 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107320338 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091864819 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090950543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107195253 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08988106 seconds)
  done (took 2.76437545 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167491225 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122679315 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106497774 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114136492 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123174023 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105778324 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113410704 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121582499 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107001704 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133439889 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10636915 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106745057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130539431 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112353645 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123828571 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114682222 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114337603 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131603071 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106059068 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122167778 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117595117 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106287572 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130651673 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106731604 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123330208 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107066584 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106723185 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127975963 seconds)
  done (took 4.091588643 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094375443 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090820247 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088765244 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105626399 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089432022 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089696835 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089975392 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105653526 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090193312 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089137227 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.106277138 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.089402894 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090270971 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089703189 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106319809 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090047326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089076471 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10588703 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089665696 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089751785 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0900915 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105081449 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089670451 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091570953 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105782293 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.089926533 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090869882 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089258738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105421444 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089810629 seconds)
  done (took 3.610056821 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105514925 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098644597 seconds)
  done (took 0.987360741 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100680912 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103693621 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09036986 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107497105 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096586035 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090467989 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116199374 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096475577 seconds)
  done (took 1.586435362 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141887416 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.158136808 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094471955 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102442931 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.155600346 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148474422 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12983439 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.095230848 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107687528 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084341187 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.151335441 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083187047 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09212193 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08783202 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108625074 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09737916 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091317174 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100191735 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096858408 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092875675 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112475681 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09542705 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111918717 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101753512 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085098666 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09319396 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111667517 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102048636 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105605613 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093759699 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089343918 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092031525 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110227199 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094681226 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.09127719 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.156638988 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097869814 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106408674 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091672691 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095593636 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142279099 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090998855 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09218842 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107951961 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094123039 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09514577 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112969198 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091297143 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084521665 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103239276 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091522073 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086933215 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090737753 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108079028 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091656356 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115874337 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093144154 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088272059 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088923596 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102496948 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090151791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087664688 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111502939 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094143442 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091567683 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.109067805 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09103229 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092386147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.110535068 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092853861 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090915227 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123052013 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092165149 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09582285 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113166031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092363087 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089418954 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114514898 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090425684 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09241576 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.113081555 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120082572 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093909614 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1051088 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08775865 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099281607 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110453933 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.093764097 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084981103 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116694656 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0957411 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093078474 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085328288 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10658637 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087490905 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094290448 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.10259133 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091972603 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0908863 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.113436978 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095498402 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090925766 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112094905 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097041471 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097657107 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.108522018 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.134379997 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105645968 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087378518 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093351633 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096659209 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102844535 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091475395 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090493534 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106593802 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087050402 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096084958 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108896179 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094046377 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094925808 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111382053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092857084 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093097134 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108096767 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088773235 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.0944751 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11664553 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094078352 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093994464 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108897704 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092687791 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09201697 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095669374 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105841082 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095861201 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089682445 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.108561125 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.092278861 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.095204561 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109666543 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.087997857 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091199408 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110236716 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091376065 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.093819237 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110375128 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087635169 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084531559 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110757592 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087431339 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093142086 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117462688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087956153 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093819556 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106128649 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09955104 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089561683 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097137059 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112099214 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096955749 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096920747 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101532687 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089796276 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094452787 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111518261 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090172652 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093209366 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109142352 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097838254 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085953557 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.11419607 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085042162 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089167421 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097850009 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.111522688 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094221732 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088583222 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1473543 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103685003 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09784623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108684438 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092294515 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095091481 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11274963 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095997704 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097067082 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.114521404 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090438965 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091669403 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115334737 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089343378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093840887 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107774323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093904894 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084570602 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110668618 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08417489 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.097207709 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095005281 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113807756 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096621478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094293137 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110039986 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101556169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088590817 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.113676974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085707641 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097048261 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.120155664 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097778407 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097413367 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112076314 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090400895 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094213465 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11815402 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.093633278 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092198955 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093700639 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103129448 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085830082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.097353831 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.112566331 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08819049 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09286002 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111631368 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095577898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091393237 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103814595 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096398468 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096499928 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106407447 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092930216 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089588813 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107572163 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09968909 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08584415 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107057676 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09338142 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096957449 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110097487 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091249717 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.094472246 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.097384223 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11288422 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094261434 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089451749 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117686386 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091039478 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.091373882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10629836 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.094468142 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086256955 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11188999 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091713041 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089131355 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10585991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096084084 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098151296 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098928405 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109586305 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09659158 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097861028 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.114853651 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090135956 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098360008 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106151106 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087164891 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088756675 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103545349 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094027953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088923294 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11485156 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091251469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091695845 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112829851 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094643491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091150756 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.115719445 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103257175 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086404913 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10440174 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09033762 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102739485 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107799746 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.08919833 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093068739 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111655643 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.096468484 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094949824 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090189514 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.11101222 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098193733 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090024634 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.115741642 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.098668516 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099281034 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.107217542 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09727622 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089858649 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115160486 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087911716 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091952413 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109739665 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092795597 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090052551 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109941559 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089360652 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085949881 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108826311 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.098626306 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0918882 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096534699 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.118152541 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09131195 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089440421 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105744578 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098013408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092339561 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116344236 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092753539 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086394432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104173482 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.096601625 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092995876 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115949735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088927378 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096503844 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116515524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095493784 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093096 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100889923 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11842565 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097447937 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097826332 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104379295 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090393359 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09744457 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.110344923 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.094743024 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094779393 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.105677508 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095922946 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098705464 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11240884 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091317497 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086512341 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.11126381 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098769369 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095759871 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096518742 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.113010298 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0951386 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088811296 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.113860483 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097678622 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094579708 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118407007 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09227765 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096845546 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.107940817 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098854053 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094065044 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104876878 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087237473 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090102933 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099431821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105811555 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097079596 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097594141 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107922699 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091016536 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09818635 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.107600599 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095836132 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098334622 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10957612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102191415 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09376226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109160665 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.097755092 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097945438 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087707531 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109951252 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092089705 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100349863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110207878 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097365607 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094401475 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116450995 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095391729 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098038501 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.115581374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098485146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088512704 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.11695439 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096333793 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.095673752 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090665249 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109320925 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08806663 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091383593 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.116958729 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090478539 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100580482 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11830842 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.0915575 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091505421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.116566113 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092448893 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099957551 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.108138082 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094457724 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086732833 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113487161 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092264086 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099741114 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.108136499 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088342585 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097904143 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098524693 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115028016 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095634437 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099434406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.105587263 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08702154 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096225767 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108385926 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102863793 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097070718 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111727869 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093598353 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096959636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.113097392 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100976117 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088095449 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091954261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.113027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096875353 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111480843 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089658949 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098286894 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092125457 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114844109 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09268408 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089415316 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111009634 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099915797 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091834225 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108755177 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092081875 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101882858 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111329734 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091046756 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088745518 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119312238 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097097874 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100404159 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110747004 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095281732 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09298541 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.11504558 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10056905 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0924607 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1130201 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09257142 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099596502 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118309834 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090057358 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091869556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103843471 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117240131 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096577262 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096913776 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112277113 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100826564 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099944607 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.114884399 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08809825 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088449951 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.110249492 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088901039 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096104203 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118699954 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092939767 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091170107 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116915717 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098435701 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096442837 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096798409 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107215703 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101160509 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090993249 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11614395 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088349406 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088794151 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.114873634 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099358176 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093578373 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.113847893 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096351354 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096392573 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089112559 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111078094 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098901107 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098269633 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.119536878 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09318993 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093424069 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.116804468 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103846356 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096684289 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111995597 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101137711 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10016309 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115253549 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094470166 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097875789 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.119821325 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097734797 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101442438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110860726 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094225286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101878333 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102162965 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1240261 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094491417 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107516341 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098958456 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092677056 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089057217 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117181356 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10213827 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100915254 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.112690393 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091860029 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103603967 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119774762 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09538416 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093467574 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111663466 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098727497 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093122573 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.117153737 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092224371 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101960338 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.119866339 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101436843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.102687086 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090139522 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119434591 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097240459 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.12128983 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096630631 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089901923 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089511202 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.118004069 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102176996 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100851269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.116479445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098593576 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099350281 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.114881025 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094738209 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092701028 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101949781 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118182318 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095923317 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096420013 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.112984772 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095865504 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097177813 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119371231 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100822508 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095486104 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123505501 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101331998 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094129547 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111119712 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095595718 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097680783 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114178725 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098929841 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092746954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089785849 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118438369 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102289099 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094578712 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121359955 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101461031 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093132331 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11671605 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102747604 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100469755 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.115707521 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096013384 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097661558 seconds)
  done (took 60.726458405 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146036545 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102951706 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115847848 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09736233 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113760207 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116795931 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097108232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098960885 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119426491 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105276056 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098071383 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115479336 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111865887 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135732386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113645799 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105720607 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116450991 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098189337 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096809017 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117693569 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111151425 seconds)
  done (took 3.170936918 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.120932737 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111827152 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127368259 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112480137 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104422056 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125545686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108481303 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127618362 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111560319 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10528819 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128941648 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110676173 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.12459258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105293612 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105710791 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125145903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111918675 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12306719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.10922888 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108952435 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124600084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108145242 seconds)
  done (took 3.378850421 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131600562 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099012926 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096343239 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116334647 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099949663 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097685962 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.118682202 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097185362 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104782436 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092887701 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.106433514 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.092435146 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095555864 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.115395615 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091730454 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096936149 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124202496 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.100134033 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102267076 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097292077 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106937368 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098265752 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098456709 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107071206 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102512302 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101671503 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116398155 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100600969 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088217458 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10096051 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116204638 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09221203 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.088275122 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.107740679 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.089131507 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100680248 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101057325 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116762828 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097811427 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089072221 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.117777492 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10114902 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089186005 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.117329725 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097568128 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.09271825 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100630351 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117101531 seconds)
  done (took 5.767949344 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130497323 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162047594 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100766034 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135642746 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131970523 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109049344 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.122199495 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134630276 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10102966 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.122380583 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111507233 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.132780063 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103228606 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105186293 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124682848 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102112232 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103760446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.119887809 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106141122 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102003252 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125843754 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103673099 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110762322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.129031023 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.340096065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100902378 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120280184 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.104638456 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.129733706 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106410287 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105076957 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.124993217 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11104863 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100274937 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.120498235 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102681262 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111125075 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120864465 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103077091 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09933314 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.12052143 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.104786307 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103024618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130864029 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101573136 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.121781326 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101170545 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098818292 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.129322551 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102364779 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106715005 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130392673 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103140537 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102023077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122807446 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.110205748 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102269218 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119328983 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103101715 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127855829 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099615053 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107858702 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130511519 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101797522 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106620588 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.130419017 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103564498 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103915972 seconds)
  done (took 8.910788564 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135700123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105161241 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131693088 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112791823 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10424504 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124912093 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105380238 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.123158992 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105363463 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109772822 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123946158 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19135106 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121297907 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10792377 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104598714 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122809589 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104702253 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104357231 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124031748 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105299307 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.123416752 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112054924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10537726 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132345204 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114060228 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102367774 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123341271 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104199728 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131808399 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104835536 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11658061 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123562006 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104042652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132602001 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.114633994 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105007722 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118901362 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105724356 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.104288839 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124725652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102006325 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112578068 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123971664 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.101903484 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105226181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124439369 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113615723 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135300885 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109544685 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110393721 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123191431 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113406385 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124476965 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104924091 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113124806 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139417398 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112816955 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133088901 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10581275 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112212003 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131987546 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119089984 seconds)
  done (took 8.09748448 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106184373 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098151297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098702712 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.118345642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099142147 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097836562 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099864762 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.11715749 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09909725 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098857077 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11799742 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099024272 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098912428 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099105471 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11847083 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098469685 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09818979 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117310205 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098827737 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098736579 seconds)
  done (took 2.931805426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11327744 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117079915 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120466266 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105829289 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101553429 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126129101 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100520304 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100895026 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10144021 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121348733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109506839 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127948655 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101744007 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106525502 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128212558 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107034786 seconds)
  done (took 2.64438173 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123554451 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11662191 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.182879156 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102535339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.121432923 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107168678 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101940794 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.123551631 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.099758311 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105471428 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.10458914 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123812298 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100440094 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102051935 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.122104048 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10345679 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100308545 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123403821 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101199144 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.180530778 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105990269 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103211992 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121787348 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104823723 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101471348 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.124192995 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106319873 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100131047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.122439663 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10182222 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102025141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1279075 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.099887538 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104657597 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10220764 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121923117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101385038 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102062659 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123920125 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101099341 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103136704 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12285091 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102183651 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103100023 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.119404986 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102832651 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100077108 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126798155 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103069394 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103264079 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.121404303 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108455994 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105024182 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129315176 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.108022648 seconds)
  done (took 7.043651003 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117120098 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101952427 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132399618 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099195616 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101791617 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101965698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121697891 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103794964 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101836906 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121002648 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102579702 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103107077 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1231413 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102926024 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102195072 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122281561 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099561505 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103070358 seconds)
  done (took 2.822996756 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112022114 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100739666 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10592514 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120209718 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101865872 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101153273 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120266197 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100794213 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101073615 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.120939393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102217672 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102076765 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100242559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120540012 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100893659 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102348277 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121358952 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10115429 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100996597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12018326 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101052732 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100144057 seconds)
  done (took 3.22115414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.116117075 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.178144118 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.106456647 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187578461 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096894751 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096305367 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12706596 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097653435 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11265869 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.116837272 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096177132 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097098362 seconds)
  done (took 2.292878316 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133489237 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137976002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121689979 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101317356 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110826272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126616014 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105515828 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106024102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133703249 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115956448 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127509894 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112511129 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113143588 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13357842 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110172864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130296223 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105741028 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10519182 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122123393 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120665997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106425166 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132457867 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106846103 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125896468 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106273787 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113679663 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13304606 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11725169 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124700387 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114794724 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110090402 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126850673 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114983375 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135922871 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102151025 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112640788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126657704 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12115468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110648058 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134997337 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101943913 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129886641 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113367071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1112492 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134119745 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106311382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111353527 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126149435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107636187 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14644238 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110310843 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134288524 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11082394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113520832 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134514696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12647597 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138912075 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114040105 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129969922 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118609437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114657997 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130601966 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113802532 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137394116 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110619119 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114504028 seconds)
  done (took 8.759880144 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14758916 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104202675 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126402884 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117594305 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134622275 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107175958 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108868243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127039743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106391776 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104435008 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167889847 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10675198 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134056941 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114411779 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106581622 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126528626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106286536 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11544697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122811503 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126940599 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126825905 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114626618 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114377096 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133143282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11633809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131380118 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107122668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107348009 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126949072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107391356 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131549995 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106794447 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115066364 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124463662 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114101513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107096275 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128162773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112162941 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107234949 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130902911 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115678002 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141538011 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106281278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107921001 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138203082 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107357298 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127076203 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104344387 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106538528 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124562756 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119782165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117448964 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139416878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115460774 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127639094 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107998003 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107444004 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129646555 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10749403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111704345 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135944833 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107961916 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148280268 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107409476 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107503732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13499843 seconds)
  done (took 8.752955754 seconds)
done (took 165.280016851 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.151210168 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.183150528 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141247176 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177697279 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094089855 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128025468 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14768942 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.141519952 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092877683 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114143126 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093107577 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095399753 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181297802 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093138572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093011831 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1162982 seconds)
  done (took 2.909998099 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196390833 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.300502611 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108551037 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118518603 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09909616 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098040173 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119183428 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09880113 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097619441 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126312544 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097963434 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094706279 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125836196 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094495192 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098129509 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.118871724 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104924684 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09810876 seconds)
  done (took 3.067293534 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124558044 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140513198 seconds)
  done (took 1.143854817 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134206697 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209003579 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278558627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165074277 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119704907 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137699706 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147176376 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131942439 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18483378 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13158608 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110410746 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096786442 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.143723318 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103884502 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135108749 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096736982 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126548279 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133233601 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112627541 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10053097 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141535075 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101461671 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103500115 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133735572 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176426829 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131625598 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101699368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103011464 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120761996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111519928 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125079373 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114307302 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110964765 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174305653 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122722924 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.150361888 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.12585852 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099558103 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11244955 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119012122 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102024973 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103784819 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131527607 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096795317 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102504679 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125486708 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101933055 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.122392295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.105976981 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106273547 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.127495484 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10444087 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170445229 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105600749 seconds)
  done (took 7.760051312 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.854459268 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139015284 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100321859 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.968003185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149723515 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112284969 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.823625673 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14358879 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251990578 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.873168384 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114647991 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.112747219 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253591959 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256186028 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.27846629 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.352889776 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691975924 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133100552 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128664242 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159749999 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108759339 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146721204 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12010267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519120925 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100375368 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10056737 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128197713 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112859143 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173869766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100805381 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125069361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195926943 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267166238 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202386863 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121747225 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099728362 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0986892 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186238113 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266647215 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213017307 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.193453826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096400739 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10034803 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129313178 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117737848 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118553199 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1565252 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189009669 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187337458 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1033905 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134113263 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108907301 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128533417 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.151668574 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118838733 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357374012 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361499597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099835678 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130714732 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115267694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263119082 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123179009 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229360386 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126861309 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209853205 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121414837 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844136191 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160882527 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119988047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107093275 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106480351 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126682771 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107426597 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188142593 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479367294 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133552342 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104008487 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121283749 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207971738 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121227933 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098999826 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180432633 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100217191 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130603046 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114271307 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11219753 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.184961061 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.26744777 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113080289 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129714764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104505618 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134601738 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101035005 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230776792 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222396284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174145587 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207842736 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13052307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.177805328 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1608144 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127767265 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166131901 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129013972 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116516692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12944344 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218925663 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135263191 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123064052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105632817 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131397732 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.134338476 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104723631 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130912266 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186848046 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.530440777 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.181314735 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097626361 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125221676 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109260796 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177033473 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107104663 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25757728 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132018225 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161801622 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12937087 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097346362 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130588612 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159196803 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131852558 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108521985 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130001421 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109207832 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277633895 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217667245 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113209954 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24592493 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197680789 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1084399 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191195825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109343831 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184904852 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133687625 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108162035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100498137 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830410691 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136134437 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106784232 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128850629 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183706409 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101930907 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123903053 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10081316 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09769439 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80758798 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127744698 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098896533 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103236368 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131945786 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107933329 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109619083 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128100185 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176770516 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239871459 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113321015 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130881817 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099825339 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176677208 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102128749 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10140176 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123621041 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100939605 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109859883 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127441874 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103506696 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188390773 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152279705 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.246645584 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.631810556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100834129 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10223423 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258643789 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101776536 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319713662 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108899432 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.250935301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160441739 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119435769 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357239974 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184672105 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184742964 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10575635 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186529341 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120250518 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108318681 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.178690064 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100830203 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109051224 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.172822578 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137993924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1135766 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.271725445 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101751308 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248310502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.120897808 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16573905 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12491872 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108787031 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320606503 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12295304 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119563282 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176959036 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105447598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102230125 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.66865579 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124818623 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112132778 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109806191 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.248522958 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159946447 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132188064 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109355823 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136398134 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157958246 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.226005963 seconds)
  done (took 47.367132143 seconds)
done (took 63.119343112 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290072845 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254339921 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.298879868 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206948738 seconds)
  done (took 2.0219706 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258510658 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160838501 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.227773039 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096617941 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.237232389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096829005 seconds)
  done (took 1.984044851 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.483922279 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.360650826 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.301244115 seconds)
  done (took 2.053031023 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253895682 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.23596852 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327289186 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.41067626 seconds)
  done (took 2.246209588 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.259158963 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122987095 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.123871604 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.200341769 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224292797 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206471697 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127304012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175177011 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127681461 seconds)
  done (took 2.523961691 seconds)
done (took 11.733889387 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.333570476 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.231612455 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.224801956 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.234803576 seconds)
    (5/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.248655138 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.235984066 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.30232583 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.287345791 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.196597628 seconds)
    (10/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.302974344 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.308726655 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.218041107 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.261424428 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107946573 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.166282215 seconds)
    (16/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.162178335 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166109847 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169519606 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.13375445 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.073310231 seconds)
    (21/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.193161755 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.155189374 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.195464155 seconds)
    (24/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.187343522 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.161141344 seconds)
    (26/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115932836 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.137592481 seconds)
    (28/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109068974 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126603814 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.215433768 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075900995 seconds)
    (32/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.07386604 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.270285006 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.186103052 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.207931137 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.12267518 seconds)
    (37/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.26963503 seconds)
    (38/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.07312214 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192410258 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.07589314 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108598286 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.15470674 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101240626 seconds)
    (44/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07440551 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082230785 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.13234521 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105231313 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101165714 seconds)
    (49/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.149509267 seconds)
    (50/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.164808767 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.168767577 seconds)
    (52/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.221252592 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105173212 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.074657979 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.127821432 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108349232 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.145237941 seconds)
    (58/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.237999604 seconds)
    (59/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10749935 seconds)
    (60/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.268325648 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128821762 seconds)
    (62/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.164976959 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07673927 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.157408897 seconds)
    (65/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189070802 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168993894 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125033905 seconds)
    (68/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111469915 seconds)
    (69/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.076228515 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073962519 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.161440225 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111967616 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10163697 seconds)
    (74/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.075716453 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.161328582 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104879202 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074371647 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.142942351 seconds)
    (79/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073565773 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130949089 seconds)
    (81/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.155642216 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075175692 seconds)
    (83/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.080882211 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099409366 seconds)
    (85/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.206028819 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098370074 seconds)
    (87/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.133284993 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155309713 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.182244347 seconds)
    (90/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099563035 seconds)
    (91/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124304525 seconds)
    (92/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127129257 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.124912521 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.074554349 seconds)
    (95/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077300717 seconds)
    (96/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.193349627 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074449264 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.073986816 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109049008 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.247211135 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.101264122 seconds)
    (102/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.074519748 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.134903832 seconds)
    (104/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.108007699 seconds)
    (105/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084572907 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101896136 seconds)
    (107/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132323347 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.074096087 seconds)
    (109/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.144671267 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124936713 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110536056 seconds)
    (112/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139667596 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.156228661 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100945419 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140762555 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.099744164 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.168540037 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101305765 seconds)
    (119/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.076495939 seconds)
    (120/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.098162927 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10158013 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.158153433 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.146272185 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.075012547 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122897579 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100657467 seconds)
    (127/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.131754179 seconds)
    (128/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.080112182 seconds)
    (129/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111076772 seconds)
    (130/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.15783261 seconds)
    (131/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108701345 seconds)
    (132/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109609625 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125021519 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102063192 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099479662 seconds)
    (136/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.082338042 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124591053 seconds)
    (138/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08383296 seconds)
    (139/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169246826 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1923051 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099471912 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168563246 seconds)
    (143/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.100532174 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07706584 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106237248 seconds)
    (146/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.08288363 seconds)
    (147/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.107929434 seconds)
    (148/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099861417 seconds)
    (149/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07727688 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.074912927 seconds)
    (151/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109833888 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.108726616 seconds)
    (153/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1240264 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105511927 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132147302 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076771022 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075042463 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099734471 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083046729 seconds)
    (160/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.098959699 seconds)
    (161/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.07458885 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102210334 seconds)
    (163/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109352005 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125396746 seconds)
    (165/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082771155 seconds)
    (166/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075019873 seconds)
    (167/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075147238 seconds)
    (168/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134280968 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075162906 seconds)
    (170/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.111932306 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.10286454 seconds)
    (172/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.098206845 seconds)
    (173/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.074826199 seconds)
    (174/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076606256 seconds)
    (175/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121350551 seconds)
    (176/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085053905 seconds)
    (177/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.157156946 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076060139 seconds)
    (179/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076799302 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.075858439 seconds)
    (181/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.099008445 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075271762 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074016932 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.102370673 seconds)
    (185/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077898375 seconds)
    (186/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.105549844 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.074628091 seconds)
    (188/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08453471 seconds)
    (189/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108768793 seconds)
    (190/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077562192 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.098246529 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07694703 seconds)
  done (took 25.92524247 seconds)
done (took 26.84272716 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214095012 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125825336 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108779242 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109135364 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196791207 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115454758 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.149320289 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110219598 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119709795 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133018724 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099729002 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120309082 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109429251 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.197208223 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112134762 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.124882101 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100617008 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119775076 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146845151 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124636973 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199061238 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101883858 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118091848 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123536923 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173052474 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127212204 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107978672 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110741234 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.14492223 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.109342415 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109600392 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124393415 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124413071 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124670341 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123375309 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108751258 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100984832 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084750352 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132746143 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111625061 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121897074 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133638851 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.109793656 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101876982 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.133957034 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110253568 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101745952 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13623003 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09949165 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111145917 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126658551 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.125643432 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109371177 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123395404 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100567944 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10259672 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.143682101 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102328899 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123554205 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101960429 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.124165756 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101980385 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111562503 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123888631 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.10867002 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101820596 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.132994848 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112211827 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109020582 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126175951 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101264623 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108836812 seconds)
done (took 9.738421904 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112396424 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146095271 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.194574116 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.207230459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127578639 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140088556 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115706029 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124631742 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138003269 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.118526813 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138230737 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156492296 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.178627842 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141479096 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11552898 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113367895 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.136957501 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110056184 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205316325 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127159768 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150445029 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117837952 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127785249 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141823282 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105190735 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137162046 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132524182 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114222213 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105651019 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137265236 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126457221 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105873559 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131833079 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12476948 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146730819 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.116407693 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117005269 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137581686 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106707199 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107121673 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138082347 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121582577 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105560538 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141052463 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114746622 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120600879 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135840276 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11935997 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107584201 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137620423 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107223856 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132034315 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141023548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123991973 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117948138 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140680946 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119279565 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117802751 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131530733 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118096531 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106684264 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129429043 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.10660233 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126990848 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132365702 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118672463 seconds)
  done (took 9.500930582 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128592137 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.134863437 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139797083 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11707877 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110579251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122195731 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099597646 seconds)
  done (took 1.820472454 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10834427 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181806533 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20286727 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.204835675 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.177315992 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.215624005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149881228 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101321297 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135170906 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13643334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.182061599 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.232574492 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111892876 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140950963 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184811314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.12554351 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.185033204 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12667698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114769589 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209222357 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117916109 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156826682 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.113796934 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102877741 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203098108 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10287157 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.258351942 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120465364 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136190372 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115642313 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115894173 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203732336 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.204452893 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11501953 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.10959465 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.205651063 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203087334 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115521961 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220100639 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105927416 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.203086444 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114478788 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116654837 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.1407475 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116838934 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194333231 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119290893 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116362516 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139988334 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.185323008 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138717664 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.180042131 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.140805268 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115145994 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111787764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142339829 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122651575 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116820542 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209644952 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119727027 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.206552523 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.206507625 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.178795693 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.20650484 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126210102 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.205629141 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.199841662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115350788 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112494498 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.14152909 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.181907838 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140225708 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116098005 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.19783313 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119355733 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210118753 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.183031274 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139531132 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114877071 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106054337 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139865363 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10234489 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.199861939 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115341001 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113840542 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144774075 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114825417 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116523615 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131804304 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125040802 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116058636 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.137368713 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121029826 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140026072 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116920441 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212574974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112172762 seconds)
  done (took 15.540349643 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112436991 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104320862 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108781568 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128561271 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103858144 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104525603 seconds)
  done (took 1.64650833 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.146341781 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117440465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14915317 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117562481 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186077922 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.185472018 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.214629728 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111059988 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158061322 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127085014 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.212109581 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.18883937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.212512721 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119786736 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.214895495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118804379 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.217048172 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116462647 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151451712 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113798158 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116335695 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.144173517 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114429048 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20505465 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117726143 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.143409322 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110382712 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126407773 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.147851714 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111893872 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119639456 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141740846 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109981437 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112055628 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.215932119 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109673158 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139013832 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120223707 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120020606 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.142485727 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.21688302 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114373428 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123467074 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144513326 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111477223 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109984373 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144902713 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.109719527 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.218435342 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119616904 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120278266 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142126309 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.1179771 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120436902 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.134519359 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111613561 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.143903565 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.193607142 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145716119 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.110308048 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11794436 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.14324423 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111526847 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121669955 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.142751617 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119437384 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110095092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142195805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115361456 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118798362 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144725688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118030824 seconds)
  done (took 11.092933403 seconds)
done (took 40.561534667 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.489631514 seconds)
  done (took 2.467384749 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.909540913 seconds)
  done (took 1.889800558 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.990233829 seconds)
  done (took 19.002985174 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.525028388 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588209029 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.01428766 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14833703 seconds)
  done (took 3.256900142 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.056009288 seconds)
  done (took 2.05462296 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296997369 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261413197 seconds)
  done (took 1.545767017 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.744992516 seconds)
  done (took 1.744930974 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.495027652 seconds)
  done (took 2.479961355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353581361 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176514679 seconds)
  done (took 1.535305866 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.600415114 seconds)
  done (took 1.605863772 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.75524963 seconds)
  done (took 20.760396637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255511829 seconds)
  done (took 1.261545787 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.28877358 seconds)
  done (took 1.297281653 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.629699602 seconds)
  done (took 4.63789159 seconds)
done (took 66.53266647 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119247542 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11672685 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115579072 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137091932 seconds)
  done (took 1.482564636 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127734624 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117785936 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.163043401 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116107021 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123213277 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116574286 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141426367 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119445445 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115793986 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143148291 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118386113 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11572128 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.142760525 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117496585 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115694654 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.142728701 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120274483 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117655025 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141779887 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117683322 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117708697 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14277271 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120512474 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119850063 seconds)
  done (took 4.041963462 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119830065 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108097927 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110277044 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131421999 seconds)
  done (took 1.48073851 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.130662372 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129450953 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151094499 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124333248 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127585964 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152066004 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115312531 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112632141 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141633357 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124108299 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130560538 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154002263 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1280543 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117603139 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151520283 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110880035 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116451168 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.151589904 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121893512 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149934979 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116960266 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121863812 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.145120382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125395588 seconds)
  done (took 4.157063772 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194824993 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.1282486 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169213262 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159362526 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.172378237 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115259804 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143802647 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146364697 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121936956 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117757002 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.142484468 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160241732 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148314652 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.118967968 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117149687 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146648388 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12794646 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121276713 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186096113 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120850218 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.148059912 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128361653 seconds)
  done (took 4.149643786 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125722148 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108491037 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.12855769 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.1073754 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119746852 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134494986 seconds)
  done (took 1.741443601 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.112635003 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10219711 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102471983 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126178584 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106771179 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.102167369 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.12584138 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.102741596 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102644266 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102140897 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126429543 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101971677 seconds)
  done (took 2.323656689 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.32957663 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107995958 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133615063 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110440298 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11347133 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105759693 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144384617 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107212495 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266767947 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102845704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.14482152 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195048142 seconds)
  done (took 2.880019347 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202742673 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144322558 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310072531 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361791881 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156805173 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18458659 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261195606 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184529545 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200322292 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133812197 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208788932 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155968489 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177536427 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181482827 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162127683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.155435288 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1945851 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200923673 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165377175 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235456101 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153851954 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200371991 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184858714 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173115348 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13651317 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18366984 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116714696 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151513102 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164443291 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188007836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166867942 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174977419 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138028561 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213715147 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24893368 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194739545 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265568141 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129907328 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189897676 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188340029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254329921 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166161515 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182452554 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176532649 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126992431 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213595475 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149032047 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207462798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13228108 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169738369 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202098661 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174630395 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199759124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134791189 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304792114 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133348035 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165638478 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164919982 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211037581 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22465571 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173359563 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.149487622 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198276627 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18871134 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233208764 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139002349 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186272296 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12238071 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189190565 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.23006812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176497452 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185219093 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224634695 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128420369 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195840802 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167174072 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179096099 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224110034 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169734628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.117125102 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173039563 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131161774 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150936305 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.184710988 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119506474 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237099792 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155303439 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340789179 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17781294 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180528283 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15607761 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183171847 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159602215 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173069229 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.098873077 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140182196 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186774013 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179484782 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126224662 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151916752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164606295 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.122609157 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17716591 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121098743 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191348587 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130481988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158379996 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192149506 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129735531 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202087443 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171743023 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.159725634 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191822506 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190574643 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156373625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130514723 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242515393 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164684216 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.160904596 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17256148 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218022678 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174997235 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132112548 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186606086 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189711989 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168890432 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194262213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163541173 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130879315 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.16188369 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168493392 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183028053 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150797971 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152495275 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.161323589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215696397 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124449706 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164554142 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175533363 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158910322 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121633145 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133572112 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16000155 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14048718 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173187454 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135856708 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178919346 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161258873 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18884041 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15140532 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158492747 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167151447 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156528372 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.164326657 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174713488 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119722479 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19951945 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193368007 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155538257 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17775354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.18716353 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207381817 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168186622 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153761935 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179026083 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153471061 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118597692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158160383 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19384392 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186366725 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185339317 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20729713 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186625433 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158206031 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174462957 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163736731 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209146965 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18047777 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14160098 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195647822 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164001829 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118528901 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149698322 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125508033 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134446505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155562833 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13495537 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199425346 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160768663 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206084339 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190025052 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134994948 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217576967 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123113784 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184820724 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170999542 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165625179 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18621528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21502382 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202197896 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13790154 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186905563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119446073 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124322208 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.159323957 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159889474 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162537064 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132571207 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166792119 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188844587 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195782765 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144889522 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218986615 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186703174 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224908997 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119082563 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.156168027 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195610864 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163012527 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.20770735 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130213893 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182177314 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188025263 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166665186 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188090119 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191755145 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202007014 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190299319 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.190390316 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128102033 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174974828 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158253333 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163228483 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16246406 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170981103 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129214667 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148942728 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163143113 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137168484 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206168681 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141026878 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200763203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185033719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165766339 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151708593 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138403183 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199838932 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142496803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.102539156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194045991 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219593754 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145949958 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180166643 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171544459 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155329662 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314100428 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209674272 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169961503 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160521866 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134268362 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197646403 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159918331 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188320398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181730094 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166852763 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23014174 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167930749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.168227575 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129691632 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146457371 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176547224 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13448393 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.176712369 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159281651 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170215816 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208457321 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136136767 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165909982 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200751737 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14201577 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175919747 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134747353 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249304107 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192293472 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16784498 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189461111 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164254179 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20874793 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12137523 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154015884 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131279403 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21181293 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128090405 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172051492 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195601221 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209412055 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197259837 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159822466 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167162913 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125533517 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16369108 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173655082 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211648941 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133238753 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160674842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186531884 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152832296 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128743974 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186481899 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270931885 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171400814 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169091738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.130759912 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.268426333 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153075986 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130855968 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160358884 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194240814 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130120938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.206819925 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170214579 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164541866 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161884903 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161396258 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204438105 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184581342 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191013934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167852377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172103173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157216609 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185837701 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198352532 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143371519 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145804958 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184848843 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191053076 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20546231 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130230015 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194115346 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19467272 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166532637 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197084511 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13710948 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210533374 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12623143 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189550247 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137723505 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122263178 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183681391 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193788139 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129667659 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199895347 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166186909 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15631801 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126222548 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142513813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191320534 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136357344 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155097124 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177514288 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.155457859 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17554632 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230527161 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127914183 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19192782 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143357517 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155292808 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135291314 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140520062 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15649533 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170761954 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20438906 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130130802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203254291 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15822715 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187152051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153094206 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169355781 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.326890042 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154441663 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187763929 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175959495 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193123566 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17693737 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170534088 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195109348 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146276903 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188033648 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144968962 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.244509767 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18871138 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165180994 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12978328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168927129 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135593859 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160388167 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150003066 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195140912 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138477362 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133503119 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.191801086 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142632905 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171996981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138767808 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226057224 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147524925 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20925662 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213649122 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134859394 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203092257 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169038495 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156790835 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.160632058 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196091011 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141172494 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177059619 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132540513 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.165157259 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207295477 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152117882 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157027115 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200383481 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165080643 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197082425 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132033943 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20342016 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137659449 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199833054 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125460748 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150343096 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196209996 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131970579 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.152899744 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167434679 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184154033 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162733451 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168043686 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172915262 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218785862 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122612171 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130473521 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294207047 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184204815 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191583052 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162814388 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135750238 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142594024 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184836288 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.161348872 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196073673 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128281338 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15646944 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142674999 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.178873069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140884038 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193546441 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168645803 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186631908 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183449687 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160264588 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249798945 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170227692 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169134672 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113648725 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155509308 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138412557 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161283171 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139781474 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208746094 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235413345 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160880509 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171729811 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134020473 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125428388 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156945977 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163893285 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177763985 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165348547 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171582461 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101517746 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136952141 seconds)
  done (took 84.812587788 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166982669 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149857126 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164681738 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219632772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191463087 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286198228 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226428715 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242026663 seconds)
  done (took 2.756319536 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.124382574 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.155523245 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137971575 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14184621 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108817992 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.43457647 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130337193 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.14419095 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.158915948 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149011271 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133715085 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.527763849 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113679794 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142106161 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119540205 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132231117 seconds)
  done (took 3.949790481 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.019432841 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533948808 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.314952578 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.291828599 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.246425328 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199310224 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.746407876 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183862234 seconds)
  done (took 12.636251279 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.159132417 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.141927984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.411975287 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.244608258 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.199830947 seconds)
  done (took 2.268073505 seconds)
done (took 129.675854621 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128914901 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121068482 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121399143 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150916196 seconds)
  done (took 1.617623048 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176451323 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089114482 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090985023 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115505818 seconds)
  done (took 1.580525166 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42191953 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088549633 seconds)
  done (took 1.64506806 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155883707 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135370867 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164118668 seconds)
  done (took 1.579054893 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143163586 seconds)
  done (took 1.254050316 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125898973 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.11449596 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.231928955 seconds)
  done (took 1.587860992 seconds)
done (took 10.378192609 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123234426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.924434818 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430659205 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131038664 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711974817 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.424122894 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.446243226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174048363 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17353155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136407994 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13028741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690802579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.458672672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880196647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.416202723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904896968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692430346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11080208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145522358 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109242751 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.42138097 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135373081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109698016 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110818412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716088523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417059203 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108668303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.910852741 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108035575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112817702 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425812 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109602924 seconds)
  done (took 20.999193538 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122087317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165172705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144828091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110456687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111890667 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138789782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120820112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121579644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201578086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108874052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158974061 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108181633 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114023243 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.13907247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133445666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108811061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141060629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111186117 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116309929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138558859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.12949173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107742224 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13921233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110184777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108724907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158810102 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109312327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120269293 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137265134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113046302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11335694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138953214 seconds)
  done (took 5.226917551 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162297782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174785432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144693844 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146539445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186141536 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110804551 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224016894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1453419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202060596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10931228 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130634264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138231917 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148065767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11033133 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163200657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109252495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112686029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138745062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116381758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111974023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158893646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109274965 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137627383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111760923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109329774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160114078 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108902311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121270241 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13668037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112516998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115425868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137502927 seconds)
  done (took 5.522182965 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.129724882 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123931413 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13122677 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160112818 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11834627 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12196598 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151780765 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119085435 seconds)
  done (took 2.173170233 seconds)
done (took 35.034257075 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.138628734 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.125050279 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128384866 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150660164 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.183876654 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144601283 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.123840748 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114356019 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.14955506 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.127614154 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108156995 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114746628 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155528963 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.117333909 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.215108699 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121783453 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.219710653 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185668405 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144992155 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124729963 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116139193 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.219318442 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120487955 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115589329 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.215994297 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112115698 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.20935767 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117683489 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.14668356 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112859381 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.186603315 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150505422 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.114644621 seconds)
  done (took 5.940568597 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207334245 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119274555 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147918435 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117847025 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119613131 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147300911 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204057666 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147573175 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11843752 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117524433 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117687553 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21758172 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123625847 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14343652 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120972903 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107146058 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.233847124 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119577194 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110355305 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119691194 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114536075 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116972766 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.247405507 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113596163 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11815771 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147386549 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121258455 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122929987 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148755084 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.119229347 seconds)
  done (took 5.365797445 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.130319192 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130229682 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164583208 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183150309 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146258844 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159380398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13728641 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13192632 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167438351 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111900783 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126320964 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175855184 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127735516 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122063444 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145726545 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.128737264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133332592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141693848 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119242998 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12903163 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161229536 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129054274 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135493166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149579447 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109601358 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119049978 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.15083259 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126482483 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119425914 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155265123 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113823902 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115282517 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143148697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.144569108 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113281092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153510934 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.135911846 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124203344 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154753557 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.143130304 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116412444 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.142737558 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.136799174 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16522649 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142706988 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124022341 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123980694 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156190164 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.109827392 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13078791 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.183405897 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.111517938 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132182589 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140381115 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110396556 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120588271 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.141913823 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115474489 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128456667 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.14441548 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135251682 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118809047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152259071 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.114351084 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122553894 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110812322 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140391017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115276469 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.136858174 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14845664 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.147919882 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112248309 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152753744 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124873355 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123122892 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153830135 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111556184 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123421861 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151776442 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.117822354 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125715963 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.143732034 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115351765 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129323848 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162682858 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12642517 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123999201 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154148522 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.115694393 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114236346 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129148382 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144555368 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117693016 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12570755 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1418895 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116836698 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126175903 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153132553 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110287822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137351931 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146365894 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11190219 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137481939 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144845111 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.117553298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122103818 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.183170051 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111621549 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123578094 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.154387323 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112828707 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120607103 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116630246 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.140948757 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13065428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128647475 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149784806 seconds)
  done (took 16.809331612 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318137552 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.267701857 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209820568 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.300989981 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126265726 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.235159832 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296227964 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.298868341 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112589998 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178691305 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164156255 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.269279518 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144237965 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140168599 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.298996734 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.351845613 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172442394 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149553109 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179487942 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125833658 seconds)
  done (took 5.480863951 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139605626 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147468608 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164649906 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140011423 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123146561 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158042508 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11237571 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134960282 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153677947 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122985943 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115710018 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157137365 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125784014 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129071953 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157889022 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143204685 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119225376 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147252971 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134423574 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117606482 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129347185 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136686591 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121247406 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165685857 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132228567 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152142607 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112025078 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11855417 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119188948 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151337747 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117006905 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131114696 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149542465 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103336439 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123979326 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157630707 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.119939481 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11634952 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117432188 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.14606295 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127885887 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125604209 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149657076 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096321926 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132290524 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108352337 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156235699 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12505763 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105337917 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.16208585 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125508181 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128409073 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150084134 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136405674 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.11896595 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.15877092 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123748594 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126747775 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148007137 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112457703 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111651518 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.145983423 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120884017 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127878379 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123804263 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161428215 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128571999 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14239359 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116888087 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117345465 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117447736 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157515641 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133347581 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.152185858 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119804239 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125680292 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.121906173 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121988028 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121869951 seconds)
  done (took 11.60974969 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143951123 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121217032 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131567836 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176453846 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124814718 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119175324 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.152887033 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133163802 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125895945 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159231009 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.126482363 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126303834 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163976176 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123729698 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121022656 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158898187 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124778947 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150501245 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160259913 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143617745 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.155487463 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.117551241 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.125667317 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12528564 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17177376 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125070622 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1714939 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.125350428 seconds)
  done (took 5.065688961 seconds)
done (took 51.399328766 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.286339766 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.476213538 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.257842266 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.256498617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.28261052 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.267093698 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.270311395 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.264578855 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.684453117 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.22491943 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.255049655 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.253360055 seconds)
done (took 28.929268922 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.333433677 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.813560335 seconds)
    (2/2) benchmarking "String"...
    done (took 1.535763616 seconds)
  done (took 4.489973733 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.241828991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.244560619 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.493011778 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.242400697 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.25764197 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.246100111 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.249350713 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243185546 seconds)
  done (took 16.116447449 seconds)
done (took 26.322278009 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.287297604 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.415921276 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.490065927 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.239556115 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.263365724 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.242903441 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.242970012 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.266532712 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.247361176 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.2455099 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.658551266 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.511277386 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.242880667 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.6233862 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.241878832 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.247085324 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.255090803 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.466490905 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.242733548 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.27725833 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.217643301 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241052637 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.255783937 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.249089986 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.251710275 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.245397315 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.25326042 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.241946113 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.434713564 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.278466129 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.278665195 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.242175844 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.313994971 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.242318451 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.241782861 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.256902001 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.426707878 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.25517144 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.22049658 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.270312295 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.43246438 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.261749667 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.24579952 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.254013345 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.246864445 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.305751115 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.235432613 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.351635785 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.263947244 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.253599243 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.261206216 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.629619172 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.250084055 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.246203364 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.244311454 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.469800855 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.265838861 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.303812932 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.271609434 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.251345822 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.24333598 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.245764688 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.271685202 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.245848569 seconds)
  done (took 146.320445169 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.245487556 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.244594209 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.244393751 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.250584921 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.24512329 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.246136433 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.249123392 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.247318673 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.241757381 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.26461783 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.246251699 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.245500292 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.250942271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196710376 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.256510678 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.268265027 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.249625607 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.256605676 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.253634609 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.246014581 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.268429159 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.24672344 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.264017621 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.247826177 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.294221154 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.326142954 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.277787847 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.276862185 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.259064612 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.249841325 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.287558549 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.251115099 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86005422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.120820353 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.254505867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.269864761 seconds)
  done (took 81.850664951 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.250063568 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.251021476 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249789644 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.283533025 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.247928493 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.830891427 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831671783 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.223446626 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.290443151 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.629178099 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481626586 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.244081128 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345168075 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.26096059 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.244954162 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.250217315 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.26475283 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.277055097 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.24894414 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25001012 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.830976727 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.266543292 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.46356328 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.428742483 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.261626528 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.281529749 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.647376606 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.247864135 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282083482 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586011869 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.295824163 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.250728397 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605933027 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.371701704 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360481216 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.251615181 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285118338 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.251367687 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.538395982 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250875975 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.253388213 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.253408444 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.904180388 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.254588421 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.833601764 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251450524 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217461113 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.24763245 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.252838897 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.197057058 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.941166928 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.251953398 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.250772844 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.256695035 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.252775942 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252482633 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.285051749 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.185162725 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.346856567 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.254467118 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256834168 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288537418 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.255279009 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.399182125 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251761197 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.322393453 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.315851338 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.344300437 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83558791 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.254481427 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.350257393 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369584935 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.253068421 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.255356454 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.253559449 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25500088 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.254281423 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.36769097 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.248815813 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.945096789 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.427786805 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.264834289 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.632025325 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.35376342 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.252949496 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595669255 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.254711555 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.252998909 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.95610827 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343483367 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.250086696 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.253174063 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.254892303 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.948011404 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834563927 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507591364 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.256764552 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.79870479 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.258495115 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.257071478 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.126707687 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.817092856 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903205307 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.256291574 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.256144381 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368993778 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436185217 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.266326269 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.260431423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.645091816 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.258662947 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.317036612 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.250819968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.662103891 seconds)
  done (took 378.664480581 seconds)
done (took 607.974816023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.147001164 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.090709542 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.239311677 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.097834965 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.081524665 seconds)
  done (took 11.805348769 seconds)
done (took 12.957906982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.452503067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.449728588 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.317805707 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453513342 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.290400369 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.466733474 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433810055 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.276248019 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.366361798 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.335679609 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.368383398 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307395862 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291399493 seconds)
  done (took 18.962115441 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546466772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.267135015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322316794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51729005 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.301425617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540380644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.570783785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.266751463 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420922049 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282380948 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.279924194 seconds)
  done (took 18.471034161 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553035146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263384993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.326925371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522189725 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304786306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.57743656 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.569707974 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.263955892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423372394 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285280975 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.280718997 seconds)
  done (took 18.525506687 seconds)
done (took 57.112658179 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.294540707 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.355654126 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.293756284 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.281352688 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.27275016 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.278610552 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.27963238 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.278161871 seconds)
  done (took 11.487716061 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.273634102 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.274976884 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.273467071 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.274492806 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.271417254 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.272777922 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.27663292 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.272498687 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.272592396 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.275717491 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.275504884 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.273710864 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.275049573 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.273648504 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.278552532 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.274918014 seconds)
  done (took 21.544540785 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.277550817 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277417681 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.2742029 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.276216699 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.273735647 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.27764948 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.27903566 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.276058497 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.279364093 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.281385387 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.278519831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.275990306 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.2805638 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.275500364 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279568072 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27834025 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.276244203 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.277636843 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.280202801 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.275713034 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.274861225 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.27646287 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.2788516 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.277944386 seconds)
  done (took 31.813907597 seconds)
done (took 65.996155073 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.277046506 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.26915849 seconds)
  done (took 5.701824729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338768904 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.335611377 seconds)
  done (took 3.83261907 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.278959764 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.276403932 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.279047348 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.276805836 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.276343167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.279935126 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.278137954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.278604953 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.279757627 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.279273069 seconds)
  done (took 13.939373192 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280323756 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.278597054 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281131666 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.279757776 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.277038383 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.279942039 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.278273085 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.278518057 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.277868197 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.27719626 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.278149009 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.279001367 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.27989769 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.281342941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.277194543 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.274991278 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.278555558 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.278080248 seconds)
  done (took 24.17505205 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.294100819 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.295334327 seconds)
  done (took 3.749250152 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.40804713 seconds)
    (2/7) benchmarking "second"...
    done (took 1.321679436 seconds)
    (3/7) benchmarking "month"...
    done (took 1.383434081 seconds)
    (4/7) benchmarking "year"...
    done (took 1.379336523 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.321014183 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.303617855 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.321034545 seconds)
  done (took 10.595432497 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.281522777 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.503420699 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.642818835 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.876978026 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.284184922 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.28453116 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.173882833 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.285213929 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286353879 seconds)
  done (took 14.778517479 seconds)
done (took 77.926661385 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.266771439 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.327251756 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.284916697 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.282412495 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.628806673 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.285689016 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.26819301 seconds)
done (took 16.50562532 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.255814091 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.260389735 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.247799168 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.277525992 seconds)
  done (took 10.199784255 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.270603199 seconds)
    (2/2) benchmarking "read"...
    done (took 1.59349507 seconds)
  done (took 5.021557686 seconds)
done (took 16.384761152 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281124054 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.277972992 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.283131426 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.283558394 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.286125398 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.279757864 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.284925586 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.281527562 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.282097077 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.281444265 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.283059759 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.283187043 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.285517556 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.284239709 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281054774 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280908533 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284397373 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282479536 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.281304302 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282077366 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28101277 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.281985669 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28375702 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.282108211 seconds)
  done (took 31.941157451 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.283315646 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.284371884 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.282191285 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.283763853 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.281846097 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.28517683 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.284873028 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.28189296 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282891112 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.285743343 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284339429 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.284691642 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.283624435 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.284442214 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287124206 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.286198069 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.283648764 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284297197 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284316227 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.284799257 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.281931302 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284660176 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.280345191 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284704497 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.28152405 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.283899409 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.285070181 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.285553363 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286807908 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.28299393 seconds)
  done (took 39.684316439 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.287745368 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.281987132 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.287056373 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.284569284 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.287103753 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.286147369 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.285699952 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.284987119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.28695957 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.285876318 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.283652135 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.286697204 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.285494298 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.285303394 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.284878002 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.286990224 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.285989348 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.285243472 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.285031633 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.286387211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.284380872 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.286125063 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.289004569 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.287959538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.286086266 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.286242433 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.287703172 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.284031763 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.287803961 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.287223092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.289067673 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.285992732 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.284426706 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.287101932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.288028191 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.289638018 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.290298273 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.285680528 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.287678261 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.286264671 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.288159681 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.285950641 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.284360383 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.287271766 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.287397415 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.289646462 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.287622388 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.288563832 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.286370253 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.288510365 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.287799826 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.288129238 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.286303775 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.288433251 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.291536451 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.286271961 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.287768136 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.289969786 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.288308751 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.288325089 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.288943601 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.289687163 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.29033096 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.290090116 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.288306545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.287784406 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.289588421 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.288272602 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.291661955 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.288095784 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.290382372 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.289469717 seconds)
  done (took 93.848546271 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.292877899 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289244575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.289482787 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291215004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291422646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.290671907 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.28970745 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291662437 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28953472 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29118795 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291425293 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290294358 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288810925 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.288174126 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292778639 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.289514676 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291183015 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289712828 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.290074355 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29031302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291836129 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290718006 seconds)
  done (took 29.560366666 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292323822 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295628848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.291693922 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293087609 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292352149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292728374 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289415067 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290827674 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291708645 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293651293 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293958894 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292540646 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296617311 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293477814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292663343 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295065187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294250691 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295533053 seconds)
  done (took 24.445356038 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.292591972 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.289733445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.292368233 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291005412 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.29155498 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.292076112 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292979454 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.295000022 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.292193756 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.289952841 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.293701773 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292516468 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.290108682 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291092055 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293973057 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.291794168 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.289494613 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290068611 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291289332 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294420275 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.291851914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291702398 seconds)
  done (took 29.587427659 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293293159 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293315594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295180302 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29316228 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292876422 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.293813974 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.291814183 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.292653347 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.294088903 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.293195599 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294854566 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29290912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.294074021 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295066866 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.293255872 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294414123 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293677772 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295486947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293956338 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295354302 seconds)
  done (took 27.045140645 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295354362 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293584991 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292810754 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29436479 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295483563 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.295136584 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294231706 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295537559 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295415763 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.295965326 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296819157 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.298657238 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296019912 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29749794 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296892139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297041377 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.294776917 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298686751 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299533647 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296111494 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296435139 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298501115 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29613279 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295029137 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29527261 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297045259 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299183472 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296959054 seconds)
  done (took 37.468857126 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299234548 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295731722 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.297515396 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.2978668 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.296000999 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.298534582 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.300572798 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.303336556 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295980143 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295461026 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.297332883 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.298004113 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296103572 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.294970235 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29607751 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.294176676 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297955768 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.298270576 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297248202 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296194693 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.297034416 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298216573 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.296877084 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302980336 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296308858 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.296295942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2973617 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298782497 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296617218 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298535306 seconds)
  done (took 40.101349212 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.320152988 seconds)
    (2/2) benchmarking "in"...
    done (took 1.315554445 seconds)
  done (took 3.811481621 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.300251103 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295631415 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.29901906 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.297939127 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.298753918 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.300035941 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.299977525 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.297889775 seconds)
  done (took 11.562951962 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.289212405 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.300290364 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.301473426 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.301976728 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.298217891 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.29470703 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302209782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.30555479 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.294886975 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.292625346 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.29654585 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.296558227 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.297491727 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29594381 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.294916428 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.29854949 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.304840466 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.300450856 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.3009743 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.302751115 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.303491421 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297433189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.299760773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.306655971 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.29649422 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.303077755 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.303745327 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.306004592 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.298024029 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.300288286 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.300716526 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.302366352 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.300527544 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.301300073 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.302332631 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.302660833 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300107669 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.303541232 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.304793235 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307071516 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.304279686 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.302448991 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.298344398 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.300209435 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302616032 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.306108882 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.306527739 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.304194638 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.294685251 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.301627071 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.305466229 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.297455443 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.305805178 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.300581076 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.303130986 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.31114728 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311277422 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.297837223 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2965375 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.304037826 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.311148661 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.305085777 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.301692298 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.305688259 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299216745 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.305980976 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.308823515 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.312201554 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.304406159 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.305232828 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.307628889 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.316250772 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.308966101 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.31030058 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307476865 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.304360193 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301078827 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308125115 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.307112693 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.309606675 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.310277914 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.305782095 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302319218 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302105101 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.301859172 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.310687561 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.305195346 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.306571619 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.297854143 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.306775769 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.31308441 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.304783474 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.299063691 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.303796505 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.303879587 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.308719878 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.296925956 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302099944 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.31087136 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.30883565 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.305613419 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301799277 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.307641455 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311918034 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.307943612 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.311382458 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.314517325 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299796971 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.31383183 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.313276546 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.309824493 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.30032199 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.303313957 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.313023992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299163156 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.306381189 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.309526036 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.304105259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.313591022 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.30863411 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306379168 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.312072105 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.311332651 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.306020707 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.302225599 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.312923917 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.307381597 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.306873319 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.30970097 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.308350117 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.310053828 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.30588727 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.313561426 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.301348239 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313071756 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.303107301 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.313753749 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.311974203 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.308927111 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.306403789 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.308001506 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.307149424 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.308858573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.311908747 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.313904266 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.306787941 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.317482246 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.306056066 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.310188662 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.310998609 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.313342567 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306766773 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.303653013 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.309897974 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.300317299 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3138711 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.300436016 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.312256601 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307041703 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.312245325 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.31224826 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.30124591 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.305311128 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.313438498 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.311709085 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.307921712 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.313782493 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.311011326 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.310349063 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.303372746 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.312420048 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.302780787 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.303688272 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.312932903 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.311676879 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.310312162 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.310279883 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320662986 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313319506 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312151984 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.307437371 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.310192253 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.317329556 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.312927073 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.315480662 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30956423 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.312900564 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.305349987 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.307057698 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316171342 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.305867517 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.318251889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317200901 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317876248 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.307889634 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.314025609 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.303554726 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.313782655 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.31361387 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.318070764 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.312631526 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.312568562 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307662076 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317504928 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.306820367 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.316434593 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.30707024 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.318681837 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.316805561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.311784912 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.312990931 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.307278152 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.313920444 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31618695 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.31469867 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31210755 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.307978952 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.317388532 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.306680367 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.307987008 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.321436354 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.316609601 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.318214851 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.321708371 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310760344 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.320027512 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.312620078 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.31064136 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319183512 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.315010495 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.311479727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.320653614 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.316105739 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.308751929 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321776719 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.31530002 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.309679059 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.315426933 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.32385572 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.314844103 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.30873428 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.320493186 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.316061433 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.318027276 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.315918492 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310295534 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.320270654 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.317092658 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.321658466 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.310803586 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.317126218 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.311685692 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.321590768 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.315376146 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.319818753 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.315014335 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321343161 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324127776 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.318218565 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312149664 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.321430799 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.315616858 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.314897749 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307772067 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.32082698 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.318066822 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.317260412 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.314169001 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.315052036 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.32183101 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.309329267 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.318613652 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.312486565 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327017116 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.332743274 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322042643 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.321949191 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.320098731 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320664475 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.319904089 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.310081272 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.311160466 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314305214 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.313775255 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.311397766 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.320928151 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312317105 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.321157444 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316187332 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.318458376 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.316731148 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.317244545 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.311533704 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.321896488 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.32004465 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.32007985 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.311887306 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.322308279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.313451182 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323331465 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.32025732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.313056205 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326292263 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323545206 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.317308839 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.316017814 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.314790503 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.310195176 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.319247594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.324213573 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.31375274 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.322991449 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.313487803 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.315288231 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.313523679 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.327012363 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.328475955 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.312526069 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.325054612 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.322035174 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.313132563 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.316208947 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.320869641 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324094455 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.332404719 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.312169154 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.322243743 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319823428 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.319862615 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.321949656 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.321235675 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323136713 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.32195825 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.331136608 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.324665842 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.317595898 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32707073 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.328985402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.318621025 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.326001191 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.315926566 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.328372203 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.329946284 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315512488 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.32361769 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.319315441 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.323909816 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.323509107 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.322618337 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.326656525 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.324011633 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.326412733 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.322349329 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327798855 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.322593091 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.32801682 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334195683 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327761606 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.333981732 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.31844165 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.332750343 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.323364389 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.318239029 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.316940695 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.319147353 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.328394219 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.31606795 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.326534559 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.324757469 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.319099402 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.324391448 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.330642983 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.319227867 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.320796871 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330558862 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.314527576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323097575 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.325407427 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.317374651 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.328675448 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.325907188 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315671453 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.318131575 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322973836 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325379346 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.319154583 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.327593583 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319979669 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.326152154 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.327377245 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.327622393 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.323528794 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.326988132 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.321140605 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.325689694 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326904073 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.332905565 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.322465526 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328852668 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.321215402 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.332676878 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.335888346 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.324954688 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334475334 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.329158905 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.322196657 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.324948238 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.329824213 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318496111 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329804074 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.320611296 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323947674 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.322326002 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.326302633 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.331152135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.327568644 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.317832388 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.31979012 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324356516 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.328548454 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327627777 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.324758136 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.332262108 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.320840059 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.321621908 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.33053839 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.318420437 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333754984 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319641383 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.320798533 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323785364 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.331770633 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.328209232 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327529689 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.31797966 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.320629916 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.335222961 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.331324812 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.325768518 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.320856792 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.327991344 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.323503076 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323840741 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.324911706 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.323997204 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.322141589 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.333697562 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.324409034 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.324964516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.326980031 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.332169926 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.338040568 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.331198944 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.325319075 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34008321 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.338298295 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333821146 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.325940816 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323951873 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.32527143 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333156298 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.328985547 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.324127322 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338120603 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.337082702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.332841475 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329915971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.329704533 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.322803718 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333356851 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.330730616 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.327278827 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.338481902 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.32770322 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336466961 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331681497 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.327242651 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.324153636 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.322494748 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.325114952 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.322423738 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.330843478 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.329955019 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.330469373 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.327286978 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336714344 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.333162383 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.330646741 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.330214795 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.325132285 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.334916769 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.325445556 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.332119385 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.332406748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.325106685 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.33218458 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334249821 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.323865112 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.326484817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.33851022 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.331291839 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.325800367 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.330336161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.332892993 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343458278 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.333419202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.327435809 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.330321539 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.336132847 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331055525 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.334790826 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.324945438 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34597254 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.345551676 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329328197 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.330968448 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.337501491 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.341593319 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.334411146 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.334508819 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.333368312 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.331072445 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.33753229 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.336392 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.340223309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341088806 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.329912137 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.335166601 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.329375466 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.331151685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.338174067 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34417791 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.3377201 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.32890649 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.345594567 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349056682 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335534178 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.345927103 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.342219028 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.336051277 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.339303263 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330791493 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341574807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.336321694 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.340205744 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.336362318 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339788414 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.337371044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.333052489 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340919066 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.343517798 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.348289842 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.339124913 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.32799773 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.334070923 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.339434655 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.340004165 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.339505868 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.338906423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.335962616 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.339014965 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.331867684 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350170318 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.351140309 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.342474202 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.340675698 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.336601962 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.33563403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.338594911 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.334609896 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.340840191 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.337834821 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.335805381 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.335018483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.348160741 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.33991762 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33136521 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.334569677 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332047998 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.339974255 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.347587034 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.356127711 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.342241045 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.339322071 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341659996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.338375971 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334030269 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.341477858 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340996384 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.331796271 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.333435276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342064099 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.340033768 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.339999442 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.333991296 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.342232787 seconds)
  done (took 787.551715475 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341967178 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339182333 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.337504153 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336953744 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339193141 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338671849 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338125862 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.340465066 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.337488159 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33836571 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.341912596 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339564259 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.341619265 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341623076 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339064379 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.339955434 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340902191 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.34080902 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340672073 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337767366 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340134078 seconds)
  done (took 29.339030204 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.342775783 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.34201061 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343583891 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.341182247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340047967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.340041082 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.342869164 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341499135 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341690139 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340121456 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.343512101 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343039147 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.342622479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.339995788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340767994 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.341385344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.343138671 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339798434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.343171077 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.344078638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34257476 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341353993 seconds)
  done (took 30.727575056 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.34545254 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.342224672 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.333411115 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.342612485 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.34386547 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.340256253 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.343733602 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.340731623 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.342875803 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.336969983 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.336174025 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.337110043 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.340382837 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.346079764 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.338175096 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.347842103 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.346390221 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.345464563 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.343599467 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.344061117 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.349855643 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.353650944 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.345000327 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.335528482 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.346496993 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.346184242 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.343270987 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.344113337 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.337797172 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.346977393 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.345527304 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.337642502 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.350092426 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.346225581 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.336989057 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.347588452 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.344488021 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.346785784 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.345475311 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.344156903 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.348446577 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.347332834 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.351791581 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.354155728 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.346689678 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.339526048 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.348255109 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.345210352 seconds)
  done (took 65.725716737 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.349327775 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.346588221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.346360047 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.343382335 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.347076937 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.343872698 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.347739208 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.347227335 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.346673908 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.346617021 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.34955969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.348361257 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348232071 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.349250531 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.348348932 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.346462872 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347064296 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347185387 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.346760826 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.348909577 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.346574243 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.34709837 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.347673535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.350240313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.348820536 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.349025231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.348913596 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.349156862 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.348019368 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.345992462 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.34707228 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.349792044 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.351080477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.348815832 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.349063063 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.348952145 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.349597298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.344957728 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347253329 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.348412879 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.348209531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.348682728 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.348741338 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.349182389 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350853969 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.351315761 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.348188704 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.348503606 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.352176335 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.350958718 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.354128331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.351068004 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.350036524 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.347653643 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.349083343 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.348750922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.349541869 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.349427519 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.351459072 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.34962163 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351344919 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.349397558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.350846151 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.350151606 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.347836422 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.350487828 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.349479506 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.347660897 seconds)
  done (took 92.920666575 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351591173 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.348959984 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352504318 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351288898 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349172564 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.346058729 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.350471269 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.351923961 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.352253357 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.350869425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351662956 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.349271988 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.349211292 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348361993 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34928117 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349784978 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.350669407 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352674402 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354333539 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348751768 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.349563097 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.351183005 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.351040121 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.349994781 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35333139 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353194788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.349686377 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.351190359 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349042023 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.352815058 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353445419 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.35247118 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.354307851 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.353806218 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.349828501 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.351273031 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.34994368 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.348957386 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.351589767 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.350990793 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.352414345 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351484328 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349569268 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.349934432 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354263779 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.351385376 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.351000602 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.353077942 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353704446 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351859393 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.353348141 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350983464 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353624243 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351634159 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.352773585 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.351967088 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351241022 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352734059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353874327 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.351375819 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352330956 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.352036272 seconds)
  done (took 85.005266603 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354369571 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.352559799 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.35346504 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.350468328 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.351611684 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351909338 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350861624 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.352954802 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352491032 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.35258056 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351563785 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349814894 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352992046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351949619 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352600403 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352096034 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35231003 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.351752843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353236511 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.351353518 seconds)
  done (took 28.261161805 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.350124746 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354785981 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.351111403 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34914938 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.349855226 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.352662765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.353023949 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350837439 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350001668 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349526112 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352469735 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351059908 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351171775 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.350607802 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.352539623 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352832223 seconds)
  done (took 22.841800043 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.350284451 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.350112094 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.353894404 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.352343169 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.351633421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.352798484 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.353006296 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.350269135 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.351769344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.351386019 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.350870361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.350975273 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.35196791 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.354020798 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.351395613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.352027297 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.350938654 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.354492439 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.35103214 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.352899511 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.354914665 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.349514211 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.349584083 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.352665567 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.351997037 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.35124336 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.352866764 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350921967 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.353822274 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.351939789 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.353770626 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.352468224 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.352887651 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.353859112 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.35357157 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.35311792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.353565369 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.351736449 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.352857819 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.354251816 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.351421024 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.355060201 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.352747546 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.351510495 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.350897215 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.352516179 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.352096952 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.352642943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.355171624 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.349480773 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.349927752 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.353975966 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.350576344 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.35266356 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.354265847 seconds)
  done (took 75.597282199 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353870623 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352457971 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.35108732 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.353777641 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.353416468 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.351684762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355952937 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.355876658 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355143585 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.353942145 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.355444994 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.355430543 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.352578234 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354398237 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.352897552 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355071921 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.353811057 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.355307648 seconds)
  done (took 25.591921297 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.355524528 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352328168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.356241217 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.3528473 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.352178755 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358762737 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355552019 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.354460325 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356381877 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.35398844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355218267 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.357155743 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355584483 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.357468716 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.356438609 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35473862 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.355125233 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358943934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.352452329 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355482627 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356740742 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355764756 seconds)
  done (took 31.041687184 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.348547495 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.346767551 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.34682398 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.356402621 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.35248496 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.343835546 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.34595902 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.346772519 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.360390639 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.372745328 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.371147242 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.355484527 seconds)
  done (took 17.471054418 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356565691 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357149716 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355601773 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358607464 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35178008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356037032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356536961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357537544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357044852 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354822196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355169926 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353872415 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35800794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361529323 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358314903 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357788038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355785135 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35746947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356510424 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354197719 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358684074 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359386324 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355299525 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358943702 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358091436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355230265 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357315032 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357531359 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356812544 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360113709 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358002342 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358272018 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35679571 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357058449 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361898937 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356475824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357152058 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361880435 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358892926 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358198498 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359128676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361144849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359258859 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35982614 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361353552 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359295849 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359921142 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360753804 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358486539 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362011254 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362322545 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359198689 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356525251 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359250832 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35636795 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360750414 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361313212 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360484864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363826525 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36041236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360217493 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359552602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360284657 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360616446 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360364991 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36283199 seconds)
  done (took 90.881666241 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361386959 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359149166 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362475904 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362133818 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35865997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359826784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361006267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360102139 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359612499 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359136396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361643096 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360177393 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360439972 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359944306 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361600564 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36299193 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361484308 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357845165 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360401129 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361716289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360132456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362767683 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363218936 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362253517 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362143766 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359593256 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361935451 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363102856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362885334 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360807607 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359707862 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361430915 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361307774 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.362433483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36149264 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365233708 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360575018 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364213989 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364141322 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361255249 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363502401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362708031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365055163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36221639 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361805803 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362202017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36235231 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364136151 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360346701 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360665749 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36268153 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360550607 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360954579 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360282383 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36235112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362690658 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361572027 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364642787 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362382825 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362328496 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363018711 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361192981 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363333687 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365720266 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365602331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361835881 seconds)
  done (took 91.106129772 seconds)
done (took 1844.279411142 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.518288456 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.473612742 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.350099806 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.365831608 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.346990405 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.350693435 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.360768465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.347855615 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.3527043 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.353605274 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.350425511 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.542778752 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.385813837 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.349426821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.353688956 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.455727972 seconds)
  done (took 27.487010134 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.380371916 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.364583347 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.473249946 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.359217059 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.381666286 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.547528851 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.416337298 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35570528 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.528899212 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.374027804 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.34787462 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.391379741 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.360090895 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.350021116 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.372732597 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.542590281 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.629864353 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.349589431 seconds)
  done (took 29.755946181 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.809615886 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.382590071 seconds)
  done (took 5.421225078 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.378181255 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.359729322 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.363958928 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.35597574 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.351780743 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.346656007 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.360383417 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.349195048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.365988751 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.481862172 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.356598908 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.369679809 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.354841414 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.357573401 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.365819271 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.402714914 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.500916147 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.36750436 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.362677798 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.365931383 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.356094485 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.448603019 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.398531998 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.367592597 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.482717423 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354507496 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.361717895 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.363753203 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.473608124 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.365404489 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.354916015 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.358904802 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.35954606 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.307460394 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.88998015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.363554666 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.3772683 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.365111606 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.367173563 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488416629 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.362402044 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.367081897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.351131787 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.886710012 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46433364 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.474963053 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.352785144 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.364760527 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.360131205 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.427472528 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.356674398 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.359131772 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.419026165 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.185357105 seconds)
  done (took 86.685260914 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.358134409 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.352507056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.536365018 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.37660829 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348153398 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.378452858 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.355553395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.643746953 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.374522835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.353152433 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.681274332 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.991247679 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.364778502 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.420468463 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.383157509 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.407127528 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.351933055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.379418752 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.352491865 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.345388118 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933071364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350203618 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.353007863 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.443621415 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.391468932 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902055807 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.352123239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.369683985 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.369571708 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.350150231 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947379415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.366758853 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.403607937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.350057585 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.646473806 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.75188379 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.712996608 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.365306491 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.387081638 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.353465252 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.375371369 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891357816 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.739011521 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.35713929 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.354260366 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.888719475 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.356734827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.365534418 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.362596312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62047182 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.351811756 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.355407987 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.350894283 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.369433774 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.353702071 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.425463406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.441573005 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.905870044 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.357186466 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.354519809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362023027 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.35579604 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.356761394 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.35591186 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.356575529 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.733481273 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608777714 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.362096313 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.734365501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93955918 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353784637 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.028117536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.355378764 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.372693992 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.402162035 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.356826152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.357454373 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902832659 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.367996906 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.351005662 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.714866927 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.356608779 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.670031428 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.372877001 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.357438257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.95854579 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.369525606 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.393462666 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.354845778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.370117919 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.354923056 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.364081263 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.646017691 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.429116699 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.353670251 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.356607237 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.359322515 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.356084723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.357986248 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.358554459 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005996551 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.35556455 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.356018169 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.376592026 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.356831252 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.354831089 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.361513786 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.355489947 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.647504948 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.356113868 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.358463074 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.362096812 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.365889151 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.362617681 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.45205113 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.367418471 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.672191758 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.358504519 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355181109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.363280711 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356029363 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.373532808 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354595292 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.366112353 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.35575722 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.656721307 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.375077907 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.374866685 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.362480245 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.360863366 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354410057 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.373911326 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.412317845 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.35989222 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.223343036 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.365408818 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.368549511 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.356504855 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.360143224 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.361871019 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.3684179 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.357420654 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.660865293 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.648614381 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.614495668 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.362200436 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.35828819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.210327936 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.364675692 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.541710924 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.377059085 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.357420119 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.637942713 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.578570847 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.357390233 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.352164064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.358913415 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.638295171 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.357232106 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678244207 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.967371639 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358525628 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358619051 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.226304128 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.173488769 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.359057048 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.35606039 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.655330242 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.374514304 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.358993208 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.357823609 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.35944114 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.352742125 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.354473875 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.363261409 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.355626362 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.35735159 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.648423349 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.551732258 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.370923366 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.361202252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.892365654 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.383941844 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354179277 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.365458454 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.358969269 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.35792952 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.432380472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.361180141 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.404891307 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.361085224 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.357525611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.921038941 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.359385476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.376729149 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.552164779 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128261859 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.361593879 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.357968563 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.360613617 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.413069113 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.914204805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.407212301 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.665844379 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.369160741 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.400177196 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359937762 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.368795647 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.914858649 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365337802 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370336438 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.094182422 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.359732462 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.841262039 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.359417896 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.36017959 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.019002245 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.360375678 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.356920773 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.354089348 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.375014855 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.694931814 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.361238947 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.405480982 seconds)
  done (took 504.895720009 seconds)
done (took 655.472353765 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.360606993 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.35931592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.340822256 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.359665584 seconds)
  done (took 10.654751585 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.377726266 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.365421517 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.373291937 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.3646862 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.374983021 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.365926271 seconds)
  done (took 9.456494193 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.362162963 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.361767056 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.359583059 seconds)
  done (took 8.318867091 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.576760941 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.373069349 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.70297025 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.367257133 seconds)
  done (took 9.254826303 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.379808354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.378405685 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.377108358 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.375811781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.376946257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.378681633 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.380150396 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.378664385 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.378522932 seconds)
  done (took 13.638768298 seconds)
done (took 52.554934116 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.185723947 seconds)
    (2/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.554154388 seconds)
    (3/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.482301492 seconds)
    (4/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.507459 seconds)
    (5/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.568536877 seconds)
    (6/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.340361161 seconds)
    (7/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.164107326 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.46045976 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.426850512 seconds)
    (10/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.238304462 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.339833911 seconds)
    (12/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.378394213 seconds)
    (13/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.333368257 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.434484499 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.342510411 seconds)
    (16/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.582075665 seconds)
    (17/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.494721752 seconds)
    (18/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.342134186 seconds)
    (19/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.39119641 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.207154698 seconds)
    (21/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.462789242 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.520107319 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.342288386 seconds)
    (24/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.492436533 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.341878831 seconds)
    (26/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.368574848 seconds)
    (27/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.395766398 seconds)
    (28/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.44640751 seconds)
    (29/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.445747887 seconds)
    (30/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.480774835 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.344476529 seconds)
    (32/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.21376355 seconds)
    (33/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.070280762 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.344056885 seconds)
    (35/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.125034892 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.452734197 seconds)
    (37/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.475261407 seconds)
    (38/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.358938232 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.257573692 seconds)
    (40/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.345139397 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.444572708 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.362592143 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.492784043 seconds)
    (44/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.340581859 seconds)
    (45/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.383651403 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.40151698 seconds)
    (47/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.471198354 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.515083886 seconds)
    (49/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.429482048 seconds)
    (50/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.185965087 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.347040137 seconds)
    (52/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.377147069 seconds)
    (53/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.424779502 seconds)
    (54/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.075513884 seconds)
    (55/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.478242102 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.448537687 seconds)
    (57/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.536200468 seconds)
    (58/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.395693461 seconds)
    (59/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.399135269 seconds)
    (60/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.548154072 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.475417992 seconds)
    (62/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.359356206 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.341749449 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.36271012 seconds)
    (65/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.340955244 seconds)
    (66/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.052246692 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.45750955 seconds)
    (68/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.441800448 seconds)
    (69/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.44460661 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.53622112 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.457237548 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.491909774 seconds)
    (73/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.366432958 seconds)
    (74/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.346063996 seconds)
    (75/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.452743108 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.478693548 seconds)
    (77/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.512667654 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.448371754 seconds)
    (79/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.529774782 seconds)
    (80/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.510408163 seconds)
    (81/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.396314873 seconds)
    (82/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.349402974 seconds)
    (83/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.524090262 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.486721854 seconds)
    (85/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.436288813 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.487829756 seconds)
    (87/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.40114783 seconds)
    (88/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.590052952 seconds)
    (89/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.216256513 seconds)
    (90/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.227193984 seconds)
    (91/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.447171689 seconds)
    (92/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.440659255 seconds)
    (93/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.387898017 seconds)
    (94/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.103009723 seconds)
    (95/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.442256661 seconds)
    (96/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.554919923 seconds)
    (97/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.122959044 seconds)
    (98/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.558358949 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.406652505 seconds)
    (100/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.351027771 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.495210669 seconds)
    (102/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.549509281 seconds)
    (103/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.449604407 seconds)
    (104/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.408045827 seconds)
    (105/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.349489938 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.483913468 seconds)
    (107/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.405198613 seconds)
    (108/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.510921937 seconds)
    (109/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.579152849 seconds)
    (110/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.377757272 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.527439367 seconds)
    (112/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.536950184 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.619629381 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.527767085 seconds)
    (115/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.616944822 seconds)
    (116/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.348502108 seconds)
    (117/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.195143265 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.478473777 seconds)
    (119/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.43235744 seconds)
    (120/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.51828293 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.470135183 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.348956303 seconds)
    (123/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.498095023 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.485947196 seconds)
    (125/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.457089131 seconds)
    (126/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.551009319 seconds)
    (127/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.411447763 seconds)
    (128/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.438117328 seconds)
    (129/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.436413889 seconds)
    (130/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.400874547 seconds)
    (131/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.404279799 seconds)
    (132/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406048104 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.484023855 seconds)
    (134/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.613134035 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.488105692 seconds)
    (136/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.490634394 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.522576152 seconds)
    (138/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.722537 seconds)
    (139/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.611385468 seconds)
    (140/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.47084016 seconds)
    (141/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.440296924 seconds)
    (142/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.506115301 seconds)
    (143/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.441831158 seconds)
    (144/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.347314761 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.539075038 seconds)
    (146/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.488284386 seconds)
    (147/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.338310721 seconds)
    (148/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.429551656 seconds)
    (149/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.468683044 seconds)
    (150/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.359841542 seconds)
    (151/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.407006739 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.362598758 seconds)
    (153/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.478745895 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.479618687 seconds)
    (155/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405047995 seconds)
    (156/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.350003135 seconds)
    (157/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.151662932 seconds)
    (158/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.495350086 seconds)
    (159/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.628756078 seconds)
    (160/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.360398617 seconds)
    (161/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.556669864 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.416171507 seconds)
    (163/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.408604455 seconds)
    (164/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.616793258 seconds)
    (165/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.619788216 seconds)
    (166/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.521122029 seconds)
    (167/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.193978346 seconds)
    (168/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.456432719 seconds)
    (169/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.176817848 seconds)
    (170/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.526568453 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.393718187 seconds)
    (172/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.154961581 seconds)
    (173/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.347957218 seconds)
    (174/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.3453107 seconds)
    (175/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.611011239 seconds)
    (176/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.348039952 seconds)
    (177/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.453375502 seconds)
    (178/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.349197095 seconds)
    (179/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.3748337 seconds)
    (180/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.34908685 seconds)
    (181/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.359970558 seconds)
    (182/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.346397425 seconds)
    (183/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.068863928 seconds)
    (184/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.393092723 seconds)
    (185/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.397065877 seconds)
    (186/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.585125391 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.645805054 seconds)
    (188/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.360811827 seconds)
    (189/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.404442584 seconds)
    (190/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.352498781 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.108498883 seconds)
    (192/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.352188872 seconds)
  done (took 346.897886896 seconds)
done (took 348.132522248 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41308515 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.470289774 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.379618214 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.380081319 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380622618 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.387590429 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.409906513 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.387191146 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.398797171 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.39926241 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.384234212 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.39480424 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.40185564 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.396067291 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.418348218 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.384794534 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.380680541 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.393250139 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.401304626 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.402285866 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385413671 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381458444 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.414463543 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.383191673 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394679666 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39004173 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.393120047 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.38444439 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.388089852 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.400834923 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.387237287 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.387172114 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.401661646 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.39735774 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385967603 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.393604036 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384342421 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.477381245 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.407017818 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.398027435 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.394768252 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401493328 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.392093773 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.389779463 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.397478596 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.412332074 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397193832 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.403617973 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.384140929 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.37507667 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.405864463 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.397840312 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.396402061 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.379548805 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.384086836 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397177 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.398188124 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404369178 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.394320983 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388353211 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.419983936 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.407645331 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.400348256 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396485892 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.396802001 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.404768135 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.398966343 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.405687866 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.393406976 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391077466 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.389183638 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.394188397 seconds)
done (took 109.850217751 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.512464559 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.383386823 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.546667052 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.391275758 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.552883031 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.509534362 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.393029607 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.39906619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.395792263 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.194264052 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.394249705 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.394252212 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.386221225 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.397650565 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.510542277 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.397386811 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.392874466 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.093652459 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.397410553 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.52335808 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.387147205 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.397390203 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.396304053 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.188957672 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.385694368 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.382892419 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.526118661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.396579873 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.091489854 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.381087493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.38761893 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.095234275 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.523947237 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.416025512 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.406092793 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.407657743 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.55665676 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.401085718 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.514761621 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.511544548 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.551984108 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.439219335 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.38377469 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.392775775 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.400198032 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.39898995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.396877376 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.43143725 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.386809861 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.401866229 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.090926491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.410657974 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.399242903 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.400967983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.400533025 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.428213786 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.395545712 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.398202945 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.527264116 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.400412875 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.515695443 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.194152301 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190711209 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.396609923 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.390348817 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.401311036 seconds)
  done (took 112.29766292 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.461771533 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.467935035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505774858 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.393172974 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.439412192 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.50732468 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.392144316 seconds)
  done (took 11.424041181 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.395497036 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.400150887 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441015668 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.440130153 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.400759703 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.563922854 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39702595 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.403116218 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.397228448 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.443760863 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403724416 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401811267 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.407973523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.389368192 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.441731088 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.405026065 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.509682877 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.393626639 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400230163 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.545547356 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.403491675 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.409295106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.439821301 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.401936834 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404856432 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39946194 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.172459009 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402334603 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404454534 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.400417864 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.399908527 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.459099736 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401561749 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.392130628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401668541 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508515946 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400107504 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.399980613 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.400381086 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.393087328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.403331848 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.402226118 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.402760335 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.401354228 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.40495066 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.418747025 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.400196435 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.400355081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.403575277 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401476477 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.44425017 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401220582 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.402918054 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.399658833 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.448201338 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410631663 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.404152885 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.401253318 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40525935 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403979589 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546398363 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442988072 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.403965632 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439633254 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.403624918 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.400444206 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.402910114 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.40283265 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485558189 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.402595204 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.442377729 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.404065468 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579892982 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.418976962 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404553885 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.398160554 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.396199764 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.405826043 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.392823075 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.405235607 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.40565038 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.399434744 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.402866412 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.406238832 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.40284832 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.555345701 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.501837297 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.40397687 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.410049243 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.401308216 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.404056698 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.446077778 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.404420945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.4026052 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447949515 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.514368066 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.448373165 seconds)
  done (took 143.935016361 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.410521008 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.407217048 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.398032527 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.422331223 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.39962111 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.396546097 seconds)
  done (took 9.697414376 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.399032069 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.41041847 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.404603477 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.403128836 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.40832468 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.407535372 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.40651043 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.39630206 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.408671277 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.408584409 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.407588329 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.412526136 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.409338734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.408425919 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.408919471 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.407267182 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.407283645 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.406775744 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.40644243 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41086831 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.396714949 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.410417467 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407728004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.400019766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.414353758 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.409192208 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.424193893 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.407155055 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.409205919 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.405748167 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.415075553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.412140988 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.400763932 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402979077 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.416368423 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.401237558 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41179109 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.411581891 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.408374996 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.413549338 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.412626021 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.410155924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.408294999 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.412066972 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.403241708 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.405382249 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.414919173 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.425001005 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.411610275 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.411311856 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.411749596 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.406465806 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.412259136 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.412595115 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.401512991 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403861871 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.416478014 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.410371521 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.410970639 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.401628524 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.413811397 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.412395836 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.400333074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.411972147 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.413403254 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.414722067 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.402982756 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.417752697 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413701478 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.410351301 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.413986666 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.412941565 seconds)
  done (took 103.721693677 seconds)
done (took 382.327274059 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.73940918 seconds)
  done (took 4.004969117 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.47165806 seconds)
  done (took 3.738913085 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.610089331 seconds)
  done (took 22.883960566 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.445707055 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.446207279 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.420532157 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.392661322 seconds)
  done (took 10.97191052 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.849206708 seconds)
  done (took 4.11904485 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.406544964 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.401816646 seconds)
  done (took 6.077836906 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.620225529 seconds)
  done (took 3.886418649 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.722574642 seconds)
  done (took 3.991713768 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.420176455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.410184888 seconds)
  done (took 6.109196971 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.377071166 seconds)
  done (took 3.645135706 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.13161409 seconds)
  done (took 21.401982668 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.430172872 seconds)
  done (took 3.703527091 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.432184559 seconds)
  done (took 3.69925714 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.945390605 seconds)
  done (took 6.214480105 seconds)
done (took 105.713398419 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.395731712 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.400271266 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.395521295 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.398325988 seconds)
  done (took 10.857396179 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.47835266 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.474186542 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.48521404 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.471309823 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.468206378 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.480413875 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.439082807 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.4440397 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.468146823 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.462920561 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.479874773 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.471997159 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.476681939 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.438744513 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.463632406 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.481157046 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.468333552 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.485543562 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.435521058 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.470687365 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.411238141 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.473916082 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.46623962 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.41257526 seconds)
  done (took 36.37598297 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.900789727 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.472765884 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.560782472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.452459805 seconds)
  done (took 7.653075058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.520047276 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.516579313 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.533807528 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.572487586 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.618240246 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.52981108 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.440653565 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.436659556 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.420442106 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.519204369 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.597045864 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.516359067 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.733381906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.413273161 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.732095922 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.414878033 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.414875622 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.519598336 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.564876716 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.596765369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.412777296 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.518120754 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.518395463 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.516022056 seconds)
  done (took 37.845247219 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.422346905 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.430988382 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.414468426 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.430197739 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.414305515 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.413181699 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.417774516 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.418955251 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.41364861 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.412999942 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.416420696 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.427904557 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.412290625 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.414884708 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.422811812 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.414721459 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.415561397 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.420888258 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.427668009 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.414919216 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.417333691 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.423430123 seconds)
  done (took 32.485464375 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.40126772 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.39834672 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.754700167 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.65433375 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.401134136 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.400852713 seconds)
  done (took 14.279793848 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.471387075 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.613501871 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.408741567 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.750971354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.841134878 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.409852696 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.407381513 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.648381653 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.939407544 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.92858066 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.458782369 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.476793731 seconds)
  done (took 20.627297484 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.402360728 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.401686843 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.409104483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.420259318 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.457593565 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.411233454 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.412786482 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.400492095 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.461077814 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.466795036 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.407374424 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.458552422 seconds)
  done (took 22.379443504 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497912688 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413153036 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424239892 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408374982 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410385537 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406328315 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442287798 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.105411182 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.413235429 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687608947 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410856144 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490469185 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660883995 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41630919 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412629727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.336877339 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639278991 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901191673 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414010071 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414492782 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441477638 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413748395 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415928341 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613071366 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410066401 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41368494 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.677280341 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413808721 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693174349 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667867786 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663380769 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412565054 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689813487 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05641638 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516953574 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61486944 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417308257 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41344535 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.392192897 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.425995829 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440334102 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411729627 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668002273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408221269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412757638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416806636 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129668372 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.419212456 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.41636876 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417561242 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667997461 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494356191 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.420576941 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413714273 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454954933 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407778033 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.420855678 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540031061 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052221269 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426356374 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412369892 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.416762259 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416538322 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422816553 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039776846 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.423807128 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.423647802 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419865145 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418807113 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421119152 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432600297 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415630467 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.434846042 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419210515 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176933753 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413711128 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415126113 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947984361 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417793679 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.417927838 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641944014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417276848 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41601336 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.419548915 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415891592 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148614507 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422523159 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.385658935 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458765627 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113938606 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623120141 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434721361 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447393348 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637196253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.384839879 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418017718 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.433156057 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417101841 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436946328 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.122120865 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413953912 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.422557562 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664898629 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.627436625 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422089036 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.338567292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884232801 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413471798 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.441892123 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.423375448 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621360217 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.024806432 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674966406 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419543117 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453363702 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418757071 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213659896 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416359259 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.425440024 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421485664 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696949632 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.238301442 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419114625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49317999 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430439656 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420944962 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426644548 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421437065 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420735447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.596507157 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426991951 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668010351 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.422858567 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422356735 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.42042987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41893466 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.416996733 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.641401447 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418172334 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709190084 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417505117 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417462888 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414435604 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.634323927 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.433473156 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.421642163 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.763952433 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417454262 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422185144 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673715014 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456145832 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532108395 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453712699 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.420479843 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.685237655 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.427130822 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.42689024 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423298212 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421231774 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425790592 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.429227549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435565513 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014747814 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40016007 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424624941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424448899 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.439264217 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498883833 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431653885 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626856003 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.42927162 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41998077 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.424266371 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.428082509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645566274 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671528908 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.427218155 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610366237 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.878549976 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016806388 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434917323 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.421373526 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.418696843 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.42064005 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424256681 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423236537 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423491815 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621776577 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670891839 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420410345 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.023727923 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424942841 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42531533 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.429881864 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670867576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.434663529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423333232 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425300567 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425684092 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432619173 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672071545 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645234572 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.440552875 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422067705 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.942636811 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435388877 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426046356 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425889989 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451866402 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424214954 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265262985 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761734938 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424405431 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682854093 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.426384366 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.454502391 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.426845275 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431203583 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428855749 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.464366741 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431601422 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.628068449 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422039043 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424662857 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060882522 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182006502 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974517258 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43684455 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.432061685 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430195199 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136883973 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42432661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425070544 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665308278 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124872632 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419701406 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878822032 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.42370179 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161875388 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673902753 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658708816 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43359162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.425890502 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6802018 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.640807694 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453353752 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440961436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428793567 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.389615892 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954023327 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430767341 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606737234 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128289583 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423229603 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428947435 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.477096203 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.428803214 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809498364 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42248233 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426760284 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422580969 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438886177 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257355119 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.430978344 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431401635 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060144303 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424476433 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.89113123 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422882033 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626882427 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.678035174 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.652039615 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.443682212 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.43187578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.676854504 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677388791 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431809665 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431388379 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986088627 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.288700507 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.438296032 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433347793 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215288259 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43231257 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701255171 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.431328656 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.4491313 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441019528 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429348551 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429626615 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.428485247 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.442181001 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409034702 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900775307 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.420271794 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431852666 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450206933 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44452527 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678201531 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.446437709 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022493338 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660654682 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427933376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461769734 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.43272554 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42812245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.402195708 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428217128 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429989095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48054403 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645592628 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.430436318 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.392070313 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.450123117 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634283269 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428969538 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434786927 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637194179 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.424532018 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.441239452 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199454871 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460721564 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429123067 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446359207 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.429800881 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469634808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504565747 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62720437 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.677026178 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682278012 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822194902 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422898227 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.42756733 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.444458704 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508161926 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436452552 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.433117213 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.432894789 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024799312 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189552219 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.037618794 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676152165 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.428843777 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437757919 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428458724 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666198512 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429760692 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703683831 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42857967 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.416580525 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452442462 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428414358 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433762661 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643365514 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701983205 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429320636 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43176866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432075309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.430997813 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681276217 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.645687641 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908540467 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95936587 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427344598 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433853619 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140048532 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703886787 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433497634 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430734148 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432630648 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.451957973 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.453481606 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.436271335 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430629153 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656030919 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676124007 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082469201 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.674506779 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.612193913 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.343606398 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436072544 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681357072 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.274639979 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631944021 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033630828 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130409897 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687351594 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507128637 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634005481 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.431331381 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.670659377 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.43532986 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434255209 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432665957 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434793172 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.429991226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.682622547 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0386104 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686713224 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.436305532 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.435181139 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461586009 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.6346035 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653874665 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166264753 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650760602 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684907299 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44022346 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433813661 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046615472 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681500392 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435457939 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.436252043 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642875795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42649047 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4721219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.300995274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.431411343 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967703022 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.641402227 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451351046 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429009527 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146285167 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043556243 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.443244564 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918067588 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435890189 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437546274 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711491846 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.441551815 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43455425 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714071085 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.438741906 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432488261 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637761552 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.029449827 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173555436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.436435165 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459309516 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.438068159 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436350596 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455087864 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437187937 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443226762 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.829122149 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433267782 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438738857 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444501953 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.44515548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436617758 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.43623133 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435963829 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.442067638 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.414051428 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.426851355 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44249549 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561314347 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969454691 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436120739 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.05433082 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.776017139 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685461552 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438138286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.407919162 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.443092226 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440038531 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43996965 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435944361 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433745719 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984455427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.437510777 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.691363928 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.447130695 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.649630621 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650068684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.443681403 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641282452 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447471933 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460086999 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.408950468 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440554027 seconds)
  done (took 1004.651916825 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.450519077 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.433122232 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.433470104 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.504385679 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449679855 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448944911 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.453566977 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.506120141 seconds)
  done (took 20.974173117 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.439377749 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.440291278 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.440313274 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.442310092 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.443384118 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.893720452 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.442945587 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.443679054 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.457222401 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.443917868 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.441644841 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.041778191 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.444164079 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.43973916 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.443916479 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.446760311 seconds)
  done (took 33.443488535 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.091472755 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.442534211 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.901228819 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.453784916 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.452711331 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.427196909 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.537516214 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.426414599 seconds)
  done (took 26.035232601 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431527749 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.429857634 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433503657 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.42260664 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423770444 seconds)
  done (took 8.429154404 seconds)
done (took 1277.30540664 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.424755495 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422776925 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.42525253 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417103019 seconds)
  done (took 6.970720747 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.373797122 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.372241446 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.374579447 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.387567489 seconds)
  done (took 9.774565333 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.04254797 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.90703087 seconds)
  done (took 5.221414388 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.948216611 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.945890584 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.942333664 seconds)
  done (took 7.10826705 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.682094035 seconds)
  done (took 2.954735665 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.381673946 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.398667239 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.128626083 seconds)
  done (took 8.183033057 seconds)
done (took 41.495300835 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.390461126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.168910527 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.547075752 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390991838 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.574932987 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.547313524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.642808461 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.402520357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396748022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.408105159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.393396134 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.566275526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.628778181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.152732843 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.629169135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.155201349 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.551293108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.392953024 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408989476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.399623807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.64279331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.402759217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.398782324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397412564 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.558482302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.537346904 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395724767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.156005562 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.397514614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392745447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.542945482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.39437378 seconds)
  done (took 83.238470968 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39256233 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.426159145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.40985244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.398089944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.394414333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410578703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.398413325 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.397083451 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.408184034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400463992 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392105672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.423182803 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398639159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.39613577 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413344635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.394526094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.410959108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.400317932 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400969479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.41448246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.395385181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.395385724 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39651595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413995276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.399488688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.400299542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410298543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.395586137 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.401931985 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412100185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402934442 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.417699954 seconds)
  done (took 78.198343119 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400277096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401301987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.401534006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.401002175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411101825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.401206183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.403349167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421423674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.404513491 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41229372 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.401150461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.403358619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415382612 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.400764663 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.398687292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.397674774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.399074326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.402420489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388663448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.390523665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.389159709 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.404048108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397409466 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.396417651 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393063366 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.380757081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390416603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.379197862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.384231086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.377807544 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.405923314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378192882 seconds)
  done (took 78.010727573 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.611080869 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.384928935 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.388420305 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.381759248 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.389190412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.384288225 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.380873087 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.618041371 seconds)
  done (took 14.791544861 seconds)
done (took 255.509035025 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.382766868 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.851804709 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.413957482 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.383103654 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.397904385 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.411760967 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.597377399 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409698601 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.59857054 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.400336668 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.400893715 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.388773268 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.151339831 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.535858676 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.188209372 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.301379395 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.2258386 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.385993698 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.925022007 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.663371595 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.412180164 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.373749575 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.20141932 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.245327974 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.358543435 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455347228 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.477617044 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.608860618 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54402927 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.456377964 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.869385364 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.40019998 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.386388307 seconds)
  done (took 64.061004871 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.379802767 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.388898629 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.390058606 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.389071537 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.388715366 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.389399603 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.378053618 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.389225339 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.389494974 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.389639619 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.3890362 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.390633579 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.391153773 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.389244995 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.389084076 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.363680402 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.378084976 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.391991027 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.378339429 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.364357093 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.391114742 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.390101638 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.391141354 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.391451522 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.391320288 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.389912775 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.389719713 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.391567773 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.390110872 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.391429582 seconds)
  done (took 42.865468779 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.391637946 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.939320057 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.097242962 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.394069556 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380792784 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.38625251 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.658352514 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.392018094 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.386974729 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.388615124 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.830519504 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399112291 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416707967 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1048457 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.390142811 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.393530831 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.392420181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383542893 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.948169529 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.398366125 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.659215294 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398903499 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.65807693 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.398933838 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.387563364 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384987576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.390135262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.16836721 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.406642483 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.832694242 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.125133883 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.657085418 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.109310095 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.160515264 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.124324081 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.399980588 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.395244146 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.836057129 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.390472288 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.385996119 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.657891635 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.385967116 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.110733766 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.064296546 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.402233326 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.394986882 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.190113983 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.839267167 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.623421408 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392265024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.146755662 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.389704971 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.394790362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.386963815 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.618173958 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.38821804 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.386081623 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.210767497 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.390190116 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.66015815 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.395528916 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.386423952 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.949655979 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.386507852 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.944844773 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.389390519 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.395773965 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.387567027 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.115640986 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389876791 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.082405724 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.402419866 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.396560125 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.835493171 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.948234405 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.237940488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.388493296 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.955833097 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.128841055 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.675818606 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.392040704 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.141888796 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.678378542 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.390695004 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.399322434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.398006453 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.39718543 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.46670272 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.660879087 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.000970176 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.07951635 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.216968615 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.664115173 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.395717915 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.389865501 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.21487735 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.398963929 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.398035573 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.114547913 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.084673381 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.404847053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.397955282 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.070364644 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408076577 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.665786327 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395817594 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157134068 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.391857841 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.465644056 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.401133889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39105039 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.387049897 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.658288494 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.388112638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.394082623 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.058405816 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.860039991 seconds)
  done (took 193.210999047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.376645441 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.36988654 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.374994352 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.371846032 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.373625844 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.378761574 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.371377916 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.373387081 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.377497256 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.371368465 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.37228462 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.380826338 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.37638019 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.372859239 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.366700266 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.367220822 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.370037886 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.374362851 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.367258484 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.36920447 seconds)
  done (took 44.713959141 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.388248102 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.912171768 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.880402857 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.384989371 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.386381471 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.380474598 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.430101907 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.388242141 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.385511066 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.663500562 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.534681507 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.390391123 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.386891806 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.386323302 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.887483518 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.354855026 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.664240136 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.907138622 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.384106436 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.913859363 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.355641142 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.38920046 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.377469783 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.914757924 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669136801 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.647059223 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.430968927 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.916393634 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.383240022 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.385997301 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.913382792 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.384692986 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.378144153 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.90030999 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.38410888 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.402410608 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.388042992 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.435227286 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.44023093 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.666752585 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.914464636 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.658978667 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.395361447 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.538168834 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.392071562 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.360416261 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.922614356 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.386005172 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.360582554 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.390319359 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.393639581 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.903374533 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.376368489 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.900640695 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.383754931 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389290607 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.916811404 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.897280833 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.886090974 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.536769388 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38209182 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.653336337 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.384353588 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.927267925 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385636711 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.389051765 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.389768312 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.544055971 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.920115644 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.650478117 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.663996647 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.662169918 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.384173571 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.444719544 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.391302859 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.669518064 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.44270424 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.759296263 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.673037202 seconds)
  done (took 124.650638197 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.638299572 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.490103125 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.74496264 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.937940233 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.864662049 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.507478456 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.492124681 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.623159879 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.396730868 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.491673074 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.010291639 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.470817934 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.094981221 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.440478797 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.488387612 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.502810101 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.764847767 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.321895327 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.995408166 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.983245021 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.383122329 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.484651176 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.916254752 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.578836103 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.379370167 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.915133423 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.279252251 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.889016339 seconds)
  done (took 52.346818773 seconds)
done (took 523.104975054 seconds)
SAVING RESULT...
DONE!
