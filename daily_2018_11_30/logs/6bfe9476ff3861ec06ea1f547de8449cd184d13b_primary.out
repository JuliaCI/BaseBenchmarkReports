cset: moving following pidspec: 24479
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.251689392 seconds)
loading group "string"... done (took 0.553122272 seconds)
loading group "linalg"... done (took 7.74864901 seconds)
loading group "parallel"... done (took 0.173908546 seconds)
loading group "find"... done (took 1.187777452 seconds)
loading group "tuple"... done (took 1.870101194 seconds)
loading group "dates"... done (took 1.273929851 seconds)
loading group "micro"... done (took 0.236380977 seconds)
loading group "io"... done (took 0.770555082 seconds)
loading group "scalar"... done (took 42.670220748 seconds)
loading group "sparse"... done (took 13.645142165 seconds)
loading group "broadcast"... done (took 1.226944577 seconds)
loading group "union"... done (took 14.285268297 seconds)
loading group "simd"... done (took 4.807234544 seconds)
loading group "random"... done (took 9.952631549 seconds)
loading group "problem"... done (took 2.179276602 seconds)
loading group "array"... done (took 22.679395843 seconds)
loading group "misc"... done (took 2.112806928 seconds)
loading group "sort"... done (took 3.468570554 seconds)
loading group "collection"... done (took 19.552479339 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.582762177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144298898 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151742638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147177438 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188760714 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158117208 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158788582 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098705553 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.001044369 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174697013 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15352649 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522013979 seconds)
done (took 5.283566293 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218030181 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094116617 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104187464 seconds)
  done (took 0.942861234 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07913944 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144357556 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095917573 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079218019 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096290797 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078275363 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095943964 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078116325 seconds)
  done (took 1.413188735 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086150604 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099537966 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082053419 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098837245 seconds)
  done (took 1.117769074 seconds)
done (took 4.526968039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737578945 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273396927 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.20392338 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46440927 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195789202 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216058712 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679045605 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354398943 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25185849 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099856541 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142566606 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38625432 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137379373 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681733942 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08892601 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123310116 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177790209 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459512846 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084750856 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109808713 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116907784 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141225953 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130549639 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09064418 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188904454 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081752693 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193579799 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108521217 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080756235 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288276679 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201117553 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693931337 seconds)
  done (took 10.973950957 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109931981 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133310347 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097756624 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137054892 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133946021 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099647062 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084083283 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097196413 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12187232 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176349498 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114412553 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136377688 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095484174 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081947968 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115401314 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246920057 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12450439 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106364393 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103273025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106600307 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122564235 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113884552 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109816341 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092265134 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166602659 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223771037 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110112293 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126226327 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09697721 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112813744 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144106417 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142353397 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095006549 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079408739 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173010292 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124646754 seconds)
  done (took 5.219944244 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.079604559 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189197313 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121693577 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170178567 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079725306 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142041798 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094524312 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113374964 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256903672 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.185944227 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176276798 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141838834 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153147703 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09824171 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098759015 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081718689 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098620314 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.632788559 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155582608 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134480342 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095901659 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105090319 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103351028 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361593162 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086466924 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096827556 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08102087 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081568544 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159489744 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080375409 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.157374371 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101078394 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102998615 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132510812 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192075449 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1248328 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117193093 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096197873 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076828826 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190813222 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087165007 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09611397 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101568964 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135016961 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13405457 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09652092 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079968924 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220186042 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079252215 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113133158 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.92549364 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181325265 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088704844 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095540103 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.3199888 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09858307 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097745641 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080570235 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276466155 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191010725 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097731916 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077810721 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096831765 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079843479 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397424879 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080726414 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.697399486 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083772648 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108982268 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081883729 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097250606 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103766609 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087207574 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116038328 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079131534 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100220223 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078135968 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096835368 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080624915 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094192056 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106223783 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078135525 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101606764 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079414592 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164901656 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078504407 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116177914 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126946401 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082551721 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095324324 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129305378 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0821264 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09727951 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133065785 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080193669 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108677549 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099502347 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142507705 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080552624 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.150341664 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080959325 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094242798 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.109626567 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101365475 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129903397 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.113023061 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098100565 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085210282 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094949343 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077199024 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165984754 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081784096 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099853611 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082058426 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112058301 seconds)
  done (took 22.465628103 seconds)
done (took 40.486920716 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322964069 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105173284 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103945969 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103542323 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101104151 seconds)
  done (took 1.557792945 seconds)
done (took 2.352603388 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.289872471 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172145867 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097360553 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.16722623 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093685183 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173746251 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159039598 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111673014 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201578799 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095881548 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163787684 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094320485 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07627822 seconds)
  done (took 2.719810858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095759988 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117706946 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085577542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114433919 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076391936 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114563277 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092938656 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119871339 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112314727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086008741 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094670799 seconds)
  done (took 1.905558836 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094002671 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113647999 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081772504 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11089505 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075849016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111466627 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091899735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117227375 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110613174 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085200587 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093639541 seconds)
  done (took 1.880642755 seconds)
done (took 7.292657346 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090735463 seconds)
  done (took 0.880180078 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.938995852 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.01036141 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113052753 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150189293 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300042407 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192578555 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.481005541 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124961848 seconds)
  done (took 11.307182151 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.14590434 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084014898 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101205416 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085734215 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103700931 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085290751 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101878994 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103831934 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085349702 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.101849813 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083001492 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100267921 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102615079 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085192487 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100279993 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083747769 seconds)
  done (took 2.405871234 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117514383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117123958 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107956525 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109258802 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085321544 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106636098 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107387919 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087817259 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103769388 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104385978 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089924209 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107204442 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10392403 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079676093 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107221747 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108048618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085362817 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108423949 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106883409 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090046678 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107586586 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095574806 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086390174 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107955331 seconds)
  done (took 3.335259486 seconds)
done (took 18.721969844 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159661251 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109268517 seconds)
  done (took 1.067303927 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096169135 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11381961 seconds)
  done (took 1.01095996 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098477286 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097089082 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121916121 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110919575 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080538318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097382 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120581239 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079732758 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097306504 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079987079 seconds)
  done (took 1.787629072 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082783095 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110217454 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101916549 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094221128 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106588864 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094657623 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087827409 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099708194 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109041747 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077087458 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103256065 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114075051 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084860089 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118107067 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10523454 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082399333 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103697457 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099288795 seconds)
  done (took 2.580591058 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080486088 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097946467 seconds)
  done (took 0.982035171 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082068444 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094453822 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081115052 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100834922 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09658231 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078436511 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097260782 seconds)
  done (took 1.433258905 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500356165 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136769106 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266842888 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.103803815 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120355875 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301424618 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099316109 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102531219 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085824802 seconds)
  done (took 2.557631819 seconds)
done (took 12.221074925 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095058148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118802862 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114226441 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471974256 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107670479 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099173813 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146882701 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251231547 seconds)
done (took 2.212991025 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144383496 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326638517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116844493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068769331 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.101667289 seconds)
  done (took 1.424956487 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081381365 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102305491 seconds)
  done (took 0.993520043 seconds)
done (took 3.379659978 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081390446 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099567973 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080176042 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099100554 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.113096425 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.100132233 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077917352 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101933745 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080782113 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.10378569 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098221549 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082966846 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098573245 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079592518 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096562378 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081522304 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096884948 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08103703 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097639268 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079655908 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09955287 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079292507 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097292392 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081283284 seconds)
  done (took 3.037578734 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099066733 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100998712 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10490768 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088555009 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10440656 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087459162 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107236532 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099962281 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087656447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10269199 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103116129 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086609721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102498877 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084346103 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102665415 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103490279 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08738079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100393801 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083590819 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104146437 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104407105 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081707037 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10360385 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104753911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086166764 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103801767 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083694793 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101370112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105364413 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085486787 seconds)
  done (took 3.717325221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084902616 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095688278 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08063433 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104305632 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079009309 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099533753 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078491209 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098428261 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080845036 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098516022 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080075208 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099049236 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077909851 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099917463 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07901981 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102708439 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111221008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080075758 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098024186 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079563124 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100431861 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079282925 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09857976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079113486 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098309692 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078825239 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098458323 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079106874 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098898421 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078923275 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102185917 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081916867 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099147242 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085110981 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102324404 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077887035 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.101750369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078309702 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100393329 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096513707 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079857971 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096924177 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080927591 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104333302 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08070145 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100039276 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079448797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100392595 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079883044 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102512978 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078675502 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098870332 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080785766 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099347 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082612083 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.098929924 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097733807 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080203355 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099266656 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080266482 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097284763 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079662712 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100147898 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080527251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114668485 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086583936 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098079398 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080884906 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099914383 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081087396 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100489462 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111567722 seconds)
  done (took 7.376125099 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08373412 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107259464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080907987 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100416586 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077214109 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099659816 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101676435 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080019954 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10036783 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086159407 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099752775 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080485439 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101033884 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109924584 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081321165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10100374 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086736861 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097225909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079853851 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103147722 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0799341 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103992232 seconds)
  done (took 2.860759812 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210129124 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10643691 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142003325 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107749541 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083224675 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107451645 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103260728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088277146 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10565156 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083953427 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104388486 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105502025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084958271 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104583538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102850978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087034258 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105496048 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085891822 seconds)
  done (took 2.743100232 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092956598 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099224509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101407403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099922932 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098740891 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084512833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106424302 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110085161 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085440038 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101614003 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09178062 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104804983 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10355805 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082660428 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103783661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082530754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104409336 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081591472 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111220163 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107487277 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106377922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093060191 seconds)
  done (took 2.980110195 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097355402 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103267059 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120883548 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08627673 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097810565 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081586478 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110070383 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082131711 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111316454 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103225592 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082950993 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101054736 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088445398 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102550378 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108010156 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083150173 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104529315 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083196208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1042466 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078816256 seconds)
  done (took 2.756971178 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102852024 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.215463603 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102276797 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095103366 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105485302 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083456576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114203813 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103603893 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083988359 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129507852 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104116935 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083389136 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115001074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109343358 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102708526 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095306977 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111720399 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113762159 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08359825 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105087231 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128494183 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083460934 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113632681 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103208282 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08456005 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103741288 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103020007 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090789783 seconds)
  done (took 3.800096112 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082456031 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100584491 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081149697 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098886332 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080654144 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098523178 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081049993 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098294937 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082857841 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099842077 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082689211 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101756483 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085348484 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101740622 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082268353 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102592582 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081712791 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099470804 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080052152 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100419453 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081880537 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102085303 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082028592 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100735758 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07908065 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102674137 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080171997 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100447445 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081467465 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1003664 seconds)
  done (took 3.563991145 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090697892 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10922564 seconds)
  done (took 1.029589346 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078908059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117837188 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079313592 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106428744 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086901809 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104099332 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111146172 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087207207 seconds)
  done (took 1.60141659 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097199055 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113211494 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084404068 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117183709 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112931638 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099881006 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.173655573 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104848752 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088052775 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102665735 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116170009 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083177337 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109316514 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083421554 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109199175 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08924599 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101465317 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108270425 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08601215 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099714557 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084300763 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112283381 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084888069 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101222498 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103989958 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093824614 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116144596 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084521421 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107419884 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110724733 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090323851 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096826037 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083675203 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104984868 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081920606 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113147188 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120608484 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08640626 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113335752 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084001173 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115766118 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098300501 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087451923 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109487604 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112577794 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085241013 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10331891 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07913194 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101099154 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085599627 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099045037 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083199524 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098152437 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090437051 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107770469 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114602813 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082303961 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104542662 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086172671 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106896073 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090004321 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106664104 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104777391 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084420516 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111091975 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088710268 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113972552 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078166856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098011258 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100574743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098473349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127806212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089808838 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105320799 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103895596 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082221247 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106577955 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084277363 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109910004 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108472658 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084749363 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110343613 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091384161 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105521936 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085285958 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112769284 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10225628 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086522553 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101864498 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121114486 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083626049 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101811225 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081856316 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114590182 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08684681 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104242994 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080430554 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111689016 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096393772 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086195325 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104250822 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084328767 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115840574 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109141205 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090693447 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113750437 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089751311 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104950487 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106260455 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081132548 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104043502 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086503892 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110841785 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077566368 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107554684 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083857145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10454236 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112637053 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081987005 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104089557 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091976464 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110447985 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081427372 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100779295 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106189543 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084266969 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108104125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092166812 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103108931 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078127918 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099363186 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105873332 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084961292 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.107006488 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089476117 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108078518 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077901862 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102960935 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108437844 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09373761 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.105108673 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083936743 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11068482 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10408914 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084496904 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110855821 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087299685 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.103482684 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089544674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105945012 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078522158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108446151 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106880249 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082721291 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.108209762 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088525492 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107471831 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084354525 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104159553 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109036817 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085170516 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103745279 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084104582 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102540632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094880419 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.107772407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098609112 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081861512 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111348795 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081642253 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.104224216 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083298615 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106985788 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084672305 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.10294959 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10253422 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085934106 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116436692 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088602118 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10620839 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109209057 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0954487 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104713865 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085807619 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104471753 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102887204 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083522068 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109808311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086565153 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107814463 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103476603 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080117987 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106917551 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089242273 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100198274 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078870843 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100784325 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084895219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107166382 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104604681 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082874569 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099813136 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081759002 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105950692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103652668 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082590785 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100078571 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087439528 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100706976 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090051998 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10621347 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115237678 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087799027 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100104074 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088141864 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103385211 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109761621 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080709807 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.101984924 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083004703 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103638065 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081380525 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104047257 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076530531 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109349453 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088852677 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102628685 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.099400189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083130267 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108030392 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083235756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105914334 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084881968 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10814229 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110521834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081901525 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104289111 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092160343 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103060323 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07533417 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10857564 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099982236 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08144325 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099549242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08096112 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104651564 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108602655 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090531218 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094452903 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084653282 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100679113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080987745 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097537417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086191041 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105131777 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081706508 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10872154 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102757815 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082327482 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105655747 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08078682 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102684355 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102640363 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08683314 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10144327 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084011328 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101109959 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083750907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103199956 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079583744 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104424812 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100277156 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083027029 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106853121 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081503436 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101458186 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084332384 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102850822 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081515005 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102467267 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100343235 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08640905 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101424661 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082349583 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104770312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077660814 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110276445 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08112106 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109740772 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101124928 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.07960192 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106967053 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08444657 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108284679 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082027595 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103331435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.102387255 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082104892 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103926819 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089034783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099715164 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110985217 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091220164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102325767 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084931967 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102111671 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083050841 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101589216 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082778292 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103223094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100338596 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081992002 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106294271 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085770387 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10236863 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083553593 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103165417 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081653442 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103792979 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095020001 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082668285 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101443841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083349939 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113106193 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083311444 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105886925 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099154094 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085511351 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100991525 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079426626 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110726766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110432565 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084506201 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109969452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080617423 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104128223 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111374085 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077359397 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099459596 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081713083 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.09971772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090565315 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103181758 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09172688 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102419976 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080348042 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100133924 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102156997 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081387869 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095398212 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080635772 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105369272 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084641553 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101455009 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082332005 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105146104 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101777509 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101839192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101267296 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082589672 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10302154 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078462989 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102021569 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080505803 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105925293 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102215221 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080641258 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099071968 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082695033 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103075965 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08368076 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10135256 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082730011 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109865183 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100307086 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086996311 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105248601 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077110959 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105457989 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081998663 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102958953 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080948553 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107226703 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104431752 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084480228 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111461721 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081164497 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103163402 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081427782 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101131607 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100633806 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082675127 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.1019686 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081293617 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10421346 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091680751 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103351395 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105824004 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083158756 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102817406 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09015624 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102922493 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085205882 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110217978 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104480951 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086234021 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114239777 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088573972 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110382921 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106773927 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087698051 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111687321 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083438912 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113298011 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084436881 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103928547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083209968 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100160332 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100649032 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08359803 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100592714 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088427791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103478253 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080661471 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10228927 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080127256 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104337136 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105217152 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090545674 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104545778 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084881255 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098374112 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078567471 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104515295 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080043394 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105059063 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104575338 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088856389 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105591801 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083645167 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102210232 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090811018 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109473884 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106021773 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080533251 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106374859 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083679012 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105982966 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083472443 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103692845 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103276351 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087484198 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104526431 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083571911 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110280544 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086475464 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105328123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103132186 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08459741 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102875555 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078850808 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103690957 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085166938 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108893155 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084705811 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104137278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113695025 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082958914 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102837626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086974613 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103300212 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086659483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099860904 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103801086 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085534492 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103258773 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07850144 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102876228 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08150536 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106048875 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081056051 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098635284 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112863458 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094085758 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106279538 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081337316 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101935751 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078013612 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099783928 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081314429 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105648012 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103687319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094202547 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102910439 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081557794 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099058284 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082318668 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108989462 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107664595 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082425409 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100601961 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084847649 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.109747766 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091864602 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106398058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085587902 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110915709 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087177749 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106226134 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109779501 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08040426 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106648491 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096394286 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104759505 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102805879 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090587071 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111633075 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084252425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099123975 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083057479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106775563 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102428474 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085139878 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104531469 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098585377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107497148 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10175492 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082847297 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105053341 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08310863 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112541248 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084354044 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105313794 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107312809 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086048428 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112434687 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085581239 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112745926 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106339049 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086697988 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.10299571 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083777614 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102330853 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081533587 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104950882 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083561811 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109105941 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112250534 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08227414 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115326769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112356085 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088654339 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099897387 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083595677 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103708365 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078947185 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105736855 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081478799 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105518984 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083175698 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.107469458 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087590355 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114334603 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104322588 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08458583 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103880619 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079966254 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106506262 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084801262 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105481372 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079244839 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10410359 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103738027 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088230472 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108203818 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083437008 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106019729 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084571755 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104978819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.07857311 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11090244 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102200456 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086791012 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101954083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084174807 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105873947 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08685539 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110053019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104095828 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086834012 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116665899 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086122289 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102128299 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079418962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109909104 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101396787 seconds)
  done (took 58.485548862 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148863608 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080988314 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099964117 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079566653 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114999118 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101590371 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07951157 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100235988 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080563687 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10275578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078007515 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100342324 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10897354 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12498085 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093655834 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105584883 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077530051 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101635381 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098296069 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080904984 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110665962 seconds)
  done (took 2.949501796 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104687824 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118003118 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115647889 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119262922 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089627658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116191834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114835053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114712927 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098623396 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111250017 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119091227 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115634259 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091761934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111992063 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111685209 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092859388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120112245 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110567274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116257009 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094138946 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11517215 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115858076 seconds)
  done (took 3.297544069 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08372655 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102745776 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08470862 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098761332 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082823197 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098839291 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086691429 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102178529 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085487549 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103872181 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081192126 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103237138 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103855247 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079596224 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103427631 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081712257 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151710771 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107903596 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082543554 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106679639 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078023207 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10680583 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098845978 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079394947 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102164342 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088144096 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105020135 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080748999 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104317695 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081485716 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104659398 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081149681 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106785303 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106004031 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083047897 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102270016 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083506054 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105110076 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082091448 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106072493 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087642161 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.104177126 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086368634 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.110687947 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08446589 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.105684767 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085100997 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104677551 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098635442 seconds)
  done (took 5.566859334 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104137973 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1618343 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087199769 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144949466 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121258296 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112633616 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088121837 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142571796 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1032167 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081458916 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123880757 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120852364 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104200664 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088431039 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111734677 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103913388 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085925894 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103942902 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107951519 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083713927 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10919657 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089476011 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121109967 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118132263 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108873786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081907662 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104632328 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109176748 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097895547 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109962394 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110597272 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089838936 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120462139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109563939 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081806701 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107575317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121251482 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103687713 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088042451 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102332072 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086540515 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109799235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110367589 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100134628 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106333934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108967433 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083475101 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102236337 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11733849 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086300305 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113947123 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120182824 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107489418 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08566276 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109837123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119869064 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084937654 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103481663 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087472321 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117886909 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102570259 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088181752 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119826921 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106827594 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111002687 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100127719 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109521164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10891814 seconds)
  done (took 8.200160632 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094028125 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112874452 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120793496 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121171376 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091189414 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112134956 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112000388 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089744981 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111684414 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117540803 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110850105 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13444576 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086299072 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115632944 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111949522 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091231116 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112442354 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111573116 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090365709 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111872479 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113261046 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120936344 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090644973 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120841839 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141991987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106620879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091012459 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111687696 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121101152 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111090253 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124113588 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091114578 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112360953 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121792289 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124434217 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090589682 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10499173 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111183439 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091202778 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111690055 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105899853 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099979786 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112938048 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106752613 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090759256 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111831297 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120597499 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125444249 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114749104 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096824373 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112339815 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120707233 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110631373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090370278 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121375246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147549488 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121950964 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121916769 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111964157 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100107536 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122192907 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129298059 seconds)
  done (took 7.76250355 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107548164 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115952303 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118736983 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10063868 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083174285 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110146748 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081658889 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103456083 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113513952 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094491637 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11854027 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108429628 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090654636 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118824164 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110454315 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112674627 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088190511 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110021779 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114711103 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108478707 seconds)
  done (took 3.001712595 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093670106 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125144377 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083929941 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11334958 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109292526 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09054968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108147073 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107278971 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085600536 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108803881 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095004434 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117662566 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10641927 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090075181 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117618549 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112384486 seconds)
  done (took 2.561623917 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096126753 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118338327 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121038193 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083289534 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105366205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079789427 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107102047 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101285944 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080859871 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124056348 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083874373 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109749869 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104899407 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082858368 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102197458 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086774204 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102714519 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081785034 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106351739 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119792089 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095793643 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10495062 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105595431 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087267679 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106510521 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090221348 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107124848 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103455046 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083617371 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106093175 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084118391 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114346878 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101905763 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08398614 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103239606 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082254431 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106035158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084081322 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109847762 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105283378 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083598946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105244604 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084127002 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107966643 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08006206 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10663288 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079054014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112880716 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10375088 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084853135 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106927577 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085698346 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108219701 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116720547 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087705837 seconds)
  done (took 6.314506452 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098790828 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109704537 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080228042 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104744533 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086634206 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109002677 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108778887 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087923278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108758221 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082955295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108321954 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088601861 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10877368 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108877585 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087968551 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110349685 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08000268 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107763197 seconds)
  done (took 2.679907556 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091598128 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105859295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092552106 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106932522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083564311 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109501126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079421896 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106082952 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103117633 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085631808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105945141 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087224169 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104822193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086743705 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107561941 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083781419 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108470382 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103381438 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085585199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101628095 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087364178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104133206 seconds)
  done (took 3.0358431 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118268745 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126912735 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092251547 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233252024 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102990636 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134058296 seconds)
  done (took 1.713736501 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109673309 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122391285 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106204885 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106539508 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11644242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085559948 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108392965 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109377158 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118557857 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101482438 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109080011 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119455604 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118173758 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095911239 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1149081 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115572269 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10781142 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088044142 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106926137 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128520057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087668303 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119354828 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108661105 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08588073 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109995331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118307794 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119559371 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122189437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08718142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118778201 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114506097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086886219 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118987455 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122818026 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109253049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098495725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109614654 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129478151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11362508 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09658887 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110165339 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114376046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096913717 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114681159 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119125836 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107145207 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093404464 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108999657 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107710252 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135065839 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093192724 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11901021 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115892868 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118690707 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096288504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156391115 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102467525 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118768402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116198505 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123311918 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117777388 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09386731 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118372089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123678114 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11540753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11722715 seconds)
  done (took 8.231241388 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102411999 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127098854 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108808739 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12327558 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096441563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109804015 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107581512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087079649 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109213541 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106734198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152610702 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087708629 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119024229 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118812052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085930315 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110711931 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109595074 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118383685 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086695762 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135440464 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109246771 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11778113 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117789892 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097510122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123434758 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116406451 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107402206 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087886031 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109431197 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10819961 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093317696 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109759169 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11858947 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086145558 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119055461 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109250554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086596289 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115127128 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109221397 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114452294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096733596 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12929274 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109229551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108802069 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100561309 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109673769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109078671 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087211727 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109571546 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107161736 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102152337 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123431995 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124079504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118253988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10946393 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087607571 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10911764 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109021063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088844249 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117094247 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118256995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086377253 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136652353 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110678207 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10933417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118299517 seconds)
  done (took 8.108431442 seconds)
done (took 158.186023923 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.220230163 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230177127 seconds)
  done (took 1.362179781 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098433591 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137001502 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095389999 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170213885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10672043 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119314362 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138394928 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097328843 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107709469 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08433413 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107557194 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086362691 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172754037 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083732455 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108094316 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107790425 seconds)
  done (took 2.736289937 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201069383 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255910937 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100870709 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106400455 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088060865 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111476994 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105446952 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091051384 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110288537 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085287539 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109694342 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08549126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106630623 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085428594 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112048518 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086690587 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10710737 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087422154 seconds)
  done (took 2.949747822 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112510858 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14991734 seconds)
  done (took 1.186241565 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118497139 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181196466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319105555 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155692216 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105297713 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127444519 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156784423 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131825204 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196426667 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123569568 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122767079 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097282889 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140547723 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115794591 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09331038 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119435498 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142569456 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092416936 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116967122 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116258903 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115463322 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107189696 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115725621 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093731127 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180479192 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121259634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084917183 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107413352 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116654941 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094555262 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114869444 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125339696 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096838119 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179533022 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100867617 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176715303 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096249458 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112766377 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114658268 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091374249 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119704805 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117533908 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102977201 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119273441 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083330322 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119888929 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106284729 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085492978 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115000529 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096550828 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115680691 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113856925 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155263585 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118551617 seconds)
  done (took 7.608161654 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795087167 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155440883 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088974733 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885781095 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134767308 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102993236 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.778854415 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111208362 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255093012 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756207404 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132798472 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119115275 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206296176 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258858982 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.954258416 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289682456 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.688658565 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101406587 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150343427 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153123338 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118767422 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135661669 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108513938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425307121 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11720455 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111803891 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096031234 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118757149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159005413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124750027 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113707392 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177270401 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247794814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20328478 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09317414 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111951497 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111169385 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169365734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26503803 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192141574 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17852006 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109129559 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110808905 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099757297 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132649746 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107548261 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163373952 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172342789 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168684573 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114774478 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11917872 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095847982 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12033842 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162919621 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121350189 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318733852 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309525564 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088522778 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120760842 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125520705 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261340947 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10139282 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225213135 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139056708 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209932283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089160004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797469667 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168019156 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111223955 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094168564 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119945507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115166063 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09740539 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166180938 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391567491 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124061065 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114421511 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088331103 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226116554 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123688042 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089174068 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159702931 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117336626 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12058242 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101866608 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121154624 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167679659 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251263123 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09932995 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119759075 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116462124 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.100808333 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116880898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210451599 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218899403 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.15990519 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.229759012 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098143587 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185091577 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169727383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119323418 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172307697 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119997634 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100814764 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12261726 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215248568 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144490753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123936404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092476906 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119257392 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148016884 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127489575 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095388638 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191825165 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456949942 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166586187 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109048584 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127373586 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09618545 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182961517 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094586244 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258117193 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122163251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168091412 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11970926 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086559562 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120930051 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16163885 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122234514 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120089323 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09958089 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119534008 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233880549 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216246817 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121050882 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219806891 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182194464 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118413466 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169162484 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121652638 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165886675 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12025428 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120719185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095255227 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.793613204 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122668278 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097773859 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117126902 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187731822 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110131253 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10303245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124448868 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085554348 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773380306 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127495365 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120683922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101311747 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117401463 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119795452 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094877678 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116195225 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159832077 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228009174 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120013983 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117749865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103016783 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158639396 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117560689 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125818954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124059764 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102713462 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12246543 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115733598 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101275884 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192154268 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161858348 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219454937 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566745516 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112200026 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124832005 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226715632 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089948905 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287461505 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118754832 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201891338 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186147767 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09868921 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306498356 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184410202 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186796702 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106508793 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193811979 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087783008 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11871276 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163802502 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111992895 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094840174 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182968023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103439309 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124178178 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959450394 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089395347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.244625634 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08778287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168499783 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118069145 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119505089 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293561101 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089863267 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1278878 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164734973 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115438623 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124333258 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.715973083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125707582 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099513491 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11874644 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222184974 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162983247 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120122427 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11864133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096029805 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188636059 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205836994 seconds)
  done (took 43.860731826 seconds)
done (took 60.617895542 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277166351 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215636462 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264726552 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170240496 seconds)
  done (took 1.940577884 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172529298 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150804236 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.143772566 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08614169 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151126191 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08378797 seconds)
  done (took 1.731583231 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360401112 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275375973 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242236972 seconds)
  done (took 1.828954316 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.318784005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248081816 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475690953 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32742926 seconds)
  done (took 2.417345245 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210457044 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133195186 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111728769 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104331851 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198497343 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247124548 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142391411 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202551256 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098709444 seconds)
  done (took 2.441995273 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197103276 seconds)
done (took 11.507685139 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.261813616 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.262745735 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.204642836 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.180462924 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.16186243 seconds)
    (6/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.125855734 seconds)
    (7/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.243231902 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12586827 seconds)
    (9/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103966513 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123422456 seconds)
    (11/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.093232543 seconds)
    (12/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.218544198 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125551982 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093600515 seconds)
    (15/286) benchmarking ("sort", Float32, true)...
    done (took 0.221437685 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.243764071 seconds)
    (17/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.183798177 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.192215491 seconds)
    (19/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.192580301 seconds)
    (20/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.246371358 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.225922047 seconds)
    (22/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.18672452 seconds)
    (23/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120753859 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149814678 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.235446488 seconds)
    (26/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117256329 seconds)
    (27/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092870251 seconds)
    (28/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181478412 seconds)
    (29/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207949089 seconds)
    (30/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.194427773 seconds)
    (31/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099512727 seconds)
    (32/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174752015 seconds)
    (33/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.237296556 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141761212 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.194228373 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.215617913 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.160036508 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119305538 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.1119389 seconds)
    (40/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105570568 seconds)
    (41/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09024628 seconds)
    (42/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066727817 seconds)
    (43/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143114291 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101697676 seconds)
    (45/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116668435 seconds)
    (46/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101211077 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163004741 seconds)
    (48/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.235238946 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126210492 seconds)
    (50/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.165056617 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118261745 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084091579 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134195526 seconds)
    (54/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.249952455 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.24851271 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11369711 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111803849 seconds)
    (58/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09338357 seconds)
    (59/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.09434213 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113056599 seconds)
    (61/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219730326 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137312582 seconds)
    (63/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.118273662 seconds)
    (64/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.122727042 seconds)
    (65/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.154773166 seconds)
    (66/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15839356 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.133706244 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.189498357 seconds)
    (69/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089496179 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111475347 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166129048 seconds)
    (72/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085392918 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.19780213 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.138096204 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138516211 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086743247 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.139906973 seconds)
    (78/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.175011638 seconds)
    (79/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067845986 seconds)
    (80/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118731272 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086790792 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109438453 seconds)
    (83/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096090692 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.11000659 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097608324 seconds)
    (86/286) benchmarking ("sort", BigInt, true)...
    done (took 0.216735661 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067044412 seconds)
    (88/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11163181 seconds)
    (89/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.065965233 seconds)
    (90/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090790334 seconds)
    (91/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067153088 seconds)
    (92/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065425197 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.137637702 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118578455 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.070286688 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066544498 seconds)
    (97/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121766593 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19144036 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086082538 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11679532 seconds)
    (101/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066964442 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 0.222942579 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065172192 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092393042 seconds)
    (105/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097113751 seconds)
    (106/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139580339 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065072977 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.091287778 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06749372 seconds)
    (110/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126241181 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066629042 seconds)
    (112/286) benchmarking ("sort", Float64, false)...
    done (took 0.173058363 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093356551 seconds)
    (114/286) benchmarking ("sort", Int8, true)...
    done (took 0.212527666 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.122607106 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121734707 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087334779 seconds)
    (118/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110825092 seconds)
    (119/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.096388427 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111451196 seconds)
    (121/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094263559 seconds)
    (122/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11855942 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.19220416 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093515296 seconds)
    (125/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.155644019 seconds)
    (126/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.17497628 seconds)
    (127/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066294892 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117244417 seconds)
    (129/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087667375 seconds)
    (130/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09065876 seconds)
    (131/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076357654 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.165575857 seconds)
    (133/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.091223073 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116303066 seconds)
    (135/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.130299678 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118508042 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186989152 seconds)
    (138/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092784612 seconds)
    (139/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.090428989 seconds)
    (140/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159189094 seconds)
    (141/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137588442 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117370628 seconds)
    (143/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.133139354 seconds)
    (144/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174049687 seconds)
    (145/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.118198295 seconds)
    (146/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.123582354 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108461922 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095135121 seconds)
    (149/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.215211291 seconds)
    (150/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067427031 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111046568 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100722421 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119887578 seconds)
    (154/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.075465977 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.110056978 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091624739 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135339918 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138678383 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106990156 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11089915 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093168703 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181483204 seconds)
    (163/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136292694 seconds)
    (164/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08903597 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126337482 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169140987 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110346975 seconds)
    (168/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137730877 seconds)
    (169/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143480353 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086670065 seconds)
    (171/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091324959 seconds)
    (172/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086112041 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120168335 seconds)
    (174/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088226336 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066353329 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112463716 seconds)
    (177/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067640586 seconds)
    (178/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159945212 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085673627 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111132988 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087073483 seconds)
    (182/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.343020579 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.116422504 seconds)
    (184/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098292998 seconds)
    (185/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116685289 seconds)
    (186/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.117959969 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118918719 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075818018 seconds)
    (189/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108649892 seconds)
    (190/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092744534 seconds)
    (191/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117673839 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068621486 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065286759 seconds)
    (194/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.093821671 seconds)
    (195/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086619031 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 0.212492492 seconds)
    (197/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.153691132 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084673618 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12478024 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08421769 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126499042 seconds)
    (202/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112481878 seconds)
    (203/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.095908641 seconds)
    (204/286) benchmarking ("sort", Float32, false)...
    done (took 0.173710092 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.139031445 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088123096 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165038929 seconds)
    (208/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067628516 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136300572 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13575573 seconds)
    (211/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067126363 seconds)
    (212/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118715263 seconds)
    (213/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162213452 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119085702 seconds)
    (215/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066234642 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.089808588 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067538104 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085781324 seconds)
    (219/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117378979 seconds)
    (220/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066160584 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109841214 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085999939 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115392401 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086296094 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110098001 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08895701 seconds)
    (227/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092137011 seconds)
    (228/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075814001 seconds)
    (229/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113847138 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06714902 seconds)
    (231/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088199413 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091191883 seconds)
    (233/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094147894 seconds)
    (234/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117250501 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108933634 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091949615 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066735969 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112651755 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085700545 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115046553 seconds)
    (241/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066714363 seconds)
    (242/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146444226 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.158082246 seconds)
    (244/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.100200591 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093492355 seconds)
    (246/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116234895 seconds)
    (247/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068692922 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119064544 seconds)
    (249/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068111069 seconds)
    (250/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095574042 seconds)
    (251/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112599442 seconds)
    (252/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.153782517 seconds)
    (253/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088757237 seconds)
    (254/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076264461 seconds)
    (255/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183411042 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090272717 seconds)
    (257/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069177177 seconds)
    (258/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136389345 seconds)
    (259/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070252272 seconds)
    (260/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.077267468 seconds)
    (261/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092183341 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094918178 seconds)
    (263/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.100412522 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08551205 seconds)
    (265/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066750048 seconds)
    (266/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154881281 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.083564806 seconds)
    (268/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.100871424 seconds)
    (269/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08645389 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.091200683 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094720007 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091920283 seconds)
    (273/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087481284 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115362903 seconds)
    (275/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067869369 seconds)
    (276/286) benchmarking ("sort", Int8, false)...
    done (took 0.188389654 seconds)
    (277/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.065876387 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113160725 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066490734 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117524087 seconds)
    (281/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.137047187 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116999687 seconds)
    (283/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067620214 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110763031 seconds)
    (285/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066294135 seconds)
    (286/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090129149 seconds)
  done (took 36.142719934 seconds)
done (took 37.097491857 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101701945 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147788228 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094972691 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136796519 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123864953 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090969079 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119255782 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096395817 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125575302 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12477986 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097053419 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093739001 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097742959 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120624661 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094605396 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140365124 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124373608 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093232797 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119167813 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085115765 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120274272 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085322293 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113269997 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069345966 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122083341 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092548866 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117183298 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119396843 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088012022 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110782718 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090113478 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117983364 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086058988 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124920238 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092823363 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119357866 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096532444 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121585175 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086945821 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112357753 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117679741 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087614177 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11711575 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094920819 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116119017 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092089692 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11965275 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098371304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140018629 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11470949 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095680562 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120622086 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095943854 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118056154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089091376 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120006691 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.089737704 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140206319 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11938237 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091891887 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119027777 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094664605 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116787988 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094404187 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119976796 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119955953 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098163816 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115693115 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096883793 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117227516 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085817366 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11913969 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089491524 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111127987 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095620959 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122341148 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084673245 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117294959 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.091997281 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.116939573 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109814875 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089831257 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111353473 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093293788 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113422407 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070050439 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.0896792 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117381498 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085003218 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121039326 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116532156 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094019103 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112297986 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098620067 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110286445 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091647749 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111054244 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086202608 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113002426 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090531289 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111722573 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089205269 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120332992 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0877324 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118355984 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098155868 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112326882 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116254597 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086635865 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109642214 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101508886 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120957339 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086054583 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116304071 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085471579 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119275518 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.084503021 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111002004 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085984618 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112402476 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091859613 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112629893 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088223336 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119349089 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123377252 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087711266 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11354442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090600614 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.10980569 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092270275 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111036327 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087273711 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112391594 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07805725 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112712506 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087488324 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118479617 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089666898 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118597041 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08815421 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120440639 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091512988 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117174532 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091473925 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110344871 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073656297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116906554 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089021441 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112932492 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086742957 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112998726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086554905 seconds)
done (took 16.961167566 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088597603 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183550796 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151066301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141746163 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.105781473 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113193477 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121403585 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11800061 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11418232 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143023166 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109072729 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133036456 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147236844 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085914464 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112117545 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090473349 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113683274 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101433556 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145853466 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133781096 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162428143 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085777643 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146986135 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135960003 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119573014 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.11451634 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111895608 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09107445 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115155004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101667033 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133119274 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089658025 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113045795 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133740658 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103281439 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120487473 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086536702 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118900625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085603306 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112940922 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140141575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106826765 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117434771 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11723987 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091782442 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114676072 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088510444 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120737287 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097212851 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117137794 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125343403 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155072088 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09058863 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121296789 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085909072 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122842664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119994032 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089993316 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112132928 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090263131 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110647382 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091579057 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127040985 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140553905 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09181694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122332855 seconds)
  done (took 8.645863611 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105041948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138658385 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104793292 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131750072 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111168032 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087435985 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115420597 seconds)
  done (took 1.809918642 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08874725 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134341879 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111176514 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136856276 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132340953 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109316045 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124120184 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087849299 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132303504 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088220397 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135498205 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151844005 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088570055 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121717028 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137629705 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087980227 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137406604 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088078472 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117193225 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11055861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117850037 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134727857 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090379812 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113883179 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101825374 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114790874 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161833655 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092998234 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115214283 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091397672 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112016414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165165626 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101538622 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125793389 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112478783 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104358645 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128160678 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086631342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130044353 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109834155 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128747984 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088299373 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116081176 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085639088 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118118431 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123258311 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090749155 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114214634 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091145068 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134150347 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088135075 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126953221 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088329062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118522394 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08824237 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120696932 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122438011 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090246357 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132940718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08991722 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130938641 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104139513 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129496027 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130094912 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091093752 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127758246 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101898339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117819505 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089104169 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118279719 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129286805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087071253 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115172162 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098889298 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115568376 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111217776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139113483 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08948969 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124997116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113377966 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089567191 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113742934 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111400734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120742876 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08872178 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119223589 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090637942 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113482845 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087061393 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117909602 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.085328459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116192619 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091340875 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115062661 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115909628 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106234567 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11539372 seconds)
  done (took 11.872082272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091501347 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114097583 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093850301 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114041873 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090718808 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115759457 seconds)
  done (took 1.644199408 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.113404255 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118103883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102294511 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12183471 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155509949 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102465013 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130659486 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123611383 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106466274 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128060318 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128859921 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104077399 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13558658 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120293437 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103194631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121079106 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102158839 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125400637 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127658615 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095499793 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137351955 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119909288 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095557591 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132442851 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116625822 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096461216 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12484491 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101616281 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128348867 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122817731 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096672815 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118489909 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094520351 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123969544 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129859128 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094501713 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121776583 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118829807 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100527277 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117444157 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103536644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123413755 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126299652 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093780005 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124253858 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119755136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094168217 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125431629 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.101955259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119727151 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11806034 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094961557 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118469365 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092923318 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122520429 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123205434 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093861326 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130037903 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094068866 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.12288314 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117671589 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092818435 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124057739 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116813941 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104565454 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118932435 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094472263 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122339095 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121992658 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095751813 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119140464 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092921477 seconds)
  done (took 9.253588647 seconds)
done (took 34.234766008 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698770009 seconds)
  done (took 1.725720723 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826945069 seconds)
  done (took 1.854043427 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.62460767 seconds)
  done (took 18.679574574 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.504539982 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593316659 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.001725058 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179306964 seconds)
  done (took 3.306022736 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.972015559 seconds)
  done (took 2.018904695 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.284451671 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232461801 seconds)
  done (took 1.549071062 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.78880593 seconds)
  done (took 1.831688168 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.371764716 seconds)
  done (took 2.404901859 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330572241 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184730325 seconds)
  done (took 1.554106001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551766192 seconds)
  done (took 1.588634958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.028659367 seconds)
  done (took 8.074584727 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270121679 seconds)
  done (took 1.322250068 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302973646 seconds)
  done (took 1.347702841 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.636018042 seconds)
  done (took 4.681273301 seconds)
done (took 52.976186567 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099593561 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127078994 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101936915 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125148346 seconds)
  done (took 1.490525308 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101602158 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121552038 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099319309 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121452045 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125952428 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097241306 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122502138 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100316948 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121302067 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096583144 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121828657 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118717345 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098884927 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123462944 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092584098 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124990597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098216259 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122747225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124364369 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095485749 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118982955 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09727112 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126181769 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093796188 seconds)
  done (took 3.711968262 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100922254 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119023699 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097357787 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117806081 seconds)
  done (took 1.487794227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101004222 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14243199 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138560956 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099919996 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142178941 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136055085 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092017145 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117046766 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094676806 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125672684 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090559298 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149412672 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137609584 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098698024 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128175189 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087503486 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117953965 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137023481 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09964541 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127316206 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092556075 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125809699 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089797709 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14058608 seconds)
  done (took 3.860853024 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170047806 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128939483 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138767134 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093905536 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159782527 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140835777 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087854795 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140281785 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086535381 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131562494 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117324547 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132867227 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129416817 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086776239 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114233577 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087063335 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129155581 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128551339 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09021718 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128297656 seconds)
  done (took 3.477981112 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097873698 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11732031 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088426519 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116314413 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099100211 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121617489 seconds)
  done (took 1.695150388 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091255834 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11360102 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090447796 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114692332 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094703249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115078026 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088663068 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114567898 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089901923 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.116508795 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088963754 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114067536 seconds)
  done (took 2.287063376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501305629 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11922672 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118442331 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08987912 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121369786 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089923047 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129260064 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091796626 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140995894 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.086872142 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115547051 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089959267 seconds)
  done (took 2.74947519 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231864444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125679406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28553703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368441977 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156285824 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177514999 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282988542 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164142971 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224730947 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166792251 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20252841 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223641302 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152117352 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189732218 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138689725 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.11772631 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231581658 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24727325 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154100928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208478363 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227082813 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167837682 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181579324 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151946535 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139102137 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17238478 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093308677 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131689412 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234526449 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176483141 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214623894 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162060589 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145754462 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210699639 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252796848 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221678232 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283150111 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13762088 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148795351 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170128955 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266279372 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139674258 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202997056 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155468205 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132209384 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217115784 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168375425 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177375521 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152323267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139116974 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196459801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239868268 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192811056 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138348201 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305192683 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15121192 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200751284 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193880577 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252093057 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199532007 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185848987 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121145843 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18788327 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220818246 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184757151 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173754383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207154507 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120279426 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226305096 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187808011 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163577366 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220192107 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185263954 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141373822 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168207325 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171858596 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169870182 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256291902 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210055878 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094348161 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168396408 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14975345 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133176499 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19216119 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09802169 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238852662 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143400463 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134720334 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24180663 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159317336 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160617651 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200232201 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229515426 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147772167 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082565316 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154297489 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155887434 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191311932 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140563091 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158722985 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161847484 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130038648 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183001233 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124904261 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183700674 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118416991 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175851244 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181809165 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126643954 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159861221 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151248445 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125137333 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200649946 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198874078 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141957316 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104999003 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236665303 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176927358 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150506749 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177643105 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228725436 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117198149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148902347 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227580822 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215002057 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140991601 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227411114 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156795236 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107546379 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132727044 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180901766 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154395727 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162343211 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13397061 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182696561 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232962344 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09813477 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139207361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191698366 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134661815 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13193843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162999787 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147687445 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110751341 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151970127 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153374885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208414598 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179001401 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153829521 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165171692 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152105439 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254421689 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113598546 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152079359 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148946656 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120895598 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193108569 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198408094 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132213502 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230053686 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172750248 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203518193 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170087302 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135041002 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177516735 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129400696 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092115842 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222130606 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167796447 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161665972 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196479475 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227515689 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182804259 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182576908 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199001784 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175008661 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16488926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155942973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111299251 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160927489 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170388665 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125030342 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144169066 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133528201 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120122675 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143690593 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134340467 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194495707 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196653722 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189676802 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162202048 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149484396 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18174879 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128697744 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17377792 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177780529 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148602036 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197980421 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221173043 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185119115 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143749385 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199786552 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122305111 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097427148 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142841444 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169366176 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135458166 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13620327 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163684994 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18057417 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179290475 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175846301 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238364597 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173140219 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218321436 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095393025 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168633948 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185257844 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176015001 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.193874029 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144417769 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151003289 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17948601 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157821169 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254399992 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169313421 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175307669 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235088195 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123802256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132766357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152287606 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193085535 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154187891 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176923448 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147268465 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142154886 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162583855 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134264589 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161336747 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184158253 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162862402 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217368811 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148673602 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18623785 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126677172 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163684403 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159839819 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166123532 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081822862 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176507054 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233906077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149141655 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168481786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189446571 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131254662 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30788909 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244486226 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197749586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137457739 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15590525 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160588038 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163255647 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172628384 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17897377 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158731673 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188036667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160042269 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136528368 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113463 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149064399 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150892722 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13123922 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149135317 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176150821 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139012672 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186023329 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164280695 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159635173 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172539352 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150092204 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144237245 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123355076 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244222928 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183737082 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240655637 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15103803 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181484985 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205310467 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127104112 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13251525 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10480967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178084246 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138162486 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220293652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187829933 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234193329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18575251 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193789334 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14076974 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091058434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158423821 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17307559 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236471935 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154684014 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161846334 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23053911 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.119781822 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133018137 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178510642 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296474769 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148258158 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223483648 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080559471 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280962173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128870611 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104072155 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16508454 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238326814 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135758944 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165165878 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196431301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171422567 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165113193 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150258378 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191785319 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217210738 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231130181 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180392252 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13394234 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156029705 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176929806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191004442 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158153689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140670918 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229936243 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196510868 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196459493 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142611731 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170699331 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168702295 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158732606 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215531786 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107571834 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236926746 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106623028 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223456689 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153689207 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144438818 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176616988 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189126864 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144678611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188052349 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213252223 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107108056 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133842842 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170180122 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209406592 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157865879 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101126975 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180469007 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12694444 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192610401 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260011827 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136006851 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155100653 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147903521 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108038965 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154527564 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159649493 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142761212 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166334999 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204691221 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135788835 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191859943 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231705463 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171423937 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174402712 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145702221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693051626 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130781533 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195990282 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161420311 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233540917 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121236208 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200875109 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13079624 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196990804 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197078295 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161495279 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231881945 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191942415 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207428499 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104314955 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158105323 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163726827 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144775047 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151831159 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169328189 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159900696 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154767046 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178868015 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199465341 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107011622 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141556774 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198494479 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160742123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211400421 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179570777 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111037274 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174024517 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218052006 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133692152 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181089095 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236045627 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114379821 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152939462 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134868721 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158419753 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262877871 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096423347 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233798378 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186058211 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160511592 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169674845 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14688348 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223007374 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156723998 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187993269 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148460872 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159946056 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156803912 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109884756 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132014514 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156484244 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167869387 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150315201 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159629185 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141333103 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222250297 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095024169 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146015809 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293863974 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221927368 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214664449 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137609305 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136117326 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163537937 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151456235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177316867 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178903266 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137147738 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107064914 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138220373 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160006587 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112750001 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158371172 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197010892 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166213182 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238501346 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135812572 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251813944 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14104221 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15740605 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087727218 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133617875 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15110874 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147426734 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161120445 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192751833 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268457459 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14957901 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13336438 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122073558 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127963713 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136764025 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166051731 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165668514 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179576874 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146427361 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081020428 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15738377 seconds)
  done (took 83.524766118 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16343986 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13510567 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149566173 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204568122 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178678525 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269715299 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212339839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255171965 seconds)
  done (took 2.714678316 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093670903 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147731975 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157517963 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134636033 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091621359 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119914959 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.348293462 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132713674 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119815821 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121014523 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175183378 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093894869 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556376499 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090988512 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12005162 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109676063 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092409599 seconds)
  done (took 3.846808288 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476022784 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.741346761 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.516828617 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097068233 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.291727484 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112773416 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.929627794 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201711995 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116755899 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.49521384 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776599998 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.169693107 seconds)
  done (took 19.07533844 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115539656 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136845488 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122193432 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153210555 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141362474 seconds)
  done (took 1.824300249 seconds)
done (took 132.785171603 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104656686 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407435025 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071095004 seconds)
  done (took 1.665013565 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108383981 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137425209 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107918373 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136858169 seconds)
  done (took 1.648711857 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098064201 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126982655 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108232894 seconds)
  done (took 1.485535698 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.324354384 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19001455 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.170832443 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107131555 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129154121 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103434904 seconds)
  done (took 1.495470517 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098151392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128174833 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098114666 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13075096 seconds)
  done (took 1.612836626 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09474086 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071325285 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100804259 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074673408 seconds)
  done (took 1.49288831 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114284521 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13235849 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102464988 seconds)
  done (took 1.504547753 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13119897 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139575906 seconds)
  done (took 1.43012583 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105746354 seconds)
  done (took 1.260286568 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117421039 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169001656 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190784463 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165834876 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.23686135 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166424357 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141353475 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113007762 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13215873 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144566646 seconds)
  done (took 2.736628608 seconds)
done (took 18.274192272 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103070601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514999236 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412571793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116884863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723095697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379395143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055913402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146724757 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165201636 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093183479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139986962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671561596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.047075037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.470736058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.002942922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378009847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675427867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122023129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121680545 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093861762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.039229666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091552795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121945689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091458085 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705935364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425727502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095159288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377821906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09204382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127048093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383511575 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123273109 seconds)
  done (took 17.256826717 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095381552 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17361058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097284187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138576257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123153717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093514243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12432392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092954743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179963581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123343058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109787943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122415658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125210952 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094894961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142555982 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091506352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125613724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091650817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122170511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120447428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111970685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121192251 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093600033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121925506 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093874185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136399097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093850878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122538153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119835643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099306716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127909721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094367306 seconds)
  done (took 4.882689993 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143168427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183515901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129144995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126703266 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169606452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124306599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198687412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117749422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181972351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123589764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138992317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094256073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157058275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094575343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142941002 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122012174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095951366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123332328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092614898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123307277 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139211769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093025742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122181175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093199444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122908118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107131982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124713491 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120823178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093672338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127405262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099491013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124197527 seconds)
  done (took 5.220387211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099731646 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126388505 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109677184 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138373213 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095041215 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126001528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096176583 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125559529 seconds)
  done (took 2.081391361 seconds)
done (took 30.596774727 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11391867 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126405643 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106877342 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134911588 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102497576 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131656771 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090330847 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134671007 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132524622 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102165252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137602027 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092435365 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122669178 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091407201 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135943059 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097062253 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132823585 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100865977 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134246896 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131225993 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094685361 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133081506 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103104048 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133231547 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102945775 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134048585 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137700733 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099307712 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122307137 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095293223 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124924071 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104225123 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124874294 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104860949 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12716754 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096440454 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123884443 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093606912 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133542253 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132358016 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100913204 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131874377 seconds)
  done (took 6.059675675 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109286034 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139770551 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104754708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080203582 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11781903 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080326637 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138743599 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078921189 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109938944 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107814182 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073431034 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107666082 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078268293 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101724828 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078632932 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076183722 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108455903 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076020951 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076043199 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106369133 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080211353 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071811523 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108885157 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078039766 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073716855 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110832815 seconds)
  done (took 3.639662152 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102438386 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134838842 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113786755 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183464928 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160302534 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098559098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132825999 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138530132 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108935231 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119550575 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096717245 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149472504 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109237559 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129814185 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09052659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137819902 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135329059 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094475838 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128595359 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112315861 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13891248 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101302265 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143562233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131789402 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092612275 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123167826 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096675059 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134929286 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097506462 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131558785 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095566657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126092489 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123377198 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105313956 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125619415 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093898973 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141977158 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102162376 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132529634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092150023 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12644006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121597109 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114427299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169442222 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091107002 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130408366 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097871902 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133104633 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121474428 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110602622 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132060359 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091784681 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125011449 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090598008 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121742884 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105805252 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124189196 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093829965 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131892598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123565837 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105633452 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124231766 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108170725 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121983291 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099009456 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122479418 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091393743 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121213764 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142670315 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094227358 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163371038 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093126576 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124384554 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101146231 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131070358 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127879521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094372476 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13764472 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102970306 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126046335 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101142573 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126895133 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094046357 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141738118 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094757252 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124640486 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12133258 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100438045 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123275094 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094344189 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136254355 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091645693 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125600821 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109151566 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122245977 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092504593 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131592368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126045368 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091979792 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13479542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097245918 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123395587 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10132955 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122289186 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094027027 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132763201 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126082317 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091552958 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126019038 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098284333 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122953769 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092804193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125472312 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092993297 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13275499 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097948879 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127449843 seconds)
  done (took 14.865293445 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226780158 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214374437 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.245212341 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261092763 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135720561 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113258477 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.241323089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124601147 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123685061 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158879048 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174186098 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180274148 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169386249 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178901791 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171109786 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093312501 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142308877 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163351205 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21360638 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258471577 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144424615 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.09902759 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161341047 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159264717 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13762208 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13181005 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110155903 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136713762 seconds)
  done (took 5.857462992 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111046931 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155119371 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097094554 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146649779 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148547045 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091719143 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128728587 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09351854 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136397143 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135441304 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092854991 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129353549 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098815413 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133386956 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122005738 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103456775 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132264205 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093610328 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125937706 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097427889 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129634323 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101090667 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127506734 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090681598 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132836057 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121194553 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086333039 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142491371 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091416171 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145704679 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120601616 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098725034 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133966806 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092768466 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122470698 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094270967 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125844775 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09463936 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124761137 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091155511 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122641484 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077539683 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122399635 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105763159 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130181986 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079504296 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129886725 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.127172822 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094628906 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119897772 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097341529 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124533669 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096938633 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129916485 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098698788 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123271192 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097112984 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115930164 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10086743 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124564021 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085262711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120314762 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099141016 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11762498 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101886569 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129170814 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091610541 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125442343 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09729035 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129375141 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095477631 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127386204 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090932314 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126582835 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094434165 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128546803 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095668253 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122898345 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091748731 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124632496 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074621864 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123692348 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073887607 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126071563 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091531409 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122344816 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094643128 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130351425 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136527948 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095551279 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132345434 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093989108 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123120674 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096212597 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113177492 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096029748 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13890313 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139952727 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093823399 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12074652 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106945951 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125888527 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09215464 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105785542 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101285712 seconds)
  done (took 12.997598222 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129816969 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154640371 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093985963 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144022073 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155562262 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156353562 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101524267 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129986201 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095900214 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142289037 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094723283 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132280882 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097340799 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137961211 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157182445 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103407836 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126026699 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107657337 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131996584 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16953956 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111070566 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14282895 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107466633 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126015749 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097860882 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141488631 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161147864 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106518006 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137891746 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141242728 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107938965 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161293167 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111488525 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129307777 seconds)
  done (took 5.547328544 seconds)
done (took 50.129809711 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.276420351 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.503624527 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.267791758 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.301614001 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.297446677 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.298084097 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.274483207 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.281968435 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.448256475 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.266280413 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.52725809 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.985495058 seconds)
done (took 59.915484517 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.327557375 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.408654076 seconds)
    (2/2) benchmarking "String"...
    done (took 1.53401815 seconds)
  done (took 4.12976993 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.726129703 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.244692603 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.532581264 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.274950656 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.270255322 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.566941438 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.089404445 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.696745061 seconds)
  done (took 28.860894324 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.278620241 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.358317598 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.298240205 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.278612437 seconds)
  done (took 6.405836373 seconds)
done (took 49.642725874 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.255373334 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.281177455 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.282621138 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.246220035 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.390341465 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.300959078 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.64559361 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.325601847 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.290056516 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.256013674 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.302495724 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.267185914 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.278897577 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.631757704 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.274336605 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.280412766 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.308069223 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.821218065 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.689440453 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.274535767 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.29380219 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.29977946 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.282528424 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.275809114 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.295933937 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.269868173 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.288905564 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.270946336 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.069443132 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.276821431 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.295003086 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.807948082 seconds)
  done (took 193.316268061 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.273286212 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.327349481 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.473553877 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.33663659 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.805223571 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.471098801 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.40586429 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.9065942 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.298069684 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.274959473 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.594045104 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.272013216 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.663158262 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242653816 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.305444441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.273657865 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.607502247 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.667456619 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.317919423 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.407804631 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.270543801 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.467331714 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.394910535 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.558741539 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.319817762 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.337839523 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.314191075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.282258913 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.458749655 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.537119514 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.303487542 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.310326777 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.924995566 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.134211048 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.284387281 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.289399239 seconds)
  done (took 153.304850079 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.342448933 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.272213563 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.273030208 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27403649 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30554858 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.276128402 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88998596 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890636836 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.781641921 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.623983398 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.764854192 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.579361134 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.272469468 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.272034323 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368590727 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.286585979 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.274886947 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.28985653 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.316677272 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.277421482 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273444099 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892408502 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.294224246 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.29835065 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.475185632 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.292685396 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.309108947 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.669801422 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274601126 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306593238 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.617104363 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.326729317 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27243 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.678130644 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.389024327 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39068616 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27362095 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310144942 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.277648956 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.560107485 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272092737 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.275732658 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.278840675 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959070598 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.275384676 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893561046 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.280054262 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.259330673 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.272377294 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.276504866 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.000525315 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.97039258 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.293402754 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.273362425 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.279441932 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.277391402 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275939582 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.310404842 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.989373118 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.37437329 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294196761 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.277566005 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307707591 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.276440038 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.279640293 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.290689517 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.559370741 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.332181964 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.488931612 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.892487504 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282991559 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.376268209 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399331148 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.278218199 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.279741519 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278305665 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.275921131 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.388152593 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.276827626 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.278657242 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.721517476 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.277870519 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.457590228 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.295501049 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.76583225 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.377103483 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.276751833 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.71500298 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.281661373 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.281093067 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064942194 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37610331 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.276566142 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.278484282 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.279225384 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.725306227 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885013803 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.57930612 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.285094617 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.013244252 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.279018795 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.27953787 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.742945957 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.85893229 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.966671744 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.27826216 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389610822 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.460325382 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.295363013 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.278294536 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.757541554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.282451052 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.336815318 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.274858532 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.679999278 seconds)
  done (took 376.245113266 seconds)
done (took 725.397224019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.946443081 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.938704094 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.064462893 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.936847583 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.890091162 seconds)
  done (took 10.967999126 seconds)
done (took 12.16846327 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.474235942 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475960814 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342382138 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.480723516 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304132136 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.506181798 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.464363946 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.299854329 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.381816676 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.368072434 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.384436394 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339312544 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307048439 seconds)
  done (took 19.328988387 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606893022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.605450138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.342687204 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.606822086 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319736342 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.657180371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.485200339 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.495928978 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.496385305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311523191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284522867 seconds)
  done (took 17.414069029 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.602960606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.607451539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340332316 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611108162 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.315579882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604805688 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482477374 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505433534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.49888938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307108869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281556802 seconds)
  done (took 17.353205265 seconds)
done (took 55.298167378 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.275944331 seconds)
  done (took 2.470707653 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.31973833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.480297357 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.299205263 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.281005129 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.277828449 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.27765718 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.281753407 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.278686936 seconds)
  done (took 11.690361193 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.276799428 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.274219114 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.27389994 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.276200253 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.273654916 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.276614216 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.273805681 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.277148138 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.275477672 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.274791084 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.274193528 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.274483234 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.276656874 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.276182686 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.274695409 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.276557671 seconds)
  done (took 21.598702511 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.27593178 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.274382791 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.273801871 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.27515909 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27398527 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.275471917 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.275415891 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.274852877 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.2747192 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.274531351 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.275850547 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.275532251 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.276297791 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.275688674 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.274534212 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.27534034 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.274000772 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.274882142 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.279411505 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.2755657 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.275139749 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.27534784 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.276221912 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.27471405 seconds)
  done (took 31.801860496 seconds)
done (took 68.755087071 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.440946227 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.019082678 seconds)
  done (took 9.655038723 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276559686 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.276988804 seconds)
  done (took 3.750512733 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.277975634 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.276896584 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.278282946 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.278294297 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.277831811 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.277767234 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.277369639 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.278116587 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.277181216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.278341319 seconds)
  done (took 13.973033364 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.277937958 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.278125984 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.275590696 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.277912569 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.277244582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.275636516 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.277823008 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.279012276 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.278004835 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.276037925 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.278276971 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.276139776 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.2781092 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.276084288 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.277872748 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.275159182 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.276214935 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.275402535 seconds)
  done (took 24.181417274 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.27914476 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.278868888 seconds)
  done (took 3.754111026 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.276360529 seconds)
    (2/7) benchmarking "second"...
    done (took 1.276937617 seconds)
    (3/7) benchmarking "month"...
    done (took 1.276357886 seconds)
    (4/7) benchmarking "year"...
    done (took 1.276536461 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.275954302 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.27591058 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.276213238 seconds)
  done (took 10.129661271 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.27959072 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.451952745 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.537655196 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.911455377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.2807839 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.282787414 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.124672198 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.282950101 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.283884369 seconds)
  done (took 14.631166385 seconds)
done (took 81.269522937 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.290666517 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.290095247 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.486787022 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.289508488 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.291391926 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.571018425 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.300509923 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.40425465 seconds)
done (took 38.121857821 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.276202599 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.265807234 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.114760949 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.265271789 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.345986192 seconds)
  done (took 19.190771971 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.338507761 seconds)
    (2/2) benchmarking "read"...
    done (took 1.619550482 seconds)
  done (took 5.156965068 seconds)
done (took 31.822683908 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281554463 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.281769484 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.279350451 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.282962226 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.27824846 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.278948513 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.278414606 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.282913496 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.281465729 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.281890071 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.282879762 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.281744713 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281413241 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279547109 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280722957 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282486864 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.278943213 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.280812251 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280668075 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279679004 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282107532 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.280199755 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.281647774 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.281685843 seconds)
  done (took 31.940711064 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.283970241 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.282173185 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.282224292 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.282344314 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.280603101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.284206262 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.282277655 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.280762452 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.282306464 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.281540441 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280419242 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.280896521 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.28271587 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.280912974 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28359406 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.280738213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.283156337 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279987501 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283638336 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.281106526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.282539504 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280760328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.280857755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28256496 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.281462354 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28344483 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.284209689 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.282156684 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284092527 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.282401736 seconds)
  done (took 39.663768468 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.289809215 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.292447439 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.28494606 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.283298035 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.283975458 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.283061777 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.284339806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.282825736 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.28326572 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.284594737 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.282819489 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.281931076 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.282006452 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.283768631 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.282013019 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.282725234 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.285575705 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.284141757 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.284267846 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.283118498 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.283822371 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.283546428 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.284487515 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.284167534 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.285264505 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.283264181 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.284144474 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.285740308 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.284446692 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.284177236 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.284794962 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.285760966 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.285030519 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283554409 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.285141011 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.284170021 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.28939951 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.293690178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.284568979 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.284818885 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.28593751 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.285219948 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.285164844 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.286162806 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.286180609 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.286050376 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.285682938 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.286182105 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.286159595 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.285431655 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.284731519 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.285495981 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.28476024 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.285833912 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.28518842 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.286651102 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.285976291 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.28413416 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.284787919 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.285920146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.284823451 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.286514748 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.287795919 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.286332761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.286905798 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.286659372 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.287076446 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.285393242 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.287376479 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.285489282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.286522233 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.288051938 seconds)
  done (took 93.742391639 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.28721044 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284630858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.284792482 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.283991181 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285293699 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.287573969 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283720866 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287869809 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285240275 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287012071 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287265498 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2858879 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285396117 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287576016 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287625005 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285049504 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28899695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28456176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.28724291 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.288120754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289364298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.285427359 seconds)
  done (took 29.504114297 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287915776 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291669837 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.286641839 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288862023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.288154368 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290342045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289650398 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291112185 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287508323 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287522645 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286513968 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288940611 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285450035 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286661207 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286881155 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287826585 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288523606 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286895845 seconds)
  done (took 24.392600349 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.284806315 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.285484629 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.288426325 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.287150039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.286245769 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28857734 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285397149 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.28774241 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.288977078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.286735171 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.288790343 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287790417 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.28886147 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286199826 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288588846 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286682398 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.287521051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286790986 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289811111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285917312 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.285807622 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288230199 seconds)
  done (took 29.525386687 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288239187 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287601007 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286107932 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28702125 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285876426 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.289379539 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.28840195 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.287101122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.288988843 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.28757922 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286234481 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288503216 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.287673564 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286194229 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.287072563 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286837107 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288882022 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285473947 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289574329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285134789 seconds)
  done (took 26.953533996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290058558 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291216254 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28926383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287735138 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287224743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289970083 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289215905 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290528842 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289474711 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291981935 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290467288 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290808162 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29176347 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290219098 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290561575 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287936167 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289789736 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291332617 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291001039 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290374198 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29116458 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.292380024 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290714488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290279702 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291473017 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290525037 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290728911 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291370805 seconds)
  done (took 37.335342473 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.292176088 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291253846 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.289839871 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.289317089 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.287574435 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.289122782 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.290108883 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.289255369 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290713032 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289833793 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.293362381 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.291871227 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.292822299 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.291929635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292627465 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.292139066 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292599498 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.290292313 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290990997 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291096394 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.293480263 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293498071 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.292720742 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.289619942 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289495629 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.292754493 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290979873 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291652758 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293136641 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289751105 seconds)
  done (took 39.944325861 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.310712199 seconds)
    (2/2) benchmarking "in"...
    done (took 1.310426798 seconds)
  done (took 3.830382927 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.290902184 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294153766 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.294434933 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.291238371 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.292865438 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.293742007 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.294703737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291551476 seconds)
  done (took 11.553763378 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.293547556 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.293450971 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.29381735 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.294629178 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.292840331 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.293004143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.301922629 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.315320635 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.293937546 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.294505037 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.299788567 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.30100739 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.29612917 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291733493 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.291111739 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.295280587 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.29310592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.292181827 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.292753197 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.295228414 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293291717 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295222404 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.294964334 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.291245847 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.2948231 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.306025486 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.320132093 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.292662988 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29346423 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.2982634 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.291923608 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.290529704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.294523391 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.295436862 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.294447786 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.29686433 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302774992 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.312052632 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.299922787 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313628738 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.294214785 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.292741535 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.293323494 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295770417 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.294206707 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.293558073 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.292885093 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.291162539 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.291599983 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.29457284 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.298788605 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292290467 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.291892061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.296344113 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.293283863 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.300327133 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.313020252 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.292734837 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.300426064 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.30361473 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.324928185 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.316796065 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.29478413 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.292910209 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.302084183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.312563069 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300546484 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.311139077 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.291751726 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.29298378 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.30188651 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325324055 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.318967521 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.294837544 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294316166 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.295093094 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293804464 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292388354 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.302179156 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.316472563 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.296054045 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291620207 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302784576 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315021727 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.293313228 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.293823156 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.293272526 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.292487545 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.294012368 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302815438 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.312576482 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2938138 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.294313932 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.292651993 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.292947447 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.293945418 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.292606422 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292915878 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.290897078 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.292214518 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.294141977 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295327922 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.302061941 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295148277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.294054346 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.302168681 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.313402837 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29360248 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.300640697 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.29388116 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.294273589 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.297404505 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.296964949 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.289956661 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295576378 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.300080661 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.292364466 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.294298056 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.292663734 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.29504626 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302913524 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.313993047 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.293695353 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.292644671 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.296958857 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.303911148 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295037742 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.294870219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.294558812 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.294813401 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.292876767 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.295495758 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.294054414 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.293456183 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29416829 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293996451 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.292767543 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.294706501 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.293900782 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.295629881 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.29519449 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.29483087 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.295451899 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.29725815 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.295699149 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.297145602 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.300980165 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.312421965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.297582901 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.295348192 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.292955498 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.294866805 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.294565335 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.296549126 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.295157015 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29488823 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.295896787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.295711374 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295997088 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.29660635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.297385572 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.295841019 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300741134 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.296694271 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.300738826 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.295756394 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.294036561 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.295651751 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.298633289 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.296313599 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.298316819 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.296269885 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.300399289 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.304534144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.297249207 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.298013022 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.299216697 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297464973 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.295785072 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296991719 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.299038177 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.303604831 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.297290615 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.30314428 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.315561841 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2968222 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.299995637 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.300175533 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.297379738 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.298592255 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.298667223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.304330922 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310658713 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.320379364 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.300139513 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.303132213 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.29932578 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.301936879 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.302239524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.298009439 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.300387981 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300562551 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.298001362 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297051502 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.3005179 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.299146241 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.299603059 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.298586464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.299450467 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.300228343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300532023 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.298803515 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296442108 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.298534913 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.299403662 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.300461141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.298927608 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.297845006 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.297972042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.299415714 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.299323702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.298902196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.307240973 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.29822118 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.302086746 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.300120229 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.299100013 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.298807537 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.299785952 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303083346 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.296904967 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310699649 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.320621529 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.300091796 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306348286 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.320517496 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.298590645 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.302895784 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.300154574 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.296347408 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.304538395 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.309135591 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.301844351 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.301142079 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.302570766 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30269226 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.304165767 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.311118017 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.316701406 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.301518105 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.301713805 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.301288953 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.298839439 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.302100018 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.301151965 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.301050185 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.303262634 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.302912501 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.300956199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302810014 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.302300478 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.303379017 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.304259494 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.304724631 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.310854464 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.30931248 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.303656655 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.305237375 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.303307363 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.306455264 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.303967666 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.304011571 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.302162107 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314741822 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.325963161 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309169675 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.322243295 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.3038663 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.310264618 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.322773279 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.308581009 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302983832 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.304211834 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.303675975 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.303393205 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.300921832 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305171263 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.304988242 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304847342 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.305466113 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.307729547 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.304493296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.303897436 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.305923307 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.304554766 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.304168315 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.303582585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.304797698 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.306390293 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.306374818 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.303432609 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.304742839 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.31229301 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.323774801 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.305245357 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.302931074 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.303222289 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.304028472 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.304645216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.301972288 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.308253371 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.311610833 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.30830078 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.312076888 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.308121771 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315308799 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.306214536 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.311511556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.313726655 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.303625285 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.305752377 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.306662981 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.305146911 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.315215157 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.325225964 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.307298325 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.30863499 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307228002 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.307120485 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.307193686 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.30486307 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307441595 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.305841305 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316346958 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.325610634 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.30967313 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308302331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.303442631 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.307593869 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.306738491 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.305058339 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.308973418 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.306591347 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.309046055 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.308624572 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.306866741 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.308241401 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.307618853 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.308809696 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.305796656 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.307240328 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.315857694 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.32990683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.310568886 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.307374541 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.316474348 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326889388 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316369936 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.328903204 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.310230406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.308526399 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.309057225 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.311271159 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.309165873 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.309379214 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.307206192 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.310608004 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.311800095 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.308645279 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.311631052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.308439793 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.309660063 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.309444463 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31903878 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.329943329 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.311775915 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31529336 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.307011784 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.311223239 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.314299406 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.310127778 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.309031216 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.314528656 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320710416 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.316897706 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.309763528 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.309232461 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311016858 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310867803 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.310472842 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.311081502 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.311017408 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.309454614 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.309775017 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.311716786 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313127617 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.310501554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.310364736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312267808 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.311987817 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.322108742 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.329192343 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.311562255 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.310775582 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.31196047 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.310987196 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.311132387 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.310576541 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.310298736 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313288759 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312148361 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.317978822 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.31754364 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.314295308 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.309227762 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.313494406 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.311292423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.313562825 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311025067 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.312668212 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312611976 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.312632106 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.313018642 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.313611513 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.312399026 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.312525424 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.312128213 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313213201 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314475116 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.319510105 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.311621135 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.311079431 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.31401329 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313151101 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.312054812 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.312805465 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.320422239 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335489941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.323306758 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.321094215 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.315747757 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.312574537 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315303419 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.320113254 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.31290044 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.314285903 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.313912548 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.315680295 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.312879907 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.317968384 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314951215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.322640069 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.331376959 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.315005431 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323061109 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.334608869 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313815094 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.316529435 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318233432 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.314384974 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.314571841 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.315236392 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.31503256 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324784912 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.334642943 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.313194063 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316820663 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.315575745 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.3165228 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319254372 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317217144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.316944576 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.312211991 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.315100281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316079051 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316305106 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.312381394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.314658573 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.313460847 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.317621937 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32238653 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.31277396 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316342521 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.315560966 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.315574048 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316021777 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317030778 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.314160214 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.31446652 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.315034344 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.317688429 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.317515064 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.318353985 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.315074798 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.317605739 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.317305715 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317927566 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318945061 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.32583513 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.323894683 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.313547465 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.317166113 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.317308311 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.319198952 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316487275 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.315821237 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317356667 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.317942066 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.3181101 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.316637903 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.317707174 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.319308315 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33397205 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.337167035 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318336846 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.317070622 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.319539805 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.319739904 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.313579363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.316609892 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.321485311 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.320105599 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.324593545 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.319447401 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32538391 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338749622 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.320297295 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.32253801 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.321529449 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.324654932 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.319168002 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.31832506 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.31739181 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.322585524 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.335308102 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.318744972 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328959592 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347247429 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.339012688 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.318699261 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.320804747 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318834941 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.31847742 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.323582359 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.320046913 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.319901157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320358463 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.319336566 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.320764761 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324994588 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320713005 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.322183734 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.319908474 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.321801156 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.319916826 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.318719448 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.320363991 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.321869344 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.320472865 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.320740293 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.320354196 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.321580933 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331226517 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.346393819 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.321751533 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.320474449 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.318158351 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.325417196 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.323813372 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33108837 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.329061349 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.322239803 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.323197314 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.322712351 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323063666 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.320984634 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.321697194 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.320839725 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.322617813 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.320013663 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.334343858 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347639419 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.328366317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.32155504 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323946294 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.324601407 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320843718 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323988691 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323440047 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.321911881 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.325564434 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326149925 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.323422039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.322190381 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.325619484 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.33033459 seconds)
  done (took 780.925986631 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321186431 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322522171 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.324231322 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321739786 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321775922 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323300805 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322999953 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.322157406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.321010342 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.320487278 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.322754047 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322942514 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320898512 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.32056174 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.322996906 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320979661 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.323676485 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322756282 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.321658983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322969975 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32235135 seconds)
  done (took 29.000003901 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.326731841 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.3224908 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322935798 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323880532 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322151523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.325205741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322030871 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328568297 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329068842 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322250175 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.324876213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327220756 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.321015137 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.324049884 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322028828 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328483734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.323199224 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325663917 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.325448219 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324060541 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323876907 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.324750162 seconds)
  done (took 30.372266091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.328566315 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.327247341 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.325541233 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.323895935 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.327036715 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.323941877 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.32592501 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.326456268 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.327096502 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.327294363 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.326683613 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.328486715 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.333447823 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.331428294 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.327109774 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.327980634 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.471457049 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.327596847 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.327492202 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.327360769 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.326383116 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.332650589 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.344207185 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.324459147 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.326454801 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.326876581 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.327362235 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.326688851 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.326840386 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.329335353 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.330923375 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.32832412 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.326831738 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.328657165 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.326801973 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.328979111 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.332077971 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.32939831 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.325452844 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.328532492 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.337507822 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.345568438 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.328103182 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.335485937 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.348736078 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.328039051 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.331903013 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.335992468 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.326092546 seconds)
  done (took 66.524992009 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.330893878 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.329215106 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.328368285 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.328371822 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.328803154 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.32869989 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.329652108 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.327745569 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.326917494 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.327057033 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.329445031 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.327480373 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.328630316 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.331321809 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.32860468 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.327184869 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.328430866 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.326973526 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.32810106 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326589013 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.328618931 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.330396804 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.33041047 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.328098982 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331374362 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32723577 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.328387561 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.330156784 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.33018786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.327240991 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.330764805 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.330053657 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.332083082 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.330290972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.327748056 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.330590549 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.331037643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.327256815 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330048314 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.329824068 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.333651694 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.331488878 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.332504844 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.330642385 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.328593409 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.329857032 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.33012755 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.327516178 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.329080332 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.332686744 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.33243358 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.329849166 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.331795305 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.329506459 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.332044051 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.331661013 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.328524164 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.330590731 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.332476003 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.329342476 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.33089835 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.332439813 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.330181365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.335979174 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.33356289 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.330505019 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.330775705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.336262316 seconds)
  done (took 91.67589744 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.333094796 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.334135016 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333795837 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332883544 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.332568921 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.331690196 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.333153594 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.332895631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.33250373 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.333187497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333029287 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.332402809 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.332801071 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.333314745 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.332533249 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334271759 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.334790488 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333277073 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.332068904 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33396517 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.333446946 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.333802818 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.333657421 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.332744569 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334582037 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.33426072 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.334313409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.333185614 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333864136 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.333548046 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.335693983 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.335714847 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.334659832 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.33515344 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.335548353 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.334450756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334782193 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335479163 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.334873726 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.334889394 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.335809362 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334228167 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.335452398 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.33505105 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335771539 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.336726673 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.335753319 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.334245714 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.335859092 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.335061159 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.335381604 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.334838307 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.334409906 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.335139904 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.336690953 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.336376357 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335466149 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33658562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336318359 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.336167476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336813234 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.335214636 seconds)
  done (took 83.98045699 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336353352 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.33739035 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.334547528 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.332894169 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338471765 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.334561938 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.335424584 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.336275366 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.336436697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.336967186 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336884118 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334013183 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334137445 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33632166 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.333766854 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333504095 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335000914 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333878698 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338248125 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.333599668 seconds)
  done (took 27.958499736 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.33416514 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.337175848 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.334808704 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.334723947 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.335612731 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335786515 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.337062278 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336682796 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333559667 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337807457 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337325494 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.336695075 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336057827 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334965619 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.338639281 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.336248969 seconds)
  done (took 22.625947784 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.337163022 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.339168061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.33549374 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.337147678 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.335261833 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.337245568 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.338633845 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.337269615 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.337387264 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.337664421 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.33851512 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.340018367 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.337233809 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.340008026 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.337162569 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.33879188 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.337906489 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.338354752 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.338982295 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.340621134 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.338890195 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.337666063 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.340810696 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.341265544 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.338283058 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.337158866 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.336929905 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.337131544 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.337771126 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.338973464 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.33656201 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.338092088 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.33883676 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.33783343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.340509543 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.338580121 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.341212587 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.340379794 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.341257326 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.341447195 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.341643721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.338179885 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.340601789 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.342633257 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.33891156 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.340520894 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.339808119 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.341666395 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.339341439 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.339768044 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.342200351 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.342482537 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.343369017 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.340994226 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.341929109 seconds)
  done (took 74.906776778 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343757321 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342186862 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.339636583 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.341508041 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.34333592 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.340268596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.341812332 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.34232472 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341395138 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.342806518 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.340625736 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.344803869 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.339562824 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.342611121 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.340671466 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343353443 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.341197854 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.340655387 seconds)
  done (took 25.407956001 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.341300448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342281401 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.342702552 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.341054553 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.34129415 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.343748196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341009283 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.343129847 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343978963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.340113006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341855144 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.342609572 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343310001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.344091525 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342352134 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340967435 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.343925583 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343573036 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340636551 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343021606 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.344797365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345286611 seconds)
  done (took 30.792193438 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.343661913 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.343054605 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.34425807 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.35828617 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.360579474 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.366389413 seconds)
  done (took 9.370636488 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351704117 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344994317 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.343602574 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346160989 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343778735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34291526 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342314713 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341337857 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344885188 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343115724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343837672 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345076335 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344615839 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342354618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345433539 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345367046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34441828 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343204323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343570519 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345699037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344096737 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347038009 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343561404 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344240138 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343029179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343527075 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345940073 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344575413 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343260768 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346839484 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346739859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343854511 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345772337 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345504281 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347076428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34698349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344276535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347780607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346850874 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345562841 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.346842385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347498155 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348237343 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344808247 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346685511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345349845 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344487795 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343693811 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344234191 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348075044 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347171664 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346515162 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347845865 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348083341 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347578865 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349096384 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347232383 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34573143 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349282181 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346116385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346929828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348841663 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34747507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345448938 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348861077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345754426 seconds)
  done (took 90.093278474 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346474866 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346548888 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346921247 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347993599 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347275285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346866184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348186359 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346199112 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347141915 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347531387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349252728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347730638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34714826 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349132524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34802429 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346499986 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345742373 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347382673 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346669597 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349880838 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348643338 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348100868 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347187836 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347719653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348112626 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350829065 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346980875 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346535918 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345489423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348486263 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347876001 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349565322 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347520293 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348213811 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348449732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348093566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346507843 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34798831 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347456677 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351653352 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349048276 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35191094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347761303 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348672253 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347614507 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351084688 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348014829 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349708321 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349330654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349706928 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348796263 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350898038 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350086345 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348751045 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347533479 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348412889 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349432447 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350352074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34996119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351393881 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348830041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348342356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351950862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350684863 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34875946 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350487419 seconds)
  done (took 90.259164429 seconds)
done (took 1823.479032115 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.377374058 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.454175291 seconds)
  done (took 14.095328751 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.509843475 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.465086812 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.347351045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.389896239 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.346755916 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.368069279 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.354264287 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.34710676 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.348169311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.346857322 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.34737765 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.535527126 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.394623557 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.347074108 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.346723974 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.44226266 seconds)
  done (took 43.504690725 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.373093243 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.353765463 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.463418087 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.375552021 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.373876887 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.534886504 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.408425503 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.353496709 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518012031 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.389929767 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.858905724 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.375439455 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.350864582 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.424475522 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.369041854 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.535199056 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.592493916 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.894697058 seconds)
  done (took 30.806540041 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.786735988 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.384719222 seconds)
  done (took 9.43426515 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.369668264 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.352021129 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.353600049 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.348133271 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.34845736 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.343710872 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.350174118 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.344482079 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.881786107 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.477644161 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.358705096 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.358574229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.369885016 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.352511534 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.349265696 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.385855154 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.503635013 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.354194581 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.349289765 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.357036734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.350798313 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.475221674 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.397556981 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.352466358 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.472520928 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.914023017 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355384401 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.357314435 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.485653928 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.35702103 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.352689939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.351286191 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.35312477 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.956127179 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.817784829 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.366236806 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.390991156 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.360579275 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.350233134 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.546953339 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.35865982 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.358094181 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.344209662 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.828837028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.480237857 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.467038221 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.571709165 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.377454986 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.354596348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.414142521 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.361259286 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.354569545 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.38262071 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099834751 seconds)
  done (took 112.304527124 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.401332555 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.748799427 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.51714711 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.370849933 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.078028593 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.126105039 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.367203773 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.627346604 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.390236546 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.347153575 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.635970044 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.853430017 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.376736118 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.393592371 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.869233078 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.370294145 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346708988 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.244844277 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.365666916 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.350723237 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83468382 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.359450025 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.35238777 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.480999471 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.386285898 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796325468 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.690053127 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.834436443 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.370093697 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.347541429 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.811668658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.365939529 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.377107044 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.348646014 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.605174667 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703093058 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692158352 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.369552198 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352420507 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.349038859 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.372822722 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796571019 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709787445 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.368820129 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.366620963 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.812244062 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.367198563 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.353067788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.349440706 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559763138 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.053550544 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.353208131 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.703328506 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.354418105 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.643619684 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.424759329 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359198245 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829178939 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.372818823 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.430556867 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.419714168 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.350398879 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.351745593 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.353145636 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.35281814 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.695440315 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.730739831 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.350686705 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.695653288 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830202297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.372672011 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887299279 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.267071532 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.361886417 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.3986642 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.350437613 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.065574276 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847992071 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.403800813 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.351514187 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.682464822 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.376455572 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626236567 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.370146829 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.351899818 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865659257 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.360236943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.376363076 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.35220419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.357012789 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.159232234 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357386418 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.633334012 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.396731253 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.353188598 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.352622461 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.380815248 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.353392399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.354383242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.352565182 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871464871 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.377255487 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.321586536 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.375719595 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.353569704 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.359801734 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.355406893 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.356058142 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.579416435 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.815872684 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.378932768 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354023449 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.352968636 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.362602188 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.475854145 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.353755672 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.657894813 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.379552368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.368866889 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.364908646 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.121893785 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.399086056 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.356086351 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.377009697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.26457447 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.564693862 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.374030906 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.371165435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.355217638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.374495777 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.600068624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.37791396 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.373087521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.356729358 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.052088511 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.419716639 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.371996558 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.710156838 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.362350709 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.242704337 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.381083855 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.356928284 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643227257 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.622277421 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.628413905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.357447722 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.374686198 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045362812 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.382504599 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503585674 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.375915185 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.343286746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55653692 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.531312818 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.359659194 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.972186291 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.356698659 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576294739 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.364396903 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.654094771 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843491824 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.381103815 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367100558 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.061118083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.067980472 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.119842039 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.357313218 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.630343255 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.304222569 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.843625405 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.358014929 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.357933466 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.964793817 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.365377358 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.361810548 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.358876909 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.357482886 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.426189296 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.530386327 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.761062526 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.36076458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.800738668 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.427543682 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.360061693 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.388462109 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.362542124 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.706713479 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.397639251 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.359126331 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.38550396 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.362781527 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.366826971 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.822980949 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.308496864 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.365643681 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513071185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.990640698 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.383778401 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.360602729 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.99121778 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.598331378 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.902935757 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.411720521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.66522037 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.383318651 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.398424198 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.108045057 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.456768116 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871626179 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.384054474 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.359793802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955957664 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.383051974 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.428375322 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.361096725 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.360795917 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893636113 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.383741239 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.362697922 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.609523031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.385876235 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.617187423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.371488955 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.374677019 seconds)
  done (took 1116.400340915 seconds)
done (took 1327.810014092 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.362129505 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.367333012 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.34871619 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.364966299 seconds)
  done (took 26.724604219 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.371494127 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.368405322 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.368730141 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.368427522 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.370920613 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.369037047 seconds)
  done (took 9.495763921 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.428717991 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.360503798 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.368354082 seconds)
  done (took 19.435354453 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.568426565 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.667430784 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719926491 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.576581174 seconds)
  done (took 10.812059734 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.369747862 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.369883573 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.368597415 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.371046623 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.373159145 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.37399151 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.372205371 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.372887892 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.373836785 seconds)
  done (took 13.623040129 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.372394708 seconds)
done (took 82.74299037 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.077073635 seconds)
    (2/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.366203692 seconds)
    (3/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.460729668 seconds)
    (4/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.804363796 seconds)
    (5/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.146181366 seconds)
    (6/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.377877274 seconds)
    (7/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.1433675 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.625256142 seconds)
    (9/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.787189689 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.409682351 seconds)
    (11/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.445969743 seconds)
    (12/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.343400468 seconds)
    (13/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.135597921 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.397553828 seconds)
    (15/286) benchmarking ("sort", Float32, true)...
    done (took 6.364782787 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.346781106 seconds)
    (17/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.1773236 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236706568 seconds)
    (19/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.581051756 seconds)
    (20/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.971597972 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.938549062 seconds)
    (22/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.350636178 seconds)
    (23/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.394954245 seconds)
    (24/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.34660934 seconds)
    (25/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.466707404 seconds)
    (26/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.828005425 seconds)
    (27/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392031626 seconds)
    (28/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.559371932 seconds)
    (29/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.350659205 seconds)
    (30/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.358494052 seconds)
    (31/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.451824656 seconds)
    (32/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.575188637 seconds)
    (33/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.161173316 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.396059957 seconds)
    (35/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.558480651 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.373025258 seconds)
    (37/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.834335204 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.501254405 seconds)
    (39/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.473167671 seconds)
    (40/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.748962145 seconds)
    (41/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.268031883 seconds)
    (42/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.350743475 seconds)
    (43/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.966137492 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.580194296 seconds)
    (45/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.397450568 seconds)
    (46/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.490702909 seconds)
    (47/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.345390765 seconds)
    (48/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416882131 seconds)
    (49/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.071915738 seconds)
    (50/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.486161174 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.47854952 seconds)
    (52/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.119210233 seconds)
    (53/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.633651892 seconds)
    (54/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.913501741 seconds)
    (55/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.945215212 seconds)
    (56/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.39185038 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.293421461 seconds)
    (58/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.375890978 seconds)
    (59/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.496314628 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.423611433 seconds)
    (61/286) benchmarking ("sort", BigInt, false)...
    done (took 6.366256937 seconds)
    (62/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.40190844 seconds)
    (63/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.548447312 seconds)
    (64/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.394789876 seconds)
    (65/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.677692893 seconds)
    (66/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.310897153 seconds)
    (67/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.441556007 seconds)
    (68/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.349752998 seconds)
    (69/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.438862733 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.29004415 seconds)
    (71/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.353398033 seconds)
    (72/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.395142754 seconds)
    (73/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.362818178 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.770065266 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.417942642 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.370334419 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.055267299 seconds)
    (78/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.354389954 seconds)
    (79/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.700312523 seconds)
    (80/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.521759336 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.83845449 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.720899779 seconds)
    (83/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.449701015 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.566750573 seconds)
    (85/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.384368484 seconds)
    (86/286) benchmarking ("sort", BigInt, true)...
    done (took 6.368615185 seconds)
    (87/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.356083952 seconds)
    (88/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.469919418 seconds)
    (89/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.396431455 seconds)
    (90/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.016785534 seconds)
    (91/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.363359482 seconds)
    (92/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.364432576 seconds)
    (93/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.004296442 seconds)
    (94/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.396323814 seconds)
    (95/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.349468704 seconds)
    (96/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.355944584 seconds)
    (97/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.43073581 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.353057237 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.292744005 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.122236401 seconds)
    (101/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.416992221 seconds)
    (102/286) benchmarking ("sort", Float64, true)...
    done (took 6.371979892 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.377477318 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.35606172 seconds)
    (105/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.433152841 seconds)
    (106/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.709617458 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.775064855 seconds)
    (108/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.357372442 seconds)
    (109/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.930617019 seconds)
    (110/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.728440684 seconds)
    (111/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.358651596 seconds)
    (112/286) benchmarking ("sort", Float64, false)...
    done (took 5.680154344 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.575933322 seconds)
    (114/286) benchmarking ("sort", Int8, true)...
    done (took 6.370289619 seconds)
    (115/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.482076785 seconds)
    (116/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.38167091 seconds)
    (117/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.39306288 seconds)
    (118/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.372809994 seconds)
    (119/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.434901467 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.196622476 seconds)
    (121/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.404975524 seconds)
    (122/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.39862749 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.887796098 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.419420907 seconds)
    (125/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.551774243 seconds)
    (126/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.609082623 seconds)
    (127/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.770766466 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.655683214 seconds)
    (129/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.371659776 seconds)
    (130/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.167507769 seconds)
    (131/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.817909535 seconds)
    (132/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.386957842 seconds)
    (133/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.40552376 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.128498465 seconds)
    (135/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.113955561 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.634361253 seconds)
    (137/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.353067749 seconds)
    (138/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.406040948 seconds)
    (139/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.352691826 seconds)
    (140/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.468612138 seconds)
    (141/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.214662387 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.4995781 seconds)
    (143/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.422919449 seconds)
    (144/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.405242241 seconds)
    (145/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.59857121 seconds)
    (146/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.478170538 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.134273831 seconds)
    (148/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.406224308 seconds)
    (149/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.374208976 seconds)
    (150/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.163521752 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.399741867 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.589172915 seconds)
    (153/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.395883629 seconds)
    (154/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.650139413 seconds)
    (155/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.457794281 seconds)
    (156/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.623335765 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.40623198 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.854391769 seconds)
    (159/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.378062909 seconds)
    (160/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.230652312 seconds)
    (161/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.384335788 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.475022651 seconds)
    (163/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.456412693 seconds)
    (164/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.414864096 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.463466678 seconds)
    (166/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.149431536 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.412290913 seconds)
    (168/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.406122767 seconds)
    (169/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.9744506 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.786957535 seconds)
    (171/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.707802731 seconds)
    (172/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.610137042 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.805222986 seconds)
    (174/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.391239739 seconds)
    (175/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.032155342 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.039332458 seconds)
    (177/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.354574718 seconds)
    (178/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.789080738 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.987342666 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.725904732 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.525488934 seconds)
    (182/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.40126733 seconds)
    (183/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.402694084 seconds)
    (184/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.384985384 seconds)
    (185/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.401348829 seconds)
    (186/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.556927702 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.433177089 seconds)
    (188/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.76192813 seconds)
    (189/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.797257578 seconds)
    (190/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.485955427 seconds)
    (191/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.403409314 seconds)
    (192/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.425214375 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.598344292 seconds)
    (194/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.745602713 seconds)
    (195/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.402257308 seconds)
    (196/286) benchmarking ("sort", Bool, true)...
    done (took 5.543438007 seconds)
    (197/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.826981994 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.452643861 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.084019457 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.811181373 seconds)
    (201/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.775218813 seconds)
    (202/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.44906429 seconds)
    (203/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.380172984 seconds)
    (204/286) benchmarking ("sort", Float32, false)...
    done (took 5.387715041 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.456603842 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.484404721 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.398268076 seconds)
    (208/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.357433106 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.405888338 seconds)
    (210/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.228729469 seconds)
    (211/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.241430948 seconds)
    (212/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.025316893 seconds)
    (213/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.357729321 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.599315933 seconds)
    (215/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.358202318 seconds)
    (216/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.385670365 seconds)
    (217/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.364136784 seconds)
    (218/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.216204484 seconds)
    (219/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.410828916 seconds)
    (220/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.358798827 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.984968024 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.028981141 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.406938444 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.381376787 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.421138159 seconds)
    (226/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.44293453 seconds)
    (227/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.809518727 seconds)
    (228/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.773885329 seconds)
    (229/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.464471856 seconds)
    (230/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.335217179 seconds)
    (231/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.483496471 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.812682733 seconds)
    (233/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.392613044 seconds)
    (234/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.406252654 seconds)
    (235/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.845556031 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.359575484 seconds)
    (237/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.365469731 seconds)
    (238/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.442424782 seconds)
    (239/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.588973576 seconds)
    (240/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.412581668 seconds)
    (241/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.194708604 seconds)
    (242/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.396797846 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.405267827 seconds)
    (244/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.73594087 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.412036181 seconds)
    (246/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.50157571 seconds)
    (247/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.360710802 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.846197549 seconds)
    (249/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.98264457 seconds)
    (250/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.472923961 seconds)
    (251/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.381887241 seconds)
    (252/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.705679675 seconds)
    (253/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.529134796 seconds)
    (254/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.170283061 seconds)
    (255/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.199022284 seconds)
    (256/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.381619498 seconds)
    (257/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.230200813 seconds)
    (258/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.727618409 seconds)
    (259/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.359751631 seconds)
    (260/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.39194666 seconds)
    (261/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.368226862 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.481987071 seconds)
    (263/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.645475418 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.464845169 seconds)
    (265/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.513039886 seconds)
    (266/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.161604227 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.498577528 seconds)
    (268/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.733266452 seconds)
    (269/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.508053301 seconds)
    (270/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.367484522 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.324901859 seconds)
    (272/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.369302338 seconds)
    (273/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.401921948 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.429639589 seconds)
    (275/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.971762949 seconds)
    (276/286) benchmarking ("sort", Int8, false)...
    done (took 4.408311145 seconds)
    (277/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.755782385 seconds)
    (278/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.526353001 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.361470785 seconds)
    (280/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501816308 seconds)
    (281/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.381310172 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.41287997 seconds)
    (283/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.907869712 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.307034934 seconds)
    (285/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.361036074 seconds)
    (286/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.001066772 seconds)
  done (took 950.98057174 seconds)
done (took 952.260175814 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.417987741 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410954201 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.393600214 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.416296031 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.507117679 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.421577651 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.404337354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.395464105 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.44395788 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.444683324 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.393833979 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.418043151 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.395937937 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.395773913 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.394968582 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412920165 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.43757263 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.398439994 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.410714217 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.401080136 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.415883687 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.391166247 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.443422345 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.422072477 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.402099959 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.397895805 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.399418714 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.412484249 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.504696265 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.398157334 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.400092809 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.409049972 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.441002611 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.397733282 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.394065868 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.414725654 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.408646619 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.404592007 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.399923111 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.430951254 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.844292711 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.417722078 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.398605422 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.397381709 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.394032436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.404378397 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.400197993 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.404982547 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.411640562 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.412242941 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.848290067 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.432472414 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.399760379 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.400589386 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.408755699 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.397116457 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.400264466 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413532789 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.415994116 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414956213 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.43121279 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.407266758 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.401568397 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.415758403 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.402962806 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.857288503 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.407640192 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.403460755 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.830434152 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.416994577 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.85459187 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.421103458 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.401862949 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.413894717 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.428955309 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.444184581 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.396459406 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.399031536 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.406067214 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.402284723 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.405966582 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413961448 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.405680487 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.40138538 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.413100192 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.427635038 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.4091426 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.402851301 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.405657449 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.422206617 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.406513756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.412283743 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.406141666 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.395996409 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.41315458 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.403236307 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.405846757 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.405410333 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.402670878 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.413483423 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.827603633 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432412297 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.397251187 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.400590344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.403636221 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.413411845 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.824703434 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.416484768 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.42263135 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.450034559 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.402560618 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.419690023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.4021093 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.416065607 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.412452442 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.407029086 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.39799312 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.419153437 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.818983664 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.428768678 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.405301576 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.403335691 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417030282 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.402826321 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.400848046 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.433862183 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.401086206 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419628876 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.522848148 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.415573032 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.432750933 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.401500187 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.404106504 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.426957724 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421263641 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.436336102 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.403894369 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422965906 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.418418702 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.402444725 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.415058597 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.415023576 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.407751612 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.410301871 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.397604064 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.430232218 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.416231919 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417263925 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.420294923 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.522356007 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.399591239 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.421931757 seconds)
done (took 235.615247229 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.465964654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.399633111 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.494283911 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.400684429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.503150579 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.499940192 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.400237932 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.399727858 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.402435549 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.824209349 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.400906484 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.402375654 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.402614741 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.402229836 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.485089734 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.401683405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.399161435 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.742325651 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.398653213 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.469513545 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.402966302 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.402002742 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.400398455 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.790645086 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.392596333 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.399527838 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.475423308 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.402512963 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.792487847 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.405410698 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.403083917 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.750225348 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.48744358 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.421251578 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.413145859 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.409212467 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.507178442 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.419835804 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.485888249 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.485326761 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.496346806 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.44226709 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.405737659 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.406012166 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.400881315 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.406329769 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.403229404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.431957518 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.399949734 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.404582941 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.78756925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.415780528 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.409749898 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.40122656 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.404402437 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.426934751 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.40246422 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.408425332 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.494287291 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.403560477 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.466380057 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.835859874 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78545207 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.404319388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.402902956 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.404900639 seconds)
  done (took 153.295985018 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.472336604 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.479955632 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.520287377 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.417937149 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.456900137 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.520932336 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.415364924 seconds)
  done (took 11.587812373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.410997609 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.410670059 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.455785391 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.459280908 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.407815406 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549501271 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408300962 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.419514686 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.403594538 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.45813642 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.409038148 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.406306417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.414575854 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.407131986 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.458519589 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.417190018 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.525891799 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.407338698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.409607728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.560898858 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407284198 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.415994042 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.459541842 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.417289996 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.406301976 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.414465377 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.971523404 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402889944 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401589861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.409233008 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.405342299 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.448648505 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.409544698 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.405747925 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.405717035 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.523957609 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.410164755 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.405265665 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.40713348 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.409683816 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.40656533 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.408976456 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.40906157 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.40231269 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.408416759 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.429069313 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.404857554 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.410389744 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.408796295 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.411335031 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.459253227 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408379093 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.407556841 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.405221912 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.466184661 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.4123236 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.413476876 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.40195581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.408252971 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.404778751 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.567371821 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45782054 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.408936895 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.45878617 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408094582 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.411952243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.409594212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.410065815 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465792586 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.412893529 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.45638712 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.407828779 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.567688007 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.429935791 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.410223106 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.411432191 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.412078232 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.407586764 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.406407746 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.415714695 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.408392975 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.409181428 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.41778758 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407771403 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.409659735 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.511038784 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.517688544 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.407171525 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.421323532 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.415736484 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.409086429 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.465858576 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.413534927 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.408883086 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463033396 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.526543997 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.464312078 seconds)
  done (took 160.546914975 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.418844169 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.423357042 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.412906834 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.429546411 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.410386936 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.410698713 seconds)
  done (took 9.815726829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.416089139 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.412669928 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.415569015 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.414205392 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.416460768 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.40905727 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.409217012 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.411743598 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.418833396 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.410149753 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.414296216 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.409989876 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.41444766 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.413001397 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.410520445 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.410974788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.41526864 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.407730583 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.416829306 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.415973024 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.519409573 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.41210974 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.413965805 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.411490177 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.414229651 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.409784287 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419067801 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.412121451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.414562101 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.422544865 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.432903951 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.411358165 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.416898289 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.424529733 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.418846409 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.415456336 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.418935618 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.415713548 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.411043836 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.415942553 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.415744566 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.412409782 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.411575967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.419501494 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.411725504 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.421687734 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.422797126 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.421177246 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.415272687 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.414421326 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.415684921 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.41290307 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.418524016 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.412232823 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.415030189 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431273764 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.41820106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.412763948 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.413369371 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.413921599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.413265724 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.419173481 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.415186017 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.418100295 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.413444286 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.418200723 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.415892835 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.420033234 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.414252435 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.416656222 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.419858479 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.410533114 seconds)
  done (took 104.332842693 seconds)
done (took 440.8838474 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.785898379 seconds)
  done (took 8.102671858 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.570431734 seconds)
  done (took 7.887450484 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.948651661 seconds)
  done (took 22.27476345 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.474641743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.458879279 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.420897956 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.430540059 seconds)
  done (took 27.100374189 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.800364326 seconds)
  done (took 8.117675642 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.416244672 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.411847565 seconds)
  done (took 14.14372564 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.556264357 seconds)
  done (took 7.87551242 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.060840147 seconds)
  done (took 8.38711345 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.419202398 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.432655263 seconds)
  done (took 14.437464392 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.393164868 seconds)
  done (took 7.710864834 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.323795865 seconds)
  done (took 8.641447885 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.426449576 seconds)
  done (took 7.746076761 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.478026631 seconds)
  done (took 7.793800717 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.485844805 seconds)
  done (took 9.800943365 seconds)
done (took 161.336110512 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.409075015 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.404790377 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.407792416 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.406176307 seconds)
  done (took 26.944682118 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.452258172 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.449821281 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.453031534 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.463452068 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.45564425 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.450671422 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.443843251 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.443829577 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.460388956 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.454251153 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.453782141 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.45854033 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.453233285 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.457127713 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.450955902 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.450119159 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.464620353 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.45459954 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.441357438 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.455555933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.415466847 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.461749791 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.455978545 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.419448051 seconds)
  done (took 36.139236102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.937918663 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.491072231 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.571949608 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.46841722 seconds)
  done (took 7.787685537 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.467935074 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.472125041 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.481874963 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.524733432 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.549221721 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.479701637 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.454937311 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.440733245 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.428224773 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.477756119 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.550656345 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.491278808 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.558019299 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.418335812 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.60771809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.419817503 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.420080178 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.475208371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.523805541 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.547591268 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.42138862 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.471713778 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.47982799 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.48936371 seconds)
  done (took 36.971683432 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.418603629 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.4385229 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.423209112 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.42157165 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.431855721 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.422272257 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.421754976 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.421861983 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.418854366 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.4278688 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.417532917 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.436843365 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.418106337 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.420290801 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.427674281 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.424222979 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.431423626 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.419745469 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.421098014 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.427588263 seconds)
  done (took 29.810725567 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.417961872 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.266460752 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.766033785 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.66859668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.411992338 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.418126074 seconds)
  done (took 28.271193913 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.491290321 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.643960499 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.41978723 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.78720666 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.875826246 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.437635139 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.421933741 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.666109137 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.989947856 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.983203362 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.483943776 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.492363107 seconds)
  done (took 21.01448032 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.428280427 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.417445271 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.428423426 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.43644189 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.474485464 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.443559201 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.42931745 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.41612387 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.481277631 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.496139866 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.445758923 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.483933945 seconds)
  done (took 38.705357717 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508283222 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460723074 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.335570067 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42157833 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132647466 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624775169 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.463236041 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.876903421 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.418848003 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69353543 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432515056 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508583418 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675675286 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428188857 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421012312 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.4090042 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66538123 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926835893 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420676163 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.550245715 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449098697 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420947951 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.59804344 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.452550105 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634582573 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.562342841 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.680963889 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.196511672 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718708841 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432493164 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432445274 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420781443 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692153011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090259415 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533557547 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430483493 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421998317 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.970708162 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.420286671 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.466198909 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431710654 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4260865 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432558389 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420008426 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.35317683 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425073811 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892571813 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.423811113 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.132276989 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422994124 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430981913 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51526399 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424808278 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.991513573 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41670287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439863066 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.416773318 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511408004 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002630141 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990533176 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438429827 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.357536896 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425231685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.555695412 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066759664 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.5373473 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.42536375 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424293875 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355490175 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.523958885 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438558553 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566848295 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.444789303 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.070642866 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138585598 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442363125 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356287537 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987771923 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434077805 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.357643691 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648868115 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198570159 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357615668 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.367837375 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.355732095 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144289547 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429012398 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.827435858 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441272387 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.902919777 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.431158833 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438371133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448669784 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648480883 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.300818195 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425338808 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.427919341 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552937038 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441348798 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888271041 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356008968 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.42466084 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679787846 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.63423447 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426009973 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.43233895 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665701034 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424860114 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.443714903 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421865487 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.455310415 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.021099238 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454961453 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.993775126 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445241857 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.201294841 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178753249 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431868728 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.52918109 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436678481 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676266546 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.202751671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.584266683 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496522475 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431386768 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426603393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580322295 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021692837 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.018171786 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.422755727 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4377086 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.441305808 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.428366454 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37178127 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.422241184 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460197737 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.208127639 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.653610067 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435711549 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704561491 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361776678 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.57303168 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432983585 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.648648914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.660547945 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.442487911 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687151012 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429969617 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434640213 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43848239 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444906981 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525759005 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447498375 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.43603599 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68543776 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.430176335 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.428927971 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.58130022 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.207460807 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427270976 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.432187913 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425018805 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034534274 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419447688 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430182762 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319171878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.439331451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497100322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.43509316 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.437315387 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.259845388 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447052732 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.438438561 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.427362608 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652092141 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439922935 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.496009246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509137092 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.642591272 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.032193248 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455564132 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.362238288 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.139996372 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.120300946 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430534963 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.616581094 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.4274951 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440755238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439273762 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444864683 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035138141 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449928449 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.5062805 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.435942621 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443198214 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.432445457 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430748685 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.243215706 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.033663133 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444830194 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442335938 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574415029 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.444454675 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.365278098 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.945254427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433912449 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429860912 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.205903972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46282211 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.506815031 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9274258 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689164165 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43869061 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442524636 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.634864437 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.466339626 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.431611741 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432662482 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45505044 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.441723962 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453162836 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.441753436 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.506370683 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.797617929 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994059871 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175408799 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010395542 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380361835 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.434747122 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.313861037 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905383985 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362970956 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090754651 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623648933 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917522893 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373118039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649715654 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.664507032 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220538602 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443893438 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660941954 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363418641 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.44113597 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444404294 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64346606 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463646254 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437704719 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366981581 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.708305055 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707631454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442832271 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513027171 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896175211 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443061182 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.211274773 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.470451514 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.77746214 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625624824 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.057719313 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.819202785 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444830433 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447994992 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929493406 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.435057538 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.957254103 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067851262 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.462005545 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.65537241 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367778121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4443509 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.443824877 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.43116113 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.75767935 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.432204194 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.688390518 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444598559 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370726635 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435591031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993959342 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.308850484 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.441208237 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434309491 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194182514 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432321674 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754776242 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.440317184 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.262077459 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452461293 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.369799037 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370264719 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.126214934 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442671976 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411863085 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955656212 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.45914349 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454789395 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439925532 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28299465 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69005187 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.448406874 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.042516134 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681001954 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449338173 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458176834 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.536830968 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438670734 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.419235613 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.319234073 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670700421 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490942774 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67874275 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.375837899 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.336569804 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.497697667 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645459433 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319820878 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450119252 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700571209 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.167064827 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.453158638 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182686128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476018457 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444338888 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452768192 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441219299 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46107281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524610472 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448986082 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.451640613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.450015226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618488558 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438578247 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44689562 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.452340243 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531371016 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.049925739 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.251919719 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.208354167 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052009572 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208439077 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.06287936 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475121312 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43982445 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440223607 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374893378 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586198534 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966410483 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711283357 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571904808 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.43877284 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462064821 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450998471 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453798056 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653755967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714660168 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.418880174 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452507547 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229769897 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.598305607 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451696093 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.651980562 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967698726 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025256669 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559840416 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437942174 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922409744 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.711754192 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530509937 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442469202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031071529 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.441903484 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.815303446 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.461530735 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44865181 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591213005 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450749473 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112698726 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.471043715 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.599010855 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.214667097 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.549800265 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702112641 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.923416072 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.448388746 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056280339 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191579008 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7059026 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510464174 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.455766033 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.551701891 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590830225 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.452642175 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.343431904 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443254746 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292350889 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.149530585 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.453455522 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060171051 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724592079 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.438875349 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.453481013 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46918268 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.455351423 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665230174 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164726023 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.662844809 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456178273 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452431486 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.015424611 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053495186 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474376739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379232879 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.446105185 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702399196 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702899162 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464352347 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.89673012 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.155783663 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016070385 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.417810393 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467565601 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44624387 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179690943 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064603528 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.280469416 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974629401 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104292066 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451992158 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721951677 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.450659145 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449585271 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725036932 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.448810497 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.457181966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463146047 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.056242073 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.248067222 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.452459888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649805855 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.387981503 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.672132924 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490313884 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378426635 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443673441 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.63434275 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444628251 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577060634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456493528 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.444702249 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47419456 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181669661 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.728925529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.451851723 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.429812325 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.43746047 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451770429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543091663 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721826717 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449826393 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.121842852 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.800180258 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.704799916 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452899667 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.429610641 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.452711863 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449189207 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.16480547 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455665031 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449289456 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057034525 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.463836546 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.458288253 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.450399213 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.664476397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658428666 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.461345451 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460975877 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448315005 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464538525 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.353046444 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.215134902 seconds)
  done (took 1692.471549647 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.482866331 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.484082611 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.487892682 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.562186131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510505124 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.507621506 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.461445476 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.531817029 seconds)
  done (took 53.382927695 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.457312993 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.603278985 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.481014315 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.454824583 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.458201416 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.449738857 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.91749215 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.467071363 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.455164812 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.456521384 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.46204013 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.45667169 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.130431707 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.45892 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.460979276 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.437531489 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.45883851 seconds)
  done (took 67.425834855 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.459852977 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.513120033 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.562808958 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.452762965 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.619978132 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.462318926 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.491702956 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.482142475 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.468848179 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.509642482 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.126646157 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.448336789 seconds)
  done (took 80.954270819 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.467608273 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.465122955 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.467544299 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.467029001 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.464305682 seconds)
  done (took 8.686555212 seconds)
done (took 2129.886903288 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.457626509 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.168487429 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.087429403 seconds)
  done (took 5.611079319 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.597560093 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.64486571 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.765372071 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.789658981 seconds)
  done (took 8.153332155 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.739777069 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.828771023 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.642810035 seconds)
  done (took 6.564858637 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.736619451 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.455799063 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.467304377 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.449970945 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.45346167 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.454092076 seconds)
  done (took 20.714166893 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.453589046 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.457316266 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.45544969 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.457424536 seconds)
  done (took 7.179144945 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.42998879 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.148265431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.43194193 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.445698115 seconds)
  done (took 18.810871358 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.20257221 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.21317262 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.196368108 seconds)
  done (took 7.969077612 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.482463296 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.479723376 seconds)
  done (took 4.318679723 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.759434198 seconds)
  done (took 3.116286994 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.470656017 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.50681148 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.518254284 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.450593205 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.798580828 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.92063119 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.118117686 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.696328516 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.436080095 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.706844446 seconds)
  done (took 31.978952208 seconds)
done (took 131.890358096 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.316082799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.825503182 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.659749871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.297504557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.684936023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.658042439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.671201028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.259466632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.875733638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.797490057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.334188956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.681860531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.614408362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.826850078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.613966148 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.702147827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.687422429 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.367516483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.979229074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.174923998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.671658165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.929200913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.167504585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.030299201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.688990987 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.613172834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.515776662 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.455055368 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.157078604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.613349756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.61365006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.35442552 seconds)
  done (took 196.196729896 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455428022 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.483843737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452744239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.452879496 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.468560045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.452228816 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.455339357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.47157212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.482724995 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.45417185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450814533 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.454404119 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.454525184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.458278834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.45760255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454863851 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.456499717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454337529 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.455070599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.45288724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.456086954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.469381102 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.487162558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.454326625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.478200762 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.455662757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.455629865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.471705733 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.453342507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.471631496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.454890614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.453298353 seconds)
  done (took 208.100526221 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.457219176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.456379089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.471570329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.465955758 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.455516741 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.456895835 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.453203632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.453945962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452743544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456524806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.469993338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.452054481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.457071399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.454276886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.464846741 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456775669 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.483686194 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.454085998 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.47149465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.453021083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.487948866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.463629673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.461970292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.456020426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.468844368 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456798155 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.469657544 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.474757654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.456667883 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.466022148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.460348159 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.467550691 seconds)
  done (took 208.151268361 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.659542281 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.46553854 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.466203326 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.424576967 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.466142461 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.46473088 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.459472315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.655446569 seconds)
  done (took 15.426262964 seconds)
done (took 629.233889678 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.808591398 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.520112658 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.669202157 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.487111148 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.320544408 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.500777082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.485561948 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.656783292 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.417141237 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.668670295 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.7412947 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.501581735 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.864735012 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.484817277 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.742619159 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.588754323 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.413260757 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53777139 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.808545898 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.049508887 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754793088 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.968541756 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.677100989 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.424834356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.873002008 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.940013715 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.214861513 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.400429701 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.502529166 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815723847 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.17551287 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.45175848 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.547109574 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546676798 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.607517411 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585593187 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.445802054 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.546767078 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.691545483 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.712682608 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.049735311 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.227347515 seconds)
  done (took 97.790294542 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.452142854 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.449903606 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.448213429 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.451317028 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.450402059 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.448077478 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.448608953 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.450311165 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.447394233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.450874903 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.450495538 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.451854667 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.448615824 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.450861008 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.450016579 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.451700017 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.450866444 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.452620307 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.449559027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.45139624 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.451158822 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.449115106 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.451873879 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.449164937 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.451038871 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.450436876 seconds)
  done (took 39.074367011 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.470398916 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.721995745 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.891166138 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.478394982 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.473519133 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.474218189 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.549895481 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.473336478 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.474105726 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.474229123 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.6263368 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.473557808 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.505347377 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.917800689 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.474070394 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.473538011 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.472647073 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.470598779 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.731949013 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.480024424 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.567791389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.472693104 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.551031615 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.481635725 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.488198063 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.474772821 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.47739121 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.003594367 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.490160092 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.627118391 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.292753764 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.551203614 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.965104465 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.918185887 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.293125073 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.477781882 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.472908482 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.631668832 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.474750748 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.474424824 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.552930958 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.472504057 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.906016402 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.116143989 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.49191295 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.472583861 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.025318137 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.645030973 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.723825845 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.482528086 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.923410957 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.476074803 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.475894203 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.475262682 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.724030912 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.482909367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.473694219 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.059782805 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.499817636 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.550467387 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.473892355 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.473352852 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.739763753 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.473211557 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.729213096 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.475215234 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.479613741 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.493107199 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.902121336 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.479747779 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.138355878 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.497619881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.476576109 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.631454745 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.735124586 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.05800225 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.497371959 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.744156792 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.983768885 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.572199729 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.483241376 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.995370098 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.577410123 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.485949331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.477301327 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.481197457 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.477360345 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.526589375 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.551560213 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.078313008 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.146179365 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.087453204 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.580651632 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.495098368 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.475370468 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.065287528 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.498782813 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.480963333 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.899131664 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.147376202 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.49745943 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.484062943 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.139665951 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.499752568 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.556861208 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.486564755 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.912997304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.482224046 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.526905548 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.480619495 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.485844769 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.49945829 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.556395781 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.485413101 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.480808971 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113448646 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.660850746 seconds)
  done (took 193.111009589 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.476001007 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.472090684 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.481236736 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.470428032 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.473098322 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.479564922 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.470472631 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.472942637 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.476436468 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.470666828 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.4718851 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.473902427 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.474613667 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.475522024 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.502617197 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.479309834 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.127474589 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.472224665 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.473533188 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.490415901 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.274356045 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.477436315 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.486008787 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.472522869 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.475532152 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.474297978 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.479729837 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.495538809 seconds)
  done (took 156.19636943 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.481548287 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.047690282 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.499900582 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.612866811 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.505665968 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.479693028 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.610338003 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.542993392 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.498271543 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.47880463 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.48009757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.786300943 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.479343696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.003006503 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.675859706 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.632816566 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005705808 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.499191965 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.480350312 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.478776171 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.616601799 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.487665806 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.789249095 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.057014902 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.500680821 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.057771213 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.463416666 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.484301382 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.482771181 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.058060855 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.497751729 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.795481978 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.561066941 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.541001151 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.073018812 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.018191265 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.023340131 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.63313464 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.485870565 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.481514697 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.47954288 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.467950928 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056754018 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.501962771 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.482233326 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.048331662 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.503840177 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.483953092 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.490111222 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.481958136 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.546686221 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.559354826 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.810360831 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.063462737 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.579280735 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.494684068 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.618467408 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.86024486 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.487487338 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.007929916 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.465821807 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.059624845 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.502996441 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.46864262 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.486807054 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.488318312 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.636851685 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.618781327 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.009347676 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.502208638 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.01536034 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.654973697 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.484783933 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.480698956 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.48749961 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.059069439 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.035372369 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.655991957 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.621208108 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.681613922 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.471300204 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.482203304 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.467813043 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.562067935 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.483606449 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.068978221 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.035762992 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.504346914 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.484658509 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.486390219 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.485449192 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.663655326 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.082290754 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.579921367 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.008578918 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.815838521 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.795708544 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.487245769 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.546220521 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.501519205 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.799466357 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.488041805 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.546622051 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.923527395 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.800700934 seconds)
  done (took 175.781439839 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732645294 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.688309323 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575402997 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.626217397 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.080159039 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.062354584 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.772675957 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.628237049 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.597355687 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.746833436 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.648891486 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.579716177 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.657380058 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.565032565 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237479857 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.579697754 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.599717366 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.639472422 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.598916157 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.500524494 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.153934122 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.774629428 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.661961906 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.405500675 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.580692318 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.305686525 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.052791114 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.01290233 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.669013239 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.81775075 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.03420019 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632050469 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.471493351 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.181467347 seconds)
  done (took 70.25770522 seconds)
done (took 733.574113481 seconds)
SAVING RESULT...
DONE!
