cset: moving following pidspec: 23690
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.416135742 seconds)
loading group "string"... done (took 0.594341512 seconds)
loading group "linalg"... done (took 7.297631084 seconds)
loading group "parallel"... done (took 0.163367262 seconds)
loading group "find"... done (took 1.166822114 seconds)
loading group "tuple"... done (took 1.771566151 seconds)
loading group "dates"... done (took 1.249744541 seconds)
loading group "micro"... done (took 0.222475894 seconds)
loading group "io"... done (took 1.020155184 seconds)
loading group "scalar"... done (took 37.982540015 seconds)
loading group "sparse"... done (took 11.83512749 seconds)
loading group "broadcast"... done (took 0.945740447 seconds)
loading group "union"... done (took 12.165595101 seconds)
loading group "simd"... done (took 4.490639106 seconds)
loading group "random"... done (took 9.059072019 seconds)
loading group "problem"... done (took 1.84738112 seconds)
loading group "array"... done (took 20.833172459 seconds)
loading group "misc"... done (took 1.687267169 seconds)
loading group "sort"... done (took 3.332315414 seconds)
loading group "collection"... done (took 17.368300985 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528812407 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128770748 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.121847051 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12335739 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15157214 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115553198 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127392088 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087415557 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.827659535 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151150318 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119392783 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434720259 seconds)
done (took 5.235481733 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174777675 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082815992 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083495088 seconds)
  done (took 1.301372843 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067506864 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122648943 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066860737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069212105 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068870403 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068272113 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0682885 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068290459 seconds)
  done (took 1.665439855 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073132878 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070104283 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068098265 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070298702 seconds)
  done (took 1.414341199 seconds)
done (took 5.770144385 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792396508 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207336972 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.18736743 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.413423718 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134391673 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16646446 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639296121 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34022023 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188587206 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08023923 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109277236 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328083216 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11154616 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632174126 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077786387 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090455276 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138271264 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412779051 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067168668 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081899525 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089834695 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128488825 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088390089 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074515934 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145472192 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068028215 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136633468 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081428865 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066958603 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213277276 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172281568 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650917809 seconds)
  done (took 10.286900593 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0957689 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096502811 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068756426 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123430051 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096461903 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069638044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071045622 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067461716 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0867874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127682392 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088267173 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101059581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065657676 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068499661 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08637648 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204669106 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082898203 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083219737 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071294001 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075316529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107202454 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078692572 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077043009 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077045139 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129591772 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180516204 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100453691 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100204726 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068877732 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081916569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116873797 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128341481 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067777971 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068198668 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126983735 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096941186 seconds)
  done (took 4.609536092 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.001737059 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145944648 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093029298 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139383729 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067482224 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113203156 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067503566 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084228969 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215753316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.45468248 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.598272345 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111710506 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105220977 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067593151 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068576541 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067118672 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.508961895 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096176663 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108242039 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081865906 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071078118 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069478674 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354901719 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068648525 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064530569 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068740596 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058238528 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129295362 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071435938 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952840974 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12697004 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06625832 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100533506 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167856782 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091560542 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145586421 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069414453 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.197520416 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158391065 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073012237 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069543266 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087630658 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10656135 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117725149 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067439758 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069100334 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115009299 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169854009 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066864174 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081999281 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.657481114 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152608174 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079527234 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066842764 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.260372734 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090198759 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070577734 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065688087 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.218003578 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132537442 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065737857 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068490431 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067348942 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068602585 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065000505 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069561311 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387553083 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066126074 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.181031273 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068091718 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078109662 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069437726 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069642671 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073693753 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072757942 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08821209 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066554331 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075538016 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066925063 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066609515 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066966374 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083988442 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382840934 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066949307 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068848252 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065389297 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089809378 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097574959 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068602804 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068252713 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102243111 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064686934 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067893057 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066182398 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107107421 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067216197 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083814384 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069524509 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114012147 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068853039 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20434571 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068556048 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100177923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07352057 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101425522 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085439518 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07082283 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.434171185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065663238 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065819033 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068582671 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066160339 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068362549 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066893342 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079693229 seconds)
  done (took 21.686636639 seconds)
done (took 38.718042243 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236523098 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082929506 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077685084 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079508698 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074247648 seconds)
  done (took 1.774607537 seconds)
done (took 2.978853862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12275173 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100505172 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065966877 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10097872 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067004661 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105149911 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104515046 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085065254 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104069371 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066803196 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101566143 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066617206 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066299227 seconds)
  done (took 2.383342105 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084802505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086617642 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071515881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085640821 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065309867 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086071067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084108816 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092123272 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084450493 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075143975 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065659956 seconds)
  done (took 2.081760026 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082641948 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087008048 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073019134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085164449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065910259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084463078 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084236339 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089133753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084436047 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076391542 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06582431 seconds)
  done (took 2.072714509 seconds)
done (took 7.731914038 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079752995 seconds)
  done (took 1.266195925 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.601624006 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.09610937 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082071474 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113081191 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191104382 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119104666 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272710926 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090292194 seconds)
  done (took 8.935807023 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104129094 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073847675 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071198484 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074614896 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070779559 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072982902 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072937282 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072292671 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071550695 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070812232 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071827732 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074880994 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070517411 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074511801 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074400995 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0733882 seconds)
  done (took 2.454760118 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094826562 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094882671 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075890169 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07730228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074567274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074749465 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076809203 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076376096 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073220593 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075160145 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077047872 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076400153 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073929013 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06724401 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076824769 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07766367 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07277832 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076906907 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077112961 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077600634 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077371559 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06662729 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073645975 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076129692 seconds)
  done (took 3.142006269 seconds)
done (took 16.994963057 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115452197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072100275 seconds)
  done (took 1.381190877 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082119992 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085808514 seconds)
  done (took 1.3693095 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08263608 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067455858 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093048273 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080491221 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068921307 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067802741 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091107431 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068592363 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068138976 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068193894 seconds)
  done (took 1.958485747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069269705 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079989966 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072425375 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08358769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075595243 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066313506 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075011532 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070620074 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080343167 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064667067 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073343103 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084837316 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074149534 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086824133 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074465461 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070693417 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072961032 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069522023 seconds)
  done (took 2.550831084 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066036413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069009525 seconds)
  done (took 1.34348987 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067410292 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065010718 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068825348 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068579987 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065169939 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064800863 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065530131 seconds)
  done (took 1.671196826 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.393093393 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11669897 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321637808 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073005507 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085150153 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258605933 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067234994 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072580212 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.073579579 seconds)
  done (took 2.714716841 seconds)
done (took 14.199336006 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079762046 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086750775 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099747306 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382359353 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092763287 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068232126 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116228303 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192870613 seconds)
done (took 2.340512094 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214489106 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639059704 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411249218 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211972871 seconds)
  done (took 2.470523158 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343849867 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090923787 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061030869 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069665337 seconds)
  done (took 1.786135056 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065973186 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070871131 seconds)
  done (took 1.354008623 seconds)
done (took 7.043746876 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087916598 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068050812 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069128436 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065748002 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068149799 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065174128 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065599076 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068640314 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068436023 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.068748147 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.07113907 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068833151 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066834588 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065691793 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068675674 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065884105 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065859587 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065801327 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065634826 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065976971 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068685641 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065976858 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065761102 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068640313 seconds)
  done (took 2.886695901 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084472938 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067450586 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073739335 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073588328 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071950799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073612581 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073513973 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068291294 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074437663 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070685327 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071988681 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072096111 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070458627 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072722068 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070959201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072107887 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073645216 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068527841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070943052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072010456 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074001629 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068122112 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072178755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073570953 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071654987 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074117086 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071551507 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068423282 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07358304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071630339 seconds)
  done (took 3.391617864 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07000756 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065855101 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066212335 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073059236 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066060122 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066911585 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065933023 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066975864 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067379986 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06572952 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06716202 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065554222 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065687264 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066609368 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066535265 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070197207 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082340381 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066411037 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066005282 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067192569 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069691397 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065831037 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065923909 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066016144 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065875045 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066061913 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066293515 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065552601 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066681478 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065403271 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068936647 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069513343 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066600319 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0726132 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06965619 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065625113 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070191784 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06571973 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066711772 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065329243 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06531503 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065837952 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066111399 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.0728636 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066201316 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06784723 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065964772 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066593346 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066425891 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.183988819 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064837245 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064259238 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065573568 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066071402 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068021815 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063361379 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064331952 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063241325 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065313592 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064747126 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06520147 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064785283 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068339169 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066035752 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080643621 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072135639 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065334744 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067374772 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066215382 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068175125 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067104077 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079520018 seconds)
  done (took 6.196265711 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090638696 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089197172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06702022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067459014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064043445 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066244018 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072278724 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066262296 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067450218 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084121057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066799451 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067425057 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067914885 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069357331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06605348 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067217262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074478643 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064201816 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065917699 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069420651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066363728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071898508 seconds)
  done (took 2.791327053 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.158091744 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072754897 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10903402 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077868438 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072544712 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077396922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072563784 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072175962 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07225455 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070081 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069530946 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071764571 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071563937 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069740244 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069540239 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06995822 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071936277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069500882 seconds)
  done (took 2.651856323 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076697206 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068550764 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089776492 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068305982 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068036575 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070570587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072589568 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076661595 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070417871 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068308965 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076192409 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070475899 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070877341 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067722499 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070218336 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067562803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0705536 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068012884 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075991034 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072010842 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072220248 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075987427 seconds)
  done (took 2.822343762 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080683112 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07046547 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083687803 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07000094 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063811628 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065737883 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072303673 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067655765 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072859267 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06942535 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067647274 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066161556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070631787 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067791314 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07070791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067488198 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069997186 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067665299 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069629217 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063572669 seconds)
  done (took 2.634006413 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088051582 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070677265 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070552042 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077849456 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070398306 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069985121 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077270888 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069746346 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069879426 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090878922 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069538072 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070220085 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077791966 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074218981 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070361428 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077443757 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077714801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077009944 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069992496 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069925866 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090799052 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070379082 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077586295 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07047612 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068543922 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067406489 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067974904 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073217006 seconds)
  done (took 3.314006505 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067088362 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067895816 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066289097 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066385614 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066034013 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066498844 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06565476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065746076 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068569243 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065530151 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068250393 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068343633 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067982177 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068260392 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068011275 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067816379 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067985879 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066289898 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065769658 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065838718 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068048845 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068355415 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068525556 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065926051 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065430448 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068254172 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065730472 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065628696 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067981155 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065376288 seconds)
  done (took 3.251123865 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076187428 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074368346 seconds)
  done (took 1.393315367 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065866217 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082596838 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065364182 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072021031 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072191604 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06866409 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075539257 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072111169 seconds)
  done (took 1.81589182 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085121885 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079425919 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069427407 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081832104 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080120168 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086515917 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138322822 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069927804 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07595534 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066721812 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08303198 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067798134 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075380061 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068193681 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073080724 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073193013 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064826545 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072894395 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070543735 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066061534 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067958943 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075782798 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07076224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063136655 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069820476 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092228333 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079760136 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067931929 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071095805 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075530318 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072422641 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060088197 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066475547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067891556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065897789 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078358335 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083734683 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071073924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077308412 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069473929 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078530115 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062827476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073117988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074866096 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078719181 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06826032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068591563 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062917295 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065929071 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070352621 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063464654 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071797229 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062984163 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075316343 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0719198 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078314351 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066922091 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069958529 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071484551 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071806099 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075449782 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070278123 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070870345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067135503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078183644 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072879517 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077152228 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062852949 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061892258 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065859041 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078235308 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091571852 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075055605 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068820333 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069185776 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065814522 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071092465 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068928741 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07368141 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074990395 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06862148 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07358638 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075576257 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068649684 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070540797 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076748766 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067273525 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071852111 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066221839 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085366549 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06704341 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06629129 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065919576 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079223014 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07181238 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068538304 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066260466 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07554143 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062559288 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069025898 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069797396 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069399139 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078579101 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072134602 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071450157 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074343239 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072749073 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066870781 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067981609 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062447152 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067124597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065213667 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074110816 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061004725 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070338959 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067898484 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067644344 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076324474 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065989825 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067225299 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075371038 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07273996 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.190200697 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064375698 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070412633 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067940375 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069402335 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075114301 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065284977 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061872321 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061516433 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070183053 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066293539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070227513 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071877711 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070555186 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061558363 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065800947 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072471584 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075532116 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067844872 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06814664 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073367734 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068460654 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06620798 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07354581 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06920866 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065697464 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073117843 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068045148 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061145741 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070258852 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06998076 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065207938 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07099007 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069523295 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069096274 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067702116 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065628748 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072493679 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067056499 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065376916 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066531937 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066573107 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076907575 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069603904 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062978662 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065697063 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076938571 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066961847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067168418 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067429029 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071286919 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069480158 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067423118 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068292279 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070831392 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079619715 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072469073 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06998008 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074164808 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079372181 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068275703 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07159154 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068529546 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069359845 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069249019 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078389744 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074561341 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073217392 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071310293 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065134842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073994992 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076096123 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067520674 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066194139 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067698424 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072585545 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073654881 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070285615 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066663814 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064280003 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06836348 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07117838 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070930187 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067880406 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067178882 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074401941 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06614018 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07504417 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068867342 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079405621 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071749002 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063546411 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071232489 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066627538 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075193292 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064137612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066522583 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067896968 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069407077 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067777176 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071306411 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062332476 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075493836 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076480783 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068516467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067986393 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067885714 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075119431 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070128567 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071786275 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071393926 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073713514 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077556307 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066681606 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070475092 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077507921 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067107262 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061201272 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072148618 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065370714 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065836404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066642679 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065778178 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070349594 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074826865 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073686268 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.189727168 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070527622 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066510207 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066569495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06261278 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071751904 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07160771 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070328334 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076218776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069611281 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069197155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073035969 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069132134 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07099062 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070968711 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073228656 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070033601 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071198424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068326605 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072723509 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067804798 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066913128 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071004442 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069297555 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070057825 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075929599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06866139 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068012495 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070332391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069790108 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069774911 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069744111 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069317006 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072069747 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070511552 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069312596 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071439737 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063705802 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077102981 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069049845 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076120043 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069824302 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06592067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075484339 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070908909 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074892675 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069768243 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069131748 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06983408 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068195196 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071414082 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075383206 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06694844 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079407757 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076177683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070492203 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071459307 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069579755 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070010081 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067911266 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069566307 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069178285 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068861999 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068471621 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074255753 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071281866 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069191617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070929879 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07003079 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068866691 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069212621 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062162235 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067737691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068000535 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068624514 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079111968 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069061243 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068425002 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067554507 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069505819 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068219171 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065048617 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076480063 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077370043 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070118235 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076129072 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067693169 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.0701225 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078925904 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062295895 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066645272 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066412494 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067141725 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076416955 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069774084 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078246995 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067689941 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06632069 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064243193 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067448962 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065397763 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061178437 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064557599 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072210655 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068413077 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06813283 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069002199 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071882763 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069933482 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077938746 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06596623 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067429094 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066782057 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06364977 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064800209 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065109869 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068613105 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067829396 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066034029 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064872296 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06724936 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068634426 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069095571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070346344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069466807 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07475148 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067546262 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070567505 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070516107 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062138552 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.203450218 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068468268 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068084278 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068780176 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07352283 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072535031 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070089063 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078955596 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069737306 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070470356 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069857129 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066797049 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068511559 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069106181 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069135847 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06823202 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070437337 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077340606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067240506 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072519267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069559687 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070160105 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076126258 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.0687745 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071360001 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073275758 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067169195 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069353351 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075369732 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071789738 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070879722 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067812213 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068670474 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072585416 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066681155 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074360451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067557144 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068403731 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068977125 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065166837 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067150319 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067208041 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066609564 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073884787 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068128057 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066354955 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0655933 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065538077 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068570519 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070780072 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076226874 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071419829 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07189996 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063443981 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066609275 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070121278 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067032885 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070799151 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071329295 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075497006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071337921 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069154927 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068412652 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078751946 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074826961 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072297433 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067347922 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072485855 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069778151 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071504083 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070358883 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069197513 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070549299 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073396535 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071024891 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068254401 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074883664 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069982788 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067561162 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068396204 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068144555 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066866531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062456434 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06756385 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06877234 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071915128 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069024091 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066730245 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077252311 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065016032 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066837898 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069756981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066305981 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071494101 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061937056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068956415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068163655 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067286754 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061965443 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066570792 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065293027 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069058633 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066494186 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062133588 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077199722 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075600967 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069965649 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065988172 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065455881 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062071925 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061765347 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066696064 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068218525 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068454329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07632438 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06570193 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065564629 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061111583 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066314519 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068401741 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068709042 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062624065 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060713941 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064776958 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068366728 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071048248 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064869997 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065419236 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068616715 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06732768 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.194383025 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071473782 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065009254 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071128869 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079822872 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067957934 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068928549 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073488604 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075329793 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069016624 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061430592 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067646606 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070386198 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068018642 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068583122 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067641742 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083033553 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070771777 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066865784 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065300539 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070467401 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066736962 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075540478 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06839105 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067440172 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071909426 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069507571 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075991039 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070223881 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074399295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069932286 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070594964 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066617413 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068065798 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065331686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066293131 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068172371 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067510983 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072427568 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075142165 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066571741 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078227519 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076345762 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068838746 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064074616 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066808796 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066508548 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062546512 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068639619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064744343 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064900063 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065464555 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067324686 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06880288 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073248941 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068582868 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067555694 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067653347 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061062068 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070455492 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068969001 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068024166 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063593834 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067580171 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06836898 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071642314 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070919537 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064718669 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069629272 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069333465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068792241 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061338449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073117306 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065822863 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069046405 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066040173 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066444393 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067118306 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069571562 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071453568 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067381134 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068791676 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070173459 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068411189 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063496124 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.0639603 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07181935 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064333963 seconds)
  done (took 43.444763878 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102778066 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063790237 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063486844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063261299 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074657961 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063580831 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063481095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064340803 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064402226 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065791869 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062883178 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06370355 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073080289 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080569271 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075742201 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068985578 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062003467 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063850435 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062004935 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062963092 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070386482 seconds)
  done (took 2.780486718 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074154321 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080806705 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078364283 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084823584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073589817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072947977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077795639 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07293354 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081058712 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075593703 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080701768 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073496587 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07551215 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074993048 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074974914 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07304693 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081485084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073992162 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073247486 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0770523 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072972864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077943378 seconds)
  done (took 2.999499136 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067448614 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067634102 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071203181 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063381996 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068342791 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063371373 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072208841 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066342875 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071890446 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067897635 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068125376 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068090252 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07043122 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063759165 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068835169 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066383175 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11183366 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072073901 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067917436 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069313987 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063306418 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070368053 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063543467 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063952411 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067230751 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071568956 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067969538 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064327998 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065759822 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065279787 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065751201 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064020221 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067503965 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06645082 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064981275 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065053791 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065440969 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.0661404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061155293 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063882316 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066433658 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061305274 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066138122 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067397242 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063808697 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063662501 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06761123 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065578501 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060611226 seconds)
  done (took 4.625697378 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079361547 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110187999 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068455198 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091442621 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081018939 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074236591 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071521472 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090533843 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065223686 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067720951 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08395 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081162915 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067643243 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072337 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071507691 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066846052 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06806711 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066126377 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069725193 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065530889 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069708077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073539862 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080046228 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078110632 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071200898 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066180682 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066797391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071440425 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079256323 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071777665 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072851247 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073007364 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082637773 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073028141 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066807853 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070240456 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083868004 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068211255 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070149658 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065621489 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07006935 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07221981 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074722868 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083851694 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066885204 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072322917 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06778538 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065079053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080586667 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069921895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075197362 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081436046 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070489835 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065279761 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070247634 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08107207 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06699642 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06577702 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070638049 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078703207 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06466921 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069509298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078379179 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066788009 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072079826 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078479552 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070634913 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069217024 seconds)
  done (took 6.447106364 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07639018 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095663177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085742305 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084280132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0763947 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076161683 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076788674 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076996507 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076837487 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082333763 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077869628 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118445979 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073385886 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08077091 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077849218 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078169481 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078377073 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077469058 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076281243 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075322667 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075890664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08334229 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075775937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083086467 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079770185 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070817495 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075862336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076081244 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083472591 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076357851 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088446862 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075627812 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07547857 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082674937 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079785891 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075011334 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065449068 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07519182 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075874207 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075164718 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071081718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082577129 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075052551 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070580317 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076068257 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075721707 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082715972 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079553975 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077305975 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07955177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075609733 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083190025 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074746441 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07582132 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082658518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085238845 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083334513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083367451 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075428931 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082649945 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082453009 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085261921 seconds)
  done (took 6.253020041 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082585913 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074703108 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081710297 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061410732 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064376753 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071828866 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064143773 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064500184 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073805962 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074651339 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076382905 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07194163 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074531911 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076052825 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071625331 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074245812 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071800399 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071910693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074257241 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071636514 seconds)
  done (took 2.789828129 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074578235 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083084139 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066920167 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071411411 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068807418 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071424113 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068488761 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069049689 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067981425 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070084826 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077343556 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077521133 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069313315 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073489248 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078233956 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073904917 seconds)
  done (took 2.497241634 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083635297 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075375799 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082462423 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068398181 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068538921 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06486818 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068118391 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06347011 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064653184 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08118654 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068135888 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078942087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068376419 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067706257 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065189915 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073715853 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064342949 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065479374 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068515729 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081250124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071634906 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065225509 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069877356 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065326461 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068751802 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070649362 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066103258 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067672948 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064483839 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067847778 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070717105 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071083202 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064938154 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065839614 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066510556 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065132786 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06781228 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068900085 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073235715 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067691051 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06587162 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070147016 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067780461 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068782504 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064180005 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068952581 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063799681 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069893683 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065771547 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070253136 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067924679 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070379822 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066678783 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072817288 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068871279 seconds)
  done (took 5.142511454 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079528979 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070268703 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063132807 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06580434 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071612212 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069144149 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069891694 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069061327 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069839439 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066750389 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070532227 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071686877 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069392011 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072188773 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069602271 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072356014 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06397302 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069521384 seconds)
  done (took 2.60180441 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071354081 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068600128 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07599984 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068017678 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068059111 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070178566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064043159 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06686747 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066659878 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067706272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067704959 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070289978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066610826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070424497 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067661304 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067751669 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07048335 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066699976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06776721 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063539487 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070051332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066535035 seconds)
  done (took 2.846756467 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095532364 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08553231 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144696722 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081885325 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087210024 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073831125 seconds)
  done (took 1.911938731 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090925019 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10221012 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068251466 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071782383 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076955027 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071506735 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071579198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071863159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080378137 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077520716 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07222424 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080083504 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080041892 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079577201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078086829 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077467905 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071877823 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07169062 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068123859 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08556134 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072027199 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080070033 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071976098 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071907294 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071861876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079394211 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079905697 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077792093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071426277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080208836 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077268044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069584103 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07835578 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076215836 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069212658 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078251899 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070134647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083320182 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075520007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07725843 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068928284 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076427171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078249536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074210252 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078884928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070338646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074682007 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069897091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070148934 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08563365 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075565465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077175702 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078071436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080346261 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078182324 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085413753 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076021771 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077512163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075662284 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076360439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077502365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075317957 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076797018 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075759464 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075633084 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077051802 seconds)
  done (took 6.391368064 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104210136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067083616 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070144287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07678047 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077243488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069678183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06972002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069717294 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069744293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067032326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107497822 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069964236 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077657639 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078586646 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070508371 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071217246 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070199315 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078599245 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067236071 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085602951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069883968 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077352748 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077221482 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07874781 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07740505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077092639 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072240726 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07194622 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07195566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070035631 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074666152 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070150565 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077448283 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067042057 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077333951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069603241 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069760423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074355871 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069332744 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076028696 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076876377 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083282166 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069809094 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070266445 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076456697 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070242899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069918043 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066867174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071325764 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068278339 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076526761 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075704434 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075582135 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077751677 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070633378 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071263271 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071635667 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069918644 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070133683 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075334574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07721695 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070180549 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085480005 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069677085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07054254 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077428084 seconds)
  done (took 6.255746322 seconds)
done (took 131.351525137 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.19252048 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16618782 seconds)
  done (took 1.697269449 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069411725 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099239897 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078575468 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131608328 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066692058 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100533732 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099088516 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078144015 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066139374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065947909 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0668462 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068801701 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131036875 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066104142 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066146271 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068689379 seconds)
  done (took 2.674379125 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099602607 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162465883 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102326354 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065626946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099608648 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073239425 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065128891 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075895847 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071019519 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067277866 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075582741 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072815934 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067401038 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073274738 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07374071 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076152261 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067332106 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076045557 seconds)
  done (took 2.818658164 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099384028 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090863527 seconds)
  done (took 1.548604312 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160053587 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106538538 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148197024 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350420707 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16480054 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.149976325 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149834015 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146772279 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.12096575 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140253507 seconds)
  done (took 2.990117114 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099621549 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152570224 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.267068247 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117271601 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072788772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093610914 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119199676 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079754952 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080436027 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079951539 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080577861 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076555041 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099305767 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072995743 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074377374 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075933779 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103749137 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073370654 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07419743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075442327 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100479257 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065409941 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072803966 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072651539 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077345093 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077348906 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065756892 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065632755 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07580046 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07394398 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075987254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092906098 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07726251 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105314215 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07057779 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106289593 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076574187 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073562148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07583049 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075876076 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078998649 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078952897 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074803975 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07916127 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067349607 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077109624 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066131458 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065941256 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077036485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066882429 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077374289 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076073259 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105247445 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066991184 seconds)
  done (took 5.98017391 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103033966 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106511587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072043548 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112654021 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104637194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072196695 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102832642 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096107333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104905071 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070718634 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06872819 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070830246 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082475031 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082787527 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115036726 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107068771 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073426693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071365195 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106291454 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105591863 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068585462 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097251951 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091540593 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103064821 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067701678 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070912662 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06842539 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07158085 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079340912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079337487 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070253829 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080895726 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084988345 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078492483 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067638341 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067907819 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068143563 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079695367 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079399837 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079154391 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07772885 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068817293 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070386708 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072580217 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072332032 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070113841 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081451179 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08324187 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081538686 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072037646 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072246085 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.07051748 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071742064 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081521641 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079651673 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08300893 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079968716 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068456617 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069124977 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073104968 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081354731 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080148624 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079533683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069645452 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079043887 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069303882 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080101853 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084294424 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068768672 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070295936 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068906895 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069434921 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069542937 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077567146 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077591778 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069989804 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069642879 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068569368 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079955517 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077913232 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068647103 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077105904 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067284724 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068610721 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069745389 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069997783 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078715533 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082470593 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07158414 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070191724 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071892177 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071533479 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06964935 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080011686 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080648419 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078850183 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078256604 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068596113 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077306181 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076846466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068890681 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077216125 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067343536 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069140976 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068604616 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076353112 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075380263 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076886869 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197300294 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069090298 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07825644 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081300037 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069287183 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079064703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08035704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079707729 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068801589 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081718449 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069596433 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081490435 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070241962 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081057344 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071508281 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082215043 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071922504 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071030479 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072927709 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082231046 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076796755 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071180551 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072834324 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07276328 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082414276 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086134699 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073945212 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081849019 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081335195 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073424578 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081462575 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071442156 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082203893 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073478388 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072164569 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069973228 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085945558 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071445025 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071498511 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072106115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083332056 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070217978 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082963791 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078387834 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06878385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085920608 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082552351 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080325292 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083143747 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074012356 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07141385 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071149463 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072869126 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080273058 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083664898 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072738898 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070574258 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080326734 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083179415 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068495041 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078596904 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078179468 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079603169 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069492124 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070688844 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080525713 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08142594 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07877475 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077810608 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078065145 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069075068 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078272299 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078615638 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068110025 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084747878 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068401359 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083300302 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078831688 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076410249 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078382522 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079942399 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080105076 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080107721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083013289 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068065316 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06799072 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079670821 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068293185 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069396215 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078483733 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070196284 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070350878 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085889973 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068644292 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079719144 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068024397 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07873352 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067472226 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069671135 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08159449 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067560489 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068086633 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077526063 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068752491 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075480657 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078427978 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076011999 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066695901 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068984905 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208968782 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080304522 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068761702 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069197767 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070827824 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078595894 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077680129 seconds)
  done (took 18.855384292 seconds)
done (took 37.927349705 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211578382 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152496499 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182658397 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118444067 seconds)
  done (took 2.125022299 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116295889 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101771886 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093519874 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06533852 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09901073 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067165224 seconds)
  done (took 1.936355673 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310820152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211031277 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187607067 seconds)
  done (took 2.099582431 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200492314 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189457018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.41798111 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262998453 seconds)
  done (took 2.569223137 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14753932 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091972329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070244703 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087095484 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136971775 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165340886 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10437739 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129000573 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081392727 seconds)
  done (took 2.457431004 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15091443 seconds)
done (took 12.731315355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.210878228 seconds)
    (2/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.253814217 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092585943 seconds)
    (4/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.196834573 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232260175 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.085866274 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10995808 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.180321701 seconds)
    (9/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.177649573 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080286033 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090810223 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.120529692 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166101891 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075903167 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115014796 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076778556 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104209561 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080254499 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069925161 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099779393 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.234343842 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103716231 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.159853308 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070491731 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.093121225 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.163759166 seconds)
    (27/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.118992586 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158363012 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067754331 seconds)
    (30/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.147530791 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.155473803 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073987644 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097556914 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097119609 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075267628 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075855587 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067165997 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074564963 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130060634 seconds)
    (40/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.113641127 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208037943 seconds)
    (42/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05343666 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179458771 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078404098 seconds)
    (45/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065901313 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075798752 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099698076 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.109276829 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075728941 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075076133 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09296129 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.163517825 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179418663 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.189226437 seconds)
    (55/309) benchmarking ("sort", Float64, false)...
    done (took 0.130603575 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.193546368 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077344548 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072216509 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06408696 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066905757 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138262886 seconds)
    (62/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075556239 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176918265 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089257442 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146709351 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07193571 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.091664119 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050815113 seconds)
    (69/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075815222 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203065344 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09067893 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077955184 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071532759 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065951701 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161882239 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071659308 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072393932 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.22919518 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147842547 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073946366 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064093357 seconds)
    (82/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.113080026 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066256463 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.067597178 seconds)
    (85/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111955934 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094668289 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051359618 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171094137 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065785339 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07477856 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.158929118 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.049577465 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087627395 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07367672 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 0.129301589 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.223580531 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138570211 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050878245 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063817354 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072580276 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073906062 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115547083 seconds)
    (103/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079294502 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.202065072 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179909133 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.177149162 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070044051 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172647431 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067489576 seconds)
    (110/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089089164 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.153229572 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064457259 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.141258645 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111858493 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085875116 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071629111 seconds)
    (117/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074573402 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051009751 seconds)
    (119/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151409176 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142237414 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.049807595 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050367876 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.049711538 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.191235552 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064749614 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.131387518 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072103917 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.175576119 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070167451 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.082375232 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070851039 seconds)
    (132/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106307217 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06993771 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.075052332 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.082538744 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.064214195 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.048738111 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049118325 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06959137 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072002912 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.049690392 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10715776 seconds)
    (143/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.190521275 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063374324 seconds)
    (145/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.157118567 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063318007 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070738341 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.175605213 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088228576 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109062986 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067689657 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106724932 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065015088 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07128914 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064887188 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.048763326 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087221711 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.049021658 seconds)
    (159/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071420824 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074443639 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07798547 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063285183 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063795135 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063488677 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.372846009 seconds)
    (166/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177789689 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051985383 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063992134 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.049578309 seconds)
    (170/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067623183 seconds)
    (171/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050161457 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089153902 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074249556 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049885469 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.152270576 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070722735 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070882799 seconds)
    (178/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060646141 seconds)
    (179/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106511035 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069840252 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072405364 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05069479 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119127977 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06598525 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.191311804 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080710127 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07535571 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.049741771 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062228546 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050250278 seconds)
    (191/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.062169481 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07568885 seconds)
    (193/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066354753 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.049986347 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.073866388 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066026095 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121277432 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.04995891 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150522046 seconds)
    (200/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060207148 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068704895 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073346186 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.358694504 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074741037 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073813978 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07289466 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202096415 seconds)
    (208/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065611527 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122387558 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055507717 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094124753 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05913328 seconds)
    (213/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055963294 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054454187 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054541593 seconds)
    (216/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19524949 seconds)
    (217/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054467465 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068749398 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07063262 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107559772 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07515477 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08458267 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070827163 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092119335 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068345788 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095847898 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095027216 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067130198 seconds)
    (229/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070369418 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05401459 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068768435 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055060328 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140078697 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053447394 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10116199 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145630643 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07211267 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143732429 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055536381 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071738489 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068114749 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066813408 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.102684014 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.141579797 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067410516 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066657364 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088959775 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067211221 seconds)
    (249/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102087956 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089804771 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091448136 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065161657 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066103443 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109822911 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07346801 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076917917 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078548653 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065982983 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072452961 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053553654 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074719326 seconds)
    (262/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052070056 seconds)
    (263/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053072914 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066154755 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051509277 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074679924 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089327198 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089228153 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06591924 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051393302 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.128085061 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07358556 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067589578 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053380567 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077258053 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052497005 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072283501 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074878269 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068489977 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.140688484 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064939046 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079980977 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064341295 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.053292963 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101078676 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051798347 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073737278 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052335629 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052383009 seconds)
    (290/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051845294 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090776093 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066817181 seconds)
    (293/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119898897 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089441108 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05226092 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071340326 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052170712 seconds)
    (298/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05142145 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069272664 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052482952 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072947019 seconds)
    (302/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063363166 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06923453 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056694187 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053136469 seconds)
    (306/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062508069 seconds)
    (307/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064960483 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069518202 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076237137 seconds)
  done (took 31.028598553 seconds)
done (took 32.432173181 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084819147 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093789896 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076714138 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094433508 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082259482 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077682766 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073810688 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079533643 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08087946 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082504592 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078643973 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054465608 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075190824 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074591031 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075194235 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091893469 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078855042 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073337849 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074382693 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065939512 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075888234 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068500365 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069406786 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055152018 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078743831 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073068851 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073120664 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075645456 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068063352 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067934224 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071556931 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076084106 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067623617 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080962633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075205231 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075723765 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077110924 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079375336 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069831699 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06828495 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077413964 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068271499 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07587196 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07657159 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074819247 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074228639 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075081832 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077902285 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09146126 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067685794 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075935669 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076825993 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076039332 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072840322 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070422188 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073389996 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071046585 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095281253 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07638891 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07077602 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077140292 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077024297 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074578451 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075613659 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075680923 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077772478 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078583342 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074398339 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077954149 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074199291 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067742665 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076036572 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07152472 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068154003 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078913057 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080229753 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06673295 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074040924 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075248904 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073740052 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067444787 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070796904 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070121401 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074412758 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070466435 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056962019 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072539881 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075039368 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066965825 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075992716 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074805509 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075134104 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069482695 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07854832 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066850553 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07310406 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066933987 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067652697 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06854687 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071978485 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067475975 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070525622 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077058597 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069171817 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074152669 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081539531 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067535307 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074524283 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066431031 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068107995 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082644246 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077149673 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067563307 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07063751 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066437819 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074912737 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066973769 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067232122 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067313266 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067665056 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073611256 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067524863 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068811695 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073443488 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078246421 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065215698 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069074533 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066781566 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064881887 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07148105 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065178456 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065160846 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066708884 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061288786 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06723811 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065132468 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072609206 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067031824 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.204238514 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066915145 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074311326 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070260506 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071112232 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071794177 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066592887 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061590395 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070973438 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070533983 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069720601 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067657903 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068778516 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067970302 seconds)
done (took 12.780017381 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066260866 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139448566 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098289688 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099536351 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08985693 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06905495 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078851505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104177547 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06787522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101684599 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087494707 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086335516 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114298396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064271063 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065786998 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071830228 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069594049 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084697716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105099268 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089979449 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118572688 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067556467 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095665295 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093097546 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091992029 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106685502 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071953908 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072360782 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072136122 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096409977 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090399513 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071104138 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06774798 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099370932 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093688321 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084170792 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066495837 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083001701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066604934 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066101913 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067265216 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099276295 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081290844 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081178823 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070009252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069888932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066961536 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083512478 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.08998228 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079157537 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088188878 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103358895 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068482085 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065330151 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064076672 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086231706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06514884 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069152698 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065972654 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069248547 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065994959 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068829268 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080581821 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079972772 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070011239 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079330963 seconds)
  done (took 6.923342165 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08369046 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090813634 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083689877 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083796958 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065364754 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067025236 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068188197 seconds)
  done (took 2.091546134 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06661007 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088226396 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088873029 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090509716 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083420539 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090472572 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078403151 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069315419 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090726982 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069978606 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089515235 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100289671 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070774678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073917947 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09045044 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067371674 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093359381 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069030104 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071800913 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093607366 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072175554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098639157 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072509645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069076208 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083958098 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068551979 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116503219 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073136181 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070070983 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071973597 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066398836 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109882475 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083220452 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07704008 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06878712 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083708372 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083577467 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067272995 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08522867 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078007139 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083345477 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068995535 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069539763 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066849431 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072953548 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079756803 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070021135 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069397238 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071213083 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089744279 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070208647 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082943765 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072439717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074488858 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070351107 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075716793 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079156578 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068649628 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086720266 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068813101 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086368923 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088322558 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083168333 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085722112 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071390222 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082505904 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082636704 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071040611 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071018991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071997319 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086088045 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066799373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070006911 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079483875 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069585025 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08937183 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091010126 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07030416 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082958769 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069932992 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069352154 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068728566 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092795972 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074881216 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06707174 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070933195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069810022 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064728323 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065894488 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070814706 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064496616 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06861358 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069526143 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070115869 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069283263 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084377512 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071714391 seconds)
  done (took 9.049956398 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068679875 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067979073 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068737398 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068152812 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067390139 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067957875 seconds)
  done (took 1.981357505 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093251432 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068799 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079695091 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072098993 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104579054 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088035389 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08974133 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08138277 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085125351 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078323285 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08660037 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089506809 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095881037 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075153884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091216524 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074410759 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090328313 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077949423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081787228 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075402877 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089429217 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074944868 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075563782 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085355977 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078940499 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07447591 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069900714 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082030413 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081495537 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081734551 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074807559 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078953857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073542427 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080824849 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09034196 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073384716 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074213256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079575231 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074969353 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078411185 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091052522 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075318891 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076878444 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080032012 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079823889 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070783701 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077137384 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07529914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086169525 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076704938 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076912519 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071411371 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075053845 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076439581 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072646011 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080514798 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078757989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089676712 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07409776 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073277569 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071345168 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078025942 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080293991 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079370173 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081748811 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079815397 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073000106 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075252533 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075151238 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073924255 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080167788 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071512899 seconds)
  done (took 7.281456421 seconds)
done (took 28.866178391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54547455 seconds)
  done (took 2.086991003 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613995262 seconds)
  done (took 2.177845216 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.471905035 seconds)
  done (took 8.03531008 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405670068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.521505333 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.717294925 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131100951 seconds)
  done (took 3.374055946 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.698305176 seconds)
  done (took 2.269796555 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212419908 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202168719 seconds)
  done (took 1.993639175 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374459631 seconds)
  done (took 1.940803688 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133207766 seconds)
  done (took 2.702080739 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.2594943 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175022177 seconds)
  done (took 2.007207914 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473469807 seconds)
  done (took 2.041874988 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.862021767 seconds)
  done (took 6.433960877 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211859561 seconds)
  done (took 1.825106204 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23242106 seconds)
  done (took 1.80440776 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.712570427 seconds)
  done (took 3.285698295 seconds)
done (took 43.552193683 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080091867 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081516477 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081394005 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078931663 seconds)
  done (took 1.881560849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077233571 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073052925 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076711324 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072866197 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077911647 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073602221 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076751718 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078206428 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075785777 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076288799 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074371442 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073288076 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075896848 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074688195 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071591457 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075936903 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076682624 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07317046 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076256346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072621436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071105158 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075133577 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075471293 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0721476 seconds)
  done (took 3.372015535 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07796231 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073489524 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076225321 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07229077 seconds)
  done (took 1.884468636 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078830763 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095022278 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090739253 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079098242 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093813149 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087894772 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071475397 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07169275 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073722154 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079205675 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068491827 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096573634 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088984925 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077709547 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080668953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066081981 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068302623 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087910143 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080609811 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080549364 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072968929 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080450688 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.069881466 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088747562 seconds)
  done (took 3.510117716 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086772432 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106104192 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081543774 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089670676 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091375979 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065465661 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088390577 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091878319 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126865286 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065864509 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071137109 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065705111 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073021642 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065537688 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081322624 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108186098 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111542855 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068875913 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096915883 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06579688 seconds)
  done (took 3.293236297 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073258742 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070001123 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067062779 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069031243 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077787897 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07263281 seconds)
  done (took 2.01841434 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068498728 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068722297 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067849841 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067234479 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072942872 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067492302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066252966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067662394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068251128 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069338528 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066990593 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06656502 seconds)
  done (took 2.405693353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.202392722 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069382335 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069366562 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066641214 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07091463 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067088465 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081651871 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067953445 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091926266 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066803256 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066778963 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068702585 seconds)
  done (took 2.576424675 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208866984 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076343141 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240972889 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150609614 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111207507 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115894825 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112765554 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114025492 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141967063 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101149256 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168947102 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167138357 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107810593 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137629849 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089302649 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101040909 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154314276 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163213198 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105441091 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167870772 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145746608 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126191877 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15296932 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10270713 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106706712 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122005251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071683581 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080346966 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170401023 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133519528 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144606254 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111160233 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09453402 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182612718 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176112072 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1455905 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150908145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085335152 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105966297 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135758458 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2013934 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089190025 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163050439 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109582588 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217408253 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134490899 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121010553 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124025229 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108751935 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092553838 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145577085 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191256066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14139141 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091739833 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128718998 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118368522 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11924031 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117983509 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187914976 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166882937 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128096527 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072045281 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109829782 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155808897 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13429889 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109488875 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125983325 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092726545 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135169808 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156316003 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121228852 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145356399 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117516005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090003419 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120225193 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1413246 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127700404 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161335898 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127488784 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073185301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12420799 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101704981 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081146309 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147047826 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075764466 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177205206 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09990308 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109734918 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126102302 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109969132 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109210171 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159304679 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146294645 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10387221 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065532792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245638076 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122003079 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146733684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088177999 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10958647 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118676977 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078654927 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138021774 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07557569 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124515584 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077547388 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128589319 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129487503 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077481081 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12285553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103968674 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101239836 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133127763 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160112849 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088210517 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082337625 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170505453 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123416984 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104360138 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145244331 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157885699 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102187123 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101446892 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149575403 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180282496 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089594398 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163466704 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106800062 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083717625 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087972518 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124275984 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112136842 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124227666 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082471211 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117983831 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169770968 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075198074 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095994576 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134842558 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079300576 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081230376 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10597002 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105792677 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096769353 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101121299 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103234885 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136017854 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123591155 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106185161 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124187477 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098677896 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314234515 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087939761 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103039438 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105994916 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07059091 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135746716 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157632418 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080235068 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165586557 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124571679 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117332224 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120672673 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084132056 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14122082 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079964564 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070015256 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146363571 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112070064 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110338016 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153645176 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117374191 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125964391 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119567328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132952195 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131720473 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131912208 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106156998 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088841744 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112376278 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127894064 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074197998 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091346007 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079576408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10550873 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096105812 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082775197 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141741011 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12419245 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109722859 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11239967 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097027853 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148369924 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076459326 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128397647 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119455165 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096052603 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154325879 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154403051 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13211606 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0996145 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138181271 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071189552 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073898145 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088247079 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123221541 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082793998 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083478634 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260620577 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151725669 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132566551 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142086174 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128601803 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12525735 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162028749 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074247793 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12200803 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153555331 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126089406 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107637233 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091165251 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099671172 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144953066 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108078305 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183921023 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116638675 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124705994 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154532506 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10141159 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081447561 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10563499 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13960259 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105166542 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145999418 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102896009 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092004976 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114510912 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077670293 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102104057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127617014 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118562282 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13532986 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115607597 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132407563 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077913393 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115900582 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12201659 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122702088 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064494831 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123197473 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163236686 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095253114 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119802441 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154354331 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079218124 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13421078 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175530337 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144740549 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085260987 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252342834 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12310193 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130444628 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121946292 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143439245 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109349487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138714746 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111786261 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087435233 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089163087 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098054411 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105516774 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09757498 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107779694 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1129642 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095748956 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132908058 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104198492 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110281731 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119339072 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099282211 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090981281 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097288005 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177455138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119781909 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171873863 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100286538 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145780048 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164830625 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075946989 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079431478 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079028642 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140868297 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084685926 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131110619 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107927373 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118204942 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124729829 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14372018 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095870281 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068733734 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11009159 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133287529 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125584297 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098932037 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103765847 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165329024 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101505225 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080059372 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114396017 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116988323 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10407844 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172511543 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061838946 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106355777 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07661525 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080662817 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12862058 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29811095 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081876238 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104254106 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121150485 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112130886 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129360978 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101294459 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112095598 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12656953 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15020526 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12880482 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090658773 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112667632 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128962908 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158248082 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105922162 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096973807 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173878466 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153513988 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161731165 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088187664 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114766077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115915897 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109353059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139500611 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083859535 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163545828 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082596481 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136610196 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103420801 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088946245 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129463777 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108156961 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088186557 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148363064 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117668516 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082775296 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077668988 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117466336 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120131124 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106601961 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07635384 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140380039 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076284488 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133905979 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161063265 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081809213 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108590449 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098160706 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080973617 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105805105 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101755619 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087159202 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09986585 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322643955 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088582507 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153630759 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135370657 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11378437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139392917 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106478364 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642266163 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081806911 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155809913 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118012061 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17531972 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10107565 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120144704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110753463 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124444233 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145935855 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106370982 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181987324 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133018557 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116104094 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080354609 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103030645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104466895 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088273845 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108002246 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114447876 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116068843 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093400294 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116868593 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124701102 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082314792 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096455806 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157514326 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117359001 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144009569 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140884421 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085804369 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118270283 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138716664 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080588827 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12161463 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156329122 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106915694 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099912198 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080803151 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100700793 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158129394 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07313596 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158541624 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120095789 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253004221 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115220089 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114246177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132770363 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108371811 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122355022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092534574 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11077162 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114461118 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083212094 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077874514 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105705381 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112763096 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099115062 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097574331 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099664645 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153030573 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072583967 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09952761 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115438978 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144032262 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174392786 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088753333 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083858435 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118800163 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113799769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112922566 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121866826 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079793266 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081793885 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083041654 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080077681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109723294 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11282266 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114598873 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112324009 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163354979 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083413571 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230045784 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096017773 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106017703 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070686584 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078431039 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097303617 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100917357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109453112 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110351521 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160119546 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096895882 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09093576 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09182443 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074556921 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083608999 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129828649 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110399506 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120724199 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100029264 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063601665 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108019507 seconds)
  done (took 59.478289968 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110095722 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082584749 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095665505 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145454269 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123955902 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203655177 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15498235 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18931674 seconds)
  done (took 2.814594243 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068479986 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095841421 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104175416 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083980902 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06808601 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069904155 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233013274 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082625355 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067358054 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099158463 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079384598 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069346348 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430912001 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069208282 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068929204 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061873683 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067742599 seconds)
  done (took 3.506679667 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390600184 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611436016 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353621301 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072675501 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.470087643 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085745877 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.158311518 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.12923652 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073464199 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538549748 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.406974508 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128283918 seconds)
  done (took 18.111706859 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076254185 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070334168 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084063237 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084679703 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.0733382 seconds)
  done (took 2.080596629 seconds)
done (took 108.560248602 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081749433 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.608468674 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053408299 seconds)
  done (took 2.379534421 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084664324 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088168457 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085495565 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084008679 seconds)
  done (took 2.038428245 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073986732 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076986656 seconds)
  done (took 1.834237887 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233692543 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165733012 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096914898 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084157962 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079386576 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080518482 seconds)
  done (took 1.936270152 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073373927 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076080844 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073691674 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077236367 seconds)
  done (took 1.987727146 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077753973 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053094033 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05497755 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058171924 seconds)
  done (took 1.932690488 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087958888 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08016949 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079290444 seconds)
  done (took 1.937904385 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102747504 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08643905 seconds)
  done (took 1.876730867 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082523397 seconds)
  done (took 1.770698477 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102073016 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105359178 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134415228 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114124998 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142209672 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110103656 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08563186 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086349793 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077255891 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087543143 seconds)
  done (took 2.732613306 seconds)
done (took 22.694805565 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079686115 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.464602533 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360861921 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090671915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668521871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357377726 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991115106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099108889 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121742549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071383669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088989243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651006716 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983709868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.42345034 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967896242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322460507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654382492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07192556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068760444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06869563 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973026385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068249267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06838383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069051425 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648681817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372914172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068731677 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319000661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068556612 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070117149 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356086707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068815311 seconds)
  done (took 16.433919899 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071686533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120635291 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073755033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085075923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070669254 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069892975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071837931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069401239 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12215707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069094313 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085888054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06841959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073144063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085347876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088483078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069000887 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069711971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069162711 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068753139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068681162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087746391 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068511118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069033462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069106606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068555387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08104335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068906322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068652907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068748238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070598774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071505733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069074538 seconds)
  done (took 4.131374141 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115778968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124953212 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074942728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105111287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112477382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070906997 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144310759 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094193465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127980669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068346653 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086730425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069092033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103175542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068905891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088826514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068883164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069881542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069219692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068928861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068973039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08794539 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068406476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068730725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069324904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068704577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082586537 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069156919 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069059786 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069068996 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070722008 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071809424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069282279 seconds)
  done (took 4.371814616 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073543722 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076186448 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084111553 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084556117 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070850122 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073145137 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073607868 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070187008 seconds)
  done (took 2.307186782 seconds)
done (took 28.938543885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080086825 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069529813 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073553878 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082772622 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073191994 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078606517 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067590353 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07629506 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072903662 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073996719 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075613976 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068350133 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072040435 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06760885 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074645496 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068213137 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080991422 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072831138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079924284 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08053595 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0703292 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073335222 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075673723 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079626579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079406685 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079217956 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07795878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073448086 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069389414 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070846632 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077351119 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086998793 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07147078 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083102505 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071156936 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070909361 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074757693 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07038336 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082767846 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08046321 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072814198 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079553429 seconds)
  done (took 4.841364397 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088643114 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09698955 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089042133 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064606979 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067874905 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066389481 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089956745 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061165028 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060178065 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089282901 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057653926 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061030915 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06615169 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054211147 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060699552 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057227553 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062226286 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055839918 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060402546 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060729933 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089889788 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053875186 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078644141 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064502017 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056215069 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062496512 seconds)
  done (took 3.484347291 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07454423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086453221 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090876362 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133160523 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107996931 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079837938 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079924102 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096369778 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090467023 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067736698 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07119052 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.0940188 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091153079 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074544288 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068022103 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08699377 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084327087 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070214011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074275245 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095834415 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08772435 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087743404 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097326212 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.0848343 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068111955 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07172359 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072454676 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082745012 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073424737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078314646 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071987995 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072715788 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070592515 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080560004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072568127 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070113381 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093362964 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078466898 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079975703 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068865638 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077253135 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069744021 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094178266 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128499102 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068054749 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075062091 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072351254 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079119497 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068738661 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089454832 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080086696 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068576393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071812353 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06783055 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068748005 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082837688 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070981111 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071059341 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078825962 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074477599 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094776914 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073532922 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084863926 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06891082 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076963471 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068114843 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069532648 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067493249 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.098274561 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070610875 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112783626 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069794676 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069471348 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07803878 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077542383 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074687878 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069656609 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08401864 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079611973 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072604686 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077734637 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072015929 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071605 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093152439 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071385642 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070328796 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069307467 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076251711 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071356901 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.081260188 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081892427 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068764284 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071895021 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086048539 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068821792 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06940717 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074528541 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073133425 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068873011 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0800813 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073999106 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069469446 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078356304 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068914181 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070932101 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081627378 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074836425 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067595637 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072457586 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074475427 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069252884 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070073836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071499353 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07032337 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077297429 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075342079 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073150648 seconds)
  done (took 10.849615567 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165329433 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159040417 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070917616 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149795211 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077199218 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080392507 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152641425 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096495384 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068769026 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069130406 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069836274 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111729386 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107553056 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117520939 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07996907 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068825905 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086590017 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116141172 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154835168 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148277234 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086183509 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078117099 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070801899 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070002894 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071378658 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079471691 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086639527 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077866598 seconds)
  done (took 4.510396851 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082057545 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106177768 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075328691 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091414118 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091519245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06816995 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070863468 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069936845 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082036481 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078610558 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068098323 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073739508 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074976533 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071490668 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069168687 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075549574 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075768707 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069997107 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071974663 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073840697 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079667804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092913781 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072516056 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067634199 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074375156 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067837891 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064088729 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085268718 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069285547 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096025042 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066253993 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073551685 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083635881 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069687138 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068424066 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068743127 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068065835 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068430172 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07042099 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067226305 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066922229 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058224878 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067866163 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080275738 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075969287 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056745751 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073312142 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074062838 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07370841 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066001346 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071710836 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071263524 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071707148 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076464178 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07246131 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073689814 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06992492 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074889908 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077882071 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068145725 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065702279 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067290862 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072981337 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066690818 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078205839 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074222976 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068954093 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070238318 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071079005 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075411773 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068333732 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072619988 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066165749 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07075232 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073234701 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070186065 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069692893 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066953155 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068945414 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069209447 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055847193 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068394799 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05401015 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072366279 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066342782 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06779247 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06813869 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073152879 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080462751 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069767113 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074568648 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070111263 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068108483 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071619342 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061338525 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071272927 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084569821 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083378499 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068215413 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066235311 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082474246 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073649255 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067763652 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056662846 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074087882 seconds)
  done (took 9.327482296 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091155794 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070399012 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085895919 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092257531 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087591633 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076004387 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078476403 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070151534 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084076784 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074587105 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077522453 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068215727 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078892797 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078124155 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070877599 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078774362 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073012716 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086301769 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084209981 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.06962743 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077497524 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081601232 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091423064 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083605644 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082646968 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083276665 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091813615 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07850669 seconds)
  done (took 3.998348782 seconds)
done (took 38.708272589 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.785499629 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.961498044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.785769545 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.16125629 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.86434574 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.019112082 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.98546744 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.783486985 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.07211259 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.817244368 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.985005707 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.926434446 seconds)
done (took 65.867606184 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.83758406 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.920704969 seconds)
    (2/2) benchmarking "String"...
    done (took 2.006686206 seconds)
  done (took 5.643046113 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.006569405 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.348134009 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.028956515 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.779317133 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.781633057 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.116688352 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.568945734 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.278942733 seconds)
  done (took 30.620279221 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.856515497 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.005982265 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.447879682 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.472571179 seconds)
  done (took 15.56357126 seconds)
done (took 63.468883691 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.797914067 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.789758462 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.794545158 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.754776982 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.827254175 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.783513385 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.264293339 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.801851066 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.774510647 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.757164315 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.770297961 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.202362888 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.770128482 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.223187517 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.771955893 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.772280253 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.772465977 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.362701333 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.928334443 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.781211873 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.766556003 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.823904391 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.774179257 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.774931502 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.783768444 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.765595755 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.180861941 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.770521897 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.379248221 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.770193304 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.794350802 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.285892115 seconds)
  done (took 204.284833249 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.76939636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.670271642 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.719928122 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.776478162 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.961513932 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.951524199 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.889703043 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.185180371 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.769439969 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.771262372 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.957550602 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.764651914 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.997308331 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.71293703 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.795386805 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.872633812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.94972534 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.996329565 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.796174204 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.890682205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.767845622 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.833189271 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.789161233 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.925365293 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.809948003 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.777707363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.948736053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.784559885 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.963619163 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.884662611 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.79248175 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.787941661 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.994190392 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.645273741 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.784161513 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.794851378 seconds)
  done (took 169.184352961 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.145910969 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.773205658 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.770843807 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.771521862 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.782693769 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.772009826 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893344005 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.893689038 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.368279429 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.77266267 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.822577707 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613088236 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.771005942 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.838772739 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.783496115 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.770940546 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.788959866 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.79872181 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.771915494 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.773474142 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897380718 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.781456021 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.255616892 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781634087 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.773139894 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.778112575 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.144076028 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.77037313 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778954707 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.031133279 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.771366299 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.772396572 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.67056135 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.047296628 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864932495 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.773090649 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777441226 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.771965913 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992512827 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.772079139 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.772999918 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.7747767 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947612524 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.771616301 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.896362393 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.772152146 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.772904339 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289354826 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.773217852 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773172204 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.404641768 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.480482881 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.775648199 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.774046261 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.775273631 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.773339324 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.773149971 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.779185198 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.427260397 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.846854384 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.773006047 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.773782699 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.778625244 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.781185532 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.772630972 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.775381118 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.959414898 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.775005581 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.176096584 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.829386974 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.007865641 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893633561 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776406984 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.842945342 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867151922 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.77389523 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.77425982 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.773020191 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.774014683 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.856582032 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.774233 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.907939971 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781383131 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.775566866 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.824239634 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.844101645 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.774258409 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.675295177 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.776076348 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.772870886 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.090717332 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.775075209 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840877199 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.774408895 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.773737359 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.77382204 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.909527583 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895647035 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.57081831 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.776401375 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.473223311 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.777776065 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.974578853 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.77820359 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.961155204 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.779097309 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.858919979 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.779875318 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.778858589 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.775701174 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.80797502 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.777795926 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.837188463 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.778877281 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.149048935 seconds)
  done (took 402.921170488 seconds)
done (took 780.301166965 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.475748456 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.418469144 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.528260296 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.441703581 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.415358936 seconds)
  done (took 13.993123035 seconds)
done (took 15.70483874 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.861673487 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.865455842 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802942666 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.863628785 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79584974 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.864336844 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.844755607 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.800528257 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835072545 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.800971759 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.833985111 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.800639565 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788308669 seconds)
  done (took 25.471070147 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00947832 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.01684316 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849638721 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.012012003 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.830399906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007455571 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937958597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.93006467 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927437947 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796876672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789096117 seconds)
  done (took 22.825235912 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.015355929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.021585964 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.856505132 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.031938242 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.832571371 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007018377 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.942987706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.932607068 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936315867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.796453438 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789326791 seconds)
  done (took 22.877043413 seconds)
done (took 72.887973551 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.786971801 seconds)
  done (took 3.501454854 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.809640088 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.964281399 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.789871559 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790146526 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.787902229 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.785608713 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.788794821 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.785950928 seconds)
  done (took 16.221733242 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785858733 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.785906964 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.781833556 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.785403732 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.782627739 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.784627631 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.782560985 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.784167585 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.782051009 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.782529874 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.782909294 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.785097493 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.784347589 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.786256202 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.785994756 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.785419966 seconds)
  done (took 30.263581205 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.784504752 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.786491068 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.783144121 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.783786299 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.78209933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.784138262 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.785665692 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.784370333 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.783925298 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783247854 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.78405346 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.78425494 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.787470719 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.783722299 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.783043367 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783956135 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.784033768 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.784285032 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790965548 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.783893532 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.784510637 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.783478191 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.784284614 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.790592238 seconds)
  done (took 44.552430047 seconds)
done (took 96.254725409 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.690717983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.173424016 seconds)
  done (took 8.58048768 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.786636636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.789020457 seconds)
  done (took 5.329994186 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.788882219 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.787441162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786510765 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.785690971 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.786159869 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.788065437 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.787211608 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.787737519 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.788048656 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.787269861 seconds)
  done (took 19.591092684 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.787020723 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.788043569 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.784974841 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.788453399 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.788156749 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.785656292 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.787584891 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.787542639 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.786942551 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.785760318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.79059976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.784353246 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.788256237 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.786573152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.788718667 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.784999476 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.786347577 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.787008239 seconds)
  done (took 33.885250682 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.791396528 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.788960559 seconds)
  done (took 5.299596465 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.785820649 seconds)
    (2/7) benchmarking "second"...
    done (took 1.786541216 seconds)
    (3/7) benchmarking "month"...
    done (took 1.786050971 seconds)
    (4/7) benchmarking "year"...
    done (took 1.786637252 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.787163909 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.786997291 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.785865632 seconds)
  done (took 14.224168647 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.793392012 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.959533176 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025895693 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.468367495 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.796453219 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.795523278 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.708790112 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.793867721 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.795329161 seconds)
  done (took 19.859186055 seconds)
done (took 108.485924535 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.598363484 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.783514956 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.138765605 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.860316992 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.802755452 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.128807551 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.79933038 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.10185062 seconds)
done (took 42.935433155 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.826204123 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.344533752 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.37861484 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.225895175 seconds)
  done (took 12.670284302 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.769144692 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.303135755 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.822113529 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.367097025 seconds)
  done (took 20.004230433 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.161474498 seconds)
    (2/2) benchmarking "read"...
    done (took 2.133590403 seconds)
  done (took 6.020425103 seconds)
done (took 47.243567313 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.792418003 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791003434 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.791802806 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.789324956 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.79203371 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.790399414 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.789892182 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.792791871 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.793324532 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.792414735 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.7916579 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791496794 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789401685 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788808621 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791531474 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.790834574 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789271312 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.789626278 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78921757 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.789996279 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792730177 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.788359849 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.789981338 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.794862507 seconds)
  done (took 44.704466783 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.792180768 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.790229622 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.794063954 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.791567897 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.788876808 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.793960877 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.792730002 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.788624268 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.791231164 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.792592575 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79087375 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.790466877 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.792601787 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.790314553 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791783176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.790803161 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.79329866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790282911 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792252462 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.790886555 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.793451932 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790853391 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.790046692 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793964469 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.790452562 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792136056 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.793541829 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.790777007 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792859751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793348641 seconds)
  done (took 55.47449854 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.798590605 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.801318238 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.794454976 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.792806029 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.794835802 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.793230023 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.793993811 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.793341717 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.792988972 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792213498 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.793048753 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.792486062 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.794330547 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.792768622 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.791903894 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.793035314 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.793446226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.795068125 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.795641645 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.794024974 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.794365871 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.794679339 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.794071291 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.793447911 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.794671501 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.795646275 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.794531764 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.794619814 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.793473965 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.794346408 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.793413424 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.794424084 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.79313155 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.794166489 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.795269191 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.795018143 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.798963561 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.801293625 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.794853509 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.794497726 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.794837007 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.795640375 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.795651643 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.796620927 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.795312655 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.795535821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796387988 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.794981416 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.794599977 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.795886516 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.795063119 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.797364004 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.796598371 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.794344556 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.796459074 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.79574997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.795561234 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.794680759 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.796245264 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796186632 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.796644229 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.796585637 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.79578362 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.79602457 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.797161538 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795958202 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.796593876 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.796554606 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.795727064 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.796876722 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.796839976 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.793154859 seconds)
  done (took 130.975324615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.794700048 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793883963 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793899864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.794659575 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794747898 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.7976891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795222994 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796927834 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794462955 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.79779547 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797311225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793517308 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795112287 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.797423397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797125252 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.795505737 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.798700756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795317601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.797348495 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797654719 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.798224682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.795613168 seconds)
  done (took 41.240923275 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798147682 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798407229 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.795174357 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79737397 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795471771 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796934959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79845351 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798193942 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799551555 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795932303 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796716686 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798515404 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.79500386 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796138299 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794607977 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795806812 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798984104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796419026 seconds)
  done (took 34.074215683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.796680778 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795946095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.799603686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.794836305 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.797925759 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.798456417 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796699045 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79753178 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.798820905 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796433059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.799797092 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8004826 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.800515916 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795766 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800970172 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.796818398 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.7993297 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796755274 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799169256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797847089 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.799724945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79933231 seconds)
  done (took 41.288585785 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800322507 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.799432181 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797006478 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798186794 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796850782 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.79907173 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.800952344 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.797311205 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.799552196 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.801011069 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797201471 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800204474 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.797821205 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798252252 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.799498812 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798212667 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801960594 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.80026624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800440118 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797447541 seconds)
  done (took 37.71132579 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80303878 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801420572 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801645589 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801407493 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801959052 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.802880285 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801178416 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.802378104 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801613067 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.803028569 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.800960706 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801335347 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801162893 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.802257166 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80280699 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.802636134 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802560115 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802038067 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802167855 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801087318 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.802217173 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801758275 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.803635594 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803005135 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.802884091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803206034 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.80254858 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803263527 seconds)
  done (took 52.193287621 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802293535 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.802205378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799498865 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799283339 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.798828974 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799929701 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.800160002 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.800658385 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802249105 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799368813 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.803826761 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.801565681 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803198701 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.804054704 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802352208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.802807524 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801238896 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.799946216 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800538245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799442202 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.806638305 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802914086 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.805593931 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801311174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799542884 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.804342571 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.804083011 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801340001 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803530897 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800435044 seconds)
  done (took 55.786577596 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.822796867 seconds)
    (2/2) benchmarking "in"...
    done (took 1.822796882 seconds)
  done (took 5.378136169 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.801477108 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804486914 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.805069046 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801866 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.801701032 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.802070902 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.803095841 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802797933 seconds)
  done (took 16.155780625 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.804042054 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.804164347 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.803506826 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.802597443 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.806377306 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.804394458 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810279831 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.804849739 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.80540656 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.806661093 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.812955452 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.812326084 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.80690398 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804865978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.802202253 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804896516 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804376605 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.804575529 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802898013 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.803953033 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806081179 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806159419 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805678115 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.800715017 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.806995804 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.814770584 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.807611015 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.805255926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805063053 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.807293298 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.803318573 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.802924741 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.806543352 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.806516206 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.804701169 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.806987638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813139924 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804907103 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.809902679 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807573035 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80719676 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.804392028 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.806415506 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.807683465 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808558464 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.806359671 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.805990934 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.804889001 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.805347787 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.81025977 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.810395958 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805947119 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.805384262 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807846823 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807824905 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812566263 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.809006339 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.807306777 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.815059745 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.815242987 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.818568038 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.812493399 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807698706 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.807285699 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815264303 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.828984159 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.813379307 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804828929 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.803728379 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.807760849 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.814563278 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818311862 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.815647504 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.808053609 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808658102 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.808188034 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807118561 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807716196 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813180517 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.809804673 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.80743471 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807723184 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819085914 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827673263 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.807696612 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.80840943 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.80968466 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.810945827 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.808689517 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817933412 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.811631403 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.810075113 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.808591709 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809701059 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811481399 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.810125591 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.808472118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810512158 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.806471772 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.809258628 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810770579 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812672025 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.818527775 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.811347547 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811325584 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.816966076 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.810353165 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.809275273 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.816648364 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.810111663 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812401121 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810999466 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.815276151 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.807065854 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813485472 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.818455523 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.812254611 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812065259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.811121642 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.810155138 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819259345 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.836533065 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.811612419 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.812059065 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.816422087 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.824692109 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810250185 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.814434468 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.811556871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80839367 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.809981804 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.814896557 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.812139427 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.812014704 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810232767 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811422129 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.809023732 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.812758672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.812330181 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.812417029 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813125854 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.810924824 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.813727679 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.812719092 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.813760579 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.812430266 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.818405446 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.813051739 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.81599775 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.814156906 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.809339706 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814269023 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.814283934 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812932867 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.814004914 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.815096029 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.812718385 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.815213107 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812794218 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.813647517 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814632555 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.814188029 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817071151 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.815164477 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.816750747 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.813344709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812440584 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.812665208 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.812526697 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.812386868 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.813292953 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.812996414 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.817249138 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.822396021 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.814668183 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.815434771 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.817136227 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815243052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814483564 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815389887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816420146 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.82133832 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.81611001 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.819942419 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.81609657 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81538496 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.813362008 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.816054135 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.814057689 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.815329628 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.816915655 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.821601144 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829236215 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823822818 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.8148635 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.818900892 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815452678 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.820425879 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.81900801 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.816805967 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.817121778 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816977542 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815434078 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817303778 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817340674 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.815810841 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.815690941 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.816515329 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.81649247 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.81656539 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817144379 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.816015012 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816109182 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812737666 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815252446 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815726432 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.813834176 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.812110638 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.813851348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.815904853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.816871163 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.818108185 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.823462856 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.813985097 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81644883 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815989332 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.815986633 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.814593859 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.817829636 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821382671 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.817949489 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.827215316 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.818115514 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.821191267 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823774138 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.815970535 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.817364764 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.819193052 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.816344311 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.813940372 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.820158281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.8267914 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.817724477 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817035563 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.817071473 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818395187 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81772701 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.823253239 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.816396415 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.8175442 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.818494586 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.818749077 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.814307665 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.818935036 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.817479831 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.817714751 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818749607 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.817614176 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.818158393 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.820648577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.819985695 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.819213777 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.819662907 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820519427 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.829373006 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.823244372 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.817957904 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.819480629 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.818050042 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.822262021 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.816948607 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.822177696 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.817483729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831850114 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829571751 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825681221 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.822347571 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.821084543 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825484343 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820900083 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.824672203 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821770691 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816132771 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81615379 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.817302566 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.816053579 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818927231 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.819234882 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.822318535 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821542709 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.826144019 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.820655822 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.819956632 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.819790188 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.818095954 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.818292635 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.817864162 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.820780269 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.823102617 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821979999 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.81996137 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820574901 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.825288278 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822297182 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.82257454 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.822042062 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.821717201 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820019927 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.822922659 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.821396176 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.822126552 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.829537987 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.822105582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.829892818 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.819896206 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828022498 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.820926203 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.823341349 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.830670156 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.819681523 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.820545516 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.819095908 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.82147398 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824176051 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.821052012 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.82091434 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.826174889 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822094518 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.820821526 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.820552283 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822334888 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821598847 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.822128092 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.830559691 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823713176 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.828109198 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824372309 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819371968 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.824141717 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.820652141 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.821707376 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826838185 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.821904278 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.822951656 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.821324483 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.821274102 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.821720184 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.822513385 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.822835731 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.820027346 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822327459 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829613485 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822521738 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826034191 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.820931667 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.831058508 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823483881 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.82909612 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.824599959 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.823496814 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.82269999 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.822031678 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.827988419 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.824966739 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.827687815 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.823288192 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.82218727 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.825618229 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.822581211 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.823368348 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.824578576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.826817544 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.824535886 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833336073 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851701848 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825026093 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830147943 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.823360739 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.825348692 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.827170926 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.823671395 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.820325945 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.826263203 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83460104 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834042871 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.825770805 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.825345379 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825592453 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825738377 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.826872527 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.824224736 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.825293856 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.824384546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.825420198 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.82535419 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828699946 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.824748807 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.82949736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827335659 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.826843034 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.833818455 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.825962132 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.829082959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825452547 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.824660436 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.823616259 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.823823268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.823688664 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.824337449 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.82883418 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826259457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.834982879 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.832504672 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830743395 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.825110472 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826715385 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.822763182 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.828156751 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.827266664 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825091666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826262911 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.827671876 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.827981512 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.828913703 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.827359491 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.82831226 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.82839266 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827406696 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829521064 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.831369472 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824290655 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.824188628 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.824998069 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827909486 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826256822 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.830554159 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835428112 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829646265 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.838541061 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.83849872 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.832604782 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.827084442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829015082 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.83539449 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.825434512 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.827576277 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.828959282 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.829996201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.8300688 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.832332286 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830261157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.834873417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.828951782 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.828426386 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.835263611 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.82690191 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827581207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.82708393 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.832189313 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.830649716 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.829281301 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.831082807 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.829256964 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837372638 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.829524641 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.830138762 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829306468 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.825145486 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.827119776 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832279611 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82798744 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.829399134 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.827454465 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.832398434 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8308944 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830859282 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.828159129 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.832982622 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.831806342 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.83283726 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.835434911 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.827612928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83177396 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.829765779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.833840592 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.83246664 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831264252 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.831275304 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.831195158 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.832370934 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831025188 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827351118 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.833511427 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.827982536 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.830692119 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.834026441 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83131212 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.833995666 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843500012 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.838733741 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.829211177 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.831126986 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831914884 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.8325564 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.829435268 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.827489214 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828140077 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.832291849 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.832131945 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.834082193 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.83152035 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.834264423 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.84664643 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.830883278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83072011 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.830577642 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.83452302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.829966517 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.82918182 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.831988599 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.835744376 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.835206578 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841310644 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.834213853 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839228093 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832493333 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.835269833 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.83903545 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.836735439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.840002626 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.835423889 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832540995 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.830928796 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.835955763 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.851300136 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.835082241 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84489415 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862508634 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.833887818 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834784532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833847239 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832353562 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.834661976 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.832686473 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.834848864 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.831394998 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834339328 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.833233179 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.833943265 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.841635103 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.83601459 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.83296688 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.834792316 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.833738783 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.836596669 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.833322389 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.834678853 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.833995224 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.83139356 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.832912141 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.831330866 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.833646761 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849114752 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844663986 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.833930934 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.836075929 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.833279967 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.842233298 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.837101217 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843574254 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.841132244 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.833200539 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.832520674 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.835142072 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835930631 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.832797136 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.83896917 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.83539861 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835335376 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.835544745 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.848779777 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84167759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836116568 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.833034097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.834175637 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834961402 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836160453 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.838179382 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837801325 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.838224575 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.837316615 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840476449 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.835958323 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836375037 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.838905793 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.843483539 seconds)
  done (took 1087.662533856 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83536141 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833199129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836168974 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.836075037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835787548 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835937077 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836565765 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.834696513 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836118773 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833277425 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.83418675 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832049314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834152239 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.83456016 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834101523 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.838200606 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834802116 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835184784 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836204696 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.835888453 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835079904 seconds)
  done (took 40.300429939 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.838052484 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.833240707 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833687376 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.837549589 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83539798 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.840338053 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.834623804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83909782 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.840260807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834303695 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.838651109 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836528032 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.833417307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.833674604 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834779014 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836471428 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.840362412 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833728558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.837881168 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836514902 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838594057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.837964915 seconds)
  done (took 42.172993561 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.839615482 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836550766 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.833966463 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.832619916 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.83487596 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.831742555 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.836614374 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.83699103 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.836716497 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.837458165 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.83626344 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.837913743 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.844342788 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.842038139 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.836570784 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.83572131 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.981638682 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.837637498 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838894533 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.837027602 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.833702556 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841881252 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.834773735 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.835229429 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.836059406 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.838866427 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.837652746 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.837210386 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.838601656 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.838765337 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842332192 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.838098893 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.836409953 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.838527317 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.835224186 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.836662972 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.840320611 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.836884719 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.834407148 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838052596 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.846467617 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.85600918 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.838851515 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.844143378 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.837510473 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.838330231 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.840276876 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.84600397 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.835614136 seconds)
  done (took 91.987209695 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.837589133 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.836857159 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.834714471 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.838056865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.837185995 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.837680336 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.838123441 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836938485 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.834719954 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.835013689 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.838219371 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.833153865 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833278649 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.836880949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.83655992 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834171134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834150901 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.833840496 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.83340409 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.833707821 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.833218637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.837342521 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.837331489 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.834982301 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83782815 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834190109 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.833749501 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.835768465 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.835093845 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.83398531 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.835725447 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83753548 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.837386014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.834576092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.833507138 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.836311766 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837957738 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.83489871 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837205474 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.834914524 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.837853558 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83779029 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.83775337 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.838279279 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83417767 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834954013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834536023 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.834863075 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.83543001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.838182653 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.837824365 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.83543121 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838364795 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.834841723 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838191669 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.838599227 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.83529288 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.835309826 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.838974479 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.836610544 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.836299744 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838462604 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836343651 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838878786 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.839411339 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.835719226 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.83675534 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.838627655 seconds)
  done (took 126.632055332 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839825116 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.840506061 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839925757 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841669016 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840900972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840484679 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.840781391 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.839777314 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840005863 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.840589855 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840395257 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.839237524 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.841142881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839657049 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840333699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840908449 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840977101 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840934756 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.841212737 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841310871 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.841351954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840589518 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.842418047 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.841047899 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841094426 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839619479 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840006889 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84083536 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841529845 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.840944812 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842147014 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.841516655 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.841594947 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.841816051 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.842823412 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.842252035 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841578597 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84244004 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841797846 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841840504 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841987396 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841435692 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841986007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.840130479 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843226208 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841361136 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842296491 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843381093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84173293 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842585348 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.842391818 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.842847676 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842683531 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843102312 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842952451 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.841931525 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843890999 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842521616 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.843167972 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842969319 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84288492 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.843298989 seconds)
  done (took 115.946553438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842698249 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842167089 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.840750617 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.841102122 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.843444375 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.840442754 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843038349 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843634938 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.843040682 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.841793068 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842955844 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840374012 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84259815 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843899614 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841179798 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842168038 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840892898 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.841067307 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842937765 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840811658 seconds)
  done (took 38.61442776 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.841204493 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.844957237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.840904247 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.842119299 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.843353393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841359026 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.844159816 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844153628 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841836633 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843812718 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.844666138 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.843709639 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840812036 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841524135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.844286059 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.84188523 seconds)
  done (took 31.258517447 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.842618984 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.845022735 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.845963533 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.846316298 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.842590486 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.841924424 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.845350488 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.842036965 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.842747181 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.845960089 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.845713208 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.845731075 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.843762649 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.846578303 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.842796496 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.844885854 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.841957885 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.842339221 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.846238681 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.846361339 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.844319173 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.842710787 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.845909496 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.846062605 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.843860567 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.843425213 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.843059353 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.843491735 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.843347481 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.846159849 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843210764 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.844041446 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.843805616 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.844034242 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.846599935 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.844214358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.845716069 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.846071177 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.847335192 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.846531176 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.849449173 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.84607428 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.845978259 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.846650578 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.844266151 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.846973188 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.843388693 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.844386787 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.842967141 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.843479565 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.846664764 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.846884739 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.847606207 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.847838806 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.847582066 seconds)
  done (took 103.246526555 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846806295 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846734422 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.847642764 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850270956 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847260472 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.843876681 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8466338 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844773924 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845287998 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847549899 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846122739 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848139262 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.845332266 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847354616 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845825482 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847625393 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.846031185 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.845381098 seconds)
  done (took 35.015788958 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.845127105 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845395307 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.848935672 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.845580857 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.845121645 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848047315 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.84638883 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.847579137 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848165487 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.845602217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845426032 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.848408009 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848673046 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.849591555 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847098923 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84573408 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.849156525 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848368545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846449194 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846779914 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849835766 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848652631 seconds)
  done (took 42.418331377 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.848492178 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.847386965 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864105824 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.86651988 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.870133385 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.880072394 seconds)
  done (took 12.954585587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848384457 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849582817 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.846972262 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849913777 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849815441 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847471223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84735679 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848828615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85016229 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847936025 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848720315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851156163 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851304517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847541567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851097153 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850034887 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846921207 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848139529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848187807 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850390199 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848991367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849989953 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848491616 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848191086 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848639895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848146593 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851970961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848880078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84808965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851463487 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851124645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849644738 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851284695 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848795346 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8520057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852434699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8493151 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851065303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851016174 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849927837 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851781712 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852826848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8518413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848867364 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851973151 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848947848 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850065768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849118186 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84982262 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852033409 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851732517 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849083178 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852441469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85272299 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852966973 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854087251 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850170178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850130027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853302126 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849398406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850874662 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852609189 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849952881 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85034429 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853096796 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849781954 seconds)
  done (took 123.890637357 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849453591 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850430641 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849475819 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850404924 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85173842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850354909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850875708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850932162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851050433 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851851187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854132132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850690099 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852528929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85022944 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853064825 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850034778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851635373 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851427556 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851314807 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853541782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851018497 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851589537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851035725 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851103727 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851841817 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854695774 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851929266 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852105928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851691963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851976955 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85139965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85234958 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85161171 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.851170086 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851694016 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852183251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851054208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851341693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851485559 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855733337 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851371736 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855510162 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85167754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851813027 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852187749 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85174611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852794361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852026915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853346057 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852759278 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85343679 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853106274 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852635513 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853323947 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853615812 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852181501 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852593117 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854180727 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853760059 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85561248 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854567533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854503104 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855950691 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853845749 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85441539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854236851 seconds)
  done (took 124.036217049 seconds)
done (took 2532.841200206 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.943077038 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.887810104 seconds)
  done (took 15.616081737 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.019454933 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.971428116 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.856218375 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.890500203 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85655124 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.871495265 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.8732841 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.857283811 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.856836923 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.85672353 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.85740781 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.042684993 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.854920003 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.856860407 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.85730685 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.949631024 seconds)
  done (took 52.334023666 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.859915553 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.861702876 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.872978821 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.864378105 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.860724829 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.881325611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.895070659 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.8637385 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.919939317 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.874179728 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.9807297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.873095073 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.860700171 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.930983333 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.875172177 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.875573702 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.955118692 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.939206641 seconds)
  done (took 35.833701762 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.940886019 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.865015097 seconds)
  done (took 10.603453477 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.879817684 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.883818316 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.861867434 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.869566878 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.874658154 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.854544691 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.887065963 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.901772175 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.870341723 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.892030981 seconds)
  done (took 70.567655211 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.867282462 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.863500797 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.863489414 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.860955964 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.854362736 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.859976979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.862188124 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.85938571 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.557326184 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.897756853 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.869699102 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.868903024 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.867061777 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.865238011 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.861799685 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.88689808 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.985817254 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.862909098 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863203836 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.86939195 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.865172775 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.917730193 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.878605549 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.866652705 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.895445934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.55993941 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.874308831 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.870329255 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.986562132 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.863595658 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.865082354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.865727314 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.868106342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.24052539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.159871596 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.865863666 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.875342383 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.873722187 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.866686027 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.991327008 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.867563656 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.871990851 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.794438995 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.134525479 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.977256743 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.912347304 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.252526338 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.869922295 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.866992614 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.897486791 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.869232193 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.866933889 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.879894131 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.376114453 seconds)
  done (took 132.431601987 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862491847 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.124677762 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015322313 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.861500593 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150225473 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071597177 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.86337807 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910779795 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.865301208 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.09124472 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085064981 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.972730819 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862719752 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.860594403 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860677838 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.860136689 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.024544226 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936584212 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.863193403 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.859833435 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893418171 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107564989 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.991546455 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86377112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.884177595 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075695566 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.991349763 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.971968562 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.319470318 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.859673754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927847354 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86296749 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.863584227 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.859761156 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019889181 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959689425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951980621 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.865396361 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861639645 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861428744 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.539922884 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059217182 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963117031 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.006487742 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116936949 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068334701 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.651765872 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.860410552 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.603632535 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024273952 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.097676994 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.097767635 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.9930819 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.864757727 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.138642179 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862347566 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.862236904 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.09967769 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107403543 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.967477966 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868600047 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.863483634 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863147492 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.109437241 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870486122 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959141036 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869997662 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862618948 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95999243 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.972381863 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.115168587 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078265152 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898447379 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.162936332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.337788251 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.113866203 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.935125768 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100019865 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865251468 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862654663 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949319956 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.715439896 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.06485576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118706168 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.121669278 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904043966 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.590238955 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.863473098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.094056004 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.090601157 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.121061305 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105622949 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.020277566 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.205348225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.863564907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.863116227 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.095176995 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006134158 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868717528 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.226214846 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108784602 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.434778078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.896528795 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175984022 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.001199619 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867074577 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.507316825 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866920034 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.092989155 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909240519 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.867386691 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866139539 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.086869727 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.848728728 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866079386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.574770806 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.930804733 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.867506999 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102095348 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.868726402 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133286256 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868520714 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106153186 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.360000285 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901539164 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.038506989 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.109393946 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.868010154 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125657294 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.114321878 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98726162 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.141601617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.795687465 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.86702251 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166672064 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868427829 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.866346826 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04038846 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.867499343 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09855525 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.869715948 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.157316973 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894092758 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027832656 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869527558 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.126272504 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.905669007 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920977613 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869045378 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001550475 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868585608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.735602378 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.021819601 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869608141 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.865801544 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.420906975 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.868418825 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025214988 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.102691009 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.894221561 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.945081827 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.542704477 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867730654 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956150523 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896109053 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.211886291 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.867069264 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.085716241 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.871017596 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.397504419 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.868076314 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.115062069 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.104726 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872233594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.867614487 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.773727663 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.867069859 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867440904 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030520442 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.700283915 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.867699644 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07340566 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871317346 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002106151 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.872315676 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.947033264 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.22116329 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.867632086 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.868742195 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.868053764 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.869335619 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870342771 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079677103 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902301318 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.394010574 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.009220046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.142852826 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.190433636 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.120834065 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.917546957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.872967377 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119054613 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873166513 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.936414021 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.872259784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.892584867 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108347844 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873174461 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085855502 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.155264904 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801251429 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921141088 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873237638 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871007743 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.789150843 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.027148568 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965347418 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873493808 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.86923811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989281453 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.000129296 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.089232054 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.871982619 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.101135967 seconds)
  done (took 903.219953571 seconds)
done (took 1222.391089296 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871023186 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875021132 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.858773569 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873323365 seconds)
  done (took 29.284662023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.879215098 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.87710811 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.878705171 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.875846817 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.878799717 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.877049626 seconds)
  done (took 13.073130004 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.903388314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876547875 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.87607644 seconds)
  done (took 21.462634927 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.94730865 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.29910037 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.990537054 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.328979179 seconds)
  done (took 10.372602437 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.879390131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.87937445 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.880180926 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.880088908 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.88175412 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.881297516 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.88049911 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.880666468 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.882899186 seconds)
  done (took 18.732896081 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.254323299 seconds)
done (took 98.985976568 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.368973937 seconds)
    (2/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.360750547 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.941830556 seconds)
    (4/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.900632899 seconds)
    (5/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429272519 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.032005201 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.199988197 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.894356712 seconds)
    (9/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.039753047 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.927658644 seconds)
    (11/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.989139662 seconds)
    (12/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.706252345 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.142216149 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.901292271 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.585478719 seconds)
    (16/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.593724496 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.71831635 seconds)
    (18/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.560871239 seconds)
    (19/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.949190004 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.774467816 seconds)
    (21/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.130207875 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.937493594 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.97614721 seconds)
    (24/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.000837977 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.11400618 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.977967437 seconds)
    (27/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.863987135 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.896694816 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.250542022 seconds)
    (30/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.020468427 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.866778587 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.983506453 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.975706359 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.518658787 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.367823949 seconds)
    (36/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.477727943 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.358515992 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.130957321 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.907523657 seconds)
    (40/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.029352417 seconds)
    (41/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.87925316 seconds)
    (42/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.443038569 seconds)
    (43/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.878708381 seconds)
    (44/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.903401132 seconds)
    (45/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.068047965 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.999314413 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.876942845 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.900657856 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.994721881 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.137992717 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.151176614 seconds)
    (52/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.085722104 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.266214098 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.191923908 seconds)
    (55/309) benchmarking ("sort", Float64, false)...
    done (took 5.63379446 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.25529435 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.965689353 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.906604048 seconds)
    (59/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.168283862 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.942392033 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.876796319 seconds)
    (62/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.011467468 seconds)
    (63/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.877105379 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.818719597 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.885480238 seconds)
    (66/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.220919326 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.395347205 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.25253029 seconds)
    (69/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.93069653 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.484001369 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.898176812 seconds)
    (72/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.878360207 seconds)
    (73/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.106572908 seconds)
    (74/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.815455016 seconds)
    (75/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.153142611 seconds)
    (76/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.97536323 seconds)
    (77/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.293980376 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.924377213 seconds)
    (79/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.882487098 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.010634582 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.041244797 seconds)
    (82/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.093530211 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.161005625 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.569085232 seconds)
    (85/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.167708122 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.881358305 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.542340254 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.881235697 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217430413 seconds)
    (90/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.893023231 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.441198024 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.96098435 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.859504315 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.460480545 seconds)
    (95/309) benchmarking ("sort", Float32, false)...
    done (took 5.725877036 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.8856424 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.988286543 seconds)
    (98/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.195533534 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.276504548 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.909689858 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.006869165 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.094781865 seconds)
    (103/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.801695436 seconds)
    (104/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.054528922 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.960273844 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.867540544 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.165882966 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.129152296 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.924959989 seconds)
    (110/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.968226293 seconds)
    (111/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.972565133 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.590613354 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.210723847 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.957939097 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.896272633 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.10127137 seconds)
    (117/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.965668231 seconds)
    (118/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.86757493 seconds)
    (119/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.124699556 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.888396829 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.200784726 seconds)
    (122/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.029158288 seconds)
    (123/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.988124114 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.320166158 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.884704981 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 4.058506575 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.904079146 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.04977874 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.968299636 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.134044465 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.906595757 seconds)
    (132/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.823760499 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.101364008 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262743674 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.135854887 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.881177846 seconds)
    (137/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.059177879 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.094083201 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.009193865 seconds)
    (140/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.965871745 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.06512018 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.010642069 seconds)
    (143/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.434343667 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.217225962 seconds)
    (145/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077863909 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108024798 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.91084445 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.813351658 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.677956961 seconds)
    (150/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.206405853 seconds)
    (151/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.012834038 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.398722027 seconds)
    (153/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.88312334 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.327597531 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.922662534 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.585309601 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.122002111 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.19371624 seconds)
    (159/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.900872509 seconds)
    (160/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.883055503 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.117824364 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.221030354 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.223876676 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.293772326 seconds)
    (165/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.513343353 seconds)
    (166/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.88437322 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.251420545 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.107364505 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.014690715 seconds)
    (170/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.973127096 seconds)
    (171/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.017792599 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.00880565 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902350912 seconds)
    (174/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.994163218 seconds)
    (175/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.992017008 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.914621448 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.909556035 seconds)
    (178/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.180830623 seconds)
    (179/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.055263542 seconds)
    (180/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.999759394 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.917579042 seconds)
    (182/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.3588417 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.870310522 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.31548536 seconds)
    (185/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.87400964 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.207227825 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.91141583 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.076534008 seconds)
    (189/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.949182729 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.909663913 seconds)
    (191/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.018702496 seconds)
    (192/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.40282234 seconds)
    (193/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.640632256 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.397605727 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.188719097 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.028391208 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.961072268 seconds)
    (198/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372356303 seconds)
    (199/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.000732684 seconds)
    (200/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.084079782 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.380790154 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.681442847 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.903024315 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.105939213 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.972919924 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.910417471 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.872168543 seconds)
    (208/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.484045547 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.005586103 seconds)
    (210/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.05968333 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.863216229 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.880985971 seconds)
    (213/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.569791182 seconds)
    (214/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.049564281 seconds)
    (215/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.877982885 seconds)
    (216/309) benchmarking ("sort", BigInt, false)...
    done (took 6.926042772 seconds)
    (217/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.185692914 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.026190341 seconds)
    (219/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.99478083 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.96026573 seconds)
    (221/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.906369342 seconds)
    (222/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.574014098 seconds)
    (223/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.981133908 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.822166139 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.027184749 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.53254965 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.846628086 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.946739198 seconds)
    (229/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.973313855 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.072964148 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.185371901 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.806409705 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.087175204 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.193338678 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.880718889 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.937300304 seconds)
    (237/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.912522062 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.887798066 seconds)
    (239/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.36432986 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.95981176 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.13312605 seconds)
    (242/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.999107981 seconds)
    (243/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.017459401 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.891689324 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.891785276 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.244202036 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.117367666 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.994931946 seconds)
    (249/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.023797244 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.892729855 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.3550637 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.979741017 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.037120522 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.668949577 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.024084615 seconds)
    (256/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.892055722 seconds)
    (257/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.013327265 seconds)
    (258/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.891346732 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.970197898 seconds)
    (260/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.875125731 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.594192487 seconds)
    (262/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.361378537 seconds)
    (263/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.241368155 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.199756916 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.318364401 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.905559779 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.917951984 seconds)
    (268/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.1178756 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.627947183 seconds)
    (270/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.962690874 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.004177718 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.916770373 seconds)
    (273/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.972463004 seconds)
    (274/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.903464639 seconds)
    (275/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.976358992 seconds)
    (276/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.412507552 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.025510154 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973861255 seconds)
    (279/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.012784541 seconds)
    (280/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.875894932 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.049489064 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.463482629 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.055954455 seconds)
    (284/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.25494758 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.040594188 seconds)
    (286/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.261462189 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.645227691 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.917271721 seconds)
    (289/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.881283178 seconds)
    (290/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.140321793 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.708876953 seconds)
    (292/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.050891631 seconds)
    (293/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.982241871 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.018380813 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.882106823 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.92641087 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240801831 seconds)
    (298/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.826284643 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.878630027 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.46763624 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.914788688 seconds)
    (302/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.066841787 seconds)
    (303/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.900641087 seconds)
    (304/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.918404417 seconds)
    (305/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.185771925 seconds)
    (306/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.196821245 seconds)
    (307/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.14843936 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.005270011 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.916877821 seconds)
  done (took 1025.057792259 seconds)
done (took 1026.928076921 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.925927636 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920278102 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.903547258 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.924874557 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.016830037 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.934819329 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.913069884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.905766657 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.951407849 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.952355974 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.903515218 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.934367724 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.906264208 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.904896347 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.903462041 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.919829035 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.217360409 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.934883516 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.923765962 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.914449685 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.922327543 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.905058509 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.954588811 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.935153131 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.909920281 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.9071535 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.909273426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.926151558 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.018232965 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.910121099 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.906797372 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.916856605 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.21829594 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.931886215 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.900045234 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.925313138 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.917491648 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.914012892 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.908498415 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.938689285 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.366808498 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.914359316 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.908298453 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.906423315 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.905934906 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.909767588 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.908200095 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.91167452 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919519781 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.921538128 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.363868372 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.928482276 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.912036894 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.906808754 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.916245015 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.908549807 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.910068052 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922340263 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.927376497 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.923200443 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.210470929 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.937525977 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.907970572 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.924810438 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.915864308 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.401577366 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.908408215 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.911071778 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.365623821 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.917908781 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.402099598 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.923324042 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.910464423 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.92296185 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.940162367 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.221361755 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.929896787 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.908538291 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.916717696 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.907075356 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.918107834 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921609108 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.913171552 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.907449773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921911973 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.940458487 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.918118325 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.910873898 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.916873341 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.928160088 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.917621188 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.920117486 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.911131966 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902987779 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91746773 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.911711207 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.912370803 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.911859851 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.9138 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.918949181 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.364390959 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932491648 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.906310506 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.90558667 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.907872868 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.924178309 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364619667 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.917553858 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.930716986 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.955998678 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.910350367 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211558681 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.94135848 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92661671 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.918226735 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.913057416 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.906162249 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.212653167 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.393684041 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.932354771 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.910917775 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.909270472 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.926641447 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.911676255 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.906250075 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.222594078 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.93898893 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.924927525 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.03346475 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.922084717 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.943849501 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.910011579 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.913672616 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.943601234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927816084 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.943330355 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.913165921 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926989778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.927768282 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.908229294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.922090873 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.921593629 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.913101381 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.916524417 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.905322269 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.944209178 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925032794 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.924889508 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.932555884 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.033335105 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.908023894 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.214114051 seconds)
done (took 300.033395873 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.979409565 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.90149964 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.008935549 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.908757698 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.991120338 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995037588 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.906089767 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.906682914 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.905828379 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.280419637 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.906861492 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.907159085 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.909721899 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.90621607 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.992517585 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.910501879 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.908135264 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.245106575 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.911218852 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.982362731 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.90967379 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.907507157 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.910850999 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.281608004 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.907695239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.901387642 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.982215626 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.909971512 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.24667744 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.90709422 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.90881371 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.247058588 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.001396779 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.928590289 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.920856202 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.91749574 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.993145016 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.915019793 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.991427131 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.991482731 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.012460967 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.951838415 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.905973623 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.906237673 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.915264622 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.91317902 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.909173289 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.938819764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.906502266 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.908854924 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.245132857 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.921144742 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.908666667 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.90863165 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.909011548 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.94291928 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.91035104 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.913813633 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.003139056 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.913032876 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.972881662 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.283074475 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.283452964 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.912374065 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.911190456 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.909178035 seconds)
  done (took 186.99733986 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.979783954 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.985444771 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.978953895 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.915225487 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.961743097 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.979859796 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.915666365 seconds)
  done (took 15.555242932 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.918314355 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.912880214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.96297775 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.962119082 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.912470943 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.062090266 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.912475437 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.924152539 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.910531658 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.965102691 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.913711072 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.913042253 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.920578106 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.906315951 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.961734823 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.924575406 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.028895342 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.914834709 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.914427238 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.064028962 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.91071091 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.920242706 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.967469424 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.924973611 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914627832 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.92001535 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.507271115 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914614514 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.911743435 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.914530937 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.91051011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.955854683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.915115279 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.906234863 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.911397718 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.029258125 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.915153582 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.912065989 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.914226741 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.915748003 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.914076291 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.91430879 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.91465557 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.911859082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.915064946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.9381361 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.915027098 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.915207453 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.914250628 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.914969374 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.964708924 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.915991445 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.912179002 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.912823242 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.969454436 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.921357165 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.916164139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.912701522 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.916798071 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.913116723 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.067241192 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.963234933 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.915798729 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.964133844 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.916408337 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.916454548 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.916470899 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.916590319 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.009912938 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.916417602 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.964185521 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.913464201 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.076177315 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.939345146 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.917130508 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.918249039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.918582687 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916763012 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.914703282 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.922178573 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.914435798 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.917851043 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.922094074 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914591722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.91411224 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.028789458 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.024201311 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.91405431 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.92918846 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.923716612 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.914686286 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.969186428 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.916880423 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.91508981 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.971461423 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.034379634 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.971840281 seconds)
  done (took 210.261959667 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.921917162 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.924758557 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.918355991 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.933711419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.916851021 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.91647721 seconds)
  done (took 13.375721846 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.918987282 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.918819179 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.917551489 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.917542538 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.917956489 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.919330021 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.918859197 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.919560026 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.92253587 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.918057097 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.919561915 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.918770671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.919434915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.917707511 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.918723809 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.918285972 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.919036867 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914978807 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.917271398 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918114437 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.067336208 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.918485668 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.917445212 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.918297465 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.922948662 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.917811823 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925962452 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.918622415 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.918200018 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.926435481 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.922411484 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.918838716 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.919224329 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.924283489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.923116915 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.91912653 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922846112 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.919865026 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.91546743 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.919753335 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.919133451 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918988281 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.918938331 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.919213918 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.920634767 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.923646188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.923657872 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.925637062 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.920464062 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.920857229 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.920065584 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.919265144 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.920085277 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.920376868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.921352261 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.925699925 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.924864669 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.921709202 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.920613351 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.920480159 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.920668043 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.920586989 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.920464409 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.9245977 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.927925757 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.921126168 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.922253305 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.925068014 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921489173 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.920367935 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.92096489 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.918586182 seconds)
  done (took 141.263760677 seconds)
done (took 569.305378912 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.007351489 seconds)
  done (took 8.854635463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.116813234 seconds)
  done (took 9.048290642 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.42461052 seconds)
  done (took 10.271359436 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.934408311 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944817519 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.913184323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.922954111 seconds)
  done (took 29.574811369 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.938273122 seconds)
  done (took 8.785593343 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.928882433 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.913591439 seconds)
  done (took 15.720703982 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.008411228 seconds)
  done (took 8.855856801 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.998089963 seconds)
  done (took 8.850412576 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.92528759 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.944210787 seconds)
  done (took 15.731495652 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.901833508 seconds)
  done (took 8.749120593 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.58909115 seconds)
  done (took 11.445735644 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919501148 seconds)
  done (took 8.780239364 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.924998431 seconds)
  done (took 8.773496843 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.191565887 seconds)
  done (took 10.039335711 seconds)
done (took 165.327007091 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.920875196 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.919283276 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.918931054 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.91900286 seconds)
  done (took 29.526310489 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.955715985 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.956617584 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.957727399 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.96646412 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.958744886 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.955924384 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.948151032 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.947901032 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.967254222 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.95845395 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.957451272 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.958359465 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.955756278 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.948467126 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.958677895 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.958135671 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.967002479 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.957867024 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.949127379 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.95916133 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.922959638 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.967469353 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.959384326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.923200665 seconds)
  done (took 48.765815346 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.123350565 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.995143554 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.076329266 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.974764229 seconds)
  done (took 10.019009203 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.974661675 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.976824144 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.988405758 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.027546238 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.05036752 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.98589505 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.9505078 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.946009509 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.93215779 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.977469924 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.052667833 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.971882615 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.074814451 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.924049613 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.111034323 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.924003966 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.924196872 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.976933919 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.028064437 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.041599229 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.924462895 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.975907586 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.979378037 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.971433625 seconds)
  done (took 49.540429883 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.922472592 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.931165903 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.929564962 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.923929816 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.923609863 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.925738897 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.930055229 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.92839514 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.946688045 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.925594044 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.922763581 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.924269007 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.925697311 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.924249198 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.923542426 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.936624794 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.937747874 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.927644334 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.927039892 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.930347881 seconds)
  done (took 40.418470159 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.918990134 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.773822361 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.270473234 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.173873021 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.918426658 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.919214125 seconds)
  done (took 31.82662117 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.939950265 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.931446873 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.925169887 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.981807837 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.065308347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.934183675 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.925037998 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.937115451 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971611159 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988885614 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.946306708 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.953188788 seconds)
  done (took 25.352008447 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.920816859 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.924115598 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.937795269 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.938283708 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.936021637 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.933653628 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.932833664 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.919157337 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.942093408 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.945101339 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.93394464 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.939597623 seconds)
  done (took 45.059911914 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011544971 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.81142406 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.974775223 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.635127259 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394525862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133528529 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434927871 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261687043 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.926109112 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195945539 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.960498013 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030142434 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177721075 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922516857 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941028364 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.404337137 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.216623005 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147064307 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950002498 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673045039 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97120397 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.476643229 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.754178689 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.982058838 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135201726 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.056198596 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.184711849 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.882977409 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054674922 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959525787 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934204397 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922420187 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198619216 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298190205 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021309039 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934211048 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584471343 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.644062666 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.916474032 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.671540483 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.737865043 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.043598017 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933066466 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924056601 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.859079952 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474806846 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304573238 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.930057869 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.636093474 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925422459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936387679 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013463143 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.927588195 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.74255096 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876451629 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.205154795 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.926418337 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930889027 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.571341613 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026967661 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.508440777 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.90206145 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.119049093 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.686013994 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314800272 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.070389687 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.928834054 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932542965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860635664 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.763295749 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427343931 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07335461 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.946984425 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573991884 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228797397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.019935605 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869803982 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207955931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.753413824 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.904296688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153212251 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.878118575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861280265 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.786833313 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860297818 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185247601 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959482724 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.551257549 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962351296 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.263547848 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937735868 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944284724 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934462065 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15188226 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.809874324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926803864 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.740315992 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.080770013 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950293941 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263534148 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863043078 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.931823076 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182780233 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.138655792 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.196116823 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.445813251 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082332983 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928529512 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.006541567 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.88091248 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978847932 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.19883317 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984908161 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027851354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985741352 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.885767128 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221983528 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952493639 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.094172229 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.983491587 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055988318 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.247227013 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225177195 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994682279 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939095807 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930196317 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695131135 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485546603 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.195924035 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.931179895 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461782186 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980027196 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.931246727 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864967825 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.560071975 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992870388 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.91132413 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154056258 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901453372 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247167333 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864905881 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076287977 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.044817826 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.153690385 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.573501852 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.000076591 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188623102 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452740208 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.233294001 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983318017 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950329782 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02100023 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95240309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.388078125 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226983039 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.93475533 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.934586751 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.695946844 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.932357558 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932269609 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.936822066 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730186208 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.210160368 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952264673 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.934981331 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.8195525 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.945594047 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998606027 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937776653 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.942109996 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.479202725 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.678173988 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.942426684 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.562200672 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156786703 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942778348 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.69491345 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046175451 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.015217742 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202773861 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988636473 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.86786295 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.644294941 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.62607251 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932814541 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.868732746 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.933311684 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942664352 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944059819 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.313390116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209405737 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975297692 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.695495745 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.975278782 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944613473 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.938178992 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933537972 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.476430508 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027321537 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.507610291 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.984122846 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070589824 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.948128535 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.868478162 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938135762 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939432663 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93443806 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.890254249 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987849381 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.740968014 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308996458 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191773048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.58368464 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952270977 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.723973436 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.99386934 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.007390862 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.774807537 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901099194 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.975772153 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949793308 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.94582701 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.694918203 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.631763668 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.503876816 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245275816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240932392 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374583792 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.443022557 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.241831446 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274223899 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170508162 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465211491 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996281773 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.279809068 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880685708 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020525068 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.577985464 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280516366 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953953895 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165017275 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317907752 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.678422531 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101786815 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147409138 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971259543 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.890490297 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.902619978 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.138435816 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07768475 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.692534698 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132710226 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271543075 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.64012631 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.030285905 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.935291726 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.630818709 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017750297 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.646417125 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.297096605 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.485181802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.88014985 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405210466 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.940461629 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382734447 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287216609 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288209972 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.060212885 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875374012 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948861784 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948690021 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.937421287 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.934781753 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.807562392 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.19170378 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948869396 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173257062 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.234209137 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23438478 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.840462164 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.943557465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939792979 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228808734 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.764630993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107301203 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.42354066 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.47676731 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942247587 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.87268719 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873055401 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.631483707 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.947057781 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914804064 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15977916 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.122602733 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.89115436 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474490392 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186905027 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193357128 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.952721887 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.211280069 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211742941 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.67522567 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968554949 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.039624791 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650173908 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.042823739 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.20970204 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175610053 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.73928299 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170109114 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.979911234 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.750541056 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.939762433 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154597967 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.209219641 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852102237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167669802 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.662147095 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.952058112 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251735022 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996445212 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.990115365 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.091705022 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.136634833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952079983 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024844913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95068281 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.951475575 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950896444 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98665047 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90778078 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.06065133 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.955604843 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028888656 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.04539323 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.482359708 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.947225409 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216093356 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295178349 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264652592 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.000114507 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.941292196 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941605172 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876035791 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078514237 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38748015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216055715 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072538047 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.24072138 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967626097 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628520141 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35951979 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191186516 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21779419 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.838927253 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942596574 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966827499 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.208600315 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953792264 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.154247783 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168345795 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253701261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410685965 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.221633925 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317163361 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217290041 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310303465 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.943508095 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53285715 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.946426708 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632268604 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.982272711 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.862579483 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202885652 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955368234 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319961844 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966048793 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.141015886 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.461398538 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.696346326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232119001 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921173038 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998009184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218114391 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323151894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251797071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015161155 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955744835 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.646972488 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082027691 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.811899228 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218121134 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945915015 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156305176 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.655469796 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.954349184 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220963998 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249577695 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.942340877 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.825723387 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953854045 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.955728579 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.169148166 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206510407 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194573442 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955795462 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.955573548 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.763040542 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220679662 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001506747 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880779729 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.950777402 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042130958 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197038373 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981384038 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.463460874 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.658105609 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237251992 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.861654729 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968542046 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496718339 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322956791 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26701507 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.493327706 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169041508 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502842256 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.933097348 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255807181 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.951820788 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.489317791 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25877185 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.950616643 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.597438287 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993446373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.217694759 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263895616 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.971034795 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.71835073 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.921671384 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171666363 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54313318 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888964229 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947807813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.009819577 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.948198243 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.07886072 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959636062 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.830180689 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915560424 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.771610138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440478466 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.953035912 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.935899671 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.682038756 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.61869988 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98845289 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090635723 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956394764 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.663578186 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.24219112 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202600038 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.602808187 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.961534892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.953665103 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950105188 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877744825 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14787257 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.331200273 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248205539 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.443110811 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.992997029 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.953500353 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.165795253 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161458423 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.867549725 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083181228 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483522407 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994612813 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.718914 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.629560051 seconds)
  done (took 1718.795511208 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.975433025 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.987839427 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.966850636 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.053018528 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98843214 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.033788837 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.997662283 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.058846853 seconds)
  done (took 57.943897341 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.949090927 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.149867106 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.95883995 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.950149566 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.959543737 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.94959945 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.124613146 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.960434969 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.95936087 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.959946165 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.949226603 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.95098393 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.265885451 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.97495634 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.95144388 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.947936111 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.958838283 seconds)
  done (took 75.844134864 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.950450207 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.172093821 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.985978146 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.970538418 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.905130731 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.964398279 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.95538861 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.965977106 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.959274254 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.175364656 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.289717435 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.970185949 seconds)
  done (took 91.148962837 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.962045359 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.958915466 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.958800102 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.958604289 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.958813178 seconds)
  done (took 11.685516391 seconds)
done (took 2237.805646107 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.201665111 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.173888 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.184306115 seconds)
  done (took 6.243076931 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.102902854 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.149599576 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.272155647 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.275947305 seconds)
  done (took 10.690537366 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.248535095 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.36003464 seconds)
  done (took 6.493320788 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.362197895 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.963250636 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.350665371 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.952057421 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.957101255 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.955342511 seconds)
  done (took 22.754268538 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.957456017 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.960972203 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.957967696 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.960431482 seconds)
  done (took 9.723316361 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.937585514 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.698098732 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.939421696 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.956046776 seconds)
  done (took 21.41645174 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.706058782 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.357075789 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.701601581 seconds)
  done (took 9.651313325 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.428295083 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.84306412 seconds)
  done (took 9.157078426 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.216850728 seconds)
  done (took 4.10225235 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.986572277 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.229086747 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.483865534 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.493968156 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.557503612 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.811652732 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.282220215 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.210035511 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.371148194 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.389465634 seconds)
  done (took 25.702405151 seconds)
done (took 141.696572519 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.335716003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.321200931 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.156435277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.304699468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.175667926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.156161555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.170235347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.288232001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.805098794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.797936393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.346565034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.178252434 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.112836837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.319788825 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.114122089 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.192588717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.176650067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.349025517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.99777077 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.20848661 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.170163816 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.932567919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.186902718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.946992861 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.178022539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.110358523 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.510073383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.194412042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.152208907 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.520871358 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.112255441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.353905355 seconds)
  done (took 173.764323507 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.698791494 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957782154 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.957102976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957017646 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.351118793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.957762692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.958345305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.957735969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.255574983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.231377214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.957814617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.336512473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.959670462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.958036799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959336311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957493766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.424979735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.751117557 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.965029139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.96731648 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.972931453 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.226307239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.972927815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.26748422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.457932157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97542415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.945485324 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976944232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.962689394 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928572002 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.967210505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.958067768 seconds)
  done (took 211.021245518 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.958642504 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.958753845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.958617405 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.958487698 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.959776049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.959995408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.95941033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959110004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.589022286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.583130798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.966021241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.964343339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.967983965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959518541 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963448613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.958590132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.96428297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.963909392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.964897964 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.966237432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.971679186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.729192981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.968993667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.715924552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.963562698 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964101063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.960023864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966374106 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.968532895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.968791196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96850958 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.961179436 seconds)
  done (took 223.494527133 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.163123511 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.966574596 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.967531574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.895547242 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.967150369 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.966815243 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.906771427 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.157846057 seconds)
  done (took 19.899603948 seconds)
done (took 630.080500731 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.434860292 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.276987924 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.151591142 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.991353529 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.221752301 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.0230673 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.988198957 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.053448071 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710013359 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.055864974 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.680556556 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.00495599 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.769504532 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.011009637 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.11306953 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.048262256 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.53513135 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.633631859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.165209408 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.063275225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.160434776 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.950236444 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.066793426 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.73543544 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.791173756 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.994513687 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.17563476 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.545714185 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.998303319 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.153337931 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.76801677 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.373011429 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.999039097 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.985243514 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.043717031 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.022530425 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.340082529 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.996545493 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.106237601 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.752910172 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.039108212 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.593123944 seconds)
  done (took 107.416375925 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.958081465 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.956151588 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.955205344 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.956797349 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.956786579 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.956556972 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.955618592 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.955373607 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.956845749 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.95573268 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.9563747 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.957986933 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.956742018 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.959121186 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.956427523 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.956787368 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.957500642 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.958996418 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.956504622 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.956247804 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.95684869 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.956341901 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.971840312 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.956199296 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.957189471 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.957669771 seconds)
  done (took 52.795479528 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.970427825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.135688644 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.226313494 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988907537 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.970082087 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.974460924 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.988352253 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.9765588 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.97314136 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.972506672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.06435986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.977314908 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.988847593 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.226929749 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.984916629 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.971711047 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.972032706 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.971663579 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.143630837 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.987089848 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.990618047 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.97757522 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.989269223 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.984921643 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.973196905 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971406191 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.975220765 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.441158018 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.980721942 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.064238708 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.014389357 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.992066341 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.396266415 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.239501216 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.025627857 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.978929708 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.973067665 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.068701452 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.978543469 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.971927907 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.990799259 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.977841371 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.226400149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.4669277 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.985506533 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.972840671 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.451078898 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.07510843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.013528338 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.983436396 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.230805736 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.988245303 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.975535076 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.973646551 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.008286543 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.982904777 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.973584198 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.294087353 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.984338059 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.991826281 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.978832638 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.974164155 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.150636372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.981552283 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.13801611 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.98211517 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.980141934 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.974411067 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.231881863 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988794959 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.473805666 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.98781426 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.975253416 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.066587646 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.142374549 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.479101999 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.986907675 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151242246 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.412686424 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.997168497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.981898504 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.431348242 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.001335187 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.981800289 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.976933652 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.976698005 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.97590853 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.021044419 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.990474379 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407423761 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.480895337 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.313249516 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.000358364 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.990408749 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.975133636 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.296451439 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.984003052 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.976603624 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.224203302 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.483340092 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.988070066 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.983511077 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.458873069 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.990909228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.995690857 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.984080002 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.238866782 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.990209598 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.022577001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.976790141 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.982093704 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.978770453 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.994056453 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.98363893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.977207774 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.449480429 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.086467772 seconds)
  done (took 244.503471875 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.972368954 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.970432267 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.972080192 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.972743849 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.969507898 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.975914321 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.969874328 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.970617269 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.975294713 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.969772842 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.970545719 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.971357128 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.971917505 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.979494952 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.014917177 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.977829889 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.627465476 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.971218524 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.971205329 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.979656086 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.620675177 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.97958767 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.972566608 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.987850137 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.971232919 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.971136584 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.978660639 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.006275441 seconds)
  done (took 170.547751575 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.978652924 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.092916628 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.994087934 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.00588149 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.987260159 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.975927611 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.001513638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.997698928 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.982890154 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.976497252 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.976501242 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.039456156 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.988737315 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.076219359 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.011861062 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.008905436 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.084899469 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.988076832 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.977870429 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.97675272 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.006261838 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.972740305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.038703623 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.102915123 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.995539181 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095464115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.981774983 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.981080969 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.97978556 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.096063452 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.99244511 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.039296188 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.006105158 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.996693261 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.098090048 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.093672102 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.087096276 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.012332495 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.984902156 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.977797628 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.978824161 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.967069745 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.096309753 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.995461582 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.980669535 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.084594209 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.997873591 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.981733481 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.989349253 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.978272048 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.993567768 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.997419761 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.044992968 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.110248412 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.013187536 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.005665907 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.004764225 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.267885284 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.988554602 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.080314276 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.976204803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.097624416 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.99928782 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.968673023 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.98025353 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.985369004 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.007909471 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.012454223 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.087422773 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.990659206 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.080019949 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.017737059 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.988998806 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.980036452 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.983610739 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.097918332 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.095827926 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.017517653 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.017299831 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.014487492 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.975551075 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.982646982 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.970688477 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.999365771 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.984161977 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.097894023 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.095677934 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.991992775 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.983136807 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.983723652 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.984718762 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.006605907 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.105877213 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.014034327 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.076025531 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.049787116 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.053478433 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.994459654 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.994487123 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.984314401 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.043772261 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.995271874 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.993186005 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.314557836 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.052584937 seconds)
  done (took 214.252093667 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.437193949 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.03772343 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.04167984 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.296703554 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.405922034 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.878176211 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.026704833 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.031021185 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.052921505 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.216248364 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.101084128 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.048457787 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.017251925 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.004061813 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.032235105 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.051431298 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.039998009 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.362912785 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.150218515 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.115816206 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.009648187 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.295178965 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.350192219 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.42649957 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.065724295 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.36652388 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.717547475 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.169540691 seconds)
  done (took 64.662378282 seconds)
done (took 856.068527468 seconds)
SAVING RESULT...
DONE!
