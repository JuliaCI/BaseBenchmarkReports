cset: moving following pidspec: 12571
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.33318612 seconds)
loading group "string"... done (took 0.546137331 seconds)
loading group "linalg"... done (took 7.258763855 seconds)
loading group "parallel"... done (took 0.153860183 seconds)
loading group "find"... done (took 1.16860873 seconds)
loading group "tuple"... done (took 1.731897044 seconds)
loading group "dates"... done (took 1.225117912 seconds)
loading group "micro"... done (took 0.217864675 seconds)
loading group "io"... done (took 0.921159182 seconds)
loading group "scalar"... done (took 36.352699913 seconds)
loading group "sparse"... done (took 11.167282498 seconds)
loading group "broadcast"... done (took 0.90156929 seconds)
loading group "union"... done (took 11.97343883 seconds)
loading group "simd"... done (took 4.401888672 seconds)
loading group "random"... done (took 8.784693862 seconds)
loading group "problem"... done (took 1.726454806 seconds)
loading group "array"... done (took 20.476866189 seconds)
loading group "misc"... done (took 1.640632386 seconds)
loading group "sort"... done (took 3.269162371 seconds)
loading group "collection"... done (took 16.812520231 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484132272 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122166831 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114299312 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118423327 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138735038 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113646252 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121503037 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086367589 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.793595375 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145839314 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118436699 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412402491 seconds)
done (took 4.893735877 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173256668 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083497296 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080824112 seconds)
  done (took 1.241253387 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065296604 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120855327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066713442 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066470759 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066356729 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065939463 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065871973 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065630653 seconds)
  done (took 1.595730022 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073013596 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069024629 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068525119 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067807402 seconds)
  done (took 1.356776403 seconds)
done (took 5.52047513 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76334385 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201560733 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183206914 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39596672 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127701896 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153227637 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642470463 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.300639643 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185734288 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08098263 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10282843 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316559379 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106908115 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635413497 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076433716 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089878861 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13621312 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418947814 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.06675383 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081803844 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088895112 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127551477 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088014181 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074431835 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141198205 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067893838 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.131556625 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079908438 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065707464 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206944402 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172043079 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.644501328 seconds)
  done (took 10.071359189 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095700682 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096866695 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068154406 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136523743 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098764807 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070052683 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070972142 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067008768 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086403289 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128187101 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088897325 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101009642 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065188655 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06832593 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084169683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204075263 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082014948 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08201068 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070111349 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075235281 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115860514 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077881138 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077509615 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07738232 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128161597 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179000753 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095885396 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097142887 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066823414 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079923026 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114489829 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125139686 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066285908 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065877831 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123911607 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093823176 seconds)
  done (took 4.541402594 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.282895643 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084306207 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139446694 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089841931 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130476173 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064399219 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106270278 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065368459 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080158712 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200064846 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351352605 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584000629 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110746503 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103195503 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069854864 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068037734 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066349257 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.324859802 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106590054 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102035546 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079541646 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068481588 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067784947 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.339653362 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066584294 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062888327 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066715421 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057017582 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121013694 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066706875 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.905219648 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123954122 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065741398 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099753333 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168775924 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088553146 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.264670772 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067669025 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064119264 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065026785 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149814213 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069431204 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06545457 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083422777 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102726286 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112230958 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065241898 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066687783 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161907321 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06413366 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078081269 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.969022203 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153969457 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078586954 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06455937 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.247421469 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085803907 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068517752 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064461076 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193124883 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137178986 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067982698 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065781256 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067754115 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068659382 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.348601369 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065367217 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.985581851 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06733182 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07660918 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090050354 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06851643 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069407526 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07198664 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071867063 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084883885 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063544051 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06510926 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073993759 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065192668 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065163385 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066061373 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083220253 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.356688798 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06551051 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072034334 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063924155 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085200923 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095390538 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065152106 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064504285 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099012391 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066934207 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.168568593 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102679515 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067206384 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08298836 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069256937 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113174723 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066501506 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099650404 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067557923 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098636401 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069137759 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104175523 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080410718 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068068556 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.400569568 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064854745 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064264352 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068234549 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065483728 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066623341 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066493373 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079897635 seconds)
  done (took 21.011707787 seconds)
done (took 37.984641881 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.268074689 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074316335 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074635952 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074806708 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074992185 seconds)
  done (took 1.743008429 seconds)
done (took 2.89989663 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118737943 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098493246 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063943452 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094651639 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064278624 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099749806 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098371078 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080053067 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099054074 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063941369 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09545829 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063855226 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063809644 seconds)
  done (took 2.275122209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082290248 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082804821 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06968091 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082728311 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063051977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08163569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080140112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08856842 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080318237 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071598846 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063488222 seconds)
  done (took 1.992647599 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081067362 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082940044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069760577 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082271333 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063694212 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080890468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080601398 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084977114 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080850986 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072669621 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06359149 seconds)
  done (took 1.987846589 seconds)
done (took 7.395656881 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076521294 seconds)
  done (took 1.212217689 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.586415184 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.057529389 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080486847 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110984028 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183104553 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117448515 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.267416123 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084782985 seconds)
  done (took 8.802861085 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087367236 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081897624 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071371148 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068647032 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071091891 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071330175 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068362205 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070254736 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06955454 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07124497 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070697111 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068808681 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071588665 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068099248 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06856376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068737493 seconds)
  done (took 2.361115771 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091545202 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090196034 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072981044 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074364047 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071804468 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.0717349 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073437921 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073679144 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070521874 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071820536 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074065831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072932843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070780145 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064956104 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073990241 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075477587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07109476 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073908279 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074514559 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07471372 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074161031 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063856824 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070891144 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0731856 seconds)
  done (took 3.013209914 seconds)
done (took 16.53330091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110799071 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070744717 seconds)
  done (took 1.331303441 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080163862 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081675432 seconds)
  done (took 1.318897435 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081790227 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065299847 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089458067 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077642823 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06618255 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065877685 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086309683 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065688365 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065628309 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065936342 seconds)
  done (took 1.887742908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068180763 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077616233 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070168203 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080082455 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07293595 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063651371 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071969487 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067126367 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077665466 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062301535 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070407982 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081184391 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070442398 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082933647 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072132062 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067725637 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070135138 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066613174 seconds)
  done (took 2.45350012 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.0648984 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066755421 seconds)
  done (took 1.29331504 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066450358 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063166802 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065626614 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066326309 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063062294 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062207735 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062765446 seconds)
  done (took 1.607682497 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.375955412 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109581388 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297815245 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070265962 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081853148 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248513981 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064974574 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069771909 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070002135 seconds)
  done (took 2.588820319 seconds)
done (took 13.645579663 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077955072 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084811602 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094522727 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.357885107 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091160387 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065397647 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113837244 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191496382 seconds)
done (took 2.246690911 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20879874 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.59075272 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.379584332 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193463073 seconds)
  done (took 2.325324728 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32040437 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08556064 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05825658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066848115 seconds)
  done (took 1.703827373 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06550134 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068109688 seconds)
  done (took 1.304796652 seconds)
done (took 6.71482564 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065678056 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065256354 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082170764 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062578278 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06551335 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063107007 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063126838 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065213356 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065445907 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065313873 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068531057 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065487008 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064211314 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063079806 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063000859 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065425833 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063251956 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063245316 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063527446 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065258968 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065250863 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063118342 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062938934 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065334515 seconds)
  done (took 2.771018309 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082531892 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065988292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070827696 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070846572 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069507586 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070738976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07094809 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066212875 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070571531 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067653955 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068986515 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069597532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067737554 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069881691 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068012559 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069278228 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0706891 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066239222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067468897 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069196532 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071019186 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065729688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070111638 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070585787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069005548 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069542223 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068100412 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066005474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070689069 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069740664 seconds)
  done (took 3.262409875 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069142378 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062761973 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06414843 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069370936 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062945309 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064885961 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062666669 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063875414 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063785737 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063195243 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06459954 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063021311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063421843 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064352351 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063913688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066511831 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078414876 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063651601 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063262564 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063980792 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066820607 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062903118 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062944981 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06332794 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063432025 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062485331 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.174111639 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063100063 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063711289 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06262152 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066088275 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066608579 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063149293 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069234426 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066848489 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062810841 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067210987 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062800857 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064189153 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062768192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062243717 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06327661 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063035206 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069689006 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062970705 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064138519 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063282613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064028963 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063498247 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065411353 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062610249 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062742098 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064251933 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064048079 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066867586 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062485691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063716551 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062506015 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063586655 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062941678 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062664814 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062497802 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065200644 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06359563 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07760467 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069817671 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063386126 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064761626 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063993573 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065950385 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064563873 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076039285 seconds)
  done (took 5.957944194 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090888698 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086185476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065585623 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064673189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06213879 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063561678 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066775354 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063653632 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064689749 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069246047 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063573962 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064629857 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064434998 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076424554 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064115992 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064916701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069388011 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061299759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063682255 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06684055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063931547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066961872 seconds)
  done (took 2.679608644 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15343442 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07019592 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104350855 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072182812 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067274989 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072021074 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069151487 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069219931 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069680153 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067826124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067714766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069356504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067629765 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067581775 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067454224 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067846933 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069606835 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067880455 seconds)
  done (took 2.544099191 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076785898 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065526079 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085524515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065471311 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065309027 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067901271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0701642 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073675185 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067621376 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065281958 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073680429 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067406785 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068041221 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065594471 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067541854 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065073473 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06821482 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06577478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07322176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070133492 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070065245 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073475481 seconds)
  done (took 2.716958094 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078765199 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067176593 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081163245 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067685993 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061398209 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06360764 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069739026 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065301558 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069347023 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067112748 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065314327 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063886711 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068732066 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065215508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068744641 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065299573 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066682053 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06518702 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067011808 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061129678 seconds)
  done (took 2.53768065 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085725121 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067115893 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067328535 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075247746 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067439471 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067265021 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074781507 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067194923 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066949252 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088522318 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067067578 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066852125 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074410937 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071761384 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067065298 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074978042 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074722338 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07500414 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067002728 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066662666 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086701801 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067067411 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074007029 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066734946 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067019357 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066887191 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066449239 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071827952 seconds)
  done (took 3.190180353 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066083183 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064883079 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063320858 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062966228 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063089792 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063309289 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063028404 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063391969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065232058 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062850631 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065530926 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065729124 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065538079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065163438 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065734504 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065397067 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065314788 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063133667 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063314473 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063214678 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065463132 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06590619 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066027442 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063151393 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063184213 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065084711 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062900611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062953006 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065030177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062853759 seconds)
  done (took 3.122587767 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075345078 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073183381 seconds)
  done (took 1.342745214 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062836105 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079514769 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06380049 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069397138 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06968287 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066037012 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073251184 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069440297 seconds)
  done (took 1.745308354 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081104294 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076484781 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068072782 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079940864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076091319 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082778595 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132566265 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067020451 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072278912 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063872636 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079315102 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064870601 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071761904 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06601771 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071379235 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072067893 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063843038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071726849 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068530888 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064275363 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067156532 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074292676 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068207499 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061383453 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067452739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087335141 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076581187 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065966026 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068880317 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073320256 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071606592 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060159669 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065730413 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066336967 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063997593 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075147648 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080328841 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068668229 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074074886 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066532132 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076119044 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06089542 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070130135 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071965881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075451891 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066134747 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066653833 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061089988 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063366358 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068010085 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061206894 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065952914 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060728302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075124156 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069489122 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076333916 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064793661 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06759977 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068582982 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069160737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072716622 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068275467 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068749848 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065746946 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075634675 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071083198 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075215415 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061040146 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060214103 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064252401 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075483591 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08832717 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072801319 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066553075 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0667927 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063995557 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069116687 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067136692 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07131496 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071842673 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065920377 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071038587 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072739014 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066514799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067944592 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073412562 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063887732 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068734417 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063117778 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080871401 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0639749 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062956641 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063288072 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074649814 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068269075 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064931233 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063026574 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071587427 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059305179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065191276 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065401767 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065646656 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07433206 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068491484 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069035108 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072735889 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071321771 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064537986 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066830452 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061712565 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065177519 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063355201 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071138756 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058769137 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067195196 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064816489 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064424447 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072374425 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.187292881 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067042819 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075298802 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073076044 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065461239 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063824666 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069336333 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067173428 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070476609 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074747602 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065155479 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062134126 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061763905 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069982733 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065967748 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070021464 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070965149 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06966375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060890261 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065041269 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072113619 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075324058 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066923999 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067363792 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072505201 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06769727 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065529084 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072999959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068880862 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065743364 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071798784 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067441406 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06111087 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06973523 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068945461 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064909198 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069726249 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06977784 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069209505 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067627482 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065501322 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074153481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06667073 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065580972 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066720272 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064718932 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076883678 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068395082 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061959429 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063606024 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075526417 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064591716 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06591343 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065476557 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068686675 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067071074 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064466989 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066253585 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068294689 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076624439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070065168 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066380699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070909793 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077245614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065156919 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068911751 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065837603 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067266789 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066704434 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074743433 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07151568 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071312194 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068499415 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062517075 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071212681 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073425207 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065521302 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06351401 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064673704 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069919912 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071586403 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070141047 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06646073 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063736599 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06611864 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068983361 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068002992 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064898198 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06487269 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071752547 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063565714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072574946 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066028322 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075183848 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06823131 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06000691 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067942083 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062799736 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070207626 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060144741 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062654184 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063574932 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065416301 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063448352 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066860743 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.058971318 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070919657 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07195658 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064539783 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063984341 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064456938 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07117065 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06591178 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068383169 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068217487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070250792 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074678507 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064476325 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067490312 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074245781 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064150053 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059135403 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.197723477 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066065678 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066488767 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065781624 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064520384 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070241143 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076086933 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074133682 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060584337 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069569252 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064700603 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065549 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061831725 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070986173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068944156 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066931755 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073539673 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066812227 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066558642 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070640733 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066083521 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067382555 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06814284 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070420321 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066544539 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068136099 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06570195 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069395679 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065446673 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064980404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068097542 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065983715 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066935956 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071776559 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065870242 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066670052 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068713548 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067242252 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067308085 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06693917 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066087098 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069489921 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067046904 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067119619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068834537 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061876361 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073883282 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066176355 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074319686 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066387174 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063674085 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07397894 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06872505 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072199093 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067884717 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067326545 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067505775 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065894122 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.06991282 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073164278 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064204821 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07724238 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073745461 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066736813 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069361445 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066441999 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068010541 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06581982 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067413571 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066718223 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066679263 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066441216 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070625522 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068117858 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066371967 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067734604 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066878276 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065669436 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066555581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06076478 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064973434 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065329701 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065828291 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075865308 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06693197 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065438964 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065064338 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066606738 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065081654 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062755729 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073447469 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074753102 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066251321 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072538452 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065125169 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067261819 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075658025 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059841806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063821773 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063391959 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063433252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072166641 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065421316 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073642123 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064951439 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064163055 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061956546 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065231392 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063038204 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059297332 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062576111 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068097375 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063716493 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063523102 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064703848 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066861833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065030486 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073570087 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063468442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064962518 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065169406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061870298 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063632389 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063742801 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067349917 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.197025094 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065723223 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064868332 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066998187 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068008763 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068533665 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066550252 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068352519 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07619982 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065843595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068913225 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069676146 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061848663 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069740981 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066653403 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066431848 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065682014 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06979246 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070485839 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067652223 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074906982 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066791936 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067798204 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066769641 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064959122 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065826874 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065884527 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065820859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065386423 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066875659 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074236614 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06464428 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069258474 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066665258 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066555085 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073047162 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067056458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070402045 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073021705 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066390942 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068223517 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074493825 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07090492 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069431775 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068342135 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067758607 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071793653 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066112969 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072476497 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066764511 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067413444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06844135 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064184188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066356672 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066747216 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065381267 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072081586 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067442168 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065524375 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065694978 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064053399 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067042717 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070079335 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073423569 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069124445 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069539627 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061634528 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063847437 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067570187 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063928702 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067680245 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068449621 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071725088 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068708143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066252702 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06473652 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074409872 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07145219 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069281078 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064130208 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06960833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06644233 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068503736 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066718049 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066214883 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067042357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070004806 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067516448 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065868183 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072903943 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069293577 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067302378 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067652048 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067107044 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066248536 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061304099 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066700855 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067559006 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071078037 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067852503 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065774647 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076327658 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064026318 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066128232 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06889496 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065354264 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069749198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060561426 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066481839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065660943 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066291219 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060256481 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064336022 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062915191 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067147096 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064015026 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060102772 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07467795 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073820977 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06796392 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063730597 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064036816 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059899995 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060223648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064161903 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065744621 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.199950637 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077979464 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067809991 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066552504 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062913983 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067444065 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070601508 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070569601 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063977757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062803102 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066479777 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069517925 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072784245 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065204064 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066613726 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069574683 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069016461 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064607702 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070409586 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063457194 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070477467 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078976399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067104159 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06752914 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072787131 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073556887 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067769979 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062073691 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06698655 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06940182 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067305111 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067833492 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067438116 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081138919 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069563516 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066078507 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065537618 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069173415 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06604502 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075121968 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067621753 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067533354 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070996328 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068323244 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076366706 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069403846 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074633363 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069661198 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069733334 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065951172 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066585456 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064864326 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065544103 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067822735 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067065777 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071129044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074990243 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0664275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076708925 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075248689 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068213931 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062941759 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065558118 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065659258 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061787808 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067283569 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064592208 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064867069 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064499604 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065311859 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067752509 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071570676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066989694 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066901199 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065877086 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060264916 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068686109 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068378394 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066995598 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063167162 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066350957 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067210538 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070243593 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069362829 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064182565 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067865158 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067591348 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066600343 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061508878 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072727567 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065153113 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067809663 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065493772 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0659423 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066545236 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069303772 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070807919 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06702313 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068677532 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070203241 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068347562 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063374885 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063259434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071391222 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063779227 seconds)
  done (took 42.260315378 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101155958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063435922 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06263034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062322667 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073725231 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063006169 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062172706 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063099211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063238146 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065700851 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062254963 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062259556 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070780888 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078630095 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074130935 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067132435 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062475151 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063131695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062224382 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063141929 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071032124 seconds)
  done (took 2.734517685 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07330336 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070790651 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072135124 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07597008 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067314742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070552784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072428204 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070320458 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085481722 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067423727 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07594624 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070763366 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067361267 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067258619 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067086118 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070876075 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07605801 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067408648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070615703 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072694652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071159735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072903757 seconds)
  done (took 2.857650121 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067324727 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06565493 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067975482 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06195608 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065891262 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061818576 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069755712 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064149761 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06949376 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065466653 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065263232 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065128082 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068019871 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061429952 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066151627 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064531501 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10861101 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06990932 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066196495 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067138215 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061784891 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068110462 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062074394 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062317281 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064836408 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069651763 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066791087 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064205851 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065619153 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065108787 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065954795 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064054746 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067607772 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066858909 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065062592 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064872182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065790346 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065870402 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061825335 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064010406 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066762496 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061807902 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066205548 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067049592 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063767944 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063617701 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067451793 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065337032 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060743829 seconds)
  done (took 4.532576139 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080469298 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107821705 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067710806 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088128815 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080006866 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07523788 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069533273 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089101695 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063788738 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064401817 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08152197 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079439072 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066480205 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070546716 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072688193 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066523932 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067425752 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064808134 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069863414 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065414117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070094112 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072739038 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079899468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078556049 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069690504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06491884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065101905 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070435572 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077856484 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070312999 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07027959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071129664 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080758234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067561543 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065353935 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067660316 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081380169 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065467728 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06818859 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063370017 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067609482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069667942 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071864345 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081534999 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065768694 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070429875 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065527481 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062515196 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077983814 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067768472 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072961344 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079644617 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069113451 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065967727 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069856977 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079956386 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065244864 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063750638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068317351 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077232051 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063038719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068635587 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07867287 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066964412 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072235331 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079211343 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070480426 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069358939 seconds)
  done (took 6.318779612 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074762824 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072379007 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080835221 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079697401 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072250802 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072678047 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07205899 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072194185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071919732 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076871306 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072776128 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093186749 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067338219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075058784 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072624768 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072978517 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072278197 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072432669 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07237211 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072348271 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072711294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079872873 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072771563 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080066846 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098339745 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067840176 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072353977 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072216702 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080478893 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072459515 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079074199 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072057257 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072167698 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080039696 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079554768 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072382393 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065111575 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071789995 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072300093 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071729766 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067594697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079538892 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071561323 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067123214 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071905979 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071770013 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080066406 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079169227 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074221435 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076554448 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071874865 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079598991 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071865293 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071999075 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079536483 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104368341 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079437754 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079634052 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071664089 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079204132 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079691427 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085586402 seconds)
  done (took 5.99778957 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08329844 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07450176 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075612804 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061460964 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063781928 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069897731 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063996505 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064395488 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074125912 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074140534 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0765208 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069771573 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07266429 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076422664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06957932 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072464284 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069249288 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069371506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074527813 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069390153 seconds)
  done (took 2.73830401 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074219655 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083006839 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066763947 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071704894 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069320301 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071335638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067924087 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06919112 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066907841 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068923383 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075675966 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07633335 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066665717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071628807 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075984124 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071484894 seconds)
  done (took 2.447888338 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075260053 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071576677 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079299542 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066080088 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064214069 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062644807 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065683739 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061103405 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062186777 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07801674 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065691005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068062971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065829492 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064631914 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062582462 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068495107 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062255819 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063187587 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065587536 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077513338 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076242432 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064136458 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066802742 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06608123 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06596693 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070644497 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065075198 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0633753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063093049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066144103 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066043975 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069840807 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062683681 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063709144 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064387588 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063059739 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065103396 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065731662 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068704587 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065456362 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063571999 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065102007 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065122816 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066459365 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061946322 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065994704 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061829476 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06747873 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064016551 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065724003 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065094605 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067873268 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06600923 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071947058 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068465694 seconds)
  done (took 4.959916533 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078621651 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069571522 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061815522 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063644998 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069562992 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067505167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069163389 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067520575 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067392814 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064076566 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067486047 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068277682 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067407751 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06903036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067691408 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069354723 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062092384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067673755 seconds)
  done (took 2.529465896 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071316602 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065993452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072360334 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065860437 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066006925 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067856449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061970759 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063948876 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064378563 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065752915 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06542225 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067671773 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064543389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067700896 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065983559 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065646514 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067822321 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064846766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06566935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061802138 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068357075 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064692244 seconds)
  done (took 2.762197386 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091652092 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080676882 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136987716 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079076179 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083301573 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071576655 seconds)
  done (took 1.85280278 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090386436 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078556258 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066650844 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087933663 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07288262 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06700926 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067046018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067285618 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075774509 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075879397 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067139667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075559473 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075736643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075055446 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073239047 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072622889 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067241303 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067215157 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065815755 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083853969 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067709825 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075674145 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067496936 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066976917 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067070909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074953872 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076144046 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075829611 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067030787 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075268669 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072466781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067315665 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075673694 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076032186 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068799014 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075889677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067975309 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084004719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073144685 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075031955 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068844435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0733295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075958784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071903519 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075683709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067545465 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072179585 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067335934 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067635492 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085733933 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073118017 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07469513 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073163592 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076147742 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075505986 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085794928 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07538547 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074702073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073678284 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078493718 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075118329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072590488 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074704425 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076165144 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073030283 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075047705 seconds)
  done (took 6.17004198 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080774966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085414447 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068252793 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076067942 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075426924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067732708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067263058 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067148415 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06752768 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067149896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10725227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067680609 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075258497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075434395 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067531741 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067553978 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067411216 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074989592 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06735701 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08555914 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067390613 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07503499 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074745392 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075182286 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076080115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073207103 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067478422 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067513942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067369464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067318051 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071938749 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067531183 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075109752 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067561797 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075061112 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067572285 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067139919 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072134179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067853804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073181045 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0754245 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083675189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067429396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067198385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075910668 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067130851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067119233 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067063427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067499678 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066989414 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07562712 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076201628 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075664116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074941931 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067136972 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067227647 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067145059 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067505392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067710167 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072727281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074903332 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067295143 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085780598 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067390434 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067102761 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07526233 seconds)
  done (took 6.078249516 seconds)
done (took 127.279566764 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184022539 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168881582 seconds)
  done (took 1.659121218 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067710958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095688544 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076816767 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127868115 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066834674 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099266003 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097805373 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077441403 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065765955 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066678266 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066411542 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067925881 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130183178 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065903685 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065992209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067568072 seconds)
  done (took 2.62556274 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095984469 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156951224 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098875872 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064430732 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096247463 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072818748 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064499975 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075081281 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070831528 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064755749 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072604604 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070125915 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064912048 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070368537 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070875135 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072595587 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064620602 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072786876 seconds)
  done (took 2.740840324 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100338773 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090735377 seconds)
  done (took 1.515980452 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158489543 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106047624 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.144566232 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342010775 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166775016 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.232703293 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12982195 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130057353 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119581286 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124335945 seconds)
  done (took 2.975449934 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097161544 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150106247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255459853 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11467502 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072041649 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093977553 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116790089 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077669505 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080203189 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080488003 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079912945 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075599265 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099308933 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073482117 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073326409 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075612208 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102392609 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072428833 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073606946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076595218 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099206992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065393832 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073258325 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072284548 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077672019 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077455474 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065640535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065825395 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076853482 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073653353 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077047332 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092617586 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077210635 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10608024 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069726415 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107134874 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075823469 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073694949 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073260587 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073789532 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078910758 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07869324 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071778881 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075774181 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065142326 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076290192 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065350924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065133848 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077874528 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06640748 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077647794 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07652525 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106507526 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066147126 seconds)
  done (took 5.903787067 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100572016 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104130664 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071273619 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107550309 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096832474 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071415262 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100121686 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090463968 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101915895 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09230585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088145978 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070824982 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08149689 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082614452 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108786107 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101318255 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095217793 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070419591 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101055233 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102023996 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068297304 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094617374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091034532 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100965827 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067453113 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070583615 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068001732 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070703714 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076533696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077472364 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069833659 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101023517 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083709497 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077674541 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06718468 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06795817 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068487701 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080811071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097047876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078271843 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077371878 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067642414 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068191039 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069716576 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090874446 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067475682 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07901947 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080221951 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07862577 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069823059 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070611604 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068184209 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069735561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079541117 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077163344 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08028133 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07949164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068956326 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06851957 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072085247 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080560523 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078681764 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078517258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093155314 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078404446 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068434871 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079939935 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084460962 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068427312 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069908765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068482542 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069400754 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069751243 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076921434 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077160231 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069499932 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06931211 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067749613 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078622445 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076977735 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067753931 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075943943 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066503175 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068445104 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06952572 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069258936 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075709855 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077728787 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068472516 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066633602 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067859463 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066785189 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065183843 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074228033 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077282659 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07601828 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076344933 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068490065 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076802404 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075850483 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068706569 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077049963 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067243381 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197991808 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071346816 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078821748 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077980224 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079778167 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070300446 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068932491 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078575272 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08033799 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06963132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077973161 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080710965 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079382695 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067936904 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081221387 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069623656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0800742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07055564 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079247796 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06880785 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079940615 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069460368 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067446751 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06932669 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079626077 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069827609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068454779 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070303862 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070596786 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079653429 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08255063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071513805 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080988701 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078107613 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070232407 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079516496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069707354 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079783653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070242426 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07023643 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067616755 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081533252 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069063726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069243343 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069478512 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080725576 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06918496 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080555278 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077126152 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067982171 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081320343 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079988726 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077127079 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080036919 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071246947 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068902426 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068595293 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070020994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077191432 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079856262 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071136836 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068788917 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077512675 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079075005 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067215912 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078199776 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078191031 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078007966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068656316 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07014707 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079210866 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080396913 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077514505 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077618619 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078007849 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068691904 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0770144 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077790971 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068424484 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083932138 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068057389 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081353175 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077963854 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075767224 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077538675 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079265902 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079309181 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078994844 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081459243 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067171829 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067517359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077315206 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066488752 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067811305 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075301458 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068250545 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069010174 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080452358 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067192685 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077280882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065700234 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075977533 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065757481 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068680931 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081176224 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067200566 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068526518 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.208797912 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070975413 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077980946 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081669975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077922165 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068970679 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070502155 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078493518 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078764919 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068528598 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069331816 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071599148 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077936002 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076869759 seconds)
  done (took 18.647094932 seconds)
done (took 37.399329784 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207545206 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15023119 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182030616 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117850597 seconds)
  done (took 2.080167386 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121074563 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101406072 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094670182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06502904 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101939922 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064495236 seconds)
  done (took 1.910621111 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309904538 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210144176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181294624 seconds)
  done (took 2.057999969 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197470034 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18706872 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394556372 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252334293 seconds)
  done (took 2.498728575 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143375161 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089054417 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06663401 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082724177 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.14033516 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160608192 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100738209 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126189618 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078025235 seconds)
  done (took 2.401670711 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148275027 seconds)
done (took 12.457519072 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.165698947 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.207555313 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.10150598 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.202834171 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110997187 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07068923 seconds)
    (7/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.152457612 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075902058 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081663889 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091314899 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.176444017 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082760792 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077780048 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188758984 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091404738 seconds)
    (16/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074256022 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088548216 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073582231 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.15055127 seconds)
    (20/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072114657 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165656767 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196746278 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178346889 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078780171 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062179109 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07628336 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094315148 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.163535289 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072326453 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141634333 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086803185 seconds)
    (32/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.169153216 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.174440912 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.194924345 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071229387 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.18882681 seconds)
    (37/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.144531111 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.177821342 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097240698 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094605143 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076138025 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099529934 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089971831 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086688065 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.119333109 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095311731 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158811097 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071904137 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21450095 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071696492 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.148999396 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065086606 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066518284 seconds)
    (54/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.155245264 seconds)
    (55/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102035577 seconds)
    (56/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.109404862 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066173708 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.193701513 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060480743 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143186967 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160578875 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072248785 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.165156708 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.172630088 seconds)
    (65/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105982842 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078081387 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050737497 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106171018 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050417742 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.090992738 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178116305 seconds)
    (72/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.096727454 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.065358804 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071629064 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.061990194 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095962518 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064143061 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.156778168 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072275968 seconds)
    (80/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170315528 seconds)
    (81/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067944323 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.260149761 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150939453 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075270756 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065568037 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07308005 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068218446 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051820397 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051907042 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109723421 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051026286 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077005527 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.150239552 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051623839 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08743116 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065185793 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197729547 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051621808 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.397283172 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076219864 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092023796 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069554414 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065802464 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122205669 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149765986 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070116498 seconds)
    (107/309) benchmarking ("sort", Float64, false)...
    done (took 0.125174848 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.133238144 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095953115 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067470323 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05222424 seconds)
    (112/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149109099 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071875867 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147632001 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090817845 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.133924379 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073371581 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078750512 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137755868 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071041986 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077816023 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074875836 seconds)
    (123/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065658765 seconds)
    (124/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051976961 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.162117415 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.184441379 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070863853 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071435506 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071961413 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07123973 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.149308154 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070314524 seconds)
    (133/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051756099 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092821366 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071758268 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075696517 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110689478 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052746754 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108672433 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064486292 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071766064 seconds)
    (142/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.096619808 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183556209 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133937881 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051495153 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051995754 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 0.13817583 seconds)
    (148/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150045198 seconds)
    (149/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075923123 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150915934 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.134335242 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073225484 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108208124 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063654142 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073029286 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074420593 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051731333 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064625762 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064960037 seconds)
    (160/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061055571 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064471319 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064623171 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078681522 seconds)
    (164/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069434008 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171004462 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069785505 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066258962 seconds)
    (168/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069078527 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065232971 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087507293 seconds)
    (171/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052404722 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064865837 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064837903 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147600801 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051117567 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072020065 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07481464 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067794148 seconds)
    (179/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088235462 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099426021 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051704975 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051593269 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071528278 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066978281 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070001143 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072472126 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071241105 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.193084438 seconds)
    (189/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.0610892 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07481416 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052631934 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071403099 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052584024 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064450606 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079953445 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05134247 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051705768 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072841574 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070220036 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062651722 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050836153 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050150651 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065226836 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063653355 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050234642 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111164961 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06306553 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067434193 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050047023 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070129935 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071713027 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07118182 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051441552 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.060744866 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.16904555 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077102946 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.093746794 seconds)
    (218/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116018623 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06566023 seconds)
    (220/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075074861 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05062644 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065218102 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05032548 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06480821 seconds)
    (225/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104212044 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050348677 seconds)
    (227/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.093213142 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.064291212 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.050792802 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069116837 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049948579 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084032477 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.062033657 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087384004 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.063370595 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.062766917 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.058831754 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050043185 seconds)
    (239/309) benchmarking ("sort", Float32, false)...
    done (took 0.124223487 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.123719993 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051752747 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.130419784 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065655759 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.051521899 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.089382386 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.179779131 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.050949306 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.049389499 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131410995 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051308961 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083434392 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.050618767 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.050498226 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069317342 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050699365 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062579568 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049733796 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063221208 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05055819 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050049714 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084223993 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.084501669 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12301517 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063079917 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06451103 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069138785 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063286339 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.097703324 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051020771 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.049767685 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049499168 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071084816 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084868467 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.11497744 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086493957 seconds)
    (276/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078517333 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08334628 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050271117 seconds)
    (279/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051348669 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06361332 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063267069 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.084806794 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.089003421 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06335648 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070131532 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061914659 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 0.176243706 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.083189092 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.089060359 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062561314 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071146653 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070309359 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066004496 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.049980327 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069848117 seconds)
    (296/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07085985 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0515025 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069654124 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069101576 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066469029 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064306901 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076828104 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.05965253 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.063878478 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051174255 seconds)
    (306/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065235571 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069216617 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.166329408 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.049980819 seconds)
  done (took 29.904986239 seconds)
done (took 31.277672827 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0907723 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093394965 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075966196 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094027401 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081811897 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078149986 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074127759 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079857266 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081939722 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083484415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080132081 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056764949 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075951447 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076220216 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076601573 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093027196 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079659447 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074098824 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074274461 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066460593 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073896511 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06703329 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068626322 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055580868 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079065743 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072746133 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073329942 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074863931 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066592944 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066720749 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069647376 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073894983 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06652593 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079150675 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073074663 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073836423 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075421139 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07714182 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068035089 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06641292 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074767673 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066681713 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073104178 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073814508 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072946201 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072041179 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074151892 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07853129 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091919739 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068699291 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075285604 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076015761 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076410018 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072722063 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069901038 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073468861 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071495036 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091599969 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073400465 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06883988 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074191609 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074102508 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071321309 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073250598 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073126533 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075339823 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07506836 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071058593 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074613233 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07106726 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065499083 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073339968 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068761766 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06612951 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075657963 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077230136 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065345419 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071124894 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073229399 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071588971 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065642652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06799849 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067943101 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071892865 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067836437 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054542692 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069594666 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072293158 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064522654 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07380593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071271121 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072341194 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067667804 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075925623 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065381326 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070964233 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066044248 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065440959 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067042063 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069661716 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065465901 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067447641 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073930098 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066979482 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07115783 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.07925613 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065911294 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071840782 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064309613 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064510582 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079056878 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074308177 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065145111 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067905939 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06417768 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071979885 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064299662 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065551493 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065337739 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065354133 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070830202 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06530646 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067088426 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072493679 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077388555 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065432876 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068071122 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067224481 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065132639 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070616388 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065335325 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065257087 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066995935 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.195793038 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068356304 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066201413 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073246692 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068449061 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073209711 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067203934 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073318806 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069738444 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071474006 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07074854 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064611526 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059118245 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06782392 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068362814 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06704034 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065981008 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067822033 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065942748 seconds)
done (took 12.667181522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066181231 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14231936 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09764796 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095194531 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085649623 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066240038 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075841895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101572153 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067292717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102082168 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087261369 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084543752 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112247559 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064851552 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065760806 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069251287 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067128496 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081214403 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100287823 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086398124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10887439 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065102961 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093841743 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089660762 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086366281 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100675303 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066298297 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069453562 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069131524 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090736285 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086119017 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069333413 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065957548 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099601608 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092502925 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08275243 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066239545 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081872675 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066298292 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065436333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080442196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097592723 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079478818 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.0795067 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069436556 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06912306 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067004072 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083499234 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088663328 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078791404 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086840088 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102705459 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068191198 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065787136 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064683324 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085066737 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065205044 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068744822 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065916729 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068564542 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06610387 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069083254 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080891389 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08649488 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069556872 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079944768 seconds)
  done (took 6.806833214 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083689257 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090217294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082903615 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083356516 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065244963 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066141489 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066524575 seconds)
  done (took 2.056102045 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066709033 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087904445 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088571081 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088256621 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083891994 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087052212 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075591638 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066628396 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080060131 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06752184 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087449732 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101421509 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066907855 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073151479 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090127676 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066944918 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089612592 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066560542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069615248 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090166211 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068312836 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08198898 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069912062 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066884303 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080380347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066591314 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113344104 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070670604 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067937746 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069377632 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064634919 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106857819 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080049886 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076064774 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066439414 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0805408 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081006098 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06502296 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082866003 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071624438 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081062049 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067003473 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067501741 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064446573 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070982695 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076895407 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067309345 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066772 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068941848 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085733028 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066867289 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080033066 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069704032 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069176164 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068278771 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070120294 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075837375 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067312547 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086032669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067724322 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082717259 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082097922 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079981336 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082564427 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069096006 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079960356 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080204447 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068709676 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068042463 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069261386 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082664567 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064768213 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06755955 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076776373 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067597571 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089181602 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088442928 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068015322 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075710916 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067039942 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066677883 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06657102 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089260209 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068783544 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066538531 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07093726 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069093324 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064521844 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065151882 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069732522 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064405673 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067925637 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068930954 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069109283 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068278749 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082383683 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0683214 seconds)
  done (took 8.767828089 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068870804 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067703636 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068855317 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06702475 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067526226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06843491 seconds)
  done (took 1.952101903 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092595175 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069240295 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080416655 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072055302 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10385009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086403027 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087256761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078797168 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083426424 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078773996 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086172964 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088365717 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092408972 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073158546 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086626757 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071810252 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086874018 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075963818 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078195142 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073113842 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086562209 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072434652 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072997725 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081329856 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075676612 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072637968 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067178513 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078684047 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078263755 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07858343 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072236179 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075401963 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070314126 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078135742 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086862328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070358376 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071702862 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076957716 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072244656 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075574122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088026791 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072592205 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074186642 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076795744 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077999836 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070248849 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077285779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075726654 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085693825 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07679791 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076665245 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071092246 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075442583 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076890785 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069794774 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077894636 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077142173 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08656116 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072278366 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070044638 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068819028 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074991278 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077634524 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075012813 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07820532 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076805288 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069887864 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072075522 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072231944 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070952193 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076707052 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068868414 seconds)
  done (took 7.091372946 seconds)
done (took 28.182243575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542095056 seconds)
  done (took 2.050856245 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600231915 seconds)
  done (took 2.133652709 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.64660619 seconds)
  done (took 8.176796329 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.390609438 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47475921 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.691744732 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130122733 seconds)
  done (took 3.255430926 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.674253912 seconds)
  done (took 2.215785169 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207623351 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196275076 seconds)
  done (took 1.953594406 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374717861 seconds)
  done (took 1.911595233 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.107496229 seconds)
  done (took 2.641677261 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260820928 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162451433 seconds)
  done (took 1.962595691 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460432722 seconds)
  done (took 1.997846283 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86969578 seconds)
  done (took 6.409335796 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.213089164 seconds)
  done (took 1.79376427 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240349466 seconds)
  done (took 1.778659162 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.703520392 seconds)
  done (took 3.240912611 seconds)
done (took 43.06278839 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080548544 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080923838 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080868027 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07851924 seconds)
  done (took 1.849270378 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077015092 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072585998 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076323166 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072918992 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07733313 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073278731 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074334504 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076945995 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072580363 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072852058 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072875802 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072859675 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075020347 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074553984 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071396883 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074979218 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076268128 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072719008 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075579874 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072876282 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070988111 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075211844 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075717328 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071900717 seconds)
  done (took 3.32389267 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077676674 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072817862 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075081179 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072146754 seconds)
  done (took 1.847717151 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077546557 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092423158 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089885675 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077572666 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092028942 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086078069 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069186232 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069312886 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073746275 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077159319 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068734721 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095916463 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087964821 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077127893 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078913576 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066009639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068801746 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086807058 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077458043 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077605297 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069744501 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077236936 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068352652 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088031984 seconds)
  done (took 3.441068366 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078019584 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103192659 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077156276 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087862234 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089754641 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065875983 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074329336 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088896098 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123238657 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066042038 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070083234 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065560628 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072440151 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065197053 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076239568 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105131097 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10863453 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06854655 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09588067 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065339087 seconds)
  done (took 3.204885489 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073491895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070040926 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065332171 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068784679 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077322081 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073127003 seconds)
  done (took 1.988308465 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06855741 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067666747 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067432587 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067151128 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071858327 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067017484 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066135316 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067578296 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067749374 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067338257 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06675699 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065411287 seconds)
  done (took 2.365131122 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.195006846 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069275559 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069798483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065765329 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070588425 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067385483 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079520083 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068477725 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090637182 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06637928 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066719107 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068363849 seconds)
  done (took 2.534239135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205514334 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076235873 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236435257 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13717444 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111337014 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115685349 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10365634 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113450458 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.143043678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101673521 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167367101 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165430173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107115622 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137100192 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089552868 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098025287 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155370687 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16242355 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103527236 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166112309 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143464101 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124546855 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147457743 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101528813 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106106052 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121850407 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071126035 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080665653 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170212974 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131010966 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146210026 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111029057 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093650543 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175030111 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169544415 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141056878 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133724158 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083571741 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102972316 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133085439 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199352649 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088427883 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16514676 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249950315 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081214344 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134855871 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126359983 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120126958 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107793491 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091084058 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145989276 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181923003 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138912718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087608585 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112423065 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114394785 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115839275 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10423689 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181459626 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162056857 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129138943 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071576473 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099641528 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154401234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132274516 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108908999 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126563082 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094789459 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133281676 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155424065 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118575365 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143582541 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129059463 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088638444 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11983945 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139892903 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127952185 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170318428 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124371388 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072712258 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12386922 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102508955 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080910628 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141826292 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075226985 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173879541 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098064829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105964807 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112489059 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108904293 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108882481 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160854745 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143166905 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101990749 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064868802 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102253686 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118881109 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144031155 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086214031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106362445 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112384838 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07560158 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132617225 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072698346 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118554586 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.073329685 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120196669 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127312946 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073596825 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117431189 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098289365 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097391939 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127252654 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153177441 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086349161 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080026855 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161078257 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117351885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100202814 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138834742 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150095073 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096549838 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098723054 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143634477 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172754936 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086668971 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157576472 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103919717 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081439556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084920165 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11971953 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108461569 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118668236 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079908899 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114316987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161308422 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073146045 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092319439 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128577085 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076655941 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078453949 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100087552 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096513503 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.090707192 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.095590724 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.098570036 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129366061 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116980643 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10096509 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117638845 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09350015 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157505334 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084563401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096188923 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09873565 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067799123 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127989137 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146755524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076006851 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152354605 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.115784086 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100858175 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111756601 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079493004 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132348695 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075881321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067379364 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133173618 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105278199 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104264395 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.141106775 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099890635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118695136 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112654863 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125515718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122323934 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122033053 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100327097 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084963472 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105991837 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11796743 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070369108 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08678144 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075978457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098170806 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090050901 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079584866 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132428806 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116314161 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095718486 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106012414 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092323467 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139373303 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073179478 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120928146 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113503628 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090181673 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.141961311 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143292984 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124212257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094570192 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136670073 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068536451 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071826693 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.0846216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116690919 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079935481 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080202603 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109096626 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139096143 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120981274 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127849938 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106568309 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113234439 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14727733 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067263525 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.111313014 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137483824 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113864368 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.097335091 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08637574 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09447191 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134325937 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102013311 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168796071 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108396092 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120623699 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144410202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.09544925 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077242633 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098599887 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126086245 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098803833 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13535231 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09528794 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083760476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103736494 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071682754 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09391061 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119587654 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112092468 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126962467 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108953562 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123718466 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073730115 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110247873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114083471 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114562481 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061809477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112664989 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150494637 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089548333 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111830128 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144119491 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076541268 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.119585052 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.628991263 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150223271 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088081898 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113513642 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124527671 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133066759 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125544029 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144929159 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11330905 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142914554 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113798456 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090403619 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091459487 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100809645 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108866276 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097502984 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111156662 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117728086 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098339178 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134350272 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105490818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112740821 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121273541 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101146077 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092535384 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099168383 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179372379 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121835865 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174289095 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103223223 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148877236 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16721361 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077993483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081814954 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080471875 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142831381 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086404283 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134649436 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10090148 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111072583 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126592129 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14486557 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097499385 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071090949 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111750611 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136625085 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114503136 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09977262 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10543648 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165143675 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102638405 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081183938 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11588383 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107107732 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104567534 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176720281 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06297555 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256090629 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078991448 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083552986 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130420159 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155213926 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082232782 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104124564 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120962067 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112336425 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129812888 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102894536 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100813421 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116360302 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151049888 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12999757 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091454981 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113855002 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130703624 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157765221 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106537613 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096971495 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189839884 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153671512 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162794386 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089933842 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115925531 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115732228 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109436426 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140436906 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084642922 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164915823 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082916562 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13830418 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105363449 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091109989 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13054562 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099680129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089484467 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148892928 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119130505 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083435583 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078859661 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119113302 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120595596 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106851906 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076278435 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139416699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073933619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132845418 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169955952 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081759179 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105964808 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097010684 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235093774 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109552223 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104211799 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090938611 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098837569 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17430599 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089422916 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150715055 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141830572 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11417598 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137566831 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101258849 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636997169 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079069587 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152825795 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117766768 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173169583 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098383411 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118861805 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110162213 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124348176 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145587755 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106240969 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179012516 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132796474 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117407982 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080971591 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103143053 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103837593 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09012251 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106589546 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114998966 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117499762 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094609426 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11735864 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125310344 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082975694 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096028511 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156899688 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117999603 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145168951 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140754064 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085310372 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117980853 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138759838 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080395895 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121694144 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152107661 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106828298 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098398039 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080997916 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101751104 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.317812443 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074378919 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163739013 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120882707 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110551072 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114154121 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114570032 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131531601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107984252 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122518865 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094008132 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110861732 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113870723 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082595202 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077899141 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105233587 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112542417 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098453718 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099084744 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097917015 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15252479 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072296637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096129039 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104060053 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1455182 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175409109 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089207014 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083546888 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119691617 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113974759 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114150368 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121785394 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079971318 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083186349 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082575255 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079069778 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109339424 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11323894 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104937424 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111577204 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16395832 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083237415 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227783652 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09591972 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10580876 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071094871 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07924697 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096200313 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097566074 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108432406 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101027736 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169144897 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095084459 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090174881 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092646223 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073242571 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082576272 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127747339 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257488991 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119997154 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098413513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063244758 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109762882 seconds)
  done (took 58.260070934 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109230701 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083626107 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097813478 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150442376 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123121349 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.21311787 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157704175 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199497309 seconds)
  done (took 2.895897012 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069500975 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094913722 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10046773 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083987521 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06759933 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06968225 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226613217 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083177268 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067069457 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088780235 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080011797 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069691083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42071544 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066312372 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067926641 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063492326 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068105712 seconds)
  done (took 3.53283031 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371323448 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608430067 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.373408513 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073739315 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.888152021 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091639278 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.069020561 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13023755 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073975747 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.542351426 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701639108 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126047525 seconds)
  done (took 18.804608286 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078577833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070717518 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084507712 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084788394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073686884 seconds)
  done (took 2.147249191 seconds)
done (took 107.793957814 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08152006 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.372833717 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054213777 seconds)
  done (took 2.210066718 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085060697 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085380242 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085044724 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084056322 seconds)
  done (took 2.104769265 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076394562 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076847256 seconds)
  done (took 1.910910148 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225739163 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139852338 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08713338 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082114414 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078048373 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078779255 seconds)
  done (took 2.000309486 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073691674 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074941336 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073429976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076550006 seconds)
  done (took 2.053551758 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076615439 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052665131 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055838833 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055970743 seconds)
  done (took 1.997851855 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086742087 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079321729 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078263365 seconds)
  done (took 2.002034965 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10648165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085394932 seconds)
  done (took 1.949586552 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082823989 seconds)
  done (took 1.840791295 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099115455 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114324862 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128770337 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109944962 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139024178 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10898485 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085665236 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08686326 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077434388 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087839901 seconds)
  done (took 2.795399509 seconds)
done (took 23.154017365 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079715563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46319135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360840856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091119579 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669889542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356544219 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986719473 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092204406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113918956 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068037306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084295003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648768714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.977258275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414747597 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962643699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323395774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649677063 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068826469 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068115567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068337976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975346276 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067974536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06820224 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068798014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649525851 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371513002 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068671768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319004191 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068559719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069699274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356033902 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068661402 seconds)
  done (took 16.441969792 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071891377 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119294183 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074076706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084610894 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070376143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069822212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071725699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069296654 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120435901 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068117035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085103528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06786825 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071965412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06870741 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087347515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068427047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069119449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06914454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068618069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068507085 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086655209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067865906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068665782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06923492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068456043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080470223 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068615843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06883406 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069136105 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070174453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071300129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069286687 seconds)
  done (took 4.178247483 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115915037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12586299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074945212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104382829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113124768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070754629 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14376958 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093253669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128478916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068742551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084832671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068083886 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101407018 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069363598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087742582 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068423628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06972443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068660527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06845905 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068856819 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087692355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068442645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068915396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069318166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069152907 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081958547 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069362825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068882177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068955411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071206188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071963658 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069035756 seconds)
  done (took 4.435500144 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073650936 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075518015 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083501689 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083991203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069710048 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07240575 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073169886 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07110352 seconds)
  done (took 2.382928818 seconds)
done (took 29.204190307 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079979087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069805063 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073029053 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08093051 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07366741 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078780167 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06752989 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074930763 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072350079 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073914623 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075493599 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068023144 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071324796 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067554014 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074171517 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068355467 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079542485 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071903957 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079315451 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079764734 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070137825 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073509457 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074464412 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079465138 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079501861 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079431791 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077805515 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07300834 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069768273 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071349019 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076984759 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084207613 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069121856 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079595724 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068224863 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068267832 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071665489 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06836539 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080010134 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076962461 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070170395 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077053006 seconds)
  done (took 4.873362919 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089308794 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092045674 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084977234 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061992385 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06667092 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064952467 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089139293 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060009189 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060123294 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088158127 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05633938 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060007273 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062809254 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054336714 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059436091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057322203 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061813149 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056470853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059670553 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060055265 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058433438 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054480605 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060515076 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0628458 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059561001 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062337497 seconds)
  done (took 3.491391372 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07603066 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084762545 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088945825 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127830137 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104354012 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077493142 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078453161 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092937558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08596599 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067355759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071584769 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094836486 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088617457 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074319408 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068458926 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085556101 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082662632 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069720534 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074254668 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091758225 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085481719 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08460579 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093604687 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082551327 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06740442 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070312778 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072112643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08195647 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073518325 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07737736 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072203674 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07178133 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07014538 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079577024 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071764128 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069390636 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091061031 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078018952 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078165841 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068487034 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071316513 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068420597 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09000939 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124099427 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067427225 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074267028 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07542027 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076855849 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067561086 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08630295 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07879191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067370512 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070784896 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066723418 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067406926 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0805802 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069554731 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070042925 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076915263 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070850321 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085914463 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071761872 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08306736 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067580253 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07550806 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067136643 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068696457 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066776454 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093359772 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069647414 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109000999 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068892404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068771799 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076551067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075349646 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07395638 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06832438 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082816252 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077777778 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071416477 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07619843 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071205095 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070654819 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088191976 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070120449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069270765 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068466178 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074042762 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070490363 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06914949 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080804327 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067609907 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070738233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0842499 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067444659 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068899658 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074048047 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072607902 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06723854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.0785247 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072487881 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068554109 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076908091 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067507752 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070589408 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077846975 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073846222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066746653 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072250121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073551024 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068272815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069116152 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070510021 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069349633 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077334196 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074652086 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072291693 seconds)
  done (took 10.742733205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162181995 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155692492 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070919885 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14650984 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07675762 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079302432 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148187563 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094787532 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068492431 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068649397 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069239169 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110288452 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106355594 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115913988 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079392026 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068108918 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083935442 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114488433 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15031128 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143751972 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084627479 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077766651 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07086791 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069449175 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.082235562 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07901707 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08615742 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077369639 seconds)
  done (took 4.561299437 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083418766 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099876392 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074899757 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089719412 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091431317 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068443391 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07039851 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069898706 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081159453 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079389528 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068115747 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07422994 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074762516 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071743436 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069431902 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075056182 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075477604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069894102 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071900557 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073420352 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078363587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092679283 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072421329 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067507736 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074772354 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06774001 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064876914 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085052107 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068666086 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091917563 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066179845 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075967555 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081954727 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069329564 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068492196 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068365302 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068231754 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067962968 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069825 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066555081 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066948071 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058466834 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067345873 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079842644 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07434457 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057265431 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072724506 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073571732 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073334219 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066187329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071242718 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070844906 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071286932 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075324014 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073167834 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073365169 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069497181 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074777425 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076074 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068155609 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065294452 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066768648 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073191294 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066634055 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076646136 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072734014 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066924815 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068562761 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069932602 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0742138 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068251341 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071513509 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066070398 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070271175 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073203638 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07015296 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069201442 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066609061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067869611 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069214626 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056528863 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068449157 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054199922 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071310806 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066377404 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066874949 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068143555 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072824394 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080486679 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069560744 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073824729 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069156177 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067087568 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070978387 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060963346 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070827786 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08360139 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083062493 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068358569 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066046585 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082803491 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072993719 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067311538 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057117404 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075705794 seconds)
  done (took 9.362185846 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090845128 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070901304 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084088748 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092416325 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087066301 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075715665 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077321399 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069811688 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082672811 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075009842 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076777869 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068871867 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077835095 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077447826 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070591972 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077411682 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072463637 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083323492 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082661571 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068456106 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076440991 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07770383 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.0894288 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080812391 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079673805 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080609879 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090317997 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073402049 seconds)
  done (took 4.039262927 seconds)
done (took 38.841698434 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.86673646 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.03672735 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.861366041 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.235543758 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.94108097 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.085480985 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.911609953 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.872602456 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.96687056 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.894559604 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.112010504 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.934556957 seconds)
done (took 66.511694496 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.931788309 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.00419011 seconds)
    (2/2) benchmarking "String"...
    done (took 2.130177923 seconds)
  done (took 5.933673183 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.210188742 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.385479403 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.106367957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.853718958 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.861082944 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.160059679 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.653166296 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.381811128 seconds)
  done (took 31.198568176 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.993134401 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.087451499 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.542418656 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.570454049 seconds)
  done (took 16.040542136 seconds)
done (took 65.186411119 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.858766831 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.883645882 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.855275765 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.83993202 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.913838946 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.871912726 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.861037826 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.914750333 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.85366593 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.849360089 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.856281248 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.301610174 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.868131364 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.368471928 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.860993583 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.85291503 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.884410343 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.564577299 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.009186312 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.874358474 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.859243751 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.895807132 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.861834942 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.861300441 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.909523028 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.856259071 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.289737866 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.865948513 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.489911508 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.858850075 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.885544189 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.894174848 seconds)
  done (took 206.469788655 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.858691941 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.945833886 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.998119943 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.884619859 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.347271152 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.041044002 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.976290217 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.378536055 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.860954925 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.860307862 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.089445429 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.862098765 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.122581832 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.8060027 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.886976937 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.863317406 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.117001192 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.129776207 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.894850324 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.029455787 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.888020582 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.980437594 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.927659628 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.075305531 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.904448361 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.92821797 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.885171372 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.881756773 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.054831261 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.104846055 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.872808801 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.90326471 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.999328889 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.735640946 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.872583141 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.876253556 seconds)
  done (took 173.643964578 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.026492936 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.864224184 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.864424826 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.867592894 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.862357523 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.870856669 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.862642225 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.985151619 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.989146474 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.317243271 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.329492758 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.916465804 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.693556844 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.86232404 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.930861324 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.87502908 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.86411399 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.880828103 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.888926618 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.865322006 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.864210061 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.996298026 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.880182515 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.158983739 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.872941829 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.864259656 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.86874267 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.236969015 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.865409071 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.869389807 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.108543113 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.863741044 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.865359777 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.774517581 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.339152273 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.956146911 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.865984064 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.874189709 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.867170195 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.868208823 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.084548361 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.867247629 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.867885153 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.870055842 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046033497 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.865077574 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.98876296 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.86654342 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.365388133 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.869095659 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.86586867 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.060806902 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.817486327 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.867461866 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.864355822 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.868647677 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.864951154 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.86521766 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.878084616 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.706564048 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.944601173 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.865578108 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.868184345 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.870740026 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.864352009 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.923786658 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.864964918 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.270833432 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.923405694 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.079384894 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.864956495 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.985665137 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.867188362 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.933151037 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.959381084 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.867589714 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.866464279 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.8655001 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.866055124 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.866417182 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.947033077 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.865974032 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.017772355 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.875352646 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.867983525 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.91921208 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.936250243 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.867217654 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.764776745 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.86838805 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.866241312 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.176600631 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.933481948 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.866174817 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.865911364 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.866542962 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.99931161 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.990127036 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.650310164 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.869222129 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.683040773 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.869733112 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.009884717 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.866847475 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.049837625 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.870370991 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.949969479 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.872005034 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.868397557 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.867243323 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.899177829 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.868908031 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.925049692 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.867580949 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.236868334 seconds)
  done (took 413.757620809 seconds)
done (took 797.753132677 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.532988682 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.492100621 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.624404908 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.524270549 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.499108302 seconds)
  done (took 14.486105495 seconds)
done (took 16.295310448 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958489814 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.959639015 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.893133029 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.956546485 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.88844468 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.956626931 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.939383467 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.894063341 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.922988864 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.893852578 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.925130214 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.8928738 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.883038025 seconds)
  done (took 26.777106674 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.103078805 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.111788181 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.942269405 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.122524909 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.919343215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.10309157 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.034943955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.019667795 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.024485334 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.884672393 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.882474881 seconds)
  done (took 23.96320911 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.102674303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.111991518 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.945757739 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.113396747 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.921616431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.107071231 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.043178471 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.022951012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.03798868 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.885467389 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.88255291 seconds)
  done (took 23.988739028 seconds)
done (took 76.538409157 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.87811061 seconds)
  done (took 3.69232839 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.901030496 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.047086683 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.884701243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.881816689 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.87887661 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.8792372 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.885492037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.879093101 seconds)
  done (took 17.05252983 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.875211457 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.877311525 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.879018753 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.877225176 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.877178348 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.877813221 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.87448337 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.877670903 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.876945906 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.878566258 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.878390722 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.875339774 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.878005947 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.877469223 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.875690383 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.876295688 seconds)
  done (took 31.848691814 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.877776564 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.876205735 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.877946718 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.877147977 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.875476599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.877642268 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.875594441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.877609398 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.87618179 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.876453619 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.877430092 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.87648348 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.878091339 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.875799565 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.875552646 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.877129175 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.876554115 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.876775203 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.883338624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.876702812 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.877657575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.876238295 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.877294895 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.883633514 seconds)
  done (took 46.87502939 seconds)
done (took 101.28255169 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.814115747 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.315327089 seconds)
  done (took 8.945951937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.883511343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.883061125 seconds)
  done (took 5.62641275 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.884762802 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.88301388 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.881237418 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.882065643 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.882632796 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.884273177 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.881746727 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.881601148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.882043092 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.880821338 seconds)
  done (took 20.644215054 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.882592322 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.881519007 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.879773123 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.882338354 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.881403605 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.880980416 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.881116089 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.882329424 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.881682794 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.879405243 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.88505839 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.880592241 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.882556523 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.879913407 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.882937132 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.880796049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.881465795 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.879792563 seconds)
  done (took 35.686132668 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.883311467 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.882433977 seconds)
  done (took 5.58551052 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.880238431 seconds)
    (2/7) benchmarking "second"...
    done (took 1.880337519 seconds)
    (3/7) benchmarking "month"...
    done (took 1.880893787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.880100513 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.881852214 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.88156107 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.880463578 seconds)
  done (took 14.987484527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.885222589 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.054691397 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.131213292 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.572077022 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.884434499 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.890079699 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.795698303 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.889798782 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.891239273 seconds)
  done (took 20.815326086 seconds)
done (took 114.10611619 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.706937633 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.880069197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.214493957 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.941420079 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.921935636 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.221210872 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.901730803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.102576577 seconds)
done (took 43.709389254 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.950171146 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.35237923 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.368837957 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.581842221 seconds)
  done (took 12.125128758 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.871322811 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.413097832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.923202552 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.480724486 seconds)
  done (took 20.523975524 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.251877167 seconds)
    (2/2) benchmarking "read"...
    done (took 2.247653347 seconds)
  done (took 6.326918367 seconds)
done (took 47.747350035 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.886165321 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.886233221 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.883044818 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.883384604 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.886677352 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.884751586 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.883210443 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.885804849 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.885557182 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.886754089 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.88739873 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886984214 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.88379886 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.883759775 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883588272 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886727015 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.884380732 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88349226 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.884026341 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.886172639 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887175372 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.883862436 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.884514378 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.886378392 seconds)
  done (took 47.068827163 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.886651394 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.885395894 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.887740985 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.887518146 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.885522671 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.887936297 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.88758187 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.885637823 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.888204435 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.88690283 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.884617291 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.884921142 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.887088806 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.885255396 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887017333 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.88562427 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.887327491 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.885127319 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8873828 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.884434434 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.888714202 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.885040654 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.886328064 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.887588249 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.886169423 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885091734 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.88831212 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.886609194 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.892140418 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.885443831 seconds)
  done (took 58.424553742 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.894808253 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.898294163 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.890236039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.889951934 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.889579885 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.889756589 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.889720966 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.890980002 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.891005654 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.889901658 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.889797092 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.889706792 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.891660889 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.89136985 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.889700354 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.889539615 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.890011722 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.890452568 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.891951774 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.889524733 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.89018595 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.890558094 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.889663797 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.894618662 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.889309122 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.88976795 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.890146529 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.890160037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.890993108 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.890505974 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.891047508 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.890868945 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.889651503 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.891377853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.890994248 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.890727486 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.896368768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.898455986 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.891397601 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.890522921 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.889979612 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.891056188 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.890950811 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.891098962 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.890966128 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.890906195 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.8911888 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.89101678 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.891672605 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.892626424 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.892468476 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.891454499 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.892474572 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.891699757 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.891337849 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.891466102 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.891656693 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.892576999 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.892316381 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.891974119 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.892176439 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.892323421 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.891994244 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.892043622 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.892656037 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.892889452 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.892117867 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.892940631 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.892670901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.892590976 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.892591947 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.89250601 seconds)
  done (took 138.01471185 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.893253222 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889878495 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.890327179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.890081264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.890551497 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.892200385 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.889793886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892992944 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891145987 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.893165272 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893916531 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.890821949 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890262931 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.89364462 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.893471521 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.89067599 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.893407069 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890543862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.894099081 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.893786759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.894346356 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.890770714 seconds)
  done (took 43.453762736 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893652744 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.894975195 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.891495138 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.893837797 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.891439533 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.894459362 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.895257115 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.894234714 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894242696 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891234631 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.891458525 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.894161454 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.892405493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891876708 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.891925108 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.892520316 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894749017 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892541431 seconds)
  done (took 35.908257169 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.892224212 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.892024605 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.894077648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.891851532 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.894902703 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.894647392 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892344193 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.895074199 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.894524185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.892870853 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.895708559 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.894972224 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.894832472 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892702665 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.895564616 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.894978639 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.895537437 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.893154795 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.895865594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.89331423 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.893440419 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895215633 seconds)
  done (took 43.502264116 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896346239 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895525629 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.893529021 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.893724115 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.893229869 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.895716473 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.896486214 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.894199433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.897166748 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.896457802 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.894598296 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.896584365 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.894433854 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.894420517 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.894470733 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893209367 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.897098514 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.893752964 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895949855 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.893932309 seconds)
  done (took 39.734493263 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.896426022 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896582942 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.89615406 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.896950283 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895931146 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.896359083 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.896767389 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.897039423 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896026848 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.897966437 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.897378652 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.896448781 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897052342 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8962552 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.896934729 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898180456 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.8975741 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.897979161 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.897233709 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.898467641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.897996498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897292043 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896787099 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.898908558 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.897590486 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.898167989 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.897851513 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.898506165 seconds)
  done (took 54.957101137 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.89736875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.897844378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.895223698 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.895100799 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.895426486 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.89471485 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.895234501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.894791519 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.898050459 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.895247288 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.897017274 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.89848944 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.897279367 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.898317869 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.897962437 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.899222725 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898780622 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.896255997 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.896280405 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896476554 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.898893079 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.89848596 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.898680993 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.896905889 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.896844555 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.899825129 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.896496293 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.896874293 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.898690241 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.896551931 seconds)
  done (took 58.748768726 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.917024107 seconds)
    (2/2) benchmarking "in"...
    done (took 1.918695844 seconds)
  done (took 5.672335066 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.897653979 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.901048089 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.899093759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.899451529 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.897726949 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.900329146 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.901345746 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.897376316 seconds)
  done (took 17.031687948 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.900313067 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.900722144 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.900679211 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.90082277 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.90139944 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.901149205 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.906050811 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.901445962 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.901675807 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.901883117 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.908244808 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.909078735 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.903073153 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.901162983 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.901438289 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.902381375 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.900677751 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.90135182 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.901248332 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.900991528 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.901793404 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.90356483 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.904655241 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.899802204 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.904170954 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.912723763 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.905171325 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.901858242 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.901775975 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.906099282 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.902323512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.899972807 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.903154247 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.902500084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.902104677 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.902385725 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.909349457 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.902690799 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.908854918 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.903825585 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.90287608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.899503319 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.903472105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.904430892 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.903263562 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.903131101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.902362806 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.900707515 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.902837236 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.907345272 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.908304545 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.903147957 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.900334715 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.907422158 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.904175723 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.910108965 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.904214287 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.905984526 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.912771135 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.912278796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.9177362 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.911853609 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.905037415 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.903202474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.91369291 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.928274854 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.910398616 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.900972526 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.901473973 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.904036828 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.910481678 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.916507618 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.913600578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.904111571 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.904911947 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.903963445 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.904869025 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.904306575 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.910056564 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.908365097 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.90555516 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.905135156 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.915212082 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928490821 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.9043778 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.906429497 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.905358524 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.904845873 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.906703107 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.915659914 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.904643207 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.904738449 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.905479097 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.906487675 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.907009888 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.906481687 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.904633596 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.906737102 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.902855888 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.905873049 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.906998533 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.909273692 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.915621076 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.906092984 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.907511438 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.913633315 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.905847367 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.904731766 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.912500401 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.905374976 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.906713391 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.906996325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.912242189 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.903202397 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90976357 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.916358246 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.907230798 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.907711628 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.907333692 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.90746546 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.916919896 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.933624366 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.90703971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.906846466 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.911382032 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.918709466 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.907603527 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.910384665 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.907234714 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.905092959 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.905114253 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.908780706 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.906900185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.908688861 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.908031952 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.909771973 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.905692491 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.907511462 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.90879827 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.908648792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.908779965 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.908776658 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.910777863 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.910035428 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.908542778 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.909889533 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.914002012 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.908329322 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.910189851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.909058601 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.905433874 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.90903676 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.909251049 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.908307553 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.908582705 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.908005284 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.90856964 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.908900983 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.908682062 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.908554697 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.908606767 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.909849925 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913965164 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.909853799 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.91202017 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.908511174 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.906530137 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.909286152 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.909777502 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.910075975 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.908574548 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.909135911 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.912932101 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.918304561 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.909543857 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.909644289 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.912604804 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.910286033 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.909420337 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.910281111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.912734997 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.918101058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.910409253 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.915733173 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.910929424 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.910402104 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.910432618 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.910419877 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.909680133 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.911072012 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.914589714 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.918392706 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.924134392 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.919659169 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.912403162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.915282911 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.912873706 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.915785506 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.915367579 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.911786584 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.911709809 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.911303985 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.910812998 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.911174916 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.913498905 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.911786069 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.910824145 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.910855117 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.911697284 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.912232123 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.9116891 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.911612986 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.912212155 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.908938245 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.912635881 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.912114543 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.911773252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.909134431 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.911810931 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.911472503 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.912230169 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.912731732 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.918766643 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.909038705 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.912747837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.913672911 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.910990658 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.912055564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.91233192 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.91430524 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.913370629 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.917818109 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.912547937 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.913363877 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.919749842 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.913702653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.913737093 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.917124453 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.913672517 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.910941842 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.917900531 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.922410625 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.913255703 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.914693873 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.914090007 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.913918317 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.913757607 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.920980496 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.911205961 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.91392733 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.91456613 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.916213832 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.911252039 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.915837171 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.915465003 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.914650684 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.916462057 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.914742658 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.914135111 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.914688888 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.914218801 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.913896774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.915368638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.91877156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.92335916 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.919871865 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.91509554 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.917213408 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.916046918 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.919513967 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.915473601 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.914600704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.914394664 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.928173078 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.92458195 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.920078742 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.917809127 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.915995403 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.919168502 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.916655957 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.920171225 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.916043108 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.915728191 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.915838653 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.916032691 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.913335343 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.918222374 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.91560546 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.918688031 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.917852363 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.920522181 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.91694904 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.916573597 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.917309745 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.917793603 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.916379915 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.915865782 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.916534598 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.919108159 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.917976013 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.915769265 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.916489852 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.922194023 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.91701779 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.917868067 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.916033615 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.917620561 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.916603489 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.918372434 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.917986981 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.920937637 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.925529772 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.920839904 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.927128645 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.919366526 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.927019279 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.917170927 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.920925847 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.92561069 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.914376205 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.916323341 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.917595314 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.917759095 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.924134334 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.917545005 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.919646388 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.922489886 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.917936421 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.918471251 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.917611263 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.91830851 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.918071478 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.918500057 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.925398421 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.920112637 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.923099778 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.921226942 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.915380932 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.919014825 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.918655293 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.917999823 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.923685231 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.918982575 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.920896122 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.91882074 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.919728693 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.919259695 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.919505436 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.919120912 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.916913431 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.9190136 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.924785519 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.921359321 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.92526494 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.92109677 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.927695374 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.921430457 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.92612354 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.921438924 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.920798411 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.920401442 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.920329198 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.921364272 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.919809972 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.92176856 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.920375517 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.921902613 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.924062613 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.920012882 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.923538213 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.921108084 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.921192732 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.919759668 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.930937025 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.944549347 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.921788756 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.92504775 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.917584046 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.92198229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.924811269 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.920655198 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.919762035 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.924788159 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.932094078 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.929968074 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.921410154 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.921561381 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.922099174 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.922144773 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.921191791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.920714202 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.921891207 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.921064795 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.922283316 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.9219127 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.92560766 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.922192883 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.923015389 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.922958051 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.923336175 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.932921629 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.922805573 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.923393484 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.923713595 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.922966825 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.923151224 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.923094373 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.92291832 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.922706419 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.923080054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.924044128 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.930104078 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.929541747 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.925698369 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.922249146 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.922199426 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.924006721 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.924616664 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.923272649 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.92331172 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.923295822 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.924482836 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.923163088 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.924162917 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.922316153 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.922488949 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.922734552 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.923253903 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.925661449 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.931290376 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.923986795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.921126839 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.923232341 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.923426152 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.923344243 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.924467466 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.932486819 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.928266134 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.9358488 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.934184251 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.928593676 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.924576551 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.928015135 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.93264923 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.924367306 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.925769405 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.924137287 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.925744789 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.926061477 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.929401121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925735973 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.930680895 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.926234619 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.92421182 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.931335367 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.926832395 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.925595323 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.926349878 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.930242917 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.92524514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.92250545 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.925866831 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.924959267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.93151439 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.927039071 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.926196944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.927549717 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.924162543 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.927096546 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.929866433 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.925684342 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.92632037 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.923700629 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.926686828 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.925427371 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.926509908 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.923176723 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.926568771 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.925407056 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.928901725 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.934348546 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.92425459 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.927999471 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.926851879 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.926840997 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.927084792 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.92707873 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.923728358 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.924359526 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.927129097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.925888917 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.92668065 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.930028892 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.92679088 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.929495621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.928145058 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.927443358 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.93040683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.938927478 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.936053341 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.925246911 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.926837827 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.928421881 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.930079012 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.928543238 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.928158529 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.928315639 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.930451406 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.928673129 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.927861606 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.929097386 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.931607862 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.943666571 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.929002489 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.928848907 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.929824907 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.931931737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.928507234 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.925229336 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.928322531 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.930699828 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.931657954 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.937020971 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.929436477 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.933333162 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.929255211 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.930864097 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.932831464 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.932590502 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.937782302 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.932152682 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.929712966 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.929628643 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.934595563 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.945732283 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.929599504 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.939606658 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.959925456 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.930218295 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.930781822 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.929684206 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.929389912 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.930402079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.932632529 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.930292126 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.929868864 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.930088272 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.930080104 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.93212624 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.93588444 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.933097695 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.930256933 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.930088835 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.930048798 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.932442832 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.927588005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.930789117 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.92967683 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.930083378 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.931158472 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.930880785 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.930893907 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.943834018 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.940879268 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.930908952 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.931127861 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.92764941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.934513585 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.934635539 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.942610399 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.939199058 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.931364995 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.932198025 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.932548984 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.931527635 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.928460891 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.931493228 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.93137182 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.931571908 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.92816359 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.94555158 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.940258476 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.936015555 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.931623619 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.932786507 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.931840881 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.934572886 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.932858668 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.931878296 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.934696621 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.933608528 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.937761973 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.932250673 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.931999461 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.936299085 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.940589512 seconds)
  done (took 1145.261432991 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.930426045 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.92991328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.929033679 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.930214638 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.930421144 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.930431611 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930473275 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.930479447 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.930644986 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.931170964 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.931113301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930520501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.930396446 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.931575416 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930786266 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.930578201 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.930987273 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.93151698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930207432 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.931180729 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.931339178 seconds)
  done (took 42.412147125 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.933714496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.931450437 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.930916224 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.933058961 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.931534222 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.934351719 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.931453544 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.934091797 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.93390292 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.931671435 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.934507173 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.933475936 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.931754935 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.931896086 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.93208817 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.933740243 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.934527653 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.931969121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.935148291 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.932768108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.935212294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.934180366 seconds)
  done (took 44.398962354 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.936431965 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.935791394 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.934258982 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.932323306 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.934787663 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.931979196 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.935298158 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.935266321 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.9354882 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.936359379 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.934941964 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.937043566 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.943371665 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.941788423 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.937083866 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.936221594 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.079995579 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.936931668 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.937151363 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.936362948 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.933045932 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.941895206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.934806051 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.934189493 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.935122996 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.936524737 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.935898897 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.936256642 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.936280163 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.937873143 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.942045218 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.936455686 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.936483335 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.938886923 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.936222901 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.937996058 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.941528584 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.937427644 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.934725983 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.936839174 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.947131003 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.958403167 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.937766724 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.942638233 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.937290467 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.937267558 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.941099568 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.945071924 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.934404501 seconds)
  done (took 96.963870616 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.93728875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.936834641 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.934678742 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.937500879 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.937588782 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.936598878 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.937232086 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.938948442 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.934842327 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.93430459 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.937601492 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.934817547 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.934099567 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.935826479 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.936291564 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.933328227 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.933147132 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.934106406 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.933677534 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.934145003 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.934702763 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.937007711 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.93759601 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.935166893 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.936575426 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.934913791 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.93468442 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.937087265 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.935080542 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.934544132 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.938047665 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.937057276 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.937571016 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.935497887 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.934909645 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.937736136 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.937428713 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.934982525 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.938935584 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.934594949 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.937323034 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.937251461 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.938748758 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.938519335 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.93502788 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.936095648 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.934857328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.935791408 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.936384346 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.937805272 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.937450651 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.936209097 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.937434168 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.935290536 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.938508668 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.939213611 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.935601742 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.935755292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.938611723 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.936047212 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.93568468 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.938270173 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.935838022 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.938423815 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.938291652 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.935758518 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.936834576 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.938755368 seconds)
  done (took 133.547952253 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.940018004 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.940713429 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.940341657 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.9410155 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.941008009 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.940462805 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.940705581 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.940619448 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.940989858 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.940299506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.939977321 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.94300467 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.94283239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.941925948 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.942983855 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.943041913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.943034851 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.943635825 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.943123887 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.943846406 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.942758551 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.943043878 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.942911176 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.943305258 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.943665459 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.943486462 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.943435536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.943035707 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.942991133 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.943307215 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.944939954 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.94407645 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.944592756 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.94400131 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.944093087 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.943473713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.943462569 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.944294467 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.944105386 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.943673364 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.943846206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.943436936 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.943843504 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.944532574 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.945031968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.944699635 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.944666782 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.945342026 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.945235785 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.944178504 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.944705254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.945619752 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.943949913 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.945353579 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.94502153 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.946115005 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.945326476 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.944627944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.945221889 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.9449823 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.945982451 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.944832473 seconds)
  done (took 122.370599976 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.946065855 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.944975531 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.941938054 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.942158032 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.944813585 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.941649515 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.94475619 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.944392805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.944867723 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.944476334 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.944127842 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.942908714 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.941739793 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.943070348 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.941416593 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.941577132 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.94164162 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.94189325 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.94522369 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.942909055 seconds)
  done (took 40.747874065 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.942172563 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.945140952 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.942883859 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.942088341 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.945360844 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.942470881 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.945915662 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.946296387 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.942853193 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.944826865 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.946168587 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.94572808 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.943529262 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.943894497 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.946896321 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.944717978 seconds)
  done (took 32.992120205 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.943088822 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.94734108 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.947427906 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.947415269 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.943561285 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.944067429 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.947622514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.943765427 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.944242759 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.94837529 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.947100332 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.946929944 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.948124508 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.94759358 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.94493753 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.947224012 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.944406981 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.944171787 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.946979087 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.948749661 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.944879605 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.945757535 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.947638952 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.947699261 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.944957084 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.9459897 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.945283783 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.944748506 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.945219484 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.947764347 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.945265327 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.945292623 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.945793961 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.94607676 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.948697677 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.945575963 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.948157784 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.948329352 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.948940805 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.947193463 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.948084145 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.946023794 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.949201693 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.948840777 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.946166077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.948969881 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.946336612 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.946881031 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.94589113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.947908468 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.949579665 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.950268344 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.948853992 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.950912036 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.94973631 seconds)
  done (took 108.96075729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.950199438 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.949533109 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.947190884 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.949633871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.950609727 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.947254153 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.950203808 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.947502202 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.946712613 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.949206885 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.948143519 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.950313023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.94785579 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.949777351 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.947936399 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.949864735 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.94705708 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.948120407 seconds)
  done (took 36.963135003 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.948284831 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.947592673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.950016436 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.947755216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.948066269 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.951143788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.947857799 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.950447071 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.950703002 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.949316237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.948069837 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.951989981 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.95071682 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.951521092 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.948994326 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.948750483 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.951568145 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.951719174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.948556022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.94980539 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.951610907 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.951354075 seconds)
  done (took 44.782605622 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.95034087 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.951343334 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.968047715 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.972109643 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.974485494 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.987672497 seconds)
  done (took 13.690928161 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949983109 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952004303 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.948671449 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952328293 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.95184693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.948728045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.948764735 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.948829617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951255366 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.94951227 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948905647 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952591494 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.951931608 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949847723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952984848 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.95128319 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949603359 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.948793745 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949897583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952761424 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949373909 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952334511 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.948853223 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.949567291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.949704519 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.949338319 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952207272 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95067367 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9502114 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953570776 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.95275987 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949471398 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952541448 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.949896664 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953874667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95365594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.950941897 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953969219 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952972711 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.95024654 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.953948453 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952025052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953671274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95123855 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952662941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.950390128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.950822181 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951643668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.951628887 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954560831 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954484055 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951577302 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954032828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954820182 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.953958852 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954787992 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952093112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.953047579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.9546498 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952634542 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.951927909 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.954541279 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.953008106 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952895519 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.955461737 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952675676 seconds)
  done (took 130.705323531 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.952716873 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.95198573 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.951899861 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.95231438 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952046742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952108912 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952889767 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.952536451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952878052 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952149952 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954702291 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.951820752 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.952699863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952800835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952355146 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.952403264 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953043592 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.952679777 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.952520897 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955544477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.952689984 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953731497 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.952982542 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953543213 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.95477304 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955780976 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.953695006 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953409515 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.953633555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953628012 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953323389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.953600517 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.953553436 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.954693045 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.954016305 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953906559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.95489603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.954996149 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.953779038 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957309413 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954637427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.957000197 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.954168296 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.954753412 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.953990567 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.954048012 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.956508322 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.955373694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.955385157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955122079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9562555 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.955721503 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.955112568 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.954863231 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955148829 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.95500291 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.955132229 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.955882336 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.955145105 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.957592523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.955731867 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.954817325 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.959053859 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.95593355 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.955906232 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.955489272 seconds)
  done (took 130.873856409 seconds)
done (took 2669.010645463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.973394223 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.954747729 seconds)
  done (took 15.82185145 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.124871221 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.07665973 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.962607036 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.999777452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.96191715 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.963516263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.964544645 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.961493826 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.960911861 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.960756397 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.958121612 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.146289627 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 7.009811134 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.960705132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.959872312 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.052106181 seconds)
  done (took 53.931770775 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.962046148 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.964364545 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.97488241 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.964832849 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.962942637 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.975615219 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.997190772 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.966151218 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.998240514 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.976756359 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.03741674 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.974696683 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.962351048 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.013908998 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.976194651 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.980236724 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.050728927 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.039507445 seconds)
  done (took 37.675724909 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.042656988 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.969615417 seconds)
  done (took 10.915577224 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.959867288 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.978011611 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.97333535 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.964085652 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.977172481 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.96332105 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.996376205 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.999449972 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.997205866 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 7.014829633 seconds)
  done (took 71.726479417 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.965589257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.956468767 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.956346173 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.953131108 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.946091629 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.95048782 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.952790535 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.946603624 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.647617945 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.988142637 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.958313021 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.955295649 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.952683846 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.951278392 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.949454063 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.974927848 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.13835608 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.949016346 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.946770251 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.956970474 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.950466558 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.003049623 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.966390702 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.95282589 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.979955171 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.647557798 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.960273389 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.957011546 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.079145921 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.948666436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.952009353 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.951757444 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.954509484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.339391862 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.286185996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.949776067 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.960958718 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.957970232 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.947121497 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.077488931 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.949958867 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.958516415 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.944119092 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.260889309 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.05636779 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.995037866 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.3601894 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.954586022 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.952074928 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.982272501 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.953614342 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.953261766 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.965325777 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.463601016 seconds)
  done (took 137.463553351 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.947448718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.523066601 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.109786002 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.947579442 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.227891379 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.192110747 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.889609608 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.996455582 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.948907745 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.195659362 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.180443212 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.064678987 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.945253648 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.943287765 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.942043792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.9415645 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094078217 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.014528117 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.944379714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.939274633 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.977974507 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.208188529 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.069299724 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.941906448 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.96304545 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.16971487 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.068305601 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.058652827 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.233102677 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.936714602 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.007446913 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.940936506 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.938366127 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.937787634 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.10420838 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.047709306 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038717274 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.93896395 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.934543459 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.935224636 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.598081577 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.159899751 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.048792656 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.076796639 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.192883678 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.167753865 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.5839347 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.934853203 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.579686411 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.13461758 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.146383732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.189372236 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.066458094 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.936897731 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.273777932 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.933975198 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.934334682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.198259489 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.170058005 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.050872713 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.937757491 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.931836103 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.932062999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.250374438 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.933957352 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.045722263 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.934580437 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.93079881 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.045101434 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.04992559 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.167824513 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.176331592 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.962731602 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.655063961 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.152838988 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.216365829 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.006061124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.196522173 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.934295126 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.929667158 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.024489325 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.684655466 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142955939 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.248642843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.199298447 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.9739836 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.539030403 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.932160988 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.17952645 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.180173942 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.158395827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178957173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.09656219 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.130762768 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.930184357 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.928660647 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.140486816 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063903965 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.932818889 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.29416801 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.179116138 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.668621832 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.962106753 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.237796157 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068909507 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.931983459 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.554702163 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.932062771 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.130670916 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.974082649 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.930325398 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.928777141 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.176121888 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.79052671 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.927942317 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.726317225 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.994914795 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.933709091 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.190478273 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.928929945 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.167553549 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.92512224 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.237087703 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.432827356 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971046128 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.121993349 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.176194481 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.719217504 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.231525183 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.244105172 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.050882904 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187518677 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.837704052 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.928177787 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210507252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.929343224 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.92381173 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.094951177 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.926972134 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.101711209 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.928466014 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18660309 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.952884015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09780071 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.9291014 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.204130263 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.97385506 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.980064191 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.932074318 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.059136473 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.929623409 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.954545219 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.113565854 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.92801575 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.926115986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.515902631 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.927452581 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.076244042 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.228771307 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.951046782 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.999867813 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.453163466 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.927460196 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023682134 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.957921721 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.535313901 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.924327895 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.156227127 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.930294326 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.88203036 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.925350438 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.237040781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.15190367 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.928186741 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.928190093 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.721364825 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.637265617 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.929481204 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.104333206 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.267000309 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.571800788 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150698168 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.931561366 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061480317 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.933358049 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.00279536 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.282022644 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.926148483 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.928387961 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.929126515 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.928646666 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.92703882 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.160394541 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.958135155 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.616013994 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.067553761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175502317 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.242862081 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.195081171 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.981320541 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.933737298 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.201451161 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.933094973 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.998766173 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.933394693 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.952644542 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181968813 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.932203479 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.160240642 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228817575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.973123446 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.979790802 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.933097837 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.932029602 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.928639143 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.071871446 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.031925093 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.932477495 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.929253036 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.04774566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.058300898 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.119909547 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.520740836 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.08641859 seconds)
  done (took 918.039473316 seconds)
done (took 1247.465335096 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.929191803 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.930255923 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.91911517 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.933550127 seconds)
  done (took 29.584530681 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.942307938 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.938081044 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.938359056 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.9358926 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.93797653 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.938013493 seconds)
  done (took 13.502445246 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.031313019 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.931294185 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.934494667 seconds)
  done (took 21.769321998 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.005177212 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.346570924 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.045202515 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.380751627 seconds)
  done (took 10.648595037 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.940332204 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.939251257 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.937994194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.937437902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.94572071 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.941051118 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.937339292 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.939469226 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.940529587 seconds)
  done (took 19.332172729 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.328820829 seconds)
done (took 101.033992611 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.23560785 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.561303829 seconds)
    (3/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.150182727 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.455799819 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.307935733 seconds)
    (6/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.066677887 seconds)
    (7/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.073197923 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.022324477 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.090187358 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.71871697 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.925330979 seconds)
    (12/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 4.171713775 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.976930946 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.124701232 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.75603831 seconds)
    (16/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.023231756 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.82160702 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.965561115 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.930142178 seconds)
    (20/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.96441668 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.929809939 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.110970207 seconds)
    (23/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.441138307 seconds)
    (24/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.938590571 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.363920995 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.933097768 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.260428638 seconds)
    (28/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.823798679 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.959484794 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.653660018 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.081162821 seconds)
    (32/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.227859667 seconds)
    (33/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.923493476 seconds)
    (34/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.305728452 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.045696204 seconds)
    (36/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.192899132 seconds)
    (37/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.130996836 seconds)
    (38/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.365517868 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.597413117 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.30620409 seconds)
    (41/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.253559025 seconds)
    (42/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.051172643 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.155541422 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.854847873 seconds)
    (45/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.287928088 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.269901195 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.010972845 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.053465163 seconds)
    (49/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.530128514 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.221201833 seconds)
    (51/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.999651451 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.535746823 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.994665075 seconds)
    (54/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.530629676 seconds)
    (55/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.795283487 seconds)
    (56/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.22073801 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.987444156 seconds)
    (58/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.730210723 seconds)
    (59/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.532172254 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.052773713 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.937931957 seconds)
    (62/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.048584955 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.040754129 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.307196707 seconds)
    (65/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.444458525 seconds)
    (66/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.610366237 seconds)
    (67/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.308106444 seconds)
    (68/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.868577627 seconds)
    (69/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.164765884 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.457810842 seconds)
    (71/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.147292091 seconds)
    (72/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.079468545 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.621134708 seconds)
    (74/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.497945524 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.201446506 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.033042694 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 4.021383251 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.022504396 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.968550537 seconds)
    (80/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.938436616 seconds)
    (81/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.005083269 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.480444849 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.03121798 seconds)
    (84/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.560203049 seconds)
    (85/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.497153139 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.274031731 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.332528126 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.401587682 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.108557675 seconds)
    (90/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.22671794 seconds)
    (91/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.143107847 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.05761844 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.951319611 seconds)
    (94/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.321713023 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.950587778 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.335323527 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.928265044 seconds)
    (98/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.172351859 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.105475954 seconds)
    (100/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.953886348 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.152299929 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.528449952 seconds)
    (103/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.941216524 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.00051004 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.080981483 seconds)
    (106/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.812606614 seconds)
    (107/309) benchmarking ("sort", Float64, false)...
    done (took 5.735267841 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.944378273 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.930788073 seconds)
    (110/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.366989086 seconds)
    (111/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.832872065 seconds)
    (112/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.919167947 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.057416675 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.963276085 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.584027905 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 2.397084267 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.966685445 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.621272689 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.046947748 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.197459064 seconds)
    (121/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.027065061 seconds)
    (122/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.046990478 seconds)
    (123/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.43500085 seconds)
    (124/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.183391567 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.903751668 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.242293398 seconds)
    (127/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.163879152 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.223448182 seconds)
    (129/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.967027153 seconds)
    (130/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.026997122 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.317338531 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.973951824 seconds)
    (133/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.084701368 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.989448488 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.042794058 seconds)
    (136/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.943333136 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.07350645 seconds)
    (138/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.851622518 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.060442294 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163475232 seconds)
    (141/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.97146692 seconds)
    (142/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.072197964 seconds)
    (143/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.304391888 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.945868167 seconds)
    (145/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.249533554 seconds)
    (146/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.324352595 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 4.948463818 seconds)
    (148/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.253015359 seconds)
    (149/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.953237204 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.232259124 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.944432241 seconds)
    (152/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.968812538 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.02022699 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.058258514 seconds)
    (155/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.026266313 seconds)
    (156/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.000708436 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.906743612 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.604398395 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.180559197 seconds)
    (160/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.149729773 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.218550682 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.243137395 seconds)
    (163/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.071682277 seconds)
    (164/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.0453955 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.942152259 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.961292176 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.051967903 seconds)
    (168/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.049516564 seconds)
    (169/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.942854366 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.99206175 seconds)
    (171/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.541635025 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.329734972 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.244184545 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.018898208 seconds)
    (175/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.039665502 seconds)
    (176/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.973836624 seconds)
    (177/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.945684966 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.05075446 seconds)
    (179/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.027450171 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.080101111 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.093085086 seconds)
    (182/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.934123032 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.979188569 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.118756295 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.086813323 seconds)
    (186/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.995029113 seconds)
    (187/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.97139937 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.931761821 seconds)
    (189/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.313031959 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.278150348 seconds)
    (191/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.975587952 seconds)
    (192/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.550283181 seconds)
    (193/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.019321247 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.880196701 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.514143826 seconds)
    (196/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.17923277 seconds)
    (197/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.969202189 seconds)
    (198/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.035678516 seconds)
    (199/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.969696694 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.00087549 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.280237576 seconds)
    (202/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.096485118 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.052921482 seconds)
    (204/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.112817446 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.138147013 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.079638978 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.027992399 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.008478261 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.203679244 seconds)
    (210/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.349923373 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.572333223 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.162022007 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.285650339 seconds)
    (214/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.163236631 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.951701974 seconds)
    (216/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.460951036 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.704854861 seconds)
    (218/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.039031392 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.043158698 seconds)
    (220/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.970601101 seconds)
    (221/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.043993122 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.947394292 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 4.320778478 seconds)
    (224/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.950492741 seconds)
    (225/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.148541956 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.252165745 seconds)
    (227/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.082606199 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.94837469 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 8.553779441 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.972251494 seconds)
    (231/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.153881221 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.971297363 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.987042067 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.195132483 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.331179321 seconds)
    (236/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.350072714 seconds)
    (237/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.120748053 seconds)
    (238/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.140258402 seconds)
    (239/309) benchmarking ("sort", Float32, false)...
    done (took 5.702527862 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.938631625 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.554061417 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.948700398 seconds)
    (243/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.016839583 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.935329038 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.077575618 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.408953485 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.449943628 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.122520301 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.950139002 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.845406727 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.965592864 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.934050341 seconds)
    (253/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 8.509845449 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.119590302 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.234042031 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.045404037 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.244096706 seconds)
    (258/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.293267241 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.839234257 seconds)
    (260/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.973146216 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.220339155 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.952486582 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.104903256 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.043965389 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.95110369 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.057280339 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.74911457 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.132431916 seconds)
    (269/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.935819199 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 4.320118366 seconds)
    (271/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.253190444 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.334332699 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.592000717 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.986206737 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.637898297 seconds)
    (276/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.896823881 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.858843497 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.090504934 seconds)
    (279/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.216999818 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.953990221 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.287048379 seconds)
    (282/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.71323524 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.078903063 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.284689823 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.048498427 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.032562355 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 6.950787279 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.874398103 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.009891343 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.065056645 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.974939298 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.959341887 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.059620572 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.138539934 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.780348451 seconds)
    (296/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.960697785 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.458103507 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.985138393 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.992156703 seconds)
    (300/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.970442403 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.077980932 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.793838136 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.138779565 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.198073108 seconds)
    (305/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.37959583 seconds)
    (306/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.042322234 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.974337368 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.952516743 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.253111398 seconds)
  done (took 1037.948809713 seconds)
done (took 1039.893890942 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.988325423 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.980964525 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.963270214 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.986051961 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.074570682 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.992723417 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.974822935 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.96513583 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.011358891 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.013315015 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.963129389 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.992089696 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.965644043 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.963794291 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.963246282 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.979052493 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.27483407 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.988400753 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.980246947 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.973635536 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.980101347 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.963414303 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.013021209 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.992165576 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.967070636 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.966047861 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.969077416 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.983174969 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.075897135 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.967924811 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.966926507 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.975786584 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.273985812 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.986589452 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.95872017 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.983984586 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.976160034 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.974236448 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.968329537 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.996955329 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.411327671 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.971569987 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.967506271 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.965065287 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.966341735 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.969067684 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.967317845 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.972314559 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.977496507 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.980310272 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.407637864 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.987760203 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.968869062 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.966250297 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.975674515 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.96573853 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.969730826 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.981997801 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.985482524 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.981668361 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.264839226 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.994621727 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.967505521 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.984626383 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.974311197 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.445352844 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.967773161 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.97012436 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.413179666 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.97676268 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.444735717 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.980580234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.968025508 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.981096948 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.99844498 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.275759086 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.986029546 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.966330252 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.974326199 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.965677515 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.976883744 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.980280836 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.971650212 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.968035374 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.981086235 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.997358638 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.977411306 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.968928667 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.978287269 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.986984971 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.976112722 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.981085587 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.970749395 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.962838544 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.977545598 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.971849661 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.973126101 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.971601389 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.973183259 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.978459228 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.410499418 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.991017233 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.965705422 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.964823192 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.967603785 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.983134935 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.410795584 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.974635014 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.990514757 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.016184543 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.97032084 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.267166213 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.99634668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.985625485 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.977343938 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.971334458 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.963695926 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.267010552 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.434643137 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.98919505 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.971028779 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.967745756 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.984910136 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.971614631 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.965668405 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.282787695 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.99535867 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.983402348 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.090864013 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.980435973 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.002313942 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.96807858 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.973346408 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.003678815 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.9865893 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.001509892 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.972430437 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.985435402 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.986338377 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.966177395 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.981997396 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.980302261 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.970902078 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.976717619 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.964920783 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.000402787 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984193323 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.983882735 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.992961858 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.093130086 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.970693227 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.269391461 seconds)
done (took 308.905686927 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.035548654 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.961789416 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.062204611 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.967240287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.050595336 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.054248587 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.964478652 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.963631079 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.965684466 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.344730493 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.963860125 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.964646645 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.9666788 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.964097027 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.049092925 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.96824617 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.965680655 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.308949004 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.967385017 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.037578626 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.963709825 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.964983841 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.968080706 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.353210099 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.966535028 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.960644754 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.039204249 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.967937434 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.319758077 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.965981255 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.965238411 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.317172934 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.057356149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.987031148 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.97867113 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.975758967 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.053277293 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.971966575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.048846073 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.048845121 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.064357128 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.008019478 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.966863616 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.964217607 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.970385969 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.969878771 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.966042884 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.995481309 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.966000918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.966924693 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.309630805 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.979379317 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.966679817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.966682653 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.965924336 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.001014035 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.966244268 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.970911838 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.058119171 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.970129446 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.033843777 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.35352861 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.347732734 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.970153705 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.96968815 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.967673954 seconds)
  done (took 190.938452578 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.036179953 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.046151241 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.036802513 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.974271399 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.018713619 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.041147803 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.97363688 seconds)
  done (took 16.030542036 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.97530533 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.969566218 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.019594791 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.020485839 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.970571116 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.121975492 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.970438355 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.983046304 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.968263438 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.023725418 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971152129 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.970030669 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.977738497 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.971492249 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.019826927 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.981133563 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.086836504 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.971494242 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.972056305 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.128434917 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.969217061 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.978951696 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.044508211 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.984675933 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.971352835 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.978619638 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.565891962 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.97242273 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.968556184 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.972189832 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.96942849 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.017081067 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.972766124 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.972207092 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.969780406 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.088763646 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.97285782 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.970331444 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.971886405 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.963355074 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.971705795 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.971839057 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.972009956 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.969396806 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.971401638 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.996690864 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.972054073 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.972953233 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.972833592 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.971423339 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.023910332 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.972864346 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.969559363 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.971342323 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.030675696 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.980191362 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.97348646 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.969588341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.973511265 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.969665245 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.129360556 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.021033074 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.97400481 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.021942543 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.97249096 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.973393287 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.39189355 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.974064325 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.027484911 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.974328717 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.023171382 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.971763598 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.132880411 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.998316224 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.974825659 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.978764784 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.976433073 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.974595847 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.973374973 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.981810599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.971340992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.975246831 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.979924032 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.971995554 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.971450694 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.087276955 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.082722521 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.971163917 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.987839047 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.981380284 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.971477641 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.028359537 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.973758196 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.971004029 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.025916241 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.089699655 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.049982351 seconds)
  done (took 216.368532822 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.979700515 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.982846083 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.976246246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.991126841 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.976047835 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.97661323 seconds)
  done (took 13.791174955 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.9768025 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.976812785 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.975647912 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.975196175 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.975820207 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.975662551 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.976102365 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.977065501 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.978784441 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.976400435 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.975749041 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.976959835 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.97692923 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.977448827 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.976090901 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.976175678 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.977240001 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.972748153 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.977062689 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.976398395 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.12965575 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.977080661 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97752828 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.977698484 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.981513891 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.975848424 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.98477215 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.978338375 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.977893712 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.985383647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.981397485 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.977501478 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.97827675 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.982422981 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.982147589 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.978656432 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.979281646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.978137817 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.974790223 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.97805484 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.979467336 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.97812109 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.977839577 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.979251961 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.979101972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.981774794 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.982329634 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.986154037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.979938295 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.979148529 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.980280816 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.978710872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.978660984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.979637888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.9801176 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.983443664 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.983156334 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.978888136 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.979610686 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.979491905 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.979279039 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.97876438 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.980700255 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.983310158 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.985525686 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.979704154 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.981710244 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.981953105 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.980118977 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.979658874 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.980856375 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.976938121 seconds)
  done (took 145.548316076 seconds)
done (took 584.59031075 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.234238772 seconds)
  done (took 9.147736183 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.977260835 seconds)
  done (took 8.988498235 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.581707407 seconds)
  done (took 10.494519898 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.026075348 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.985894922 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.986128073 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.97202847 seconds)
  done (took 29.893477595 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.981729629 seconds)
  done (took 8.89532384 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.983780586 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.972246675 seconds)
  done (took 15.897060513 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.071459784 seconds)
  done (took 8.985438668 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.104339269 seconds)
  done (took 9.025656484 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.990442804 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.971810302 seconds)
  done (took 15.887201375 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.960750531 seconds)
  done (took 8.873262288 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.744990501 seconds)
  done (took 11.6699195 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.982064456 seconds)
  done (took 8.909984351 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.0258785 seconds)
  done (took 8.939097151 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.18031943 seconds)
  done (took 10.093994169 seconds)
done (took 167.61146818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.976133398 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.975048677 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.976983572 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.973724888 seconds)
  done (took 29.815305525 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.014497406 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.014027159 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.016548702 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.025414365 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.018532653 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.013357252 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.007578916 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.007232246 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.024768115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.018181775 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.016725549 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.017756425 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.016129008 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.007438972 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.017160315 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.016210163 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.025662698 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.01690657 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.007530921 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.01925135 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.98290509 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.027089647 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.019168684 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.982761986 seconds)
  done (took 50.248353495 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.181391194 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.054072105 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.135621586 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.03518148 seconds)
  done (took 10.322116628 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.033616373 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.036682894 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.047883933 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.087383437 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.117695451 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.045280874 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.009500719 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.005126804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.990800816 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.037492865 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.112702204 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.052224047 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.119460816 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.982864307 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.170620399 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.984727837 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.983906604 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.035799627 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.08702148 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.100642273 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.984297006 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.036423627 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.039368668 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.053249525 seconds)
  done (took 51.071877239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.982163512 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.991716075 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.988834523 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.983590359 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.983387789 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.984156388 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.990215772 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.985091962 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.004798491 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.985331409 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.983499137 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.983001745 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.9826058 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.983637827 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.983325049 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.996278063 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.997165327 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.983955338 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.986045016 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.989024356 seconds)
  done (took 41.665779669 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.978529243 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.832238598 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.330037283 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.234599675 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.97786022 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.979621825 seconds)
  done (took 32.252263521 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.997857443 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.989058832 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.984957632 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.039869286 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.121441603 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.992042302 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.984570278 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.996208214 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.030367128 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.049909501 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.003687969 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.011195775 seconds)
  done (took 26.119523777 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.992367063 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.980513867 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.981588237 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.996474505 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.996878539 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.99287512 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.993738591 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.980274224 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.000200527 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.005267113 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.994351101 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.998726428 seconds)
  done (took 45.83712387 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068507413 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.025815933 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.010043746 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659655103 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359252622 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192138346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.631023963 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312531916 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.984238025 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255128175 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.052775232 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083626014 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238480025 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.498914754 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.015576624 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.486990147 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280337795 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186994834 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002231238 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700158202 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044280086 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.177716576 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.764139388 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.038299202 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192195284 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.114538534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.240420775 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.98040934 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120476096 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020033055 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992193538 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.981986445 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255051234 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.357197685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085262771 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99241419 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.600812788 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.694514001 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.975112958 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.710846584 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.729473131 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.106200866 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992239292 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981986598 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.916162603 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.154714076 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364386487 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.987715201 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.69379248 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.983571971 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993838292 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077609992 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.986431307 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.801359648 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895865508 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.985601767 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.981742575 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988249778 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.550974479 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.135705656 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178728666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.956656333 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.07527438 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703812477 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.407805375 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.12954202 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.988805287 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988150234 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917616335 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779308518 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039387374 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313186683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.004115994 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618146359 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320850593 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.131891485 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9253722 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252791495 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530535794 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.957483652 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211523614 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985053957 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920334717 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.926839567 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.919066734 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260935467 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013861323 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.783516049 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019179481 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312667733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.996906238 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006679925 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008723666 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209618346 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.871015744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985828923 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.831856611 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.130402948 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007104784 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319462071 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919309817 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.990108981 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242815646 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.196400152 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.075165948 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.528831249 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147431251 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.562784257 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.038974672 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.160301337 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033640684 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.260147664 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04196125 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.125326926 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040506955 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.986289287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280796295 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.577603282 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.122537769 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.060655583 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114181999 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.32824413 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.007868138 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070750703 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991566867 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.986997452 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.79626895 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.539104941 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.987943434 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.990177432 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080000535 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033712034 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.988399277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93500265 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.617449141 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122081884 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 7.003309604 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.211473944 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.582034381 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299182296 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921803541 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316419372 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.044590162 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.21136339 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.648553419 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.068810518 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249656997 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087009742 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.117052167 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036425139 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007029599 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088310613 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008876341 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.15887082 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.281471521 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.991591341 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.99331137 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.799049238 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.025301726 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994762512 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.993362987 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740161878 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270265445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.009824389 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.997206365 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.875786915 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.002942201 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053154603 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.993993959 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998953786 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.535190077 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.702840728 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.997381974 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.582606064 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216994704 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000654537 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.69936117 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106958689 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.072551336 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.271064031 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046439229 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.92458826 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.702053855 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.682103385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989928519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925538203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.991739476 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001374809 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001555613 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.187760038 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270305831 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.03365187 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.706137512 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.034054285 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001769762 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.996071813 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.991826773 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.505467833 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.153741701 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.202825963 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03888784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136650576 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.005056629 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.926935602 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.995352972 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996538177 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.993132604 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.993361656 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025160175 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.718868944 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369542929 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254178283 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.60190179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00715481 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.752952591 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.0509401 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.994476429 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697199125 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.327769105 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.084763075 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003604158 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.004690161 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.775656172 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.687345954 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.559501351 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307447669 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323433091 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431728416 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.227672799 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.023510329 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.333631375 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928585283 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.550133663 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052783819 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335790964 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938319739 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079210853 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.654262453 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.342392018 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00708059 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221455006 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387268028 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.771363861 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138492049 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20515517 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028256037 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.169093554 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954833564 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.281323886 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136019739 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.712448247 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204727103 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327879571 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700728139 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.120602072 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.995277486 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.665663003 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074983321 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.708054203 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168447544 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196557356 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.98512432 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46877169 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.002929638 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.221890144 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351507805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.179183705 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.11704425 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931905707 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.007969887 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00788413 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.999377729 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.99685364 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.882174195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.250313033 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007585622 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931296359 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.142013654 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294263305 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.898146031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.002996466 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996630879 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31430948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547701508 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169394698 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.131752553 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.518534769 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003695545 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.932163315 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932767176 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.690161827 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.00507911 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972877973 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22636046 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.092153584 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.910254037 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110331773 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246489532 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255973872 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.012732806 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275680229 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273090569 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.697521638 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025471336 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.098122832 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72726703 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.110211388 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.998089418 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233000659 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75580387 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224058466 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.031694034 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.947102557 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.997005475 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.212399037 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.999069421 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.970533586 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226945111 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.723003781 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.106846965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320648964 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068393023 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.948611003 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.043444412 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.088215751 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00862137 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078038647 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008862955 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.008732386 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008957747 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046068632 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930505412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.124110867 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.012563422 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093494404 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.142779673 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.52845708 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.005735392 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284252308 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394922962 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324163229 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055462183 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.001192937 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.999208858 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.933966301 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148955114 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226278798 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274244159 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.128159753 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.116943603 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025553484 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.732445889 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229933838 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242461125 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27654383 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.896259717 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.52182671 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.042436509 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 7.001104121 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011655229 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.212167158 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225907207 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314493858 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140170991 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.104358259 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365784904 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275739655 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.001948123 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001176364 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589895317 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.123203789 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671166964 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.036861441 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968932169 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279146904 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011414685 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.38888001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.022542809 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.156560821 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.774490321 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791652074 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291336441 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.979994455 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059245504 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28684314 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392036169 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312199513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070549165 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012654402 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.108156243 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149243336 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.895331205 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.004456105 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.002290513 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220365939 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.712679964 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013002802 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282563523 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312840645 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.001108489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.89571741 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026666747 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.014049992 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227882479 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262957643 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250808224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014791535 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.012943412 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.821837509 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278748437 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059962687 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.937753024 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.007134596 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100070025 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250354797 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025640887 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.456983909 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.714675537 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274375954 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.997126426 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025105634 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18470169 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370304673 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329954428 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.541213953 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208922769 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.582955921 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.601210302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308191895 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.008800988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185167141 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309240331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.009238099 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.112255602 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045049393 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.278953421 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316910306 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.083906235 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712138442 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.973509914 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.346646055 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.562803725 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.943543878 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.015461286 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.066095215 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.005861538 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.136314451 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017147864 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.900396525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187546217 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.76593603 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283895978 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.010820129 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.996135125 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.686186665 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.313291002 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039852674 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162497506 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014054796 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.681698635 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.357112086 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.263222329 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.114215116 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.01606397 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.010703479 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008213987 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993285747 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.20331932 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.203412543 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301091113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.138872095 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.044869461 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011767818 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.223063514 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21854567 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.906205356 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143833289 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.111912361 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051101749 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.914554117 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508571522 seconds)
  done (took 1736.855078417 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009741443 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.063583798 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.022262206 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.111655046 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.021033599 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.059328328 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.150551111 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.122712117 seconds)
  done (took 58.507372292 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.007538049 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.20215124 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.017059994 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.008393264 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.018148909 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.008117831 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.179064046 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.019591416 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.018946178 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.018655207 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.023343527 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.007859694 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.324843681 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.034861898 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.008856534 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.017397562 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.016701952 seconds)
  done (took 76.906002753 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.050761601 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.085090519 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.028192644 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.029152747 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.981506805 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.017095151 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.841328098 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.045250951 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.009341385 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.242873234 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.641621339 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.033013974 seconds)
  done (took 91.954599126 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.02040558 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.016009401 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.016227665 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.016364057 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.015873545 seconds)
  done (took 12.037624337 seconds)
done (took 2265.52981949 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.262852591 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.230429297 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.244086238 seconds)
  done (took 6.42489498 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.160120756 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.207687577 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.326910215 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.331800487 seconds)
  done (took 10.977499817 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.295092639 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.391872247 seconds)
  done (took 6.635265084 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.408049469 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.017411125 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.393313578 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.008030246 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.012207955 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.011445993 seconds)
  done (took 22.986175665 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.014928335 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.017246314 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.014082624 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.016161547 seconds)
  done (took 10.009054669 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.99752939 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.740260276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.998312416 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.015676295 seconds)
  done (took 21.701835209 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.76131532 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.772210219 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.757258378 seconds)
  done (took 10.239476876 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.584613494 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.968202733 seconds)
  done (took 9.501081729 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.269567981 seconds)
  done (took 4.219228544 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.146909963 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.321624666 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.48751903 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.514853087 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.616571749 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.705080147 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.326492865 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.25963172 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.407961388 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.444804998 seconds)
  done (took 26.180254639 seconds)
done (took 144.901772355 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.391615641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.383567197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.215853967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.349039813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.235213611 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.216009535 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.223339334 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.330635767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.86002453 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.858117008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.393135032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.234606018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.177601858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.379798174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.17707904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.25116809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.23445438 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.408144553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.049380703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.245461378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.229758004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.989391342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.23486766 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.006170192 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.237597345 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.166637088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.568597501 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.253502618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.2010216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.578031766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.185356117 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.397428727 seconds)
  done (took 175.614201553 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.781579849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.014391605 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.013308503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.014145016 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.464291607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.015434439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.016666838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.0155659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.289202586 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.267361172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.029553153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.508909811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.035145092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.016000518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.030086068 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.014384861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.411312566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.886711008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.038584352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.039091111 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.043193727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.418381841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.03724552 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.450760268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.41511182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.03588746 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.015403368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.035130707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.020045366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.031183665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.033677673 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.015591353 seconds)
  done (took 213.408078128 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.015711866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.017475216 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.023237313 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.015748131 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.022551211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.022998728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.017936578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.016977492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.606503063 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 7.284225006 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.037103804 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.033551645 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.026810559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.020518712 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.035310155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.019400216 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.024126318 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.024287855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.028256531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.032259121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.036392474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.800520514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.035368807 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.812361955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.037243008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.028383031 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.020006346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.033766664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.037204851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.036673073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.036728594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.021382506 seconds)
  done (took 226.238612492 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.223555865 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.026573963 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.027372963 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.980499005 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.027433991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.027842495 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.022365903 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.223628775 seconds)
  done (took 20.536637264 seconds)
done (took 637.755084345 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.56222284 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.340290917 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.207385293 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.051804385 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.293757159 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.092478884 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.047082626 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.115861117 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.779591382 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.121899252 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.702322689 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.06490363 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.779582386 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.07041418 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.171266941 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.103364343 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.587926757 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.679088574 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.229864867 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.10346021 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.220576931 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.042424887 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.123195597 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.798261681 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.802683907 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.055244655 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.221951158 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.591861872 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.057586734 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.213896057 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.779507953 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.42707102 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.060532464 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.04658046 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.099562431 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.082595888 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.394179041 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.060062147 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.174809397 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.813617338 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.111630967 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.655164251 seconds)
  done (took 109.898010658 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.019838296 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.018438776 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.01802535 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.01919387 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.019477111 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.01789424 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.017989624 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.017758294 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.018926812 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.018103123 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.018392949 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.019530407 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.019174546 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.019668473 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.018311149 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.017947244 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.019216893 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.02080112 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.018718756 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.018504846 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.020482937 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.018197508 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.020701349 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.01942269 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.020454343 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.019677121 seconds)
  done (took 54.466204368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.031223255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.172998008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.259244292 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050117258 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.030610981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.033407931 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.04971004 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.035786685 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.034213482 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.033401334 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.121828838 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.036987958 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.04942614 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.258424435 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.046812384 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.031002806 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.031407541 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.030424219 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.179453391 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.046980868 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.05175035 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.035800701 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.050229631 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.04555824 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.031733957 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.031916099 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.035144174 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.497228651 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.040722593 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.121125629 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.10629154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.053011043 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.469422577 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.266119285 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090900522 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.03784983 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.031561632 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.127100514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.036819929 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.031573606 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.050153575 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.036627219 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.256882609 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.533022032 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.045201967 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.03265966 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.506479768 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.134029438 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.0729585 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.042465755 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.260758269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.047175824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.032774151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.032738355 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.069708948 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.041370161 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.031462206 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.393288466 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.044311012 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.050165848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.037605074 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.03362407 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.187121954 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.040834712 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.176121876 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.041310229 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.040749662 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.033809621 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.258795324 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.04912324 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.537795131 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.046746357 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.033392751 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.123340467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.181125125 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.53366734 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.045933203 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.191113906 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.484612732 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.057898132 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.041127668 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.488102048 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.061220701 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.04127352 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.034876189 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.034571465 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.03250983 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.077147632 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.049198979 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.473855671 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.542356571 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.406437472 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.060417338 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.049302761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.033836823 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.394900132 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.042367798 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.033808511 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249402391 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.554495309 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.046971235 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.040649476 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.522673014 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.047575373 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.051686357 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.042303597 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.261216877 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.049055181 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.077857323 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.035835755 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.04177066 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.036901324 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.053784702 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.042017669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.03452779 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.513544592 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.142867956 seconds)
  done (took 251.312817307 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.029584058 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.029912596 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.028604707 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.029380176 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.028168201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.034522992 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.028420791 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.02834184 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.034352001 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.028269761 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.029048781 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.030813083 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.030221184 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.037766225 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.066714218 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.03659423 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.640444569 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.029478651 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.029276601 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.03198411 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.679195569 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.035679928 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.029745955 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.029535557 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.038407829 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.032104143 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.032462019 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.058151863 seconds)
  done (took 172.167520819 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.039086298 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.153906857 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.05447203 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.066762973 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.046686358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.034285238 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.060254747 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.052318031 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.041435597 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.03367686 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.034360593 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.096439674 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.047438693 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.133983407 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.069363384 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.06774017 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.140806644 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.044455149 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.036218968 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.036612303 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.066236621 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.034446507 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.098353288 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.164274247 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.055170585 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.1565717 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.043788431 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.039327573 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.038794691 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.154823414 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.051744086 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.099190734 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.066801238 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.056350207 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.161053484 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.153490577 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.145903078 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.070176037 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.042788036 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.037008545 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.036470276 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.028754754 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.15800446 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.057002857 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.040008128 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148283481 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.056912897 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.04086937 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.048018351 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.037459287 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.052812496 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.058160389 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.107203436 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.171493741 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.072841745 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.065050695 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.064925424 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.313105967 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.048788449 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.139848641 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.037739908 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.157073722 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.059153792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.029470561 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.040331337 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.045536771 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.067524916 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.071186317 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.144338616 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.049482645 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.140271133 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.076326509 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.047054513 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.039721425 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.042648324 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.156510267 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.157278541 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.076966986 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.077648802 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.072095723 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.037713312 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.041075216 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.031183009 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.058181721 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.045654992 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.158513006 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.163853655 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.048896116 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.042253619 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.043627209 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.042965202 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.06784383 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.167110246 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.075575033 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.137846249 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.111454694 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.116919875 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.055054489 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.056056891 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.045956679 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.105707083 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.055703568 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.054147646 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.359983962 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.113053539 seconds)
  done (took 220.570570493 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.517321218 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.095038759 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.096583892 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.310846448 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.462232229 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.849857131 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.085260039 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.090768459 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.117118817 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.248486407 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.148523737 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.105503681 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.076910622 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.063733375 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.092607147 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.111143996 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.093101865 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.373321772 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.217632258 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.245488383 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.07077202 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.35043778 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.413965508 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473543174 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.124184109 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.411770177 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.780168406 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.329541536 seconds)
  done (took 66.335899971 seconds)
done (took 876.706170398 seconds)
SAVING RESULT...
DONE!
