cset: moving following pidspec: 16677
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.233322009 seconds)
loading group "string"... done (took 0.463491263 seconds)
loading group "linalg"... done (took 7.571779267 seconds)
loading group "parallel"... done (took 0.17390175 seconds)
loading group "find"... done (took 1.154026256 seconds)
loading group "tuple"... done (took 2.093164654 seconds)
loading group "dates"... done (took 1.347624247 seconds)
loading group "micro"... done (took 0.250196172 seconds)
loading group "io"... done (took 0.655809781 seconds)
loading group "scalar"... done (took 40.878943383 seconds)
loading group "sparse"... done (took 12.467102751 seconds)
loading group "broadcast"... done (took 1.107650954 seconds)
loading group "union"... done (took 13.616969677 seconds)
loading group "simd"... done (took 4.762283494 seconds)
loading group "random"... done (took 9.604832848 seconds)
loading group "problem"... done (took 1.981543685 seconds)
loading group "array"... done (took 22.407862215 seconds)
loading group "misc"... done (took 1.430525695 seconds)
loading group "sort"... done (took 3.569565061 seconds)
loading group "collection"... done (took 19.307454509 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.509164939 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136129294 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130885732 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146265473 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199926676 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14249835 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156067534 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113093518 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942621286 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182635905 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152217809 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511462677 seconds)
done (took 5.065424213 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221431264 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093901351 seconds)
    (2/2) benchmarking "String"...
    done (took 0.101925332 seconds)
  done (took 0.863405444 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076373991 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144896279 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093925026 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078599626 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093242137 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077586246 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094081927 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.07763688 seconds)
  done (took 1.333619489 seconds)
done (took 3.175747179 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728460785 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276030326 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205369298 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.457661596 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195560054 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212395026 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684782047 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.360676989 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251568271 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099801114 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142177691 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386221975 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134493358 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686347525 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090325684 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122857466 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176617145 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459845823 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082125273 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109390911 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115608351 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141060871 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128418245 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090121586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184036699 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080912065 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191616982 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107082474 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080123183 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287240009 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199807777 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686241544 seconds)
  done (took 10.865770015 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110917645 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13226764 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096211297 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138124544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132809028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098054753 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083238851 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094931293 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12015517 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17532213 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128696476 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.12010396 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093645649 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081270674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.1131655 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241757353 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118137471 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103958943 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099503598 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102721672 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121145412 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111729352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107029153 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092195308 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16540226 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219340708 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111342868 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124420078 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095627867 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112042694 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143824739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142212073 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095094798 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079948325 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171987253 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122806648 seconds)
  done (took 5.086721462 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186911181 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118659703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166293813 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162201519 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139089787 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158677931 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110743881 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24184733 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113631405 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162004327 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138933734 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115258192 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080155953 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098366478 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094587029 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.626269362 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163620156 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133000784 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112930858 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087415867 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098971079 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363066443 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102605827 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079311048 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096937072 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064752049 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158537063 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.154390143 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098979818 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140176552 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119528825 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080964392 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134582092 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207486396 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108863826 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133088771 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095045968 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078945661 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178263742 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103263824 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077971366 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119552406 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133088419 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134094613 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095473161 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080044046 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203327355 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096031853 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112251992 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.946575113 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180303316 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08924783 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095162063 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321589598 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097381449 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098970287 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076685709 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276600128 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182265231 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096591679 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080394549 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095895747 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080811265 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394430621 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08056399 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.794726878 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08176886 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.104979459 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08170037 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095059944 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103068938 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087465557 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11316628 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077358955 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095983298 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080566482 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096698042 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077982118 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098340039 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105621192 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085688449 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096526181 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147238567 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09411556 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097229242 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128137944 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098596556 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077250324 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13024281 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098888887 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080620133 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131826557 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097447596 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07748192 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107933877 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098306994 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126041442 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09558165 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.186538697 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079519612 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124786812 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098103996 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113406658 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111032485 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097955911 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084686084 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094885537 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076516146 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094400323 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147742285 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09456863 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080245364 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099347732 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10743206 seconds)
  done (took 22.521761606 seconds)
done (took 39.148507133 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326413262 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10128202 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100215565 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101001541 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.0983932 seconds)
  done (took 1.471462993 seconds)
done (took 2.189998161 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286946465 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170717773 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094604433 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166340497 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092417982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173303014 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158219373 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111104108 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216353867 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077427477 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161962949 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092747248 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07627929 seconds)
  done (took 2.622800591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094767724 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113635589 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081860823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110007076 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07638543 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110274206 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091368083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116755466 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108146594 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083510731 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092291573 seconds)
  done (took 1.79957999 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092534941 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112085671 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08138205 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109366495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076295307 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108593697 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091681795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11426269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109922358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084324589 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092297497 seconds)
  done (took 1.792390216 seconds)
done (took 6.923764603 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09076633 seconds)
  done (took 0.802084259 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921870987 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.950016675 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111772133 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148089067 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297994668 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190188065 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.475077401 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124291571 seconds)
  done (took 11.140383076 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.144787392 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085492075 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100077062 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085012384 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100517033 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08244796 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097914027 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097313441 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086008152 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101163598 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082545709 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099978934 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099774042 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084315706 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098390187 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083381997 seconds)
  done (took 2.308447367 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118892606 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117712543 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105228785 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107020515 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086465039 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103498139 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10484952 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088836807 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101589452 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102385702 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089582928 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103913378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103309631 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079013457 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104639271 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107303809 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08518303 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104949991 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106191667 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089812594 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105437132 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095458077 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086764104 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10514608 seconds)
  done (took 3.227989897 seconds)
done (took 18.196011753 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158513275 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107544136 seconds)
  done (took 0.987872596 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094600511 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11216982 seconds)
  done (took 0.935426426 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096458133 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095173112 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120233002 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108719045 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080049703 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096584485 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11866946 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080269801 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.0949805 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080076182 seconds)
  done (took 1.703259071 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081900682 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109266935 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10073242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09362585 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104133284 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093551841 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087790859 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098128611 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10920023 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076825588 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101796334 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113144261 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085052111 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114462746 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103151672 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082662083 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100559261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098088785 seconds)
  done (took 2.485598205 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078839404 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09673207 seconds)
  done (took 0.904705788 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080837564 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093522622 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08123454 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095354346 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092971907 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076069137 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092946145 seconds)
  done (took 1.340622795 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.469614563 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134485196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.251684093 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083685021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118637 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300754925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09676936 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084090619 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101916413 seconds)
  done (took 2.425980209 seconds)
done (took 11.510146914 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091924431 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116234131 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111520468 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460734059 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105976823 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096070093 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158201841 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250102927 seconds)
done (took 2.12763138 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152185027 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323494165 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112198401 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067131638 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094166264 seconds)
  done (took 1.334603281 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079303724 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098388246 seconds)
  done (took 0.913885245 seconds)
done (took 3.139413558 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079587125 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096258826 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077829283 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097242115 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.077501184 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.094089365 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079657578 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095554656 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.079786282 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.097080727 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079301875 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093510235 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077411902 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095771115 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077187025 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.129086968 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094675145 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077109976 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09543974 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077275668 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097520101 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078907274 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093938163 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077265106 seconds)
  done (took 2.891194755 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098115436 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097954347 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101699682 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085596146 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100629374 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085508696 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102235689 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096749038 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08543436 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0985014 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099723181 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083584538 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098372544 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084282047 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097768908 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099423249 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085422246 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096623698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082849157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099493568 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101968729 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07996494 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099997209 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102214326 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083384697 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099877946 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082681165 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096504895 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101845174 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083203049 seconds)
  done (took 3.553069181 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08422224 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093293873 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078058038 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100943193 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078009771 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096258493 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077824364 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094564267 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07878576 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094398398 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0790186 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094810227 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077687282 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094858056 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078967638 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097438685 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107821105 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076715545 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094688438 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078245446 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097595029 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076861894 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094207477 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078312862 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093928749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076842235 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094299951 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077599022 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094297398 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077502797 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097544695 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081779554 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094697179 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084309248 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097481432 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077815498 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097691642 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093763599 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078559363 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093561927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077191692 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094421557 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076895947 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100645485 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078227004 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095869733 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077402719 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095998832 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078329861 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098100255 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077575916 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094307595 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079967967 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095342895 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097558214 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077821069 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095233772 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077092397 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095186468 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077888296 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093951901 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077626472 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096359998 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079014435 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10993357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084542062 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093645914 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079034044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09477091 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08049827 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095348126 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108307392 seconds)
  done (took 7.091831049 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082558297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105588583 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080140856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097021396 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075258304 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095037842 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097745829 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078520498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096990147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084943323 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095211985 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079544009 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095489716 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107128728 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078614192 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09653592 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08426897 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091996362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078611928 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098438533 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078058157 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098559269 seconds)
  done (took 2.720292128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206107259 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104363909 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141176828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107111983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082669561 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104710882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101406559 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085434476 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101713112 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082702861 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09980387 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102251285 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082750411 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099090985 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099838379 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085008589 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10094829 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08375665 seconds)
  done (took 2.619870105 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092114346 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097692576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1021196 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097635687 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09832712 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083455278 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103387085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105729373 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082882076 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097388803 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.08933902 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099718477 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10015651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081116644 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100077377 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080881059 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099729429 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08099106 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106500802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103878143 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10328787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090532338 seconds)
  done (took 2.84846536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095897509 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100156027 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.1176339 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083959567 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094991068 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079649409 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104270926 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081352606 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106607389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098772433 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081068452 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096315011 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08662165 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097398067 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10324923 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080515518 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099813638 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081323357 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099228024 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077447323 seconds)
  done (took 2.619191941 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102074683 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098753867 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09833425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090999654 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099221875 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083605174 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108731809 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099455275 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0827289 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124462068 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100064945 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083183218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107761379 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105092022 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098337486 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091357055 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107664123 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109235834 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082208552 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099198957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124783928 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082587263 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106981218 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.205449081 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083854665 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100188887 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100240551 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087521876 seconds)
  done (took 3.619408125 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081311709 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09805783 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078210793 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095301197 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078448565 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096265416 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077804086 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095958461 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081710328 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095848778 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081176796 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097486581 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080210231 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097665384 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08090402 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09826849 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083173232 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096032912 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078286787 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096407346 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081125077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098123262 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08132378 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09564556 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078553236 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097913828 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078288308 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09554799 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081580514 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095127989 seconds)
  done (took 3.408730007 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090407873 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105002586 seconds)
  done (took 0.953392785 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078515078 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113917235 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077963723 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101856662 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086409523 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098865437 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106463287 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086089797 seconds)
  done (took 1.506912629 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096577535 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110083725 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083533967 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111400396 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108957324 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094688395 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159442511 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099756777 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087927876 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096934616 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111573404 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079704221 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103795302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080797002 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104090814 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087427671 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096471186 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087607196 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100253566 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097161213 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083024116 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110825066 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084446591 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095891773 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08389599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108993129 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108464488 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082131885 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10177622 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108082003 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08820277 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092631381 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081495133 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099956987 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080082169 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106724087 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111945966 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085173152 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107663473 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0830963 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110030504 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094171801 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086726149 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104147403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091345845 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099021612 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083081436 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093790895 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096586415 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084135194 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094245828 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081943748 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093069406 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0887682 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103752945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111861398 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080348242 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100692827 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084484263 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101682723 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087913233 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101238316 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084017349 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098323937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10606416 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086312912 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107212502 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077855037 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092873364 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080284949 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107226123 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121803399 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089996878 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101291935 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082818095 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09656578 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103035837 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083348451 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107054444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08946667 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098947552 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105968387 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08967405 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098727636 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085414084 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107102677 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097246149 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083999763 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095999543 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096989368 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09765037 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079645664 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096396759 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107496727 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08551399 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098605448 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079500565 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10606438 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076500783 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102409751 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083946006 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099820415 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108503898 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087655263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10550611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106449509 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088857731 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099977617 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085390039 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096675417 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08349063 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101348605 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106737022 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075847609 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102607909 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083989253 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10020283 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089068947 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097214899 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082104914 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107847084 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105941113 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080558211 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095341212 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084640694 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100022085 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086103198 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10594796 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098321319 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077621351 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094750678 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086001874 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099238316 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086670583 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104756026 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101885856 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07738824 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097589514 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087045161 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105842357 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099051197 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082327792 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103973462 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083085834 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098929306 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087668746 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101032324 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080999292 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103362642 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100547907 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076529931 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102794632 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084965188 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097935032 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085546756 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102557267 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101825076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083151098 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098164711 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087731998 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100887711 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081671682 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099477786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080676128 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108064035 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102078626 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077492389 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096848662 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09022002 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097802075 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082050546 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09873714 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102487971 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083592693 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.0973558 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082163663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101513921 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110978012 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087417173 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101240285 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087077217 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109732827 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081931044 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101852019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100067383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083268464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100512826 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089451861 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105380947 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105426934 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085172723 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096656847 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088614381 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106905375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081836568 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098281 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081985383 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103094391 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107020109 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086057634 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101039734 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080656985 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100399351 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103797943 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085207106 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098909132 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081099481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105060132 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080992826 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106754485 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100660057 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091417237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10426548 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07820874 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103462232 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098347797 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088510974 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09594881 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080823374 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098929853 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083224164 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098900969 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085525677 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093871758 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089242447 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109397396 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100932858 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082008849 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100502175 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09153722 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101942756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086417661 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103672203 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105198755 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095448582 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099464092 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086454658 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108286509 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100250919 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076289994 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105285075 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081084643 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099648941 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081407091 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098223012 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085869292 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108754881 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104851162 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075908089 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103095092 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081511067 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099359046 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078343413 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.106756214 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103709692 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08470913 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108917657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083562373 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101189117 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086086711 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100694322 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10175437 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083779366 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103808283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083644138 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102586829 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081628389 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101680814 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09933924 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079648107 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101517417 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083437715 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100597755 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087944188 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101687751 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082411519 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104206497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101290628 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083892722 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10050151 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08176678 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103947361 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083998052 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101312392 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085267677 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09507275 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107135885 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083013805 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108963642 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083338664 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097071745 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087716867 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103668033 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105929892 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084354317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101211572 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083591359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100527431 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085806802 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109507254 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0984728 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091830475 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106374051 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083253519 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103912725 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082682042 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101806043 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081906363 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101980792 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101849092 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083926661 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100191962 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087679745 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103519765 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084078814 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102495535 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101627546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083399572 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101980809 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.07747898 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099584529 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082737297 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100284645 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090239058 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101761014 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103476574 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081484031 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101880639 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081364042 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097008473 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090825494 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109896433 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103669302 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091246542 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10062834 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084928273 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110602905 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094928193 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081210155 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099194111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080799226 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109062906 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084610861 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109060104 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08210305 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101040659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097829963 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084344483 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100199028 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077124195 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09905703 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086111065 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103082605 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081892145 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100971234 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085989912 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10297543 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10767132 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081978124 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102362953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083883495 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097608435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082387979 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100138047 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086707691 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102400322 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098668425 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080822595 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100910758 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084980378 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.10900198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083019937 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103072113 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089680987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101286785 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103009368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087049129 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096290579 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085941071 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100724799 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083132306 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100183961 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104627261 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086902485 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101496652 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090235334 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100849225 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083896513 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101690543 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080283298 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100181505 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101020769 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083227585 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100942031 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084270455 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109993692 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081535815 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103415884 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100683959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08326506 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105087802 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083481594 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102903002 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090334671 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104894834 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101941116 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089024658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105104782 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087120838 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102013628 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08413021 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107568914 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100764108 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092080714 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10181729 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084730782 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102880949 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079966608 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100602909 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082295599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09964545 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105714004 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084178471 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10054847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082522101 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099345899 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085214745 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104487186 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109046218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085691823 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104249368 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078850796 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098390653 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084684518 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098878787 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085281634 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104678878 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107789504 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085386553 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102302978 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081986906 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108934046 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090055999 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106445565 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099020923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087718045 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10285833 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08604929 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102392734 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083959413 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103525556 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106201086 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085916552 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101919135 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091471944 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105636928 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086483468 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102972518 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101363269 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083258521 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096546147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084077208 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104307926 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089887013 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104077559 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083301141 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110668295 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101527385 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083775197 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105430006 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083264078 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108207224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078508276 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10297767 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10280285 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085368409 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097245514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084039426 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09891261 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085291665 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10030631 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079020217 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111519992 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108921254 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086099782 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100069861 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083044912 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096663117 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078312525 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100954512 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084300873 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102750937 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110998048 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082136893 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10025224 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.07946464 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101218442 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087011059 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104753978 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080468887 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097347686 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081666329 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104311948 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10820063 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082814106 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101582406 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086609999 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104006964 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081210451 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105869512 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098819049 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087977406 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111734965 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084139385 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102702115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.08861477 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110347209 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10279826 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079470205 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103172632 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086051052 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102094037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084029412 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104092782 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115614786 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086457248 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101651715 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082437612 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104851332 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083249933 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107971754 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104407844 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084942595 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106673211 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08560209 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111540051 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104820869 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090159108 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103771604 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085787946 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100818916 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083593273 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100874991 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082021001 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103569442 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103157986 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0883963 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111372132 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082981343 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111441932 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109331523 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089938619 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098857337 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08303918 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101695264 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079453997 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103784557 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082091921 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100567915 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100290447 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082488083 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102692786 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089506261 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103543772 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084898872 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101727977 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077901438 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103814524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104191145 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084270527 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099249499 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083724988 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10312162 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089555213 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108281113 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084176332 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104944053 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103745459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085459219 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097645986 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090431571 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101305619 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086456529 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101476587 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084343915 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10436537 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105629787 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090018763 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10363141 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086223231 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114731031 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105207933 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082066793 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099909911 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090427602 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101527941 seconds)
  done (took 57.362233108 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145104781 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081291514 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098084514 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080074468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1119814 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098891675 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07926966 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099239546 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08083167 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100883452 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079498712 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097370401 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108658388 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123053049 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093206501 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103817669 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097534791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081228044 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097272146 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081067876 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108144127 seconds)
  done (took 2.851136176 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104815337 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11670302 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114046638 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118920244 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089835069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114473162 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113833686 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113979426 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099113784 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110673292 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117709305 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115215105 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091436192 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110518173 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109754398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093249229 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117311658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10838445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115292011 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095416066 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112369663 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11466832 seconds)
  done (took 3.201542707 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083856656 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102071914 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.0851893 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09692334 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083266283 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097501783 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088488063 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099846962 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086739674 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101095619 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081852463 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101815024 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103603609 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079425649 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102079827 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082417354 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150665408 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106795252 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08392023 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103682773 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097859697 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085744603 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098071621 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079306606 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101241398 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088059801 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103477439 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081517806 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102803446 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082167609 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103638761 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081363564 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104778253 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102808411 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083249022 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101290272 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083615056 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102941643 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07973842 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100683006 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084148691 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098889384 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084072181 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104432238 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082481867 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101357299 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084422927 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102701592 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096996769 seconds)
  done (took 5.432927118 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104678513 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159809421 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086983378 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142050729 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119835451 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113081975 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087633584 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141899134 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102465169 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083149515 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122534561 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119174429 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103352971 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089885051 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106764972 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102934819 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086444566 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102408911 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.08869214 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104352772 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.1083479 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090171303 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11881405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116766607 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107287571 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084148044 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102488015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108211672 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098622993 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108676903 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109540347 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090418735 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120552021 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107911678 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082751447 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105269509 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120940601 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103884758 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086853289 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100647059 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086902832 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10905845 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110085595 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102789116 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104455629 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107453491 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084937971 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100074011 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117118347 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087258548 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112060532 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118694111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107536961 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084520388 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10819974 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119759803 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084719932 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100965575 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087766319 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117784114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100747232 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088372574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118252195 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105447299 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111771988 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099515608 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108687217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108322537 seconds)
  done (took 8.081261082 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093539494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110485821 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119429439 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120083293 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091040845 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110151367 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110615995 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090906194 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110685869 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116614023 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110504364 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132835586 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085973642 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114719664 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109881093 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091616235 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110786392 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109844359 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090862229 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110240737 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110154294 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119835952 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092243734 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120757797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142909477 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104568489 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091022577 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110133271 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119912872 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110019524 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123539018 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09119166 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111706992 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121655152 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123145029 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090623914 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10261273 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10918945 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091277863 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110776455 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104837859 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10242441 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109934092 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105183975 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09184421 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111328574 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121310984 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123321357 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112719103 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097112311 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111425796 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120391462 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10980147 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091423226 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120445281 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146678775 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120385874 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120646428 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110938571 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099705007 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120032595 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128910929 seconds)
  done (took 7.63567909 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107274538 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11454819 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117793219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099601766 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083143779 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108425818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082853003 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102320795 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11425203 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094249434 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117076428 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108111467 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091116429 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117158897 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108711906 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112525144 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08939455 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107962669 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114099989 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108112806 seconds)
  done (took 2.918597894 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093171693 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123165616 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084793599 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111912406 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107353871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091285866 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106936153 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107236467 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085608847 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107339369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096548712 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116095657 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104530391 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091764664 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116535122 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110630369 seconds)
  done (took 2.474553583 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095829708 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116490147 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119677902 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084560523 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103599216 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080633645 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105862307 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10013786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081425652 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121117238 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084534717 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107258548 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103965418 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082687997 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101903606 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088404829 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099788706 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082651675 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10435804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121580931 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095853489 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103944997 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104812299 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086886492 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104102087 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09024532 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105644823 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102697659 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082965745 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104687232 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085051757 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112492067 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100515049 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084024905 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103559268 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081723202 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10428035 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08589514 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108416277 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103565018 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08347938 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103536005 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085299206 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106152378 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081267575 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105007821 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100731859 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091576267 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10202756 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085320419 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104883547 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107038869 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086099699 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114862439 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.0886001 seconds)
  done (took 6.20668561 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09877431 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108145011 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080386249 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102208244 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087676037 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107395367 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107706922 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088200361 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106093107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083515066 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107335398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090398876 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106581143 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108379153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087885991 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107968963 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080610574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106570601 seconds)
  done (took 2.594220862 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09117559 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104705561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092647225 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105005941 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084686539 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10769187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080443334 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104400358 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102316428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086066799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104418662 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087904372 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103648806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08766774 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10481409 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084732168 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107183367 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102449792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085555297 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099982104 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087648952 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102601149 seconds)
  done (took 2.945003905 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118097403 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123894771 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092228976 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228291369 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103885099 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13153962 seconds)
  done (took 1.627264429 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110141072 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120864565 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105215453 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106952012 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115343451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106533303 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087407465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106858297 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116634451 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102405107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106736976 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117977631 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117310342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096609025 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114293447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114650613 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107232049 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087195612 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105765816 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127804758 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088099866 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117020983 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106777371 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087522124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107493499 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116893728 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11702055 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121669512 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087532989 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118657795 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116630637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089856008 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121104261 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125424675 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111658138 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097537294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107370413 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128130531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113181923 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097344634 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108274121 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11362443 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096715948 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11340653 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117286309 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107292266 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093266919 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108081408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107415829 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13503784 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094323058 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11623594 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115679818 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117417344 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117088173 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135760007 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102894299 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117223379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114742436 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122591928 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117427519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094218913 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116258994 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122845895 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114521608 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116740014 seconds)
  done (took 8.121990989 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102833291 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125677739 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107849824 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122280432 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097255285 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107215 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106992651 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087734555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107546606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105511007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152340281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088914341 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117465966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1173041 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10773243 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088313371 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107947203 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117841477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087573736 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133864214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108323777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117056878 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117056663 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096583654 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122747256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114001226 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108122432 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08769867 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106944951 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108308644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09428881 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107848795 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117640292 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086336664 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117299109 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107875673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0889624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113913822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107413349 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113937816 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096472247 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129237428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107555259 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107230859 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122803081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087805508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107509629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08753454 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107683815 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106670799 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103192174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122098437 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12245593 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117626924 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107634226 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087764464 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107941516 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107158098 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087586673 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114667953 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118363543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107498064 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135888067 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088683766 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107630759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116270644 seconds)
  done (took 7.984302953 seconds)
done (took 154.006456878 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098097809 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135259947 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096399703 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167334723 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105581128 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119554215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137008285 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097686144 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105869503 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088531239 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106876716 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088278511 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171296415 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085685915 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105398824 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10692235 seconds)
  done (took 2.652436352 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19917669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253213773 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103029188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106585981 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08930781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11012513 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104272405 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090943797 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10926975 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085357596 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108887546 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086668178 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105893366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086632505 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109521962 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087989638 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106296409 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087677963 seconds)
  done (took 2.873236106 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113895305 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143995489 seconds)
  done (took 1.105593102 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118332123 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179085102 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293051574 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153861352 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11921967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126045306 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155871856 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131251498 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196653482 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123331085 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122058405 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097298239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139482809 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115439024 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094006019 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118191563 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141258408 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093059513 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114540382 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.1156801 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116841295 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105467019 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114790076 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093528718 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181272605 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119188716 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08570974 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106481098 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115586727 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094546891 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113181509 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124240878 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097538474 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173660872 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102547038 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175337022 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098150763 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111879771 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114276748 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091768547 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118206149 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117248881 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105218411 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117638567 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087210903 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119430537 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105143446 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086259338 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114567808 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097665545 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.11570312 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113147696 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15447942 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118565885 seconds)
  done (took 7.496527204 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798167535 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162076578 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090845432 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884379403 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135800153 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103711748 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776065411 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109202001 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254514869 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75767987 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134017495 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120170362 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20276839 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257406989 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922934412 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306618713 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669406676 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103154082 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148519861 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153292119 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118011619 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13559691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109334663 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452184 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116019586 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112186111 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096579818 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119308722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159241377 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124494964 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112502849 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176095551 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245356943 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201774781 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114156629 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089738205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110116105 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169044977 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262024248 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19129489 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.201796622 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087291792 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109838694 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100769274 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131370989 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108168467 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161863089 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172510452 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190698042 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094505883 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117993835 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118812618 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099412525 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184351764 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100349149 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307098147 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314651346 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110605211 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101338757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126981262 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260408201 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100808438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223265804 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139658892 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210988905 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089400268 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802560788 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166995443 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112599929 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116729458 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098582491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116340085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.118989099 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16890891 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391088562 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102386042 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114348162 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089089332 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225726098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124288221 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090924753 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181556911 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096350251 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120488127 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122960668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101758072 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188424467 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227692112 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121792643 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098533793 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114765065 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123724556 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094837802 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.231627259 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.195425349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181539454 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207579883 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121172166 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163916943 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166974715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11950573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172010933 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120195918 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12344978 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100490925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.213412239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145287188 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122582697 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114528296 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098040012 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148336343 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126825884 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119095597 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16982413 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480618352 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189248516 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087947963 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127319073 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11958158 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161443932 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117020144 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241039999 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121996167 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167898906 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12026847 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086443037 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121112939 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161662405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122491409 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121364981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120941579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098079506 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.255351057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195796275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121915727 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241662412 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182295734 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0964001 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191060917 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099441634 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165064505 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120081608 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120599655 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095801349 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.763812522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124100289 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119698908 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09476428 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197906586 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111559865 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123135392 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102264177 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108535282 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754275698 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126916344 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12102379 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.121897687 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096477271 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121632931 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116638862 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094204267 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182557289 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204925552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119695498 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120001417 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123205915 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159770867 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094143639 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124013026 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12451044 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124669129 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.09989292 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115207845 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124306208 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168699044 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162239628 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21840603 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595264742 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090199252 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124913401 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227533263 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089647204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286249962 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119642512 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221865168 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162109031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120884794 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313586915 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165038778 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19470495 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126590434 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172151203 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087952677 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118401617 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166962934 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11177032 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116176933 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163298693 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124741715 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102135783 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960377498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112233373 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22431682 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109040312 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170267321 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094309876 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120479894 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288938044 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111251156 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106874045 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.184602172 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093653572 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124972664 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700364448 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125454142 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122241547 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117013287 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.197022055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183595018 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09825036 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118852477 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120158849 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162592086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206304624 seconds)
  done (took 43.794793875 seconds)
done (took 58.764928025 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273091586 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213304959 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.25577851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168689248 seconds)
  done (took 1.857525255 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169156523 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147752177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120235695 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108090922 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149274449 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08488029 seconds)
  done (took 1.650756841 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.35045631 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27095553 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237326492 seconds)
  done (took 1.734947774 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287001579 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250786699 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354039112 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.421899927 seconds)
  done (took 2.307788326 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208162596 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130984038 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110556429 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104768865 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194869171 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249181765 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14100283 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200404432 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.121546403 seconds)
  done (took 2.383131435 seconds)
done (took 10.810412602 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.129464424 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.124113924 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.225424239 seconds)
    (4/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.240044502 seconds)
    (5/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.242810783 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.117276669 seconds)
    (7/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.243069456 seconds)
    (8/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.220031608 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147295655 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100543959 seconds)
    (11/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.135257716 seconds)
    (12/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.210682257 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09365814 seconds)
    (14/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.239244745 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.160252049 seconds)
    (16/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118966066 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159947225 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134736353 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.156650371 seconds)
    (20/286) benchmarking ("sort", Int8, false)...
    done (took 0.19750297 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119135486 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.1482199 seconds)
    (23/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.174759208 seconds)
    (24/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094267332 seconds)
    (25/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.126508704 seconds)
    (26/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.211299542 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.242659517 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11687736 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138816672 seconds)
    (30/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.194754398 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.155984451 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.225305003 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087156584 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118862666 seconds)
    (35/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09791445 seconds)
    (36/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172543908 seconds)
    (37/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198730538 seconds)
    (38/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100429925 seconds)
    (39/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113896821 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234689535 seconds)
    (41/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.193811253 seconds)
    (42/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130750447 seconds)
    (43/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114658433 seconds)
    (44/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190660176 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066041009 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094168727 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193840283 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.116482538 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11464008 seconds)
    (50/286) benchmarking ("sort", Float32, true)...
    done (took 0.232087358 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137894647 seconds)
    (52/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119781952 seconds)
    (53/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.069848958 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.147929881 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096335155 seconds)
    (56/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.119923141 seconds)
    (57/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093561188 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111876327 seconds)
    (59/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.152985697 seconds)
    (60/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101212199 seconds)
    (61/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.171867099 seconds)
    (62/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.19056836 seconds)
    (63/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.178862011 seconds)
    (64/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.190398729 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.189892985 seconds)
    (66/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075570691 seconds)
    (67/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.089964241 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.159904071 seconds)
    (69/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136297312 seconds)
    (70/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170752264 seconds)
    (71/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.0962581 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10838166 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086189496 seconds)
    (74/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122914663 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.138184606 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157254566 seconds)
    (77/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116022425 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.08719662 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.217460288 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.10705152 seconds)
    (81/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.13014447 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138016998 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.156889383 seconds)
    (84/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157862309 seconds)
    (85/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115697267 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135306941 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066512529 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199034594 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.184094885 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078240864 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108995994 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09058785 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08203834 seconds)
    (94/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183447496 seconds)
    (95/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143861919 seconds)
    (96/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172268272 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.163446884 seconds)
    (98/286) benchmarking ("sort", Float32, false)...
    done (took 0.175445364 seconds)
    (99/286) benchmarking ("sort", Float64, false)...
    done (took 0.171251746 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094869535 seconds)
    (101/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.101481412 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140378455 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096570596 seconds)
    (104/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.149070179 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101548199 seconds)
    (106/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.127055251 seconds)
    (107/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092451681 seconds)
    (108/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.144050497 seconds)
    (109/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.128298897 seconds)
    (110/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.175235772 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108815889 seconds)
    (112/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139607234 seconds)
    (113/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090525133 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.181324914 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096512018 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.090357293 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095387746 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.157551322 seconds)
    (119/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.173599645 seconds)
    (120/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0663677 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092947325 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.119867329 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116498761 seconds)
    (124/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092711525 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112534001 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096592056 seconds)
    (127/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090057239 seconds)
    (128/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149155714 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118217274 seconds)
    (130/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068023633 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111837939 seconds)
    (132/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098221789 seconds)
    (133/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.088905142 seconds)
    (134/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.118394954 seconds)
    (135/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123337243 seconds)
    (136/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0931673 seconds)
    (137/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.11033937 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086464393 seconds)
    (139/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.100675591 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095711594 seconds)
    (141/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108978642 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172686271 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103923737 seconds)
    (144/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12193912 seconds)
    (145/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18278118 seconds)
    (146/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075731986 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093176659 seconds)
    (148/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173444851 seconds)
    (149/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120163602 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097403877 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091467724 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067514869 seconds)
    (153/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067861579 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171401153 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067550286 seconds)
    (156/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172889863 seconds)
    (157/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110902959 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089842523 seconds)
    (159/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066806157 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092804681 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067968978 seconds)
    (162/286) benchmarking ("sort", Float64, true)...
    done (took 0.232819321 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112900112 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094473635 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121290619 seconds)
    (166/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097440047 seconds)
    (167/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091281147 seconds)
    (168/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066874223 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10962494 seconds)
    (170/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088308824 seconds)
    (171/286) benchmarking ("sort", Bool, true)...
    done (took 0.224447043 seconds)
    (172/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109000266 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114299241 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.133622249 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068036485 seconds)
    (176/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111774503 seconds)
    (177/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123999856 seconds)
    (178/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.070622772 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.08612246 seconds)
    (180/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.099959028 seconds)
    (181/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096607352 seconds)
    (182/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118375498 seconds)
    (183/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068990667 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.112106454 seconds)
    (185/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098664959 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090868868 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.110452242 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.110642533 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089807266 seconds)
    (190/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.090804982 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08699506 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09014047 seconds)
    (193/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093533213 seconds)
    (194/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12412915 seconds)
    (195/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094563395 seconds)
    (196/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098499579 seconds)
    (197/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087824669 seconds)
    (198/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.090275564 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.068155757 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087525621 seconds)
    (201/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089817319 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088762465 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108865426 seconds)
    (204/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068842965 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110222586 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068077387 seconds)
    (207/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135970968 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094700952 seconds)
    (209/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.089649846 seconds)
    (210/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068254537 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08593397 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.120300446 seconds)
    (213/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138714032 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089592108 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116594124 seconds)
    (216/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099835509 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.44720011 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091449085 seconds)
    (219/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235515041 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.139693885 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.119478115 seconds)
    (222/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10958569 seconds)
    (223/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066969383 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088456182 seconds)
    (225/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11151158 seconds)
    (226/286) benchmarking ("sort", Int8, true)...
    done (took 0.222300705 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08708254 seconds)
    (228/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119970539 seconds)
    (229/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093557287 seconds)
    (230/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090942198 seconds)
    (231/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067311671 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128964806 seconds)
    (233/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077644684 seconds)
    (234/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066866868 seconds)
    (235/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120121617 seconds)
    (236/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067877178 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109452984 seconds)
    (238/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.067529444 seconds)
    (239/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.1081235 seconds)
    (240/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066610304 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135001384 seconds)
    (242/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.135309222 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109948777 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135592231 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.13966885 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110070424 seconds)
    (247/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093219074 seconds)
    (248/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116202349 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135608211 seconds)
    (250/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095610067 seconds)
    (251/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.089785708 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.095763447 seconds)
    (253/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077091613 seconds)
    (254/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089882344 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113019902 seconds)
    (256/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111823393 seconds)
    (257/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219758829 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11820887 seconds)
    (259/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089872616 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109129031 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086237629 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108416975 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.137994608 seconds)
    (264/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086701582 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118065995 seconds)
    (266/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.100298037 seconds)
    (267/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089718503 seconds)
    (268/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.067108639 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093578308 seconds)
    (270/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091350614 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067684412 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108249244 seconds)
    (273/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066383503 seconds)
    (274/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.108549367 seconds)
    (275/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089019854 seconds)
    (276/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161030719 seconds)
    (277/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066452011 seconds)
    (278/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116305217 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085935258 seconds)
    (280/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067416557 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116650332 seconds)
    (282/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067393323 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110282502 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067556169 seconds)
    (285/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066087148 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111873461 seconds)
  done (took 36.030048675 seconds)
done (took 36.909637304 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099995651 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147548277 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096106279 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134986461 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122884018 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091292358 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117642354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097711913 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121950557 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124260262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098245845 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092554033 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096918676 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120318917 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096504315 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137785596 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123616059 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093795281 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118925179 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086338128 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118266061 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086841556 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110672298 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070162384 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121015794 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093772771 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115243417 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119408271 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087035471 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109484218 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091995357 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116013949 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086302335 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123301883 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093104026 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118544642 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097136604 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119228944 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.1108675 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087542787 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117591098 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087141268 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116544348 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094417067 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115044011 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093147734 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117654383 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098348501 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137928155 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114442144 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095754187 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120504769 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096086219 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117248143 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091237817 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118520073 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092182373 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138638399 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117597296 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092795206 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117724848 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094701693 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115197774 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095483136 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118351218 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120235698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097775884 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115069147 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097327645 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115664736 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086359044 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117759583 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089751025 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110094433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118058938 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.096991206 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109486466 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093302399 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116252323 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092379149 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108431703 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08922654 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.110837299 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093671578 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112043032 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069510998 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113944092 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092794394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109421022 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096395202 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116554673 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093998585 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112317744 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099836885 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109996139 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092458442 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111232148 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087167763 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112828602 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091772549 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109148268 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090001283 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119498436 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112381682 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.09328672 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123598762 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08785128 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115857401 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08699058 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109545603 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101892068 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121083356 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08748456 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11514654 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086315587 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118579283 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086827635 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109398368 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110146479 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086641271 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.115751779 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087071244 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11314104 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094316772 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124069124 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086351662 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113874492 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089985668 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110738233 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093103731 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110319712 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087509245 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111764285 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077992035 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113174379 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087269088 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117619272 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089900066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11851389 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088434007 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119017401 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091948368 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117301072 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115390374 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086162332 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074607297 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116220478 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08979096 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112029442 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087764127 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112147326 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086745791 seconds)
done (took 16.855423648 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087917835 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18393455 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151231416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141435364 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107505385 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111203694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121484371 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118838343 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11257365 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141834137 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111013419 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130955598 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146195147 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087111516 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111379785 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091725033 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112921419 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102765262 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145033953 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132710766 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164544297 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086471788 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146237505 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134249045 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120632551 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114475458 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111153543 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092581117 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115115892 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10302004 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131467424 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11539847 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088324842 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132729344 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105382154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118719096 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087560564 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118109762 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087341884 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111396131 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140614533 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132763545 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093246718 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117606351 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091797002 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113516598 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088747686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120204382 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09922087 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114660855 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1248235 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155378754 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091221393 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121417725 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086887739 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122846058 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120469839 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090485664 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112004153 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091122354 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111345858 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091597135 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126794172 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140573859 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09200836 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121096734 seconds)
  done (took 8.574493538 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104895692 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138966197 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106190718 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130192226 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111367858 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088361241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111519348 seconds)
  done (took 1.729769217 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089044045 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134387197 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111775318 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135137263 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131471195 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111895262 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123457661 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088272959 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131848158 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089830066 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134313538 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149838284 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090817093 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120462845 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136754976 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08826449 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136349492 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088977542 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11547555 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113072715 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115521519 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134758664 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091814409 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113274516 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103821563 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113168638 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161941006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094798634 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113559437 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092881611 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110999447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150803719 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10327721 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124330267 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089104381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129909424 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127907797 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087655383 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125199352 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094747034 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127283738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089739061 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114234529 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087356945 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118002726 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099839329 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116426843 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.105627003 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115478528 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133269428 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090053293 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126302493 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08992913 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116926594 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090250391 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119093675 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098716794 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113724155 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132517578 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091166747 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130034624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106311227 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126539379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129356799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092478638 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127547034 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104029855 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115653473 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091103255 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117055207 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105472371 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111383874 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089981904 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124448993 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11497991 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112944707 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136190023 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090864894 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124358429 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113315394 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089342449 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113919303 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11234948 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116909386 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090780263 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117026437 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093096636 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112163953 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088885266 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.116586279 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087993998 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114140094 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093346002 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113275259 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091873173 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129464334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11443666 seconds)
  done (took 11.77769686 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090497105 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114508247 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093124435 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11431929 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090383047 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114617409 seconds)
  done (took 1.562628963 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116210466 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116271852 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104254709 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119803815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154467032 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103938419 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128701103 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122950583 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108583757 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1264753 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128334246 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104979292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13478685 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120301394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105003542 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.11990153 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104369921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124472198 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125723354 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097307095 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13574575 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120062181 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097845112 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131096027 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117197002 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095379886 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124132808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104928046 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12599864 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.1224246 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096911371 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116745607 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096338256 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123344909 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129103254 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096460303 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119013399 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118339107 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100801067 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117299758 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104637868 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119967008 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125828934 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094321602 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122484183 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119568745 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094860958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124289448 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104208223 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118556592 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118639472 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096187923 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119114328 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093979089 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122504193 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124592207 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093805988 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128348936 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120942336 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096301409 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.116949703 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09346217 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122485192 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116709557 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105537059 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117773167 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120375464 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096684994 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121981393 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095521146 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118028325 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093005148 seconds)
  done (took 9.166253059 seconds)
done (took 33.748128815 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677920225 seconds)
  done (took 1.621463403 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.807796051 seconds)
  done (took 1.753436398 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.671181639 seconds)
  done (took 16.64711584 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.482256018 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.564684833 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.97353141 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178358646 seconds)
  done (took 3.144239169 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.917914764 seconds)
  done (took 1.884555121 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280596183 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233427973 seconds)
  done (took 1.465592947 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754434619 seconds)
  done (took 1.717043234 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.435556987 seconds)
  done (took 2.387141805 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322404897 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183178025 seconds)
  done (took 1.472254323 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544787182 seconds)
  done (took 1.510059954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.285896529 seconds)
  done (took 11.254166177 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.263724495 seconds)
  done (took 1.23967173 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301168803 seconds)
  done (took 1.267985054 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.291122781 seconds)
  done (took 4.2601721 seconds)
done (took 52.581968317 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09823628 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125687283 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102154104 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123073614 seconds)
  done (took 1.410645162 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100898221 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120462005 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100775942 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11920225 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125020886 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096841561 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121212382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10145459 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119740286 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096415455 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11936716 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119143278 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097853948 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121989158 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093207662 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122651555 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122993553 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096515455 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123569683 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096820652 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117784786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098450502 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124562559 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095548328 seconds)
  done (took 3.622149191 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100261174 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117723198 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097092981 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11688956 seconds)
  done (took 1.409048137 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099802416 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13012908 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106665736 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124578152 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12918313 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106324433 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11663858 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092610148 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118535543 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100679885 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.114532774 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114724651 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130873548 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123810761 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10187369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112318775 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091513256 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.1301137 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12426633 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100707776 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117121124 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099404906 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114382368 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109090806 seconds)
  done (took 3.682197912 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170757566 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125355624 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137295925 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095236935 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158116572 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139436098 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088667383 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140360385 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087902265 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129385729 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117712132 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132705155 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128231152 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088662239 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113093156 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088039575 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127687943 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127756186 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091451872 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126574385 seconds)
  done (took 3.396279335 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097776269 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116204672 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088016451 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11517901 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099518002 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12057544 seconds)
  done (took 1.617128145 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091054688 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113674032 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090550289 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11326296 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094357685 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114130416 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088721155 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11458392 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089654001 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11466047 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090347615 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112921357 seconds)
  done (took 2.207353958 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.504246934 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118366038 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118947571 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088287996 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121057622 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089344585 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128417531 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092218206 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140100858 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089074709 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114690388 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093532669 seconds)
  done (took 2.677456883 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237564773 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124318792 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28056013 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363617434 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155214085 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164564849 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278679419 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161935556 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.196512076 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147747187 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227141132 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197470249 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15137178 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214708277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111563049 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143460174 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189019106 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247806115 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151905752 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211130341 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204089486 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1667535 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179776338 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151251002 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112068516 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190656332 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094590926 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128154792 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230237098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178690202 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188850895 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159468986 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145385313 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233840452 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247214711 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195080198 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277415667 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13268122 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.164500089 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165984224 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238407941 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137012239 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232571294 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1547136 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104794592 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220114815 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165141866 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175750224 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144641508 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138227934 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196819637 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241215927 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192340743 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138682456 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299090223 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147165029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157150386 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187171501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249433493 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225236697 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188333157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120166572 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187384074 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189837823 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20887943 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151819929 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181804898 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147534414 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181873613 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188830151 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165788013 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20104123 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179176379 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137857929 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169570417 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171637456 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173274103 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258632594 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184014389 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121017363 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169836294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148080042 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129625115 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168990607 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124429686 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213630738 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142181674 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161775699 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207672286 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157584103 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160088432 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219152122 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183723017 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147999474 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083911088 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151643495 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154343606 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176103006 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139371602 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156709182 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156483691 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128958379 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170168581 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09838325 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209098098 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091951381 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172180316 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206835659 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100972634 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160448281 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151494076 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149174921 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176392597 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196539629 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139812262 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131807056 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209974433 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178231559 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.140243661 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176051427 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227940624 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117091567 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147708774 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223853499 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24106684 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112694769 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225637152 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151230054 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10797729 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132211698 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179625958 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154491629 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160901157 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13187171 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182263128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230612192 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099319957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13739636 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194082432 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133297403 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130712407 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153541007 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145418971 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110408278 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.141618464 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144213397 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176433393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17729959 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154569852 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165011096 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147619186 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246252124 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138420036 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149118885 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122098403 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120254715 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191955616 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223807763 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103978752 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230529327 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17024003 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221829933 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167985531 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107516647 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17669738 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130336039 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11876248 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193323585 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166743822 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161186216 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194423288 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219204191 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179791165 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208011112 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166120072 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173704208 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164467448 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155118278 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110566982 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15912604 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156552631 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.122685619 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13799815 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108665383 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147636451 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141841385 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131977204 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196598237 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169170099 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213137527 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156652494 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147335711 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179458039 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10227519 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201322357 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177787774 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14504949 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197067381 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192155904 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210712241 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117227592 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224699846 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093405556 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124675132 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140391774 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168937979 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132001884 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108054533 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15996544 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203813878 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180671217 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171174975 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228238634 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175695054 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190923172 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095489677 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168133671 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182329925 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201371016 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.153034953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13808116 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150663781 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176667719 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154753431 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252409541 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166387679 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174869756 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232358936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124537719 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130995707 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149406023 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177092534 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153083529 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175293057 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14523575 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138093876 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159625064 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102931809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184973171 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185146067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162279051 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185761273 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149210435 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210322561 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102265655 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160410071 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158874196 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164551231 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106984551 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174107225 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200383108 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145337254 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166005961 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212698138 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10418922 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303137787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231960389 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193831386 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137034137 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153810423 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159948633 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161561383 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169658762 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178043752 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15718103 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185932039 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158510535 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134820265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137247535 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122804474 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15102827 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131642579 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147081266 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17688609 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137622333 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188151369 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155240633 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159303153 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169984996 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149746247 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143425096 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12167414 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242068747 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182333176 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238595806 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149247653 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177065789 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206060779 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126284187 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130050641 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106276524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177401574 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135325254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190655414 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212174648 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197753997 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204709748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178476527 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111643141 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119819696 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156905109 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168354369 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22556948 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122943776 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.145622795 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228636042 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109206252 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130942758 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165442822 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283762737 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143812502 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193403257 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106770278 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275613466 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124757519 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10589504 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163381887 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234322166 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13408036 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.149382578 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167116997 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161222229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162842107 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147272087 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215393395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209172795 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197364486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208368127 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104615775 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155434318 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173018945 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217533938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155004211 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110362039 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231877683 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194624701 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220194179 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114082894 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166112231 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192240083 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130364436 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211727859 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132632819 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20621377 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132940074 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190439055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15174296 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138003805 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176580045 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186469022 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139961344 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2120625 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182927029 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13412573 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105966666 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164097344 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201699408 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151512045 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1012705 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180089458 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.123812671 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189874239 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260869871 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132161696 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154043715 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144259674 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108390152 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152417463 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157122851 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138943111 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.158765896 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202540258 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133524522 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188947189 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226811792 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170753656 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172537579 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144188773 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692435969 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129502485 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192819828 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146260731 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205967601 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151469502 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171592866 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157888321 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16805187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218809265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158879833 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202500161 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216737513 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177910472 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131125248 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157565748 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154137956 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142951268 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152347044 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166535545 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159570941 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.117749519 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203594613 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164196689 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106504039 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138606876 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197024897 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147859298 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21067557 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179054265 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11100358 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172095344 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212119595 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131652984 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179018179 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232003157 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114065289 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148249671 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133448396 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149891294 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257426866 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098135482 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189303069 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210545945 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15795795 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167027402 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.145028588 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192226833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156937655 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184004533 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141904852 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.157272349 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155041605 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137222814 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128685119 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128100431 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19201925 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121129779 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158393423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164045751 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193029109 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123079571 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14387527 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283329139 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175512167 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24044005 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108157736 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13451708 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162339747 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148457319 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176445238 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177095936 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134266431 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13244011 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.10874463 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.152392163 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112236787 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15518267 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189180855 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16365303 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230926616 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133943901 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252417109 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138204343 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154139851 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088246519 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.13110121 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149522776 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144024242 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15322012 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190854922 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259368711 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146004187 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.105666431 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146572695 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125501423 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134957873 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161390327 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164038791 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178228459 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142971564 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081436032 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154884796 seconds)
  done (took 81.750090848 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170259622 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15609568 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149990851 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201363049 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174202216 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267287078 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208399641 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251749763 seconds)
  done (took 2.643448446 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094412315 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144612615 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154464492 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13101485 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092366153 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118265341 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339851167 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131803091 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114968593 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120630578 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.170423663 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093871417 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.540065712 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091397831 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117782581 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10568652 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092448788 seconds)
  done (took 3.713394829 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.925811898 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.466006903 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.607739745 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.187972342 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.155912503 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.115982961 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.656489175 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094926896 seconds)
  done (took 11.28139099 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115496861 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135265591 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123667675 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15092264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1399429 seconds)
  done (took 1.745985484 seconds)
done (took 122.120316837 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097716142 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126212343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097549457 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128875059 seconds)
  done (took 1.510340159 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094861985 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071165254 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099192019 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.0748861 seconds)
  done (took 1.40979874 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.186445334 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.165292426 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.378897383 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072107601 seconds)
  done (took 1.550289389 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114277543 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131527036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104217484 seconds)
  done (took 1.426580679 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106299995 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127759433 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102817625 seconds)
  done (took 1.411394154 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105774288 seconds)
  done (took 1.178886971 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107626867 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135493211 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108655905 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134475394 seconds)
  done (took 1.560827797 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098610904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124927339 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109630244 seconds)
  done (took 1.405699715 seconds)
done (took 12.876943239 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103374548 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.411818371 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410782881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11003782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720500333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380235987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.055081606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14371896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163963538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094057135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137459785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672596641 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010479987 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.36776834 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969257352 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.366330778 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676166445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120137451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091685915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120260352 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.037945265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092364226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119685255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092622233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.699726687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39675278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121421121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.364817355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092324328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125087945 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382501307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121138675 seconds)
  done (took 16.835238627 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095194854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171634473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097675519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121465382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121651745 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094904015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121977915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093240883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177511195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120798738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111063574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12022297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122821218 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095540876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140510245 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09242388 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123298476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093077233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119870983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094659598 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13795348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118568352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093984296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119479527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094503246 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13332183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09356939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119478697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119000336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098846535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12484798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094938756 seconds)
  done (took 4.755602372 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139925712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180935944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126468969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126558464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166265413 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12186002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196644308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117829769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179565983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121382577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137070844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092631211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155557061 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120670086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113540501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119723504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096246162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120064745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092394735 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121403443 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137867161 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092883478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120092859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092433302 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121244606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107902234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122074508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118805534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092697003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124430333 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099528688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122224558 seconds)
  done (took 5.082229939 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097736151 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124035687 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109398338 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135979536 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094898447 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123922668 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097277195 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123077152 seconds)
  done (took 1.986578824 seconds)
done (took 29.736478493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.111159354 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125295786 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107752354 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1324959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102928951 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130514118 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091456386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131911306 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131931205 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102486532 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135429791 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091390767 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.120246413 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09205725 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132916603 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098100918 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130433672 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102116345 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131668941 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130169602 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094617358 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131147403 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102021039 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131036468 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103781014 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13103763 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.134736942 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099815593 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121068461 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094199775 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121768856 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103818476 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122731107 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106432326 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125603857 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096747375 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122195055 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094286532 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131057177 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.130545742 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099649262 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131346423 seconds)
  done (took 5.934961733 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107349166 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.137103322 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105729929 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080701401 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114409107 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079738693 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135627319 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078950436 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.107856709 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107301662 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074020115 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.103782697 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078511518 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099541383 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077086484 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075103986 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105708768 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075344697 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07597341 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104187328 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080534604 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072600863 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106207307 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078120866 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075345577 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107529017 seconds)
  done (took 3.533850034 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099658301 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133551858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11412833 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182020438 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159188467 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099727203 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129507363 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137239109 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108759079 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118022659 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095998113 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14741602 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110360477 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127919099 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092322609 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135976413 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134852992 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094936275 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126450178 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112188148 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137290325 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102884407 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139005985 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131243085 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092640542 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121306581 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097562632 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133064786 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097665917 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129536342 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096944575 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123409083 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120763212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105202866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124476728 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094214529 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139843757 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102385096 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128398445 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119356134 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100463515 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119711215 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11439851 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.15914457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091544106 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12706547 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122137782 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103772418 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118811202 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110908363 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128669731 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092516419 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12330023 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091964405 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120254055 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10696367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121891181 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096437391 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129315923 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125100396 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105349639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123515673 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107989196 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121165086 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100149965 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118873199 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092898114 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119882844 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140945976 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094493774 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159180143 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092478009 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122267088 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101215428 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128122375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126523981 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093175275 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135153881 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101540075 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123911193 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101269927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124099937 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095260044 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138402997 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.121934792 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095346861 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.119767368 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100095631 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122191586 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094810903 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134311279 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091733383 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124069779 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110462252 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119916877 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.120349617 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100030318 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124559695 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092991676 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13312433 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097245354 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.121368341 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128802447 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093606982 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122950746 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104366888 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125068007 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09132085 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125576038 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098990884 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12214257 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093994044 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124957104 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094522439 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.1306725 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127147664 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098264688 seconds)
  done (took 14.673753982 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226113447 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214009548 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203777917 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.28776387 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133393859 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115186002 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210685522 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154376595 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12201604 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157869709 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169685556 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181424796 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.138327642 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.209273887 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.168690343 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.094403176 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.141415486 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135417149 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.239756526 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255741008 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142601433 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102507609 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159690919 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158450465 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134930009 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.130006177 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109937 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131841669 seconds)
  done (took 5.734176465 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108402829 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15309782 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098572783 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143330586 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146485151 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092643007 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.126261796 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.09432107 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133415583 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134097659 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093180669 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128065867 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100154756 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130696324 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121894061 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103541648 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.12978532 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094914931 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125027145 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096358779 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132082764 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101540849 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125168147 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119413701 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103268747 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120096875 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086461572 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140995434 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121148003 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116282141 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.11983569 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101757074 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135542497 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094284915 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12269046 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095446634 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12452575 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095447284 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124033108 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09212048 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120592186 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077245056 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.120240785 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134534791 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100267437 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079820606 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127018198 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125889785 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094968125 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118526959 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095987267 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123644239 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0963621 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1283292 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096625615 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122112671 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096791218 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.113937503 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100390362 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123848405 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084570484 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120401794 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098117544 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116935846 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101852938 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126621172 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092241837 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123908062 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097299896 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127396827 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095105224 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128605853 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090743473 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123644534 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096062353 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126168576 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124198761 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093069387 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119745215 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094155874 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075053393 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122229316 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074519256 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12475606 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091591387 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12033163 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096449563 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128306876 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136220849 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095437356 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130324122 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094208299 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121330321 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096042998 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111553704 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096987816 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13832678 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139292147 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094550988 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119370436 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107510648 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124233949 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092495819 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.104536158 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102520277 seconds)
  done (took 12.847407468 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130021777 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151386401 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122625998 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112113778 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15393627 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155980177 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10086391 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129006925 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09556359 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139735758 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093090617 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129491775 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093111133 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135596718 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153975317 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103976431 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12292754 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107587684 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126480713 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16735416 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111678844 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14164808 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110424206 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.122783382 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126785912 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111220946 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.158734355 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107632833 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135565426 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139988656 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107885532 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158560103 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141030646 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098121102 seconds)
  done (took 5.414002313 seconds)
done (took 49.219022594 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.180605968 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403151692 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.173453473 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.993106643 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.194708529 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.211675741 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.189364721 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.17621925 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.514084386 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.177059895 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.410312619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.619818232 seconds)
done (took 59.34599036 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.280495893 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32902683 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46363049 seconds)
  done (took 3.893891564 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.737558143 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.048388409 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.42960835 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.172592849 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.186011449 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.47220132 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.731809786 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.437641539 seconds)
  done (took 27.577532789 seconds)
done (took 41.591919585 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.162121015 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.202269514 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.199211175 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.160038861 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.279457462 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.194122284 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.437089691 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.179514399 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.192990548 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.166342693 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.170306797 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.171828529 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.189700329 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.477111668 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.176253742 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.17786187 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.22826007 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.656005178 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.533048577 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.183318776 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.184634628 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.211573172 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.176343403 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.187194611 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.201164509 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.18103293 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.178761704 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.178340917 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.150574029 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.178332076 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.26815568 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.705900426 seconds)
  done (took 189.03832065 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.168510945 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.246209442 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.301930474 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.204582556 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.814364987 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.37099924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.318957076 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.860832413 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.187104083 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.190223597 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.454987568 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.170795852 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.51485661 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.14076575 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.201367574 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.225424657 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.476669374 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.488652803 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.205580492 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.329180151 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.1730861 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.554807482 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.48580785 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.397042266 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.200515658 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.206655395 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.192185488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.199437231 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.377661195 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.417094528 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207575279 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.199709506 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.696270598 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.027176483 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.190884719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.189631534 seconds)
  done (took 149.68629835 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.172364252 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.170877215 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.171897868 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.199351759 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.172728532 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.656859037 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.655779593 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.668257795 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.416463208 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.247865291 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.363808505 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.175970576 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.263221063 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.186951701 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.17367966 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.188914936 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.21368789 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.173833784 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173808239 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.660454735 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.184595815 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.385095306 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337659407 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.18800267 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.20183458 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.558653327 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.173855151 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.174384014 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201166803 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489603793 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.215488058 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.174249145 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.456402685 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.39763554 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285243623 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.176017772 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.20278112 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.173997775 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.444793599 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173719338 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.17490976 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.177611061 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.756497614 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.178150678 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.660159565 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.174934001 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.034907365 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.174499311 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.174812301 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.386336848 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.669596174 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191806519 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.174263774 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.177682699 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.175047674 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.17571619 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.203154856 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.378064628 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.266755072 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.189979485 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.180020641 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202523665 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.175606373 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.374910708 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.176375347 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.693666401 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.229475983 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.282766845 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.634899442 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.152383686 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24412858 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265934601 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.150470758 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.150326668 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.149618753 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.151594225 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.147966805 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.254675334 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.148043189 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.496062257 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310744412 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.16264391 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.229009325 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.240230649 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.146343376 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.466738637 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.147601743 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.144541091 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.805486444 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233348118 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.141384704 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.142191991 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.141387437 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.142699959 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.487890123 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.62895348 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.289781724 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.145095837 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.438196253 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.139698357 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.502757708 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.615196977 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.728538358 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.141584059 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245572168 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299683425 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.151500888 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.139500611 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.138599184 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.209470639 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.140695151 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.198318705 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.138369117 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.532488705 seconds)
  done (took 358.328570265 seconds)
done (took 698.154318925 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.792494198 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.79650655 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.89586786 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.791078833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.760241857 seconds)
  done (took 10.10087756 seconds)
done (took 11.166306947 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.308992724 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.307211653 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.192741611 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.309172144 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.169923827 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.319968429 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.287043286 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.158588247 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.230337738 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.207820851 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.228633782 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.185277224 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.168600199 seconds)
  done (took 17.141953694 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.429229292 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.435759549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.201306828 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.439741765 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.177526406 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435530898 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.334117371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338565192 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.342760187 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.166028974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.148885743 seconds)
  done (took 15.514619678 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.439111173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.433907849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.202523964 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.431425418 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.174095692 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434681537 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.327876147 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.337501139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337086416 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164510693 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.146907355 seconds)
  done (took 15.493114352 seconds)
done (took 49.219129161 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.141993954 seconds)
  done (took 2.203490673 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.17452367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.332766358 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.158744366 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.146864646 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.142740982 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.146251418 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.147538429 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.143550618 seconds)
  done (took 10.45582798 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.143671103 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.143133207 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.140647744 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.142889314 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.140604678 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.140082861 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.140229886 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.140341548 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.142882649 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.143572515 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.140544082 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.142857979 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.143408585 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.14363968 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.140513144 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.14121191 seconds)
  done (took 19.333992804 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.143045957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.140508792 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.140564939 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.142101188 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.140627875 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.141753518 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.141372318 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.14048592 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.140389817 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.141673212 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.141628317 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.140953576 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.142746828 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.141272448 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.141057709 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.142489133 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.141534067 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.141848959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.146084139 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.142005669 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.142082771 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.142157484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.143101403 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.143324547 seconds)
  done (took 28.470345548 seconds)
done (took 61.525301646 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.709083497 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.598014037 seconds)
  done (took 6.371531285 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.144896174 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.143864013 seconds)
  done (took 3.354603485 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.144952029 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.144253775 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.144629687 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.144249555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.144054758 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.144835243 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.144768304 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.146103398 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.144529989 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.145439339 seconds)
  done (took 12.512060737 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.14484352 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.144674113 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.14350473 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.144994558 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.144444909 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.142706371 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.14532601 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.145611665 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.145743837 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.142871838 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.14570454 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.144280676 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.145774592 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.143923868 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.146038949 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.143974406 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.143562878 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.143874349 seconds)
  done (took 21.667239423 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.147199567 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.14616654 seconds)
  done (took 3.359672053 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.143938834 seconds)
    (2/7) benchmarking "second"...
    done (took 1.143942361 seconds)
    (3/7) benchmarking "month"...
    done (took 1.143713761 seconds)
    (4/7) benchmarking "year"...
    done (took 1.143790157 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.144120682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.143746402 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.143922924 seconds)
  done (took 9.073464659 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.147642746 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.316909799 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.414405239 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.714427782 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.147505206 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.150253826 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.020013335 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.150738242 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.152087422 seconds)
  done (took 13.281036384 seconds)
done (took 70.684727788 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.126378003 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.157195941 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.27239149 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.159059504 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.159087287 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.485043673 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.171954384 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.260493969 seconds)
done (took 36.859967879 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.147844218 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.122975759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.775189013 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.123854671 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.150738912 seconds)
  done (took 18.241182201 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.09460668 seconds)
    (2/2) benchmarking "read"...
    done (took 1.477374153 seconds)
  done (took 4.639740254 seconds)
done (took 30.097637367 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146218581 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.145498504 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.143446203 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.146256956 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.143511664 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.143315543 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.146548072 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.141320902 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.142030856 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.141312143 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141692268 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.139041957 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138703064 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140707001 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.138733775 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.140263909 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135332581 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.13506121 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.134492686 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.135521441 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.138051094 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.137767131 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.134941521 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.137479368 seconds)
  done (took 28.433804617 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.135862215 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.134086329 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.135977525 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.136040408 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.133520852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.135921229 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.1353781 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.1335184 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.13485883 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.134772852 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133921957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.133009625 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.13537204 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.132695281 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135893365 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.134198567 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.13586032 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132977901 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135292646 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.132818737 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.13609975 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.134037278 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.134522846 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.13625187 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.134863802 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.134207178 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.136158807 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.135677547 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.136175381 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.134538324 seconds)
  done (took 35.10083055 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140562666 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.142213393 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.13710839 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.13646145 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.137098453 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.137147126 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.139941956 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.139144386 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.137627089 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.136870371 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.137093132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.136980307 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.138302916 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.136347257 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.136906801 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.137335253 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.138160399 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.136965362 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.137088044 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.137906037 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.138019203 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.137576609 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.137298927 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.137786193 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.136717807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.13827486 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.138080901 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.138499299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.137308591 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.138076132 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.138460556 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.138403316 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.139348949 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.139375954 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.138478889 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.138228798 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.142866899 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.144154922 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.138756597 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.139577491 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.13758617 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.138361511 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.138699234 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.138659658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.138296637 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.138697676 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.138600587 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.1386044 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.138795268 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.139142053 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.138756862 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.138249495 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.139931425 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.138886335 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.138570935 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.140148196 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.139220005 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.139140307 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.139453389 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.139800232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.139587714 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.140055481 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.139845069 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.139847017 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.140610409 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.139824477 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.139938111 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.140146428 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.140534595 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.140622829 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.140066741 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.14032705 seconds)
  done (took 83.050135215 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.141029572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.138310133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.13826358 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.138674634 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.137984318 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.140888666 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.138319946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141469675 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.138668074 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.140858234 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140972828 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.138349844 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13895054 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.142588367 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141453222 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.138738084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.141491575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138572411 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.142276336 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.142544272 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141861253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.139098225 seconds)
  done (took 26.142248958 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142086592 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.144033366 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.139582757 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.142739327 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.139520604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.14195044 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.142848987 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.143539351 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142856166 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.139485658 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139520173 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142438928 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.13979335 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139989224 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140189132 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.141635797 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142635069 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.142200776 seconds)
  done (took 21.608774047 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.14008556 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.140571996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.143032825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.140049027 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.140571416 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.143312786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140269639 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.143976804 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.143127185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.140286707 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.143621663 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143291812 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.144060038 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.140327576 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.14354574 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.141439562 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.143661548 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141449342 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.143688794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14178134 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.141768762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.144089335 seconds)
  done (took 26.190758595 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143631068 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.144702278 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.141217248 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.143379387 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.141523431 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.143616283 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.144692402 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.141853725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.146022774 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.144078838 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.14212725 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.144693196 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.143783496 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.143340688 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.142614095 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.142604377 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.145314148 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.144006318 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.144986865 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.141900127 seconds)
  done (took 23.93384923 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.146035251 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.146423185 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.146290327 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.146858599 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.146689843 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.147519462 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.148810262 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.147569712 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.146343276 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.146861668 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.147376013 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.146917116 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.147112111 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.146880429 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.14701421 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14767429 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.147635423 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.147151235 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.147740186 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.147878469 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.148035023 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148113918 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147932097 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.148097371 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.147135267 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.148074282 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.148486996 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.148071946 seconds)
  done (took 33.19283841 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148816293 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.147718437 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.144874357 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.145500115 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.145927021 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.145789619 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.145140977 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.145390623 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.147791969 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.145845138 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.147740479 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.148115915 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.147852873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.147584904 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.14834045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.148213349 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148161987 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.146486964 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.146395199 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145794113 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.149083296 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148769221 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.150170493 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.146418698 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147018612 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.149275245 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147409296 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.146728834 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149367308 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.146232084 seconds)
  done (took 35.486070582 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.168045294 seconds)
    (2/2) benchmarking "in"...
    done (took 1.167667354 seconds)
  done (took 3.404733583 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.147058544 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.150728869 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.149852104 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.147970421 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.146728814 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.149754008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.149821506 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.147673141 seconds)
  done (took 10.258904552 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.150701747 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.149672106 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.150590758 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.150218117 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.150185847 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.14953065 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.15755722 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.167747965 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.150891699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.151835539 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.156900137 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.156591915 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.153027776 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.151556924 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.150326998 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.152614555 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.150961201 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.15128303 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.151262613 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.151654687 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.151047609 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.153320316 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.153632518 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.148984549 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.153521016 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.161188424 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.1729375 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.152438909 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.152003316 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.155055776 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.151808379 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.149428444 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.15229034 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.153695135 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.152603525 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.152577453 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161994499 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168546085 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.158282201 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.171111908 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.155695545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.150782128 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.154355589 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.154221843 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.155162864 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.153035009 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.153995188 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.151024859 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.152908465 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.156721609 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.156619198 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.153438254 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.150208295 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.156636685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.154432582 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160634572 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.17108868 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.15707176 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.16045573 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.162936601 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.182847305 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.175341493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.156385613 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.154119353 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.162757802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.173791392 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162262841 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.169623428 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.152109427 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.154932271 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.160996058 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.181961508 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.176420862 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.154519813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.154633589 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.155345249 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.155301408 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.156108094 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162015317 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.175005009 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.154874958 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.155366044 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.165274248 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17554512 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.154659024 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.155384321 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.156439635 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.156035995 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.156919561 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.166385981 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.172375457 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.156385699 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.156814951 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.156170826 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.15638273 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.156565973 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.155811498 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15626289 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.1536195 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.156310722 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.156711535 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.159847325 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.163412902 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.157366459 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.156831477 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.16278227 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.174280846 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.156736267 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.162348185 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.157463871 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.157738781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.157855651 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.162712431 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.155876921 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.160452195 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.163771907 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.15827005 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.159849114 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.157824437 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.158390229 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166442692 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.179860145 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.157940044 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.157575293 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.161968681 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.166633161 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.158088823 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.160877647 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.158825144 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.155764173 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.156767809 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.159586488 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.158241166 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.159915592 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158225994 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.159672775 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.155959792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.157590909 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.158994147 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.159413377 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.159882268 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.159429857 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.160039374 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.161324791 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.160141632 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.160437197 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.165349585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.176920124 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.160576212 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.160785489 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.157915927 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.160524732 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.160824795 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.159628207 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.159362676 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.159592304 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.160210435 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.159763833 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160798322 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.160618444 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.160874766 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.161158291 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.163196235 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.161561401 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.165013166 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.161826266 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.159504681 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.161540481 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.161665095 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.161721624 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.163905198 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.160597425 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.164210559 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.168687977 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.162270736 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.162244403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.164697954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.162999453 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.161182266 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162602318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.164228914 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.169388993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.162444122 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.168762457 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.17972945 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.163103735 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.16301523 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.163242232 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.162918195 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.163168435 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.165198208 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.168530268 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174128675 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186160719 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.164847032 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.165603191 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.163378773 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.167139484 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.167483593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.163746766 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.164524228 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163644657 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.163468489 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.16387588 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.165263591 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.164866298 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.163552325 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.164909482 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.164704218 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.164682087 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165217741 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.16452659 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.166436625 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.162453357 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.165616116 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.164575218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.16433431 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.162999709 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.163978722 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.164577646 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.165222697 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.165265067 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.171038114 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.162920721 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167571477 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166413015 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.165466886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.164055858 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.16526532 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.167172398 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.165612851 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.172619957 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.182382043 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.166388179 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172367478 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.182040368 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.165858618 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.170221085 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.167546333 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.164182045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.168821834 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.173407431 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.166098956 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.16656081 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16736725 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.166988914 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.166028796 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.172099322 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.183426363 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.167314801 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.166781231 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.167803822 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.164135147 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.168482539 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.16843067 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.167350693 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.169098239 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.167157116 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.167668247 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168050391 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.167484736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.167300528 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.167906581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.170081813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.174513834 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.17275832 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.167683514 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.16967486 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.168322003 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.171413785 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.167977866 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.169370831 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.16861864 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178943677 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.189486392 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.174581044 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.187125074 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.169214948 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173939583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.185967663 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.171314088 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169075557 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169123784 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.16850511 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.169858434 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.167268671 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.169809155 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.170338553 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.171109993 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.170257159 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.172059955 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.169543724 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.16980873 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.168968848 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.170981585 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.169968954 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.169950159 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.171262977 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.172396666 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17255749 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.169680151 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.170733996 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.176313503 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.189090093 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.171526125 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.170586882 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.170118239 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.169451157 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.171194251 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.171136242 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.173069731 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.176559497 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.173270487 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.177845864 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.171417782 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.179148127 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.170312946 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.173544465 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.177060271 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.168416893 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.170545354 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.171352606 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.171888985 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.179089265 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.188438522 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.172673811 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.175539613 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.172024963 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.172056639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.17204439 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.171169991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.172436471 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.172549369 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.180388066 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.188792056 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.175590165 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17392636 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.169422793 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.172674054 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.172449258 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.171386807 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.176441575 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.171887037 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.173782914 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.173163678 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.171912561 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.172713126 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.172346807 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.174063979 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.170769505 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.172637515 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.181248298 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.191559211 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.177035389 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.174238751 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.180136328 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191103338 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.180470371 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.190656876 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.172831255 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.173688741 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.174076905 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.174869299 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.173181968 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.174758681 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.174841419 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.174907448 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.177543458 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.174528472 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.176275472 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.175365704 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.175120718 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.17546772 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.183556354 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.193132932 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.176658581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.179889819 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.172908014 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.176058786 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.178639948 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.176056839 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.174016672 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.177878725 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.184540496 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182252487 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.176725883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.175126061 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176397596 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176137243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.176039374 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.176735551 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.177056734 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.176689492 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.175894562 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.176737538 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178823675 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.175947306 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.176479553 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17802477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.176971881 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.185540003 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.194788996 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.177605755 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176985093 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.177297472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.177845807 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.176356662 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.176862279 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.177076857 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.177000617 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.178334497 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.182508842 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.181460929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.178858734 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.176792247 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.177550731 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.176731215 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.177579242 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.178524131 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.177066939 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178201184 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.1787403 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.177363621 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.178682357 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.177131105 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17819969 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.177910962 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.178858507 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18099267 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.184449287 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17881844 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.175936314 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.178141456 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179109568 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.177571599 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.177924055 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.184569199 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.199308581 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.186763745 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.185220502 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.181514169 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.178135442 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.18129521 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.18471635 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.17791537 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.179667494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.178685332 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.179271235 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.179633019 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.18179817 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179289449 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.184532903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.197913365 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.18119831 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.190074834 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.197956501 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179361369 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.181224422 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.183382161 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.180512206 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.176699171 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.181060287 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.179865037 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.187531121 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.198052552 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.181140722 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182102735 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.179997968 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.182253364 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.184080832 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181117389 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.181980023 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.178049526 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.181803789 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18137316 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.181141421 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.177993681 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.180038232 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.180435842 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.183172341 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.185439904 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.179197254 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182281338 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.181231512 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.182014552 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.181677752 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181850869 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.179050854 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.178913269 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.181436584 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.182192666 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.181528731 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.185941402 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.183122961 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.182896951 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.182640897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.181620268 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184313178 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.189672466 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.188245687 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.179828805 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.182412847 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.183076426 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.184969887 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18335088 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.182918166 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.183152845 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.18411945 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.182640815 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.183151806 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.182751199 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.185549347 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197870506 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.200198649 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.183720024 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.183316869 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.186159604 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.183373308 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.181400242 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.184187524 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.185224831 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.186263043 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.189804588 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.184895284 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189909744 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.202472162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.183987917 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.187306075 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.18603776 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.189766308 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.187338203 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183402029 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.184527993 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.187569516 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.19806857 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184080863 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.192740326 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.209792234 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.202785495 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.186018681 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.185646943 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184405419 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.185203968 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.186485857 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.185216828 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.185014472 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.185159365 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.186220271 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.184931066 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.189614188 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.186708091 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.186951892 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.185522916 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.185294872 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.186658493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.184918219 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.187079374 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.186327641 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.186502088 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.18585175 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.18658093 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.186897726 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.197547535 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.210032901 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.18661713 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.187052976 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.183769795 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.189284334 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.190064812 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19461353 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.192216478 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.1875393 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.186403793 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.18842882 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.186902991 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.185673516 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.187336318 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.187792855 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187065071 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.185213693 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.198441641 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.211046 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.191553276 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.186795816 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.18869863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.188415095 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.188181048 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188291904 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188385221 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.18840131 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.189227043 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190928546 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.188128598 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.187846812 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.190831203 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.193091652 seconds)
  done (took 699.770988436 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.185887798 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185460268 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.185107057 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.185725066 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185861481 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.186275885 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.186616033 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.186677298 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.185772453 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.185792687 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.186006359 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186290462 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.185989679 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.187033715 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.187166219 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.186770378 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.186849905 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186977922 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.188222031 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.187297032 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.18670519 seconds)
  done (took 26.019637325 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.189739729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.187529063 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.186948581 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.189755036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187035245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.190112655 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.187849145 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191054962 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.191038255 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187250695 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.189735455 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191682418 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.187103175 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.188167788 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188717349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.190033097 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.19092527 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188052193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.191636212 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.189444148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191231594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.188747333 seconds)
  done (took 27.27021169 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.191976523 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.191034129 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.190542032 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.188480324 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.191594979 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.188935185 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.191123615 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.192087312 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.191998826 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.191931502 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.191025247 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.192061294 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.197622267 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.195335532 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.193279439 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.191728518 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.336000625 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.192363659 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.192601887 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.192440656 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.189004488 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.198197581 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.208078168 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.190166871 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.190719145 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.192795463 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.192712648 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.192570681 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.192804247 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.193682171 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.194616828 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.192947977 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.193018574 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.195230821 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.192633029 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.193737715 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.196579619 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.194074245 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.190147076 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.193877623 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.202606614 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.209927617 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.19410628 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.200197829 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.212036234 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.193769422 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.195205035 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.200143595 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.192349939 seconds)
  done (took 59.770116113 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.194047376 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.194205755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.191254072 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.194128145 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.194713832 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.19487338 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.193754339 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.194130432 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.19110701 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.191728502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.195043649 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.193595227 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.193813266 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.195177986 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.195873019 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.193074433 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.193934503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.193399009 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.193493864 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.193595955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.193770529 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.196184777 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.196252817 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.194736895 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.196279543 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.194168649 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.1938999 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.197287129 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.194973143 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.19492798 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.197242986 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.197448096 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.196538477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.19499365 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.194523363 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.196833965 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.197198765 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.194261234 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.196984413 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.194872662 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.197390178 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.197736482 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.198669046 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.19780556 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.194659319 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.195468188 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.19483693 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.195063987 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.19570706 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.198358772 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.197282148 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.195910243 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.19875174 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.197471915 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.198866204 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.199304841 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.196079167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.196272189 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.198146367 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.195724781 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.196603462 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.198821772 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.196286529 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.198679536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.199123627 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.196128238 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.196136917 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.198831625 seconds)
  done (took 82.420136119 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198671461 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.198347229 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.198869473 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198043038 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.199219608 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.198967546 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.198366673 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.197837059 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.198837922 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.199818926 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199296243 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.199263965 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.199157213 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.199242663 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.199648642 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.199599882 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198913865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.199158175 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.200057967 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.199148427 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.199554285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.198959402 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.198849198 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.200421956 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.201341261 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.199592566 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200312074 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.19988443 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.200242071 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.200857577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.200101914 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.199969774 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.200530618 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.201112302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.201825563 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.200384582 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.200728823 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.200309805 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.201135023 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.200770065 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201288881 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.200852769 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200412957 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.201926044 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201092156 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.201077066 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.200887557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.202075653 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.202666146 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.201030774 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.201832976 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20104432 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201260146 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.201172843 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.201761211 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.202403765 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2014364 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.200822518 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201380861 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.202502109 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202251431 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.201758635 seconds)
  done (took 75.536182964 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202880108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.202188459 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.200482246 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.201023862 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.202758314 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.200620775 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.202014603 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.202793762 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202983745 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.203013911 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203014345 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200296249 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200777897 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202623165 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.200639996 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20001011 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200598638 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.201547159 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203693044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200925406 seconds)
  done (took 25.152594055 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.201610174 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.204162039 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.202060078 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.20212054 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.204103544 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.202477242 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.204289362 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2042152 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201719464 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204223954 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.204665289 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.204639422 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201876933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.202845718 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.20431479 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.201528261 seconds)
  done (took 20.369561842 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.202252585 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.204911637 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.204237112 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.204082447 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.203562832 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.202172706 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.205185856 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.202646519 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.202391183 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.205346481 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.205484865 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.205927557 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.205715375 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.205073964 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.202948192 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.205922365 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.204334383 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.20369251 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.205948238 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.205544374 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.20376075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.203134895 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.207115875 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.206151278 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.205016986 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.205628792 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.203587503 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.204697365 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.204627979 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.207660179 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.204435256 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.204639744 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.204328463 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.205094488 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.206909276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.203290494 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.206685481 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.20739301 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.207655879 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.208311464 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.20717898 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.204900808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.207392524 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.20709171 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.204754976 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.206941097 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.204452792 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.206295808 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.204983531 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.204744849 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.207734612 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.207349609 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.20796391 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.208072453 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.20835312 seconds)
  done (took 67.416967409 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208064139 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208231315 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.20493325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.207866342 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208402349 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.205839748 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209134548 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207429727 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205857877 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.208975229 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.206812969 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210416642 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206444858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.208982481 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207178592 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208451754 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206139456 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.20727928 seconds)
  done (took 22.859760292 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207487571 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207894468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.209113473 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.207112022 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.20639344 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.210558935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206713701 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.209713964 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.210051533 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.208474687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206848573 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.209474297 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209952498 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.210541184 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.207921558 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208740309 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.210633241 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210903195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206956214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.20902816 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.210727501 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.211136421 seconds)
  done (took 27.720439324 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.210202643 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.20952194 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.209662531 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.225365037 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.225871786 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.230832739 seconds)
  done (took 8.436517819 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216412843 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211397361 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.209442212 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21226863 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211050137 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208701058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210139326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209653034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211055296 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209097456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209903639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211574572 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211490207 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208999252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211581821 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.211967119 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209793399 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209321076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211444683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212692941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210293382 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.211573962 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209436958 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209711213 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209345432 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210516924 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.211767712 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210797912 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210826385 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212216692 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212522389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.210092795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212067423 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211231163 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21439634 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213423629 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210164585 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.212404749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213284952 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210515767 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.214150681 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213392266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213496644 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211160896 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213725782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211264651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211300283 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.211644952 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210820879 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215119636 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214022127 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.210691322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214040778 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214182179 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.213988684 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21452269 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.211901529 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212557322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214825359 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212307533 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212180817 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214939714 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212452304 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212791675 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214250844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212142345 seconds)
  done (took 81.130850067 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212444014 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213868446 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.212145069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214164907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212812868 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213055907 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213497525 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212976733 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213688263 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213017648 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215534153 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213251933 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213475315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213428383 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213627889 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214388046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214431061 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213967652 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21370804 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216402893 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214006114 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.213886101 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214263719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214080424 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214819687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216609795 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214311349 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214748056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214559702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214200798 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213857887 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214606568 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215156845 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.215140853 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214907357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215214398 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21494613 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215238873 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21483261 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217491847 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214992964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218503122 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215278625 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215122108 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216097549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214930288 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215288412 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215098504 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215908413 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215233672 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216248342 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216711214 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216483785 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216530821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216126133 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216439254 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215584215 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21587002 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21594018 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218898946 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216354454 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216049666 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218956374 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216332514 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216155185 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217803759 seconds)
  done (took 81.324583901 seconds)
done (took 1633.067924341 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.379234788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.333808011 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.218095909 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.217934814 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.217488074 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.236549405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.21408067 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.217006666 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.218062261 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.216851736 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.218311594 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.405315606 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.222337616 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.21841672 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.218091025 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.312857487 seconds)
  done (took 41.198851076 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.243876722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.226235786 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.327882895 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.247263416 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.24708002 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.398171291 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.278739996 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.225890233 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.381644251 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.269210144 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.686474421 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.252156681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.226017648 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.268973601 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.244683058 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.396477448 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.458577358 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.700012553 seconds)
  done (took 28.213888074 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.632602768 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.23064042 seconds)
  done (took 9.000256675 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.243906966 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.226030674 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226460733 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.22474266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.225612751 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.22298973 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.223782032 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.220320999 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.541107262 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.344206318 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.231985517 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.235367016 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.243739239 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.226538177 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.222856687 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.262832776 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.427702506 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.223483752 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.222928247 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.232597275 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.226495663 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.327530794 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.264433693 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.225829819 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.340272125 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.556354917 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.232961055 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.233207463 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.404173349 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.225387729 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.225633623 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.226455091 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.227481845 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.106716176 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.658037064 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.238331217 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.248708552 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.236080774 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.224971814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.369967241 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.228260406 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.234732794 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.219998167 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.647075574 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.363111551 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.341304145 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.393101357 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.249829467 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.22951939 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.284995687 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.228594629 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.227812695 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.268497031 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.99135515 seconds)
  done (took 105.077264623 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.252793561 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.61107079 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.387873777 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.242445802 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.822894423 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.900425901 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.242140509 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.483999827 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.271931342 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.223595851 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.510304982 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.706175354 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.240405847 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.231116201 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865305075 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.269155016 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.221197482 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.933941557 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.240465657 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.225872698 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.704761526 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.22295981 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.227761376 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.494104522 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.2591285 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.653763779 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.65284111 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.634991759 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.239650764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.222558114 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.661931385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.244000711 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.232258383 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.226051702 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.473359558 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.557357399 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552856485 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.243415313 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.251019928 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.22554236 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.25451081 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.650060322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.555066289 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.23974438 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.223663454 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.653593389 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.239703509 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.232420398 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.228320083 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.421631102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.863332139 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.224190213 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.611538929 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.22941006 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.510071574 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.306092947 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.269197735 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.683731202 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.240441943 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.282883933 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.258251621 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.225127449 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.227163345 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.229285326 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.227703335 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.550250186 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.588755744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.225303724 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.546065229 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.672773262 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.245002462 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.736785125 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.116969354 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.239808293 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.29680568 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.226246866 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.768117512 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.697330876 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.253568356 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.226587106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.536041691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.240668575 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.496288344 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.240971605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.242086328 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731835463 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.229707585 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.281284403 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.225887778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.254746073 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.839755037 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.237047126 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.48159452 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.275598371 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.226001284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.226061304 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.263783049 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.23692957 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.226938195 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.226959704 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.723088688 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.252034225 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.337984417 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.244504601 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.227784254 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.232393069 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.227648716 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.228200273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.442620586 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.708911788 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.24944793 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.230217075 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.227559584 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.230746938 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.503789062 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.235166958 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.510324012 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.243511148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228001802 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.228204216 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.9152449 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.294525586 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228071962 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.233826152 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.093814539 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.432773131 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.245835176 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.228863198 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.229454056 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.244175427 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.398646989 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.246297325 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.284796172 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.232412217 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903543114 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.283478144 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.260288408 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.526257061 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.231303157 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.018244067 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.250177718 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.230490682 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.528295809 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.484557715 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.438700148 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.23137627 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.244386688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.893636918 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295741477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.366436297 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.247350144 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310414881 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.426578971 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.409099329 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.230608085 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.841309077 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.231935231 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.440907264 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.233518787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.519542571 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.692830424 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.251465813 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239490967 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907655521 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949400111 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.032000122 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.232272366 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.494890871 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.201370202 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.697963262 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.231258521 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.231645704 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.65093586 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.231634158 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.237842048 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.231841475 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.232979776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38358963 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.40273029 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.93578175 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.240232868 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663732028 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.264530062 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232325251 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.24054504 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.232544962 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.579186962 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.294966229 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.232815923 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.23707552 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.233545211 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.235388231 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.690270959 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.149597765 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.237835737 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.382616941 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.832755245 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.253334051 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.232572342 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.885820868 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.458961028 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.726073917 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.291187403 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.521599402 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.258919889 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.26961187 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.886923466 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279934181 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.686103072 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.257489101 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.23465538 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.797695452 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.254945798 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.358756124 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.233903877 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.235298164 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.738690002 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.254726073 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.237229541 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.396423669 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.252133855 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49243385 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.234811603 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.2522111 seconds)
  done (took 1086.541063015 seconds)
done (took 1271.163719783 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.235299493 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.239384936 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.21909031 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241434628 seconds)
  done (took 26.089354977 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.245795756 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.242502562 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.243514486 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.241686054 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.244938783 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.242175119 seconds)
  done (took 8.615522081 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.281490641 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.2431301 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.242481374 seconds)
  done (took 18.923013869 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.437218224 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.449316245 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.55895732 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.290691588 seconds)
  done (took 9.892105748 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.245706977 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.24468767 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.245620294 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.246555144 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.248640093 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.250512471 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.247215682 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.2470662 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.249245166 seconds)
  done (took 12.381628208 seconds)
done (took 77.055593615 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.321392496 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.262638522 seconds)
    (3/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.859730724 seconds)
    (4/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.224281327 seconds)
    (5/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.239722044 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.494148377 seconds)
    (7/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.262103067 seconds)
    (8/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.481127792 seconds)
    (9/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.122852276 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.285260431 seconds)
    (11/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.249643847 seconds)
    (12/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.432250883 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.286487212 seconds)
    (14/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.715518644 seconds)
    (15/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.993853419 seconds)
    (16/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.245683219 seconds)
    (17/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.235787556 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.631154175 seconds)
    (19/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.392509043 seconds)
    (20/286) benchmarking ("sort", Int8, false)...
    done (took 4.256336303 seconds)
    (21/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.240545215 seconds)
    (22/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.284782703 seconds)
    (23/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.805609201 seconds)
    (24/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.372231962 seconds)
    (25/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.441196907 seconds)
    (26/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.621440256 seconds)
    (27/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.628234892 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.661814348 seconds)
    (29/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.268533308 seconds)
    (30/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.421997928 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.416052247 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.246657558 seconds)
    (33/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31967055 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.360477971 seconds)
    (35/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.325270446 seconds)
    (36/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.220695375 seconds)
    (37/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.238676361 seconds)
    (38/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.261213404 seconds)
    (39/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.311725699 seconds)
    (40/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.219234229 seconds)
    (41/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.010362249 seconds)
    (42/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.016883739 seconds)
    (43/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.693376113 seconds)
    (44/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.352540317 seconds)
    (45/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.389285383 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.358877743 seconds)
    (47/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.257606329 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.496762947 seconds)
    (49/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.477461444 seconds)
    (50/286) benchmarking ("sort", Float32, true)...
    done (took 6.24808439 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.310338578 seconds)
    (52/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.303336753 seconds)
    (53/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.224892104 seconds)
    (54/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.628505977 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.329637118 seconds)
    (56/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.34461984 seconds)
    (57/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.26849818 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.300158631 seconds)
    (59/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.951053823 seconds)
    (60/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.362029825 seconds)
    (61/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.44896459 seconds)
    (62/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.708788138 seconds)
    (63/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.740443178 seconds)
    (64/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.740554763 seconds)
    (65/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.444521905 seconds)
    (66/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.61132205 seconds)
    (67/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.7161187 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.891942245 seconds)
    (69/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.293291218 seconds)
    (70/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.158483281 seconds)
    (71/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.288177096 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.853079038 seconds)
    (73/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.673457608 seconds)
    (74/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3061515 seconds)
    (75/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.592385692 seconds)
    (76/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.350148412 seconds)
    (77/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.945850616 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.389411838 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.228435903 seconds)
    (80/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.900058828 seconds)
    (81/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.464918271 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.8318617 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.237415949 seconds)
    (84/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.229194206 seconds)
    (85/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.333256342 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086868338 seconds)
    (87/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.224376338 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.274253367 seconds)
    (89/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.675337363 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.229472793 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.13308412 seconds)
    (92/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.31382369 seconds)
    (93/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.223807218 seconds)
    (94/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.337369327 seconds)
    (95/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.227302398 seconds)
    (96/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.246843789 seconds)
    (97/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.244096905 seconds)
    (98/286) benchmarking ("sort", Float32, false)...
    done (took 5.247099797 seconds)
    (99/286) benchmarking ("sort", Float64, false)...
    done (took 5.520424625 seconds)
    (100/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.447974496 seconds)
    (101/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.229643494 seconds)
    (102/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.27474407 seconds)
    (103/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.280070073 seconds)
    (104/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.601950511 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.375782204 seconds)
    (106/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.33031697 seconds)
    (107/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.329914254 seconds)
    (108/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.594193313 seconds)
    (109/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.481011587 seconds)
    (110/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.231388368 seconds)
    (111/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.082662625 seconds)
    (112/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.265668269 seconds)
    (113/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.230660969 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.776382993 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.284308907 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.233596791 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.507654121 seconds)
    (118/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.558130426 seconds)
    (119/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.240869547 seconds)
    (120/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.25772933 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.97735779 seconds)
    (122/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.251480748 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.528354804 seconds)
    (124/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.566074988 seconds)
    (125/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.264888263 seconds)
    (126/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.24735214 seconds)
    (127/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.243355954 seconds)
    (128/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.227227187 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.358190738 seconds)
    (130/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.749787072 seconds)
    (131/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.316576847 seconds)
    (132/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.331516572 seconds)
    (133/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.840906694 seconds)
    (134/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.427771943 seconds)
    (135/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.958237169 seconds)
    (136/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.987242822 seconds)
    (137/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.252854722 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.983250945 seconds)
    (139/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.60492242 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.293892463 seconds)
    (141/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.257251744 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.247675608 seconds)
    (143/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.559242221 seconds)
    (144/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.256719681 seconds)
    (145/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.05993064 seconds)
    (146/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.614873008 seconds)
    (147/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.276973024 seconds)
    (148/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.582646697 seconds)
    (149/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.26596497 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.272772334 seconds)
    (151/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.240759564 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.239735179 seconds)
    (153/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.226347426 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.234469188 seconds)
    (155/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.243865934 seconds)
    (156/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.228987261 seconds)
    (157/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.272220159 seconds)
    (158/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.415260754 seconds)
    (159/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.228990493 seconds)
    (160/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.724928911 seconds)
    (161/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.483889103 seconds)
    (162/286) benchmarking ("sort", Float64, true)...
    done (took 6.267103103 seconds)
    (163/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.257291953 seconds)
    (164/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.377958474 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.27504794 seconds)
    (166/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.29055976 seconds)
    (167/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.229787321 seconds)
    (168/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.253805602 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.160723098 seconds)
    (170/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.265344057 seconds)
    (171/286) benchmarking ("sort", Bool, true)...
    done (took 5.389457126 seconds)
    (172/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.327944669 seconds)
    (173/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.250584231 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.018834157 seconds)
    (175/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.047828801 seconds)
    (176/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.254603985 seconds)
    (177/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.276380255 seconds)
    (178/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.433003697 seconds)
    (179/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.510226962 seconds)
    (180/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.985966087 seconds)
    (181/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.911545682 seconds)
    (182/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.466876181 seconds)
    (183/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.26783945 seconds)
    (184/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.254330953 seconds)
    (185/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.348690067 seconds)
    (186/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.42807483 seconds)
    (187/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.271457478 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.59338345 seconds)
    (189/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367050571 seconds)
    (190/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.817560628 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.138026489 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.789577256 seconds)
    (193/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.288821997 seconds)
    (194/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.550934141 seconds)
    (195/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.28059481 seconds)
    (196/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.597652884 seconds)
    (197/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.251721343 seconds)
    (198/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.485917668 seconds)
    (199/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.23102646 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.61366588 seconds)
    (201/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.641455968 seconds)
    (202/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.254643645 seconds)
    (203/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.305875076 seconds)
    (204/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.231133502 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.897517905 seconds)
    (206/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.872340194 seconds)
    (207/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.349390781 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.276522909 seconds)
    (209/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.710698821 seconds)
    (210/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.254748671 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.65006483 seconds)
    (212/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.275583436 seconds)
    (213/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.140099945 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.254069589 seconds)
    (215/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.062082362 seconds)
    (216/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382106144 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.252442986 seconds)
    (218/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.235614049 seconds)
    (219/286) benchmarking ("sort", BigInt, true)...
    done (took 6.2735266 seconds)
    (220/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.232276187 seconds)
    (221/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.363089852 seconds)
    (222/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.45297632 seconds)
    (223/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.247357758 seconds)
    (224/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.350601996 seconds)
    (225/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.302307508 seconds)
    (226/286) benchmarking ("sort", Int8, true)...
    done (took 6.252020727 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.785999618 seconds)
    (228/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.262615944 seconds)
    (229/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.278875983 seconds)
    (230/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.233233663 seconds)
    (231/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.051890903 seconds)
    (232/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.526125823 seconds)
    (233/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.46517996 seconds)
    (234/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.326373644 seconds)
    (235/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.654896168 seconds)
    (236/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.232595835 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.654183378 seconds)
    (238/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.053518807 seconds)
    (239/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.368916713 seconds)
    (240/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.607559082 seconds)
    (241/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.682590766 seconds)
    (242/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.371443803 seconds)
    (243/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.581521613 seconds)
    (244/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.539586031 seconds)
    (245/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.2489508 seconds)
    (246/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.004614316 seconds)
    (247/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.282537047 seconds)
    (248/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.280646507 seconds)
    (249/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.087389677 seconds)
    (250/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.297849238 seconds)
    (251/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.235723101 seconds)
    (252/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.346665034 seconds)
    (253/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.009677101 seconds)
    (254/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.23518642 seconds)
    (255/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.271225193 seconds)
    (256/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.258105593 seconds)
    (257/286) benchmarking ("sort", BigInt, false)...
    done (took 6.263849223 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.337639683 seconds)
    (259/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36258113 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.811409731 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.337821474 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.368107629 seconds)
    (263/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.089912229 seconds)
    (264/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.395886246 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.064660883 seconds)
    (266/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.953807112 seconds)
    (267/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.621275834 seconds)
    (268/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.238926956 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.297091922 seconds)
    (270/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.23516375 seconds)
    (271/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.258863231 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.038331253 seconds)
    (273/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.069161218 seconds)
    (274/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.273556311 seconds)
    (275/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.370995773 seconds)
    (276/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.275918967 seconds)
    (277/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.414259896 seconds)
    (278/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.283084378 seconds)
    (279/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.97133988 seconds)
    (280/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.830122828 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.284249501 seconds)
    (282/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.237647181 seconds)
    (283/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.388341818 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.069926782 seconds)
    (285/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.206356664 seconds)
    (286/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.339339973 seconds)
  done (took 908.755999385 seconds)
done (took 909.913524456 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.290363591 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284461319 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.267010316 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.289600401 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.378997565 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.293839028 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.27831212 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.27008407 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.316595684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.318529718 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.268188512 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.292449433 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.268531191 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.268195066 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.267693606 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283319687 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.253293864 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.268066213 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.283778587 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.278067474 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.28459207 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.266278308 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.317033629 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.292608291 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.271664327 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.271064765 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.270893337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.287686486 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.380291984 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.27200949 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.27182273 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.279736177 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.254358554 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.267690009 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.264018825 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.288519548 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.278756577 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.277949666 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.273315957 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.301434765 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.63368605 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.284095769 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.270063152 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.270612158 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.269365149 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.27372904 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.270679132 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.275305074 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285505601 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285009558 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.619451058 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.300324503 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.273834811 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.271049149 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.282910369 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.271019905 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.273585637 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.288235198 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.289881393 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.287479914 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.244494893 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.276173407 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.273324469 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.286758621 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.279127777 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.661610689 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.281995686 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.275461053 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.637454927 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.292022607 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.659836241 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.295400234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.273703691 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.285979054 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.304151669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.257491769 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.266785273 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.271865784 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.279731741 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.270687812 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.282074574 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286608281 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.277525014 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.273475258 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.28664215 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.298457761 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.282719983 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.273371716 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.281911756 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.292540016 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.279458384 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.283539287 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.276279276 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.268622834 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.282272133 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.276241387 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.275840657 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.27631152 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.278858276 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.284800444 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.636459238 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307007408 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.270257298 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.270367456 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.273759568 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.286626209 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.638748239 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.290701993 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.296152405 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.321232542 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.275302437 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.249598177 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.27793744 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29180542 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.283856967 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.27828536 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.269792838 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.249104608 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.628994711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.305048907 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.275966199 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.271887334 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293115001 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.277856557 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.271897477 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.264147785 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.276190653 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290185877 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.396493798 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.286343555 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.305860357 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.273799485 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.278576196 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.301071649 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29246679 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.307203324 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.279114275 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293723272 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.292752425 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.272874926 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.287087757 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.286667144 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.277597958 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.283818564 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.270807469 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302362138 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.290230984 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.290449216 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.298737907 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.396566382 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.274217758 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.251318936 seconds)
done (took 215.151982653 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.338583065 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.271062547 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.366336434 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.273510494 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.376482001 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.375399149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.271232918 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.271384563 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.270643284 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.665579397 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.270760093 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.272350006 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.265593622 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.271400041 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.358204985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.273646624 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.2718357 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.614233424 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.274841108 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.348948807 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.273750903 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.271643994 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.275183354 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.656788475 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.274524069 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.269826467 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.350088038 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.274314161 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.620904818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.27306251 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.272673794 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.623188393 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.369124615 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.29339615 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.285327112 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.283003075 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.378407628 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.292392475 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.359442542 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.35966599 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.370669431 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.314405739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.276574104 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.276221995 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.277755545 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.277231055 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.27432707 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.303059813 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.275442168 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.273913395 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.616340211 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.286425957 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.274688646 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.275262997 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.275290715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.305770509 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.274605734 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.277185359 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.369859213 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.277629745 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.342497752 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.657833131 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.696095624 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.276734935 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.277598755 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.275137846 seconds)
  done (took 144.622785868 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.342015788 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.350675591 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386626133 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.293954539 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327140502 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.393340227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.293735395 seconds)
  done (took 10.574251322 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.283998135 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.278681242 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327490122 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328619349 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.278299535 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456502073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.279051092 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290513663 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.27595647 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.331019752 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.281455956 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.279640209 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.285618204 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.280368033 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326862737 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.290759176 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397294766 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.280345601 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.279945684 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43088976 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277231332 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.285833156 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.330434043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.290843916 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.281904545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.284826343 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.091397016 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.280812485 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.278041425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.280885414 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27737962 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.357571295 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.280848222 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277629638 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277492257 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394654216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.281972989 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277087315 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.28019303 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.277477514 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.28085507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.280755745 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.280539991 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.278064449 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.280799001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.303509919 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.280783124 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.281004764 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.280807614 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.281555591 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.330929503 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.280925378 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.278659778 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.278660824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.335190376 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288584321 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.280890187 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.278526103 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.281585738 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27854999 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.431855372 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328772653 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.281274273 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328732575 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.282553383 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.282192886 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.281311784 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281878615 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336335392 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282028907 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329875311 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.280130007 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.469255543 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.30643699 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.284677807 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.285224287 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.284868681 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.283279093 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.276762833 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.288258371 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.280830183 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.283447506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.288314069 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281001319 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279955913 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451606951 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.391224121 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.282271294 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.294764366 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.290265765 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.280546046 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.335294852 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.283082879 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.281115758 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334797383 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401334448 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.336264114 seconds)
  done (took 148.441920136 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.288571535 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.291870345 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.285065627 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307377485 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.301121402 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.284552983 seconds)
  done (took 8.951345175 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285710382 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.285040166 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.284016954 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.283693558 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284156055 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.286327495 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284283001 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284881068 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.287148616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.283834367 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28591694 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.286302405 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.285791129 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.284292457 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.285436272 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.284474991 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285307953 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.281501718 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.285248491 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284801574 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.39250153 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.28863469 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285353818 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285816622 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.289279443 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.285436611 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292550689 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.285181733 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.287231744 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.289829274 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304210213 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.287095491 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.28713593 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.291654996 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289249046 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.284993288 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290106628 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.287162141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.283051444 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.287182181 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.287976485 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285767705 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.285144186 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.287091353 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.289132195 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.289449927 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.29052618 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294272512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.285976013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.28865805 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.28894477 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.287088065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.288037519 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.289088363 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.288269775 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306307483 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.292115858 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.286806689 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.287189958 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.288524725 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.288975716 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.286753379 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288628601 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.290514476 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.285076638 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.289218827 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.288050821 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292415256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288178664 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.287333185 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.288812316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.28724927 seconds)
  done (took 95.015210515 seconds)
done (took 408.788533458 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.570481631 seconds)
  done (took 7.769195301 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.282844079 seconds)
  done (took 7.482253568 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.841818161 seconds)
  done (took 21.042172436 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.365895525 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.312724801 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.286302387 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.286082987 seconds)
  done (took 26.448392818 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.447859662 seconds)
  done (took 7.647627304 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.285351274 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.281155047 seconds)
  done (took 13.76742835 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.59903389 seconds)
  done (took 7.797691347 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.598871266 seconds)
  done (took 7.798996184 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.293974208 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.296858114 seconds)
  done (took 14.044722677 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.264654506 seconds)
  done (took 7.46520866 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.717374559 seconds)
  done (took 11.91919805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.292250204 seconds)
  done (took 7.494937453 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.366725589 seconds)
  done (took 7.566761511 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.923908106 seconds)
  done (took 9.124430608 seconds)
done (took 158.567592343 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.283879166 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.29022283 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.284374497 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.290654062 seconds)
  done (took 26.349626662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.324692441 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.325057708 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.326807333 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.335345697 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.328745894 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.325858799 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.318023253 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.317906019 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.336084365 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.329824377 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.326973623 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.328697448 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.330499478 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.326237305 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.327891437 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.326943958 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.337177225 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.326424927 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.318360683 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.330293729 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.292354134 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.337563445 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.328885256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.293328996 seconds)
  done (took 33.002826763 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.815220559 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.363618432 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.445800803 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.346020693 seconds)
  done (took 7.172580426 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.345397685 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.347222986 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.357371106 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.396745936 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.43423727 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.355883946 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.319588306 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.315583918 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.301537913 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.346608833 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.422523574 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.363461912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.480630673 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.294067887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552365931 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.294947653 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.293875067 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.345825103 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.397572582 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.412027647 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.294603624 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.34644804 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.349198083 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.363577588 seconds)
  done (took 33.935244675 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.294757446 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.313178758 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.293877338 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.293344729 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.301624937 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.29433656 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.294116076 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.295784264 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.295058559 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.3007708 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.29346388 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.308350675 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.294164451 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.294478648 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.300955928 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.296033981 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.301205663 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.294470137 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.295482624 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.301821612 seconds)
  done (took 27.161929265 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.289624202 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.143512252 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.64192596 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.544836406 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.290020353 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.295241683 seconds)
  done (took 27.41005261 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.36144828 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.508570211 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.295982617 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.631280882 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.730272998 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.318976721 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.296833623 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.522940001 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.822634171 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.813837159 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.353190002 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.360616133 seconds)
  done (took 19.221292784 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.289853381 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.293113895 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.309587329 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.309268883 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.347942589 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.314877265 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.302393254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.290110783 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.354033279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.367159585 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.315612305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349879154 seconds)
  done (took 37.05054103 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378886776 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337809105 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.188766362 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378511398 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017002108 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504032221 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.336353618 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.023402683 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.317979794 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566901839 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299178309 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380888177 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548666691 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292648745 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315578111 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.230922821 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541777478 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754694889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294457562 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.152761375 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322041549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297634958 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.231452754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.511344131 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524089402 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.265723629 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.549935113 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.059210927 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558033554 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301202908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294245927 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.285266237 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55594672 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919590624 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399066427 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479961749 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316875916 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.829699036 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.276944924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.133357407 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287328641 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.285622134 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29326511 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283215815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.215577069 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.288868767 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998729284 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.307703059 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.99434023 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.281727922 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5298007 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38148326 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.285453522 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.86772749 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287938656 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20786547 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.286148333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373376757 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871594985 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.371596756 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304989094 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.223636588 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299384179 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146954578 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888076512 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.3044977 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.286720243 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.287676023 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.217659601 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.135861378 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.301549495 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430200137 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.308555275 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93288545 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942340398 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3058748 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.214671119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.805168358 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286191011 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.224489286 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.512360018 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059646962 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219868168 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.232923143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.218888897 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950541914 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294838089 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.635083596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.309515908 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.01236345 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508555835 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32375283 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308315034 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.507715956 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.166121425 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285074554 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.28409574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412115961 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.30725597 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997557144 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244248187 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.289535709 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541964207 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.497111941 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294703841 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.222845437 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.774919088 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314895725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.306330458 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.289521046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.494132847 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.860402596 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318282745 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.389139697 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305118634 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061189403 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988237333 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28816137 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.295182336 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.287735788 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566356787 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.004604721 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.172610695 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355062781 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296227331 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288669917 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.17225511 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140779803 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.187537705 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.475128675 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313467572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.301960853 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.288391582 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236130538 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.296370519 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294085196 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.063720477 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.511002864 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287062297 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583298692 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22222758 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434375796 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296639353 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.510147492 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.449855364 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.309761119 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547108129 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295195517 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.298644026 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304488592 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307069947 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387641502 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311002572 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.297393632 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.546417627 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.29396559 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.293715113 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.163135375 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.07266318 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294564895 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.295505032 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300335817 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847620375 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282948249 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.290906948 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179648547 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.303985542 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358024385 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.29487298 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.493535729 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.459535248 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311653882 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.312294844 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.299705861 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517553493 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299703095 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.164487657 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376115262 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.754130654 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86605729 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320490952 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.225170672 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.001682717 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.983511307 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291513593 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.480592502 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.291468437 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494159551 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330490199 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292918934 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.870854945 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311499427 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171503636 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.299353652 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303342423 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.296271284 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291314968 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.421033226 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420131702 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313273176 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.307790246 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43452702 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.305945471 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.226472384 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.808694241 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.297706385 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.292604013 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.069737768 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32716196 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167094178 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147063145 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572530041 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295649228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543308405 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.248526481 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.326765205 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.289922208 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296512316 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305626263 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.308433574 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301048663 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.303606836 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.168112702 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.735184803 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862323431 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004593559 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818659416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587483943 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.320617556 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.179446925 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.009223185 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248297006 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950084204 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521579526 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024706074 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26038122 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.761945897 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.479329214 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048416002 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545505393 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523071348 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.568749412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.319845207 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548331628 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508884961 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329246813 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295776577 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.227413096 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.0840688 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847794654 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326707098 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373792764 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015765445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325320721 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.073209565 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.327470121 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.950051535 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68539141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.860338155 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.68418274 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300746389 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.299458199 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165498721 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.318796753 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.821753519 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897063593 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316408331 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.765246219 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253459993 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.502569351 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.3285589 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.293944527 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.77767813 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.309830937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.550498893 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54521187 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236009184 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.297697916 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817409949 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.171305155 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.304041822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297685572 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004266398 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302846963 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590693479 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.310460296 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.464977915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319359323 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23136295 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232313004 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.990704366 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.303999898 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273123266 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.759652338 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.304266215 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305717977 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310238698 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146812578 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.55333303 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.313363789 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.853623328 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546361501 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.314684562 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326825655 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.302373015 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299800078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.284241828 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.181716788 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535132687 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378554838 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.526044974 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.219191598 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.20168054 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37416988 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922004978 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.191230381 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312836403 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53868751 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.030877695 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.320581314 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997728742 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344195785 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.309449135 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314368971 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.308778451 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326871703 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388445181 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505668546 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.331881398 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.311131967 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688226736 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33718964 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308609349 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.314269543 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39405015 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.436131393 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.474192003 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.074380026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86054826 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030419336 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884884586 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573438147 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306759762 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301974022 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23529067 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4500585 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828087831 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577211957 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432473228 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.302686621 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328259896 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305724721 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.310083694 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517947239 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576962851 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173132793 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315292725 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.966713721 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.193458421 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313718429 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.513340151 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768167472 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835175336 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.685931436 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.302899378 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030001952 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598150989 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393372816 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.303853803 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893994165 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.313565344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.974468291 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.311300022 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303028842 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454533417 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550632156 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949929165 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.335016313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.464233152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.076790568 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200514331 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562372669 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.740810311 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.513947446 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893885024 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995250827 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.571100836 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.37636256 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511016007 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.437393016 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453080514 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.312051849 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202904393 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304703511 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145306697 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.015354551 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.314907728 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876205107 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587557496 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.308916193 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.310361991 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331395877 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.314674447 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528940464 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983528528 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532035107 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31547328 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311214573 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.875503387 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872665368 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574787046 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246253069 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.309651859 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538135324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.562887154 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33155805 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.759124777 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.017175473 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837873891 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.278754712 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32789228 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31132898 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.987339448 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880357595 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.502166375 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793852517 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.965446487 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308233597 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584590134 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.312490985 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307727987 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603710467 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.312082448 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.311311292 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518984211 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.887966254 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075115448 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.319859003 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.387144494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.248010895 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.540758158 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340893994 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249211593 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312699904 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.702597851 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.331310693 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438133816 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.320142179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.318547373 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316466783 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.046210674 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583508507 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.314279017 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.30559445 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.311383306 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312882795 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41750331 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874171779 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330737088 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.984372414 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.658804302 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.56449424 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.310049035 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.296895971 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.313638009 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309056819 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028463417 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277889605 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324347132 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846109497 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.326203537 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.323932902 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314849701 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.525775075 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522157458 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318569043 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519674798 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343389698 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328676894 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.218741912 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.078367475 seconds)
  done (took 1634.983799309 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.311811732 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.320798673 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.31650073 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.373354541 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.330781889 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344650498 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.318910786 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327531926 seconds)
  done (took 51.86970447 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.317235406 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.469943789 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.341946398 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.318424758 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.324488332 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.312811353 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.75657178 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.331412327 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.324021444 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.321863018 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.316627695 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.315163937 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.944605878 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.325691593 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.315625519 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.295608867 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.323941921 seconds)
  done (took 64.881846592 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.197103687 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.538706212 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.874512989 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.32832328 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.319264521 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.315038967 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.740372114 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.327974871 seconds)
  done (took 57.86809582 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.329251815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.329108178 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.330980019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.330823572 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.329887153 seconds)
  done (took 7.877702939 seconds)
done (took 2029.98802337 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.317701526 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.319353765 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.317389023 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.320264926 seconds)
  done (took 6.502584832 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.293945798 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.028102132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.295462854 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.315128582 seconds)
  done (took 18.160223436 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.326024602 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.333218606 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.984180165 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.90311092 seconds)
  done (took 5.117290329 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06554727 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.075908247 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.062400109 seconds)
  done (took 7.43278553 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.313665241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.319882043 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.317782806 seconds)
  done (took 20.180605993 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.594090362 seconds)
  done (took 2.823026263 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.463022353 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.511583639 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.631977889 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.654364667 seconds)
  done (took 7.490622445 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.703597396 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.686186208 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.511067939 seconds)
  done (took 6.130158539 seconds)
done (took 87.723526738 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.004050109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.316438684 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.524671494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.978008246 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.541284065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.524124666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.72878586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.945123314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.526216068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.476203356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.977552007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.542059808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.463370901 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.317412256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.46466411 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.316271655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.54175486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.041591994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.700264469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.861020497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.727947098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.612143494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.803638255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.632914317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.538010461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.477335728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.190645236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.564192654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.87549848 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.209850138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.476816499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.032887776 seconds)
  done (took 188.162314468 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.315874335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.337362493 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.317959509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.331704666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.318008572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.335259791 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.333288577 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.332920008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.333259495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328852321 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.316374936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.318694775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.317378204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.3347614 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.316674692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.338859259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.318717103 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.325031929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.317698434 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.331157536 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.318433958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.333781237 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.336196787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.318307663 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.318800543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.318212259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.334702209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.317809902 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.326457311 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.32259019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.319484336 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.335928725 seconds)
  done (took 203.652852247 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.326801828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.318924575 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.335763287 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.339552805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.319286614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.319834357 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.335626562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.318609104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.333456997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.327963736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.322907934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.319155728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.337153908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.319164235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.320177944 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.319952968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.336123148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.335347162 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.32361309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.335694168 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333365891 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.320327919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.320622505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.320030028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.324704967 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.321440364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.336157182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.336270769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322163421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.340229733 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.324613785 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.347433147 seconds)
  done (took 203.72602928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.521756884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.327326762 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.327339929 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.281349429 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.327991824 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.326961107 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.324780025 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.517964962 seconds)
  done (took 14.189345689 seconds)
done (took 610.959759093 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.61006616 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.316319085 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.534337537 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.348973516 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.069504943 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.369710309 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.347742838 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.512174119 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.221737511 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.517103116 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.534130526 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.362716316 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.676019404 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.346768854 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.59462043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.446149927 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.185330793 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.318853573 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.654100438 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.852518127 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.610013297 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.802494201 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.532165984 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.223669679 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.695164616 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.804061734 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.02622064 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.181299106 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363325417 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.656070837 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.927592862 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.265533596 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.405580624 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.408795717 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.465498681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.44197079 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.237144889 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.402027858 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.546611123 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.567167167 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.834184217 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.048321195 seconds)
  done (took 90.500722066 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.313774369 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.314183239 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.313493902 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.313531925 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.314392452 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.312998744 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.312703138 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.313871737 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.313677324 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.312280297 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.313497019 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.315242156 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.31400706 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.315362394 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.312919793 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.313128024 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.314651574 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.31543443 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.313742638 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.312733905 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.314554834 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.31399484 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.315415402 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.313832155 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.314805604 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.315144729 seconds)
  done (took 35.402566751 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.332859646 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.578939882 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.741314829 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.341815607 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.332151583 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.336396176 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.408520193 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.334671643 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.336788228 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.336592728 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.492383329 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.335266381 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.366916966 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.763263591 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.338400556 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.334121995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.333737112 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.33331251 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.588312538 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.343945197 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.429011587 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.334388562 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.409379797 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.343441187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.356938892 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.335560688 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.338977223 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.899372594 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.352909523 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.487472517 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.090300081 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.410121748 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.874064986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.789632631 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.089566168 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.340564163 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.33616835 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.491944031 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.337409691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.335071352 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.409255798 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.336170373 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.749385777 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.001739983 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.355809075 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.335214218 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.920091849 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.508540157 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.568782011 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.343617588 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.774330885 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.34193947 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.337208729 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.338238264 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.567826306 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.348490067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.337044869 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.935956021 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.361546271 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.412074467 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.339793153 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.336521246 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.592075987 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.338489346 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.584346167 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.338638478 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.345763569 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.35592684 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.748546991 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.34284884 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.015476771 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.358509413 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.33725625 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.487700883 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.582181937 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950757535 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.358438046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.596957701 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889676693 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.427007191 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.345640177 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.891161098 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.430160973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.345648103 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.340480185 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.339445305 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.337876307 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.388693046 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.409049136 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.964319884 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.02498815 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.960957574 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.434047328 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.355141212 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.339206029 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.936583042 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.361109282 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.33926147 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.75538756 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031387965 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.360065094 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.346537545 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.021074542 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.362292059 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.414473806 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.351261778 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.765539303 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.344315338 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.389225916 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.340606939 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.346835794 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.361575758 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.415190467 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.351247442 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.340070211 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.991659722 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.517158774 seconds)
  done (took 176.895235392 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.339537755 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.333202506 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.34521598 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.333908796 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.334602583 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.341389 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.334957712 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.335026785 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.340569455 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.334870443 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.334492427 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.333717126 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.336638655 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.337078177 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.36631929 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.340180276 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.944544069 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.33398384 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.336346353 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.358218324 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.124469595 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.344290453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.335398294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.335546702 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.335269913 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.33515964 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.338317106 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.356471602 seconds)
  done (took 152.147385314 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.342966201 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.881852414 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.362644546 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.466116707 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.366061734 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.340463775 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.464710227 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.401561792 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.36295017 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.341262879 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.339731887 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.63150944 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.348546279 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.832102512 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.523328354 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.491185972 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.834858911 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.358877948 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.340767588 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.34073384 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.468264208 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.348687824 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.629072087 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.879787095 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.361294391 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.879028974 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.327764166 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.344723403 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.34340571 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.886286571 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.361797282 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.634817174 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.420344375 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.40375003 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.906335186 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.858200222 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.853929784 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.486060839 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.349955326 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.341858408 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.340945643 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.326765845 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.882907141 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.362399012 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.344446011 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.872119503 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.362419063 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.345912468 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.352272242 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.342383244 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.401286799 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.422203709 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.655841188 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.888780814 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.434791856 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.359273663 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.470042515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.728779402 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.348031445 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.839153171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.330980918 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.887658623 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.36279948 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.328020295 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.345110876 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.349202988 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.488025256 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.474354144 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.840204525 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.362294384 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.835627245 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.503320445 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.348620941 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.342961147 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.346575948 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.887996719 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.853868602 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.503917834 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.477101858 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.532958808 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.33295457 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.345365858 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.328783918 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.420517044 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.348720642 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.888847858 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.8542253 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.363025038 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.348004548 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.348024749 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.349378151 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.512482725 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.909468584 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.437377042 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.831756987 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.654719025 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.637734833 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.347886665 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.402827385 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.365326861 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.640628699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.348988513 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.402498689 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.793549569 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.64069561 seconds)
  done (took 160.045519534 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.576305191 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.526796472 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.440453331 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.499617182 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.937286364 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.921025813 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.572792718 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.501981789 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.457443101 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.595572934 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462532396 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.437882135 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.552864451 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.42394127 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.064192996 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.434436361 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.451684517 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.491665909 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.499890339 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.333748825 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.002728156 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.622607411 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.530824381 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.13628975 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.444003401 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.07964119 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.898005456 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.905704637 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.526924452 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.637663321 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.869333924 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.466476487 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.279280507 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032510838 seconds)
  done (took 64.86876036 seconds)
done (took 681.095150881 seconds)
SAVING RESULT...
DONE!
