cset: moving following pidspec: 8372
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.250469991 seconds)
loading group "string"... done (took 0.467645231 seconds)
loading group "linalg"... done (took 7.609965024 seconds)
loading group "parallel"... done (took 0.173540515 seconds)
loading group "find"... done (took 1.169813419 seconds)
loading group "tuple"... done (took 2.120110818 seconds)
loading group "dates"... done (took 1.339251553 seconds)
loading group "micro"... done (took 0.250827926 seconds)
loading group "io"... done (took 0.649017998 seconds)
loading group "scalar"... done (took 42.132079536 seconds)
loading group "sparse"... done (took 13.090670264 seconds)
loading group "broadcast"... done (took 1.240540944 seconds)
loading group "union"... done (took 14.417893785 seconds)
loading group "simd"... done (took 5.16256721 seconds)
loading group "random"... done (took 10.049201003 seconds)
loading group "problem"... done (took 2.006678796 seconds)
loading group "array"... done (took 22.583130297 seconds)
loading group "misc"... done (took 1.513582352 seconds)
loading group "sort"... done (took 3.595806052 seconds)
loading group "collection"... done (took 19.382317251 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.519242872 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138848914 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132733802 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147078712 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203286155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143511401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15779223 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.114823734 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.978498864 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180161134 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153318562 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.510681169 seconds)
done (took 5.129833129 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224226223 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093725132 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103295961 seconds)
  done (took 0.870555587 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077656722 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144244806 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093911781 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078067487 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094538338 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079264836 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095712631 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.079045629 seconds)
  done (took 1.343830897 seconds)
done (took 3.202754018 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.728423714 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.281651233 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201827901 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459779216 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196454065 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213024412 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677711885 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335076883 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251426027 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100638618 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143254293 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386039466 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135616605 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679656499 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088838883 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123340976 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179514461 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445227889 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082752039 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109770079 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116160658 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140258026 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128263728 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090559215 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185208572 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083205362 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193237485 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107388459 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080339326 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288099644 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200089779 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692956393 seconds)
  done (took 10.841674704 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110826432 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131651915 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096789717 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138520105 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134020539 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09926307 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084039956 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096396058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120516672 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175443627 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113329878 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13592898 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094049817 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081791717 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114599788 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243309354 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118838377 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102616148 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099498926 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102710329 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122982961 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112082349 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107594329 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092674898 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166118686 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219342423 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109936881 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125168738 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09527056 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115161316 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143843036 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142031967 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093752673 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079702519 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171140346 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12366541 seconds)
  done (took 5.107093881 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187311784 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120444087 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166912925 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162836414 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138416869 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158022984 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112095826 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245517753 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.124226283 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164394006 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139325906 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116108818 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080453186 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098425063 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095523697 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.63652419 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163556609 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134151631 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113606077 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10235729 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083155898 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364572726 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104956426 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080300371 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099667145 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065932076 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1594541 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099782903 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.139800445 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119537905 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080822304 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133948793 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207732778 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112416968 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123069557 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126172561 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135428242 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079143455 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095119933 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177798704 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087022291 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097276764 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.118279959 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118417658 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132533889 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098389938 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096011066 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20331757 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094353177 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096905111 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.952702 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181754634 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090130651 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097570339 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323717584 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099366045 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097207331 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077006129 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.268673979 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182588501 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097960281 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07941069 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096271912 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08041479 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397745735 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085222309 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.685040179 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08407887 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107650453 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08237295 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095486332 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102549022 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087370258 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114714945 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078478422 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098690465 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078343411 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096661747 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081572594 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108382987 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101272984 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079526925 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164051625 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079294868 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094102455 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099543317 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131918072 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10213266 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079384993 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134045549 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097873806 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080407162 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133296129 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098812272 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107058114 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083010405 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143203693 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09692463 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.180857253 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080718875 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128560033 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098513362 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113678691 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112196904 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09783116 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083355939 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094768383 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076114394 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093836211 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076719388 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163743767 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083830571 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099102295 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109776819 seconds)
  done (took 22.52424861 seconds)
done (took 39.154236501 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329067743 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104139481 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101883935 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101941734 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098438206 seconds)
  done (took 1.485907007 seconds)
done (took 2.211047836 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287454027 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171167004 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093842034 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165004896 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092232744 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173341696 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158217068 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111032369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218054692 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076775918 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162157818 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093808987 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076535471 seconds)
  done (took 2.630063141 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094484787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113769386 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082236079 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110543926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07573071 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110764461 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091936493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116771188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109251043 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084737247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092811658 seconds)
  done (took 1.806570183 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094263262 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112454073 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081483491 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109875506 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076592641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112765731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094173176 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118028611 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112093692 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086863451 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0937592 seconds)
  done (took 1.816760885 seconds)
done (took 6.968709365 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090488297 seconds)
  done (took 0.807053857 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.919262555 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.841135071 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112401323 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147989304 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298982373 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191292367 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.471644319 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124267247 seconds)
  done (took 11.032645901 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115028067 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114421874 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102989385 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083208264 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103042638 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084518249 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098592639 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101266533 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082510501 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101797243 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084741901 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098909628 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09817604 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084241157 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098714322 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084582248 seconds)
  done (took 2.322029368 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119697892 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118463826 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105955216 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108234135 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086987259 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103191633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10631277 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088655241 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101882815 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10317398 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090394442 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.10413249 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103079672 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079152363 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104092608 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10794226 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08559696 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104928733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105818514 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089068792 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105043163 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094520621 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086553766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105783313 seconds)
  done (took 3.2395367 seconds)
done (took 18.123293029 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158470321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10789421 seconds)
  done (took 0.993520941 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094607006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112580296 seconds)
  done (took 0.940810188 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097151052 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094393639 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120717261 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110070224 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079307603 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095672339 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119305838 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080252655 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095329545 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079699944 seconds)
  done (took 1.709227632 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081340696 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.107966325 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100828391 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.09423944 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104047049 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094883709 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086758611 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097970697 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108290738 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076122007 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102049614 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113677924 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084558161 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115647578 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103891348 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083082499 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10136497 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097390526 seconds)
  done (took 2.490142996 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078964921 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096383533 seconds)
  done (took 0.914119306 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081266102 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09338501 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080008176 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095834233 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093218311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076358181 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094352503 seconds)
  done (took 1.352897049 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.468901826 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135747159 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255142027 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084182204 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119636481 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302252482 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096711787 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08427162 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10246323 seconds)
  done (took 2.444273461 seconds)
done (took 11.577734972 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092345426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116912602 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110917932 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46385746 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105893815 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096660719 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159195967 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251192012 seconds)
done (took 2.139122157 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149510844 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324470109 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114055315 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068104411 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097032834 seconds)
  done (took 1.350054044 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079223317 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099346241 seconds)
  done (took 0.921353258 seconds)
done (took 3.16863788 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080064957 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131018251 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080095594 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095660431 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079950854 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095043249 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077103042 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.095102618 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079781585 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096286278 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095886519 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079952423 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096168327 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077089259 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093433503 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077151406 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096074277 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076446079 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093301906 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080013893 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093210818 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078713922 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094509183 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076814137 seconds)
  done (took 2.896382664 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099118276 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098532478 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102380257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084566793 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10111111 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085324958 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101697002 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096337719 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085354101 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098684036 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099764482 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083840348 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098491176 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084883028 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097825431 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099762186 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085594458 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097087052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08304019 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099867167 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.1020166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080565489 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100771736 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101711586 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084180972 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100832071 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082168619 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096681633 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101834671 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08326463 seconds)
  done (took 3.566520444 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084067961 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094182476 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077306052 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10141607 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076735737 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096269034 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076682443 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095197266 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078885618 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094660132 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079039285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09415556 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077710566 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095736682 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079081674 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098084256 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107408697 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078058239 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09390795 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078627958 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098312188 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077531946 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094664329 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078033975 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094911833 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077173397 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095767156 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077689036 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09626167 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077300122 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097601017 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081081844 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094926556 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084885308 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098103838 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077624657 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098676098 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093936875 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078504364 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094906479 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077826869 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0945841 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078550209 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10080647 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077900372 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096591454 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077585141 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096445352 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078596995 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097772673 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076725151 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094225418 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079324213 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095096163 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09832977 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077779495 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09555033 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076832443 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095851868 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077706304 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094312884 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076847975 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096174989 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07851512 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110442258 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084931225 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094041677 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079753265 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095170993 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081237699 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097669382 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108616484 seconds)
  done (took 7.11902106 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082481361 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105024694 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080017668 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096871494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076242186 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096774828 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09892868 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078200269 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097606139 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085020322 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095175053 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0790727 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097319804 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106963565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078708958 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096953109 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084119105 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092367883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078226768 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099581108 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078477844 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098395697 seconds)
  done (took 2.734331817 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207349538 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104085579 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141308524 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107430314 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082123568 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10649315 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101229369 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086429825 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102537244 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083085008 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098992542 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102088305 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082454131 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100665609 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101103742 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084339318 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102454664 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084181318 seconds)
  done (took 2.634167654 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092514898 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098355409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102153298 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097887802 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098263879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082829346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103803658 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107148367 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083068235 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097760302 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090169416 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099985846 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100447712 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081107249 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100829716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080424543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099827618 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080935881 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10706865 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103613825 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103986294 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090188605 seconds)
  done (took 2.860027485 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095422516 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100324115 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11727921 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082590954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094693524 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079778701 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105666028 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079746246 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107114265 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099459553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080652046 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096712557 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088633744 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098146181 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103913483 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081456337 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100226545 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082163048 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100990771 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077145143 seconds)
  done (took 2.630412762 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101980699 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099879355 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099769559 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091149652 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100046039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082135975 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10775895 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099441626 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081915786 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123682486 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099372246 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082724492 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108856891 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106460515 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098902091 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092005431 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108301577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109415639 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082552784 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099109685 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124773505 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08263811 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108218176 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.210762296 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08249544 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099256979 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099615227 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088602811 seconds)
  done (took 3.632322333 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08111063 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097894848 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078434609 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095827749 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07813121 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096544994 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077901908 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095022301 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081788975 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095904892 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.0815112 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097671297 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080010279 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098086382 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081078117 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098308977 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083655372 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096094396 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078196723 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095521328 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080209887 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097623569 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081332336 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095904711 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07864378 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097496965 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078385554 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095783242 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081269118 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095518888 seconds)
  done (took 3.412921327 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090045358 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105441172 seconds)
  done (took 0.958038478 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07839164 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113838555 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077900378 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102204415 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085451449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099613986 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107614882 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085347929 seconds)
  done (took 1.512740261 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095047636 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109818029 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082778553 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11095773 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109166979 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094674237 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159984847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100605866 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087180423 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096454205 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113342258 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08058077 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104887724 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080493847 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105088175 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087406411 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096635967 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086757691 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100909601 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098141075 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083606109 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110284341 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084143101 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095830455 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082821843 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10962488 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.10867068 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083592125 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101677119 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10785985 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087030074 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093318601 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082267083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100370253 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079039388 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108442061 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112050881 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08372786 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108333859 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082973847 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109669629 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095133677 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086954503 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104739216 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091665429 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10015311 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083005425 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094790838 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097067804 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083400057 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094329446 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081205576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093791829 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088135863 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103146824 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112596181 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08114866 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100411242 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085002568 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102814557 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087787291 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102052081 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084496888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098449233 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106322924 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086153046 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107221601 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076690287 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093765593 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079885387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107054264 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121980734 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089604486 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100439358 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083922277 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096917723 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102493419 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08278707 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106514715 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090166023 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099928526 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106173272 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088883819 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098723729 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084083128 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10812233 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098090683 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083027102 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097593588 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097799493 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099074362 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080675733 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097626963 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10815822 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085585041 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099991456 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079433785 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106824331 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079315327 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101553361 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083181197 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10033585 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108863779 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088731529 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106349265 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107446861 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088981878 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099553903 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083827169 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096314815 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083341678 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101901419 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106302329 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075978989 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102467187 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083562036 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100455091 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089176561 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098836222 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08263305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107521371 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106376349 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079772749 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095871164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08518795 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100563076 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085183258 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106571178 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097965077 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07815587 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095397678 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086189248 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10063212 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085822533 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105240709 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103104179 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076726897 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098213523 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086663561 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106526891 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099872844 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081965628 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104741127 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082974451 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098293054 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.087072283 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102191439 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08089243 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103490696 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101999854 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07817272 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104095192 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084632935 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099432876 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086469576 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104110763 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104156203 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082610953 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098478504 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08707252 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1016628 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080667147 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099357635 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098882195 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090168041 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102606837 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077703422 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09795889 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08922881 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098100279 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08153451 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09919407 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101929657 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083081092 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098257302 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081193197 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101534409 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111834972 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087361922 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102380804 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086887573 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109989731 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08219738 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101536351 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100279429 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083330359 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100744398 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088867327 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105938053 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106498844 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085314749 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096654419 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088537796 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107505413 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08109581 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097769431 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081197318 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103951271 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.10726462 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08566733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101517046 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080299449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101668898 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105223827 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084222391 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100775989 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081506436 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104812337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082115707 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107256988 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101684435 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092057937 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103891512 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077416973 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104765465 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098485162 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089067331 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09613652 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080344021 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099241157 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083151076 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099947065 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085467598 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094537252 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089716469 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1074258 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100888404 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082014695 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100960906 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090543163 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101938783 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08562935 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103867169 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104656132 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094973463 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099199511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085283409 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109912265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101199905 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07690834 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105885457 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080594229 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099463904 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080664569 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098828626 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08569084 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109044288 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105717454 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077008414 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103284152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080495359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10012369 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07797997 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107962003 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10378587 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083601928 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108850289 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0835417 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101589606 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104831726 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082589021 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101421461 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084362806 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104338225 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084815935 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102955618 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081712759 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102411184 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099919198 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080129981 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102137203 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083970753 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100461159 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087738105 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10247493 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082215803 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103929731 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102538911 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082932943 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10225323 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081764577 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103910634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083131952 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100593213 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084907789 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095586515 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108134396 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082453558 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109207774 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082295632 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097545101 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088709567 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10412925 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106878476 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084364935 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102246395 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083590734 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100866643 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085443201 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109476371 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09899401 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091440447 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107499598 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082832969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104008502 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082734178 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102907321 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100318469 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084942549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102848009 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082754467 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101321334 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087094861 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103401656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082516452 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103633522 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102080628 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083178152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102107786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076946481 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100637086 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082084336 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101216788 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089575091 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102425212 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10332506 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081603708 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102349673 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081422357 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097834491 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090812501 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111430049 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102063772 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091047441 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100383781 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083614563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110554277 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094918818 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081505558 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100081445 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080161355 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109566168 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08342055 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109206578 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100288941 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082337993 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098634077 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083528959 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099453259 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077590102 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100956959 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08725742 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103294461 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081629681 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101553608 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103658425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084092259 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108996963 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082915459 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102926008 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082967712 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098458093 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081925739 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099990842 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104361153 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084460933 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099198302 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080381536 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102073628 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085392665 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109918149 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08221007 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103615821 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08988109 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100870282 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103609182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086402914 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095523972 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085988385 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102064924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082401985 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100971639 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104363631 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086024836 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103652587 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.08984315 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101713548 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083797468 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102449908 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100029128 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083858337 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10215364 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083462503 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100726697 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084199531 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109633664 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080548624 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103324143 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100663403 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083498915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107008397 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.083679983 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104572982 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109320202 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08599483 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103054916 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089980495 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104373316 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086316303 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103312511 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102556261 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088402886 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100789849 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091145759 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101228621 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084129464 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103150946 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081533436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10091633 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101837573 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081533515 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106541561 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084107991 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10139117 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.081237379 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100502056 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085034503 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105158736 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109214906 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085306775 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104694988 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077787426 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098326517 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084534973 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099043414 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08441223 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105056845 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107050729 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085110075 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102432655 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082178147 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109363965 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108329125 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088267855 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100145597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088267849 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102949623 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085717362 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103458934 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083499154 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103551724 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107206781 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085844715 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101498091 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091129949 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106665573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083981516 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103295384 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102141546 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084392267 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097411171 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083985099 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103776328 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090522027 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104988357 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102200084 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092875063 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100830024 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083058163 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10629065 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082544636 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108687487 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097550586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08426205 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102809074 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084361873 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096888583 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08292105 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100469906 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085827305 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101645447 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078035865 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111217235 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108950382 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085216066 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101191826 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082695798 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098269144 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078310136 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102136691 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084075772 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104535112 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111476659 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082747188 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101466173 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079078216 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103462966 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086302222 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105657642 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079914879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098107332 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100503821 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085387019 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.10827503 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082589732 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101775997 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086378883 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104360864 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081523264 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106455662 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098372539 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08739751 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112415979 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08438194 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103380977 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106838056 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092287602 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102811935 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079463766 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.1031486 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08575989 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102039106 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10283048 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085014846 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117418194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086869951 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101488888 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082303735 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104949838 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101205494 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09021191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104193723 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083826959 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107381255 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085064541 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11148657 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104731016 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090011911 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104288368 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086137632 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102429769 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101626105 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081177741 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100745176 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084902431 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103859799 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08878944 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110609736 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101200397 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092867347 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110254917 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088086722 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100295137 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082755277 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102401962 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078965199 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103864965 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100330897 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081897118 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100656951 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082994105 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102969205 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090422472 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105013477 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084824129 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103792886 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096755335 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085899832 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105616116 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08474243 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099423914 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084541086 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104186302 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088904293 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109230655 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10281117 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085674395 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103532448 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084761814 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09776534 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090484379 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101990504 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085661433 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102328963 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083567516 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104069426 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106512888 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088991337 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1036769 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086082822 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115225365 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105528876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080583104 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098804214 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089434895 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100564272 seconds)
  done (took 57.472500436 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145884129 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081083313 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098745094 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079434476 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112363739 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099244107 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078863705 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098342753 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08043223 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102151247 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07887737 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09798043 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10916022 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123952161 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093027681 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103128343 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097468306 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08081287 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098075226 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079723895 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108737157 seconds)
  done (took 2.860069472 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103729728 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117197563 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113863734 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118281221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088911027 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114180185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113100474 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11491401 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098131278 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110741684 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117679705 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115246694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091267807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110146722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110465811 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093256948 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119595432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108211114 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115841655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094352394 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112045814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11475663 seconds)
  done (took 3.208528774 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084044529 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101742198 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084991906 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097777754 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083326089 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097670442 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087141819 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100128284 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086538245 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.10183785 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081539526 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101405177 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103851804 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079085351 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101177808 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081698435 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151528819 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106681889 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08332121 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104097508 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098730628 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085001596 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098604183 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079530346 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101427044 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087177298 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104073167 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081478848 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102728609 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081816657 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103239757 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080185902 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105222868 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102466941 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083314566 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101575836 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083145942 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102371814 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078412093 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100183366 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084245247 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098410433 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083308235 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104580741 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080801372 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101651049 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084101031 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102950236 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097781986 seconds)
  done (took 5.432395547 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105220617 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160814238 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084777791 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143303286 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120240025 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112528629 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087378911 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142330991 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102527973 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082938301 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122415126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119181421 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103704882 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089575468 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107584267 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103313568 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085987766 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102429919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088692054 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103775304 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107869553 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089193432 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119630509 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117685225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107916436 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083800309 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102816826 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108351344 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096982147 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108480015 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108091681 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089942782 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11952365 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10823952 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08237867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105760809 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121542765 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103462984 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087327757 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101016165 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087184725 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10825235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109022142 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101403035 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103956873 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108196974 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08365725 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101327542 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117184373 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086738251 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.1125098 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119231815 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107666205 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084241484 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108621755 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119347536 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084573745 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101849527 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088092305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116827426 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100401474 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087689274 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1190083 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104993992 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111783748 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100111109 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108823275 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107419028 seconds)
  done (took 8.084983444 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09322285 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110930362 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120126054 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119705919 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090512935 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111214529 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11114422 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090833187 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112396231 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11869864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111568922 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132712258 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087018321 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114504118 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110109251 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091031821 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109709728 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110501822 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091969656 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111174029 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110542738 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120910115 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090403965 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118582871 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140889615 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10473948 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091846801 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111042225 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119635636 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110304675 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121856727 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091410081 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111655836 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120214107 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124245747 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090363493 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102641683 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110643541 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091279879 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110965878 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105268017 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120118419 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090616897 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105421888 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110091237 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091381036 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120428539 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122720804 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114101496 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096361784 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.110567691 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120421423 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109880296 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091573713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120588829 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146528445 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120680046 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120503612 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110856562 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119262633 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100560642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128114249 seconds)
  done (took 7.645393331 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107525271 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115382516 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117942326 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099661411 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081708328 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109009763 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082882249 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10263957 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11322217 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094671106 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116821274 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107763917 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111581462 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097695421 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109800268 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111479046 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087947217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108180844 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114297129 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108343573 seconds)
  done (took 2.927444798 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094126243 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123409083 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085504639 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111705381 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107956234 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0914542 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108208635 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106627516 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085479855 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107974256 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096837119 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115829416 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10559538 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090747219 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115024267 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111726029 seconds)
  done (took 2.48714373 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095099755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11747834 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119398184 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083785011 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103834409 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080613985 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105048919 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100963072 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081028057 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12150532 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084260361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108655498 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10477042 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083198393 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101115949 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088310412 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101047495 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081628899 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105644405 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12078465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095990631 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103684849 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1056722 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087163934 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104944611 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089797122 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106659879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104452652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087207119 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108979492 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08801527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116867517 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107080547 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087082593 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.107878906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086290693 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109462592 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089257104 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113491351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109386136 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08672924 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108430183 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088669207 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110730119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084355694 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.109781586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101317341 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091100311 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102497703 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084483571 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104765873 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10738399 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086426181 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115205107 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088691636 seconds)
  done (took 6.300486882 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100165841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109131279 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080976663 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102968464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088455002 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107799489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109352896 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087779878 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107758622 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082300166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107057061 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088542298 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106756291 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10840702 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087504313 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108380447 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080200807 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106671586 seconds)
  done (took 2.609679423 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091249954 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104750952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091395091 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105668677 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08430913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108714165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080288078 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105116078 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103433927 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085953682 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104586867 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08774432 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103478714 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087959391 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105214533 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085169505 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107719888 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102887461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085935841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101745048 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086996476 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104048208 seconds)
  done (took 2.962223615 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117424581 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124819188 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092570477 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228268104 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104189319 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131839396 seconds)
  done (took 1.638472577 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109459027 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119685706 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105985532 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107632076 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115536231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107256929 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08686694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107079707 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116614742 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101237908 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107821112 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118475436 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11745736 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096672872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11413796 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114123635 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107854334 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087757 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105876432 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128821358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08761362 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118269011 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107452881 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08689459 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108442885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117284109 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117851413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122681276 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087463188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118220462 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114188949 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087279264 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119316176 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122582637 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109202733 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097166699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108544659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128851755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114915253 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097644948 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109302359 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114341005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0978835 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113676932 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118252062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107343023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094129284 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107705184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106763594 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135956561 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094469377 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117991022 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114215118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118505409 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118212703 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13446205 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102934943 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118191128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115025394 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122954593 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117422653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094785758 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117256851 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123342555 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115028996 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11721322 seconds)
  done (took 8.138014844 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102725388 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12609368 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108723916 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123154974 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0969999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108173788 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106907591 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088442656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108062963 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106495141 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152165787 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08840897 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117114442 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117412951 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108260071 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087665708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107966622 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117379373 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087233438 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135988537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107796012 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118249527 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117931929 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096989792 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122400242 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115183458 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107880886 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087651615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108199788 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106999639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093855968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108644772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117633104 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086473416 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117296687 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109019021 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087062828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115355951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108401501 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114380772 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097405653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128894673 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10879288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108092016 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121900002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086891365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108065604 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087067401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108284079 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106383369 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122673749 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102233095 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122089299 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11816279 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108559567 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08865215 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108766168 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108471471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087951352 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115475067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116965922 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10904762 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135971795 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088112848 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109104111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118105364 seconds)
  done (took 8.01135836 seconds)
done (took 154.479909263 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098007928 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13604371 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096753181 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168702781 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106848614 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118552413 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138309732 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097643347 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105997095 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08594577 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107588043 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087120142 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171723702 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084760874 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106473512 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107568021 seconds)
  done (took 2.663525158 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198522689 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254294222 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101952708 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106016738 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088841206 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110203391 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104244302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.09131602 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109973417 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085684836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109754032 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085867791 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105647178 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086214557 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110579579 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088084305 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106185843 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087156194 seconds)
  done (took 2.880581442 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113035776 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146118986 seconds)
  done (took 1.117771182 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118216746 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179827382 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296562158 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154680001 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118455955 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126712095 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156409295 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130828098 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196880288 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122667686 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122049742 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09822587 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140127026 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116363036 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093854237 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118936791 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14182106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092396523 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115321489 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116001238 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117264786 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106519251 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114646355 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093361425 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181234174 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11914363 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084865242 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106833732 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114997459 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09488143 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113804474 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125645331 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098221983 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.17554491 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101866175 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176441628 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097786851 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112949126 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115035096 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090855388 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118865752 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117830279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104632299 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118329103 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087583025 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119589323 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105564354 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085511121 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114848966 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097445684 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115327186 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113485581 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156196818 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118709331 seconds)
  done (took 7.52528703 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796046733 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163174753 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090660324 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887982347 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138706645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10417739 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.784180454 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133666816 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234914167 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766412784 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134572835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.121991422 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227945765 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234942036 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927323771 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307801662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669570229 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101754844 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150312713 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154301879 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119719733 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137954155 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129711402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45248105 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095892142 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112626157 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116858838 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099515589 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159432103 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125608503 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113783 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179523481 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.266363185 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.185748194 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115873926 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089882993 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111255894 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170251026 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267175135 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213740979 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181306012 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087132583 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111655243 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121570401 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111300142 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109148042 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164008472 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194187128 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173298329 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092300158 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121937923 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120913978 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120789218 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164508109 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121048186 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288524749 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322173358 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111762486 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121725185 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105924993 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262235716 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122134931 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223688333 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117333576 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213741186 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111481721 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769477815 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191326249 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089717543 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118043895 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11938289 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095128393 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122381959 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170542642 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392100405 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123913427 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092444368 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111468341 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211186117 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12582196 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111460792 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163534476 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11623002 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098680577 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127095389 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123407029 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171964276 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228654023 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124033791 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120456198 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094719397 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125821725 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116013076 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214911707 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219002192 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16263296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207569403 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123245171 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185314124 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167455647 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098038575 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194939143 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098427794 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127296223 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122998839 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21643277 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.1467714 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122202227 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09528598 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119164602 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149746015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127149326 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097845934 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190997633 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481556784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169085396 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108935742 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127282964 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099343603 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182498394 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096779231 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262602347 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12195786 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168844414 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119667067 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087107638 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121498117 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16499243 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122671532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121353705 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100742555 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118806332 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.23516745 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219036048 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12334425 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220747746 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184723814 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119543183 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172678024 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122580127 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166764961 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12127939 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121354142 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094901598 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795155718 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124273484 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098687642 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116386423 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197402636 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11122771 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102158297 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125535907 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109623455 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754562649 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127481211 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120648567 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101909484 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119335078 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120583164 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116053251 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095067547 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162645849 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232103755 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122370047 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119267559 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102568018 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183246586 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095910591 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125627134 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125306047 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125601587 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099641228 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115555877 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124813378 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170470576 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163162784 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221325143 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598459309 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090668096 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125963696 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228348785 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089829085 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289942802 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119623587 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225446069 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165262939 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121688356 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321467808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167288061 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.196567519 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127144424 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173246305 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086263366 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119550794 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163368271 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111964594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118867296 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164876399 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126392877 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101095314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960899684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112658046 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227489619 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108848698 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172613602 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117156107 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099659696 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288445536 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112400096 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.108216048 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186052668 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093084057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125640493 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.782841688 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103941337 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122149109 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118579092 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221674228 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164146858 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119241076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098992402 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121802767 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163668283 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207132348 seconds)
  done (took 44.174604732 seconds)
done (took 59.21286148 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273642395 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212031088 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258361979 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168316286 seconds)
  done (took 1.866233075 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169916693 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148301898 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119570432 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107174115 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149244552 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085340021 seconds)
  done (took 1.659529665 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352010709 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269829166 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239016902 seconds)
  done (took 1.745341058 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288329909 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251291696 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354850216 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418307655 seconds)
  done (took 2.314277943 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207389249 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131676827 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111727121 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104802211 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195830745 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248780483 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140944488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201117963 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122345554 seconds)
  done (took 2.394197886 seconds)
done (took 10.864729129 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.244683606 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.168561496 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.157898304 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093919359 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.233945096 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.126545855 seconds)
    (7/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.24551742 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127136556 seconds)
    (9/286) benchmarking ("sort", Float64, true)...
    done (took 0.238268056 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094361662 seconds)
    (11/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.12496743 seconds)
    (12/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.261839259 seconds)
    (13/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.256722393 seconds)
    (14/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.186531413 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.138659544 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.184449794 seconds)
    (17/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.097342853 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13727439 seconds)
    (19/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.195355625 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.1034638 seconds)
    (21/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125435012 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.172364775 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0938048 seconds)
    (24/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119002102 seconds)
    (25/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.111243335 seconds)
    (26/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116594436 seconds)
    (27/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.233413941 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.226964674 seconds)
    (29/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.130095009 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118726026 seconds)
    (31/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110362146 seconds)
    (32/286) benchmarking ("sort", Float64, false)...
    done (took 0.147546912 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.117868475 seconds)
    (34/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.205637791 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112032491 seconds)
    (36/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.112091313 seconds)
    (37/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067486397 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.135114095 seconds)
    (39/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078843112 seconds)
    (40/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.191035734 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086133334 seconds)
    (42/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.221550845 seconds)
    (43/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.119289699 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093291781 seconds)
    (45/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.12244329 seconds)
    (46/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115764792 seconds)
    (47/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.165041843 seconds)
    (48/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126141062 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132117334 seconds)
    (50/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.09534086 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.170856305 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112412767 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.20415185 seconds)
    (54/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186898291 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085676652 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137711676 seconds)
    (57/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.219551595 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1671699 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138478686 seconds)
    (60/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.154528692 seconds)
    (61/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067425535 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.135687355 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068192495 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193759024 seconds)
    (65/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183839891 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.217717451 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.184408727 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.160764914 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175882769 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 0.086091475 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.199951571 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13468548 seconds)
    (73/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120121329 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077649458 seconds)
    (75/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067473458 seconds)
    (76/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130279682 seconds)
    (77/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.094218027 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.136786574 seconds)
    (79/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117516171 seconds)
    (80/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089148796 seconds)
    (81/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192488524 seconds)
    (82/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133685973 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.144581767 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.0929455 seconds)
    (85/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.11070709 seconds)
    (86/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066404675 seconds)
    (87/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087322083 seconds)
    (88/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090751205 seconds)
    (89/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.121539215 seconds)
    (90/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119112977 seconds)
    (91/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.19715319 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088737414 seconds)
    (93/286) benchmarking ("sort", Float32, true)...
    done (took 0.235817801 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118295253 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.114964742 seconds)
    (96/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143451954 seconds)
    (97/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.177821823 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086559707 seconds)
    (99/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.174287327 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067430516 seconds)
    (101/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.141036749 seconds)
    (102/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235498002 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 0.181716381 seconds)
    (104/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084654335 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119146543 seconds)
    (106/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.185751377 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093369152 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192379062 seconds)
    (109/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093552326 seconds)
    (110/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.144664977 seconds)
    (111/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121881451 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.093735146 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066338731 seconds)
    (114/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.149253143 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116933395 seconds)
    (116/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.163822308 seconds)
    (117/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121769451 seconds)
    (118/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086395778 seconds)
    (119/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115007534 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119757155 seconds)
    (121/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085687065 seconds)
    (122/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117434296 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.199023918 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093563117 seconds)
    (125/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173833968 seconds)
    (126/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088921543 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137173505 seconds)
    (128/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092150305 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099497045 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.172031764 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085847567 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174267614 seconds)
    (133/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094390723 seconds)
    (134/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118793194 seconds)
    (135/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219672401 seconds)
    (136/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.139023513 seconds)
    (137/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087085695 seconds)
    (138/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108847523 seconds)
    (139/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.133963337 seconds)
    (140/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123597029 seconds)
    (141/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120753964 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068579319 seconds)
    (143/286) benchmarking ("sort", Int8, false)...
    done (took 0.190198417 seconds)
    (144/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.16240555 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.138871307 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.096961558 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163961125 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098483467 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111476152 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132965951 seconds)
    (151/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076050779 seconds)
    (152/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068461161 seconds)
    (153/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.141811259 seconds)
    (154/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094279623 seconds)
    (155/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170914343 seconds)
    (156/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.09965861 seconds)
    (157/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.076430161 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071252308 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.12379317 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067420063 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.109357901 seconds)
    (162/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091510896 seconds)
    (163/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101076398 seconds)
    (164/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066889486 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067291396 seconds)
    (166/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090130158 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.111868618 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108897983 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093838426 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109574128 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06812246 seconds)
    (172/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066765959 seconds)
    (173/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.091071298 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097126931 seconds)
    (175/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110613137 seconds)
    (176/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097828393 seconds)
    (177/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090468481 seconds)
    (178/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093167948 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 0.222806657 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109725546 seconds)
    (181/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091186307 seconds)
    (182/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190908526 seconds)
    (183/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103271261 seconds)
    (184/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065815232 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189853011 seconds)
    (186/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067652979 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085812416 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121803052 seconds)
    (189/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135738693 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096611116 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109129449 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094941837 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116013797 seconds)
    (194/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094798614 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09006423 seconds)
    (196/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097346077 seconds)
    (197/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116687154 seconds)
    (198/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076361435 seconds)
    (199/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090357876 seconds)
    (200/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099465919 seconds)
    (201/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076454129 seconds)
    (202/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.090378654 seconds)
    (203/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16809682 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.116401099 seconds)
    (205/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112429489 seconds)
    (206/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102029726 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116711143 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122541147 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116755874 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109603147 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085272991 seconds)
    (212/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17414215 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.30785774 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11071634 seconds)
    (215/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066923915 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123748693 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067411802 seconds)
    (218/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116582505 seconds)
    (219/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091162976 seconds)
    (220/286) benchmarking ("sort", Float32, false)...
    done (took 0.173452198 seconds)
    (221/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.128652262 seconds)
    (222/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112906245 seconds)
    (223/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067341753 seconds)
    (224/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089918888 seconds)
    (225/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066593271 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12314123 seconds)
    (227/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068708818 seconds)
    (228/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135973758 seconds)
    (229/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088771454 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.108767708 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138667219 seconds)
    (232/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.115477966 seconds)
    (233/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075972999 seconds)
    (234/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.099528086 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093153766 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109753237 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087563144 seconds)
    (238/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090413631 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095372908 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.109640846 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101516189 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090044732 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091304697 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091368922 seconds)
    (245/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089405197 seconds)
    (246/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109508709 seconds)
    (247/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087178709 seconds)
    (248/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112738862 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08638773 seconds)
    (250/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122561852 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087367157 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.179975694 seconds)
    (253/286) benchmarking ("sort", Int8, true)...
    done (took 0.221880601 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068024768 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140857357 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066070031 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118605774 seconds)
    (258/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067598623 seconds)
    (259/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11258642 seconds)
    (260/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09512425 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108181693 seconds)
    (262/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.135073856 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078144787 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085498428 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118258939 seconds)
    (266/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067046436 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109531757 seconds)
    (268/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067932703 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090116734 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066852731 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092569454 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108695931 seconds)
    (273/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.233236509 seconds)
    (274/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067022034 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118041861 seconds)
    (276/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067531394 seconds)
    (277/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075614912 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112572355 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068944812 seconds)
    (280/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.090734861 seconds)
    (281/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067823477 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116551112 seconds)
    (283/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078056872 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067857073 seconds)
    (285/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.090435878 seconds)
    (286/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085207333 seconds)
  done (took 36.074668425 seconds)
done (took 36.962670687 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099515796 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147644301 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095815233 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136386354 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12359315 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090905566 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117161071 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097037252 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124209382 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124615548 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098265816 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093340825 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095883731 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119637133 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096348539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137900765 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122952312 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093830723 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118675334 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085760308 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118836371 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086370222 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111396344 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069859124 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121443072 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093713541 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115934924 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120097253 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086815658 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109958345 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091736252 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116529751 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086172601 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123168866 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093220312 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118365182 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096490537 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11982103 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112374127 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086253295 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117590539 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086267436 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116806779 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095186202 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115736792 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092994906 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118838051 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098591478 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138734117 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115662252 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09467539 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121147245 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097087889 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118254998 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089936163 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118726686 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092575862 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138876184 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11912771 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091657192 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118098232 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094462632 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.1169189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094793461 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119512061 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121457053 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098192404 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115536787 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097482277 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115702055 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087124708 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118483825 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09004517 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109905503 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09558955 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121098761 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109100437 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092875537 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117320161 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091781918 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110371996 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089537461 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112125271 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092310857 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112594943 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069965895 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113834008 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093384795 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109274679 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095869234 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11667691 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093438713 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112730938 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09861387 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110459461 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091776394 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111819274 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087020446 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113051972 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.09031209 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110810742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089567195 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119233003 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111802376 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092556208 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122791222 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086587481 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117322742 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087275311 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110086683 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101945959 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121549525 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087029143 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115880626 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087102167 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118174083 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085469936 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110609919 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111070488 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087582506 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117338415 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086271071 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114171338 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093761087 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12598389 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086784968 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114681537 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0893023 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110664452 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092693902 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111345047 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086416572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112620299 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077511558 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113019423 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087540677 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118335628 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090931241 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119060906 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089019874 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120733746 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092236707 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116902766 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115925921 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086582755 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074970392 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116562744 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089695179 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113203016 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087039572 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112934079 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086903552 seconds)
done (took 16.895122077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086740826 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184339766 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15142059 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14285924 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107173077 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112519247 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122670434 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118347315 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113647457 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14271187 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110317408 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131773625 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148309573 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086755292 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112047231 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091573255 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113448452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102431491 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145045413 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132009993 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163459174 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086476057 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14655905 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135360735 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12120995 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114139502 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112531752 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091198556 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115028839 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102921462 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131584804 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115432095 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087450822 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133128393 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104290638 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11970278 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087045858 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11804577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087212218 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111242784 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140192674 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133326746 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092902035 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117340601 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091585295 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114067444 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089188044 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120779004 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097506313 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115538452 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125958322 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155526124 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091501993 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122036659 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086874166 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122016816 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121519811 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089752385 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113083417 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090129199 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111488774 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090471597 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127195533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14192707 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091792416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121412132 seconds)
  done (took 8.592976603 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104034413 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139425846 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105694607 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131427041 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11170526 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08829785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112659121 seconds)
  done (took 1.739847598 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088627017 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134831173 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111682484 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136008469 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132103185 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112193591 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12298782 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089485609 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133509994 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089523373 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13568213 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150249394 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089494066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121034474 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137639926 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088928694 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136807492 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089090973 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116901893 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112162295 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116891265 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135567698 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091108382 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113592103 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10346654 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11500263 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16187808 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094024621 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114812742 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092454056 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111729322 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151077588 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102768355 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124714864 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089337104 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129048145 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128177772 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086946435 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.125848298 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094256797 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127960437 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089755669 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115202 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087417305 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11870929 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099305451 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118621074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.106824625 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11666728 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134110158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089673356 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126999087 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088859619 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117189717 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090251564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119563135 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098272654 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114879426 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1327463 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090267551 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130958747 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105796237 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128057565 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130148623 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091014092 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126863597 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103834107 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116914361 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090846422 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117339413 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105210762 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112543514 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090928471 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.12471055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115923165 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111992833 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137255265 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090783214 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124640491 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08875231 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08911349 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114136712 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111814348 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11831594 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090205674 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117848116 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092355778 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112827253 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087806175 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117100941 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087448417 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115968587 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092407282 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115166612 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091448466 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130912019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115369403 seconds)
  done (took 11.81470551 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090210675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114840199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092220726 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115080447 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091193873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114916694 seconds)
  done (took 1.576727566 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117832289 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117698916 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103778043 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120862107 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156472532 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103649656 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130231227 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123965831 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108062696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127188609 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129795229 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105429468 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136705512 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121746584 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104489962 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120793532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130085463 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100027974 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127230726 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096295188 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136983416 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121756297 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096386542 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132298298 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118443896 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095904371 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126177691 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104675431 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127746791 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12337897 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095884812 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118009046 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096676521 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122704898 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130017584 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096069893 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119682362 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118804287 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100208501 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119095378 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104652989 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122260984 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127177634 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093889331 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123288416 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121194784 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093643896 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124610354 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103881226 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120206436 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121908863 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095326981 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121193766 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093931945 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124082323 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124201929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09514389 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129885059 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121323329 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096476698 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118365698 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09385537 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125069879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118802708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105046705 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118598058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121258828 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096443698 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121975965 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096357143 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120094006 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092396288 seconds)
  done (took 9.230655272 seconds)
done (took 33.902804726 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686893687 seconds)
  done (took 1.64513689 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.812008213 seconds)
  done (took 1.771589589 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.217959713 seconds)
  done (took 18.212188233 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.491485764 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.575455868 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.979804066 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177439864 seconds)
  done (took 3.190054979 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.942667677 seconds)
  done (took 1.928396821 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281289367 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234200955 seconds)
  done (took 1.486587254 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769108276 seconds)
  done (took 1.745725256 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.433004292 seconds)
  done (took 2.400660233 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322904401 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183519145 seconds)
  done (took 1.486674441 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551044349 seconds)
  done (took 1.527411713 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.725184377 seconds)
  done (took 11.707710007 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265495346 seconds)
  done (took 1.256315771 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301402804 seconds)
  done (took 1.28230638 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.518119228 seconds)
  done (took 4.503422417 seconds)
done (took 55.116181521 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099498527 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126105228 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10149748 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123984684 seconds)
  done (took 1.429422556 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101341075 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121685986 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100950434 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120327477 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126514904 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09656553 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124530001 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100357397 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121491352 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097151433 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12124333 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120461773 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098752687 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123104287 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094567399 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123442034 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1248306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095943928 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124019315 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096236073 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118982444 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098549917 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124659072 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094126656 seconds)
  done (took 3.657059829 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100488122 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119279522 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095982791 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118130153 seconds)
  done (took 1.428898926 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100772478 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130879873 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106070298 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125984683 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131068545 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105871814 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117465122 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092194145 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119138892 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100158167 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116811107 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139430649 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106619029 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124563708 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102219111 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115146749 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090844566 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131272353 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124874605 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100991674 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118835782 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100601972 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114997653 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10921669 seconds)
  done (took 3.715293251 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169788643 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127493719 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139189778 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094858493 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159672085 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141004469 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088786903 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140694706 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087811055 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130943838 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117961979 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133016566 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129646568 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087864685 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114931559 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087935975 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12864562 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128768623 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090816897 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12790887 seconds)
  done (took 3.424862081 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097592837 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118262514 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088269726 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116741233 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099221013 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120991122 seconds)
  done (took 1.635890076 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09051649 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114763614 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090365685 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114861111 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095074646 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115063445 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088080527 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115876424 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090083876 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115030113 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090034076 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113736013 seconds)
  done (took 2.229012467 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50466829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119500529 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120331911 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089222866 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122383173 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089125195 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129348134 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092200909 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142246089 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088975619 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116346616 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09342233 seconds)
  done (took 2.699195289 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23620238 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12684025 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284500237 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368265304 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155803879 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164930155 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276181395 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162182508 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197599643 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150116248 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229809221 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196783176 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152121018 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192101793 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137257795 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145241668 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189803091 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249759591 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152037359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211868965 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205642863 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167465464 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17931102 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152786589 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111307186 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192652568 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095048315 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130312568 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233716321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179849809 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189659993 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160989985 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146891249 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236550041 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248410623 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196298322 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27815118 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134020079 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166916259 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14341241 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264645701 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138926439 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232868875 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156164667 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105476995 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220985066 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166111515 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176298074 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144379748 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138957165 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198262514 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24306527 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193366707 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139224608 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300637123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148278584 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158606088 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189417852 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249835867 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226570713 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188989796 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121340478 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187824453 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191448522 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211746132 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.152526274 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183036149 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147329525 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182694354 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189627387 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165526015 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204606869 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179858822 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139355766 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171413915 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173775718 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174225558 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260398934 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185046731 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122741709 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170679242 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150182176 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131397496 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16721027 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125078619 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214159411 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14248106 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16467408 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208687115 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159343206 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160882172 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22436835 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184284762 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149864497 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083579327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153291068 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155832291 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176973158 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140008874 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158865208 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15714773 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129301285 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170502629 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097315015 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21334229 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092023946 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174508634 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211411062 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100050131 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162009659 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154384908 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151742901 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178286504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198152998 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14095661 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13356705 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210690271 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18004147 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141725941 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176955721 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229414786 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11758736 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149500386 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227028684 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243464003 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113483981 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228604092 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153204682 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108662447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134282878 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180343416 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156132309 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161869774 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133198111 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184531322 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233287965 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100070401 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138683673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195501103 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13473133 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13293811 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155420997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1480268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11054535 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.143155821 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145908628 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176371866 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180502592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155477963 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166685999 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150913285 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249952063 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140136674 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151299829 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122199025 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121520679 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193521204 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226195663 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104471563 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233123735 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17189564 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224730252 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171135285 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107620893 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177703827 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131915309 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120694226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194212824 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169955103 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16384755 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196508731 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223692749 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17988185 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.2109681 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166431621 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174912706 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16593783 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155103771 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110489555 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16079263 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158264278 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123306814 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140323365 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107046462 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149897233 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143029387 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132836488 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198059593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169645912 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216980509 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158314168 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149233015 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180864327 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102026518 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203817038 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178997429 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145998373 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199576453 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192943496 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214433681 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118486631 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229881096 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093298942 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127021632 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141947342 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170018368 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133751331 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107737574 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162795253 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208247969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181782462 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172355416 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232496742 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17635204 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191939773 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095333671 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168966139 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183249305 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203396932 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155025296 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138704533 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152719355 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178785712 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155165161 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256043553 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168534139 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17698809 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234637719 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123600721 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131861766 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150686393 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179097559 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153398837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176200407 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146554584 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138868039 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161810502 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103496305 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187879681 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185546199 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164196754 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186387515 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149858228 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212278491 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100877331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161600014 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161395047 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166123622 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108388879 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174887901 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202307043 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147057211 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166984885 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216106566 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104660768 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308259032 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235609508 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194077318 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138940737 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154360246 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162679486 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163526771 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170311652 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179151372 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159593491 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187256476 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159045658 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137672123 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13815757 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122107605 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153280082 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133003781 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147735455 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177631761 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13861103 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188918412 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154969929 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159502783 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171783308 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150979949 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145317851 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121636579 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245935997 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183570921 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24066913 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150370378 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178972015 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206523908 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126429098 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132042023 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105751065 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178098634 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138050433 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191285296 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.214130311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1990543 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207890793 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17885565 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1395035 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093896193 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158205713 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169997078 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228145831 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148386028 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120271589 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231907767 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109027437 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1328218 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167083519 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287098725 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144825495 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194275776 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107839694 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279646345 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126503057 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105269953 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16388505 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237528541 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136725144 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151809028 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168219726 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162215476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163828383 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149153477 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217452073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210950453 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226678387 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183408029 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105404485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156709707 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203215971 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192695572 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156349214 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138321566 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207007662 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194962982 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223277695 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114466235 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196017585 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16741589 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131136625 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214595318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13384447 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206998158 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135311494 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191959409 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152856422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13920834 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177949796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.21451591 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114108402 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215388869 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183540944 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135206877 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10596238 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165056017 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206003653 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153935051 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100583646 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209725083 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098593794 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191234598 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262628159 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134269269 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155688593 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146924125 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108982058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153771315 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157952704 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140069421 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163728406 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203229618 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136366033 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190554862 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229202291 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172218827 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173971977 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14634872 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693806695 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133608327 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196534591 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147953904 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205021036 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152455156 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172795144 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159637406 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169718603 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222650806 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161912806 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233777882 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192429382 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177580662 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13269555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157983134 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155641827 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144438913 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154746985 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170613615 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161959941 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145311199 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179417519 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16497639 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135164144 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112570942 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226127357 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120737473 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214605774 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180838819 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110458804 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201124642 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186821675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133301554 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181498464 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23618975 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114246438 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149641898 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133965909 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151466173 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261239049 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096519123 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217801769 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185230537 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160194809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168338955 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147796496 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193239522 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15752375 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21394239 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115608604 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160393988 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157672913 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138606207 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130526637 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155975718 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168808549 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121500748 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188695628 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141010996 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194405168 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124727303 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145187043 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289371966 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177510229 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245258306 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.106758117 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137049122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163877149 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15012066 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176100375 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178028831 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136783103 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13557088 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136233833 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129641222 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112101729 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156033258 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190881059 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191745714 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206365758 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136434645 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276487596 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112769304 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156292336 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115609243 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105487207 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149773359 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146881568 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155856308 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192323771 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262010672 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147606839 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131470261 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149542879 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099053081 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135471204 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16288238 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166126287 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180474041 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144030895 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080835817 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156162726 seconds)
  done (took 82.492606072 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172962585 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133512418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147351104 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201915643 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176709171 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269360068 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211498796 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252780247 seconds)
  done (took 2.647790022 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094014849 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145849972 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156953905 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13296302 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091411807 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120321844 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.341557959 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132127667 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116370549 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121752895 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17288723 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093609192 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.546489941 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091474117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11928289 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108103744 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092369974 seconds)
  done (took 3.753677749 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.15088441 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.498274339 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.93727101 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193960728 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159314831 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117546624 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.706032245 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09567643 seconds)
  done (took 11.946124171 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114714243 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136023259 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123242875 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152244759 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140507509 seconds)
  done (took 1.764206891 seconds)
done (took 123.804370963 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097166373 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127468199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097342307 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129755252 seconds)
  done (took 1.528606963 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094513237 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070788598 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100442509 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075096224 seconds)
  done (took 1.428045173 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188867644 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.166331509 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382622219 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071776301 seconds)
  done (took 1.572562812 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114225148 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131744173 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104565835 seconds)
  done (took 1.445575331 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106592783 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129217932 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103100245 seconds)
  done (took 1.431312084 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106491994 seconds)
  done (took 1.199205668 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106888832 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136393356 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108729362 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135778002 seconds)
  done (took 1.58015096 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097761641 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126884158 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.112976251 seconds)
  done (took 1.42907785 seconds)
done (took 13.058841352 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102914566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.418340358 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412958878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110206923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720613046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379719491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.075360031 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145293522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164829734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093748817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138747205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671856931 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.066715568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373312168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.02730724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372042188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.68022622 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120917347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0910096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122158655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.059628079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092204733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121543671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092133537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711112858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.39718952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122420748 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371028315 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091722243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125499132 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382582197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123463258 seconds)
  done (took 17.056938445 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095401677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17323626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098715594 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123617869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123051491 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094763561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124237623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093705237 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178092343 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122249758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110431984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121068723 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125521508 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094544307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142872431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09193003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124696237 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092272759 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121202076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093784583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139731366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120225189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093841135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121331838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093602102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13585365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093711038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120799622 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119688403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09887024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126902161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093847432 seconds)
  done (took 4.795090511 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140945481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182385617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128644293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126626194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167908986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1242197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198357476 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11868331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182055963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12235658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139015097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092979329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156957981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122214933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11454394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121272452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09756179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122119547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093053227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123077411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140260289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092852544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12226647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093584068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122991689 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10734432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124048651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120872035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093521941 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127186014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100087236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123877138 seconds)
  done (took 5.142766013 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097329034 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125658137 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108786828 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137517096 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095430102 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125764927 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097428579 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124045656 seconds)
  done (took 2.007971595 seconds)
done (took 30.096033853 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110839538 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126923352 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106362824 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135082869 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102903217 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131690672 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091152249 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133796782 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13451328 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102607001 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137368052 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092231393 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122735863 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092157698 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134374468 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097198916 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132915686 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101631881 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133779838 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131990833 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094955512 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132726466 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102914677 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132902829 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103998146 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133552946 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136728013 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099431613 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122973234 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094138833 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123838898 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103587019 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123751385 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106528713 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127223309 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096646014 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123619377 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094137477 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132860285 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133255784 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099592548 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133262199 seconds)
  done (took 5.994227612 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107511643 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139148592 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10508331 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080995947 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116414332 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079986431 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137558371 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079180769 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109617101 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107754713 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073574937 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105818684 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078506757 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101258596 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076908802 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075754889 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110192648 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076179574 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075779108 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106225462 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079689904 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072516632 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107636722 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078983648 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074910624 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109808032 seconds)
  done (took 3.566831148 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100018331 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134227739 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114377721 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182987831 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160163024 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100334252 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131513742 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13918917 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108946481 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120223318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09660002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148887199 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109944677 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129201562 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092275157 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137506183 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136303181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094351637 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128495846 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113042479 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138379756 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102677814 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141398723 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133096321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093167135 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123040535 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097561305 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134477927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098066678 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131641425 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09663668 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124879217 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122723895 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105982669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125603905 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094560777 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142434096 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102266956 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131442664 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121165945 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101079027 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121055091 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112949526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161137618 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091995532 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128611746 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124004688 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102847456 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120945978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111535201 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130520226 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091670264 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124513274 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091789315 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121581276 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106457623 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124519522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094627099 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130672951 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127038238 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106224321 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125671414 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108975239 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121444675 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099976907 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121320326 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093560934 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120603596 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142564056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095208402 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161097354 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092919023 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123626859 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101119845 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129188121 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128139175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092960365 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137597903 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10262111 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12565343 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102243358 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125491327 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095071513 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140303502 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123976327 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09545877 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122086083 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099535857 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12440711 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094037986 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136064809 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092268516 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125572487 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110014665 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121716117 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122305938 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099790805 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125720857 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092547038 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135014257 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097866144 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123545681 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131819257 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093678578 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124451519 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103891015 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125950989 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091403294 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126803301 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098794053 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122603034 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093192003 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125734226 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093799307 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132636462 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128992541 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098362048 seconds)
  done (took 14.799528802 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228524426 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215094866 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.235621443 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263831601 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135623644 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114651166 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.241780473 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124862757 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124013227 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159501481 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.170876839 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181129812 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169836572 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181880162 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169710496 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092681526 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143061299 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163268613 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213946522 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257594919 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143279279 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103232844 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.199894786 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.12923898 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137249405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132351036 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109469852 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134012624 seconds)
  done (took 5.796206365 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109210095 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156089832 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098879 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144223392 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149539443 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093638729 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128252416 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094263443 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136342616 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136642017 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093295204 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13022039 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100382664 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132235073 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123824217 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102476361 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132450519 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094754554 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12641391 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096895589 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133553468 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101715588 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128083166 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121675903 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102811184 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121656104 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086771597 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144025208 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121945703 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11639441 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120939741 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102007413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136570543 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093397424 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122617576 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094825758 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125183868 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09528025 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125045624 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091575848 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122835006 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078129399 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122199548 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136953893 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099501484 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079955276 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129516471 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128265294 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094763441 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120259231 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095860237 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125221032 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096875532 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130735856 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096088985 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12400199 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096682946 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116277682 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.0999096 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124992917 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084549112 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1216944 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098081273 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118325524 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10179172 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127914379 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092731874 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125573085 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097844959 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129132285 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095979833 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129968714 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092163604 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126237385 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095820262 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130200353 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126063089 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092597986 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122526774 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093809311 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074646678 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12416845 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.07366432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126975521 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091885673 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123013733 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095187272 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129852215 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137757161 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095867284 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132072363 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093954055 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122360957 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096039714 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113192403 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096305464 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140327311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140863711 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09398466 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12207041 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107583083 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126688192 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092277147 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106797565 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102271834 seconds)
  done (took 12.973048097 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130446829 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153099422 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124303929 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112024591 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15697924 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156736986 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101787904 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130762323 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095419245 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142362653 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094230294 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131735689 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093331091 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137522443 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155872392 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103839987 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125824178 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1077948 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128308596 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169111655 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111876156 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142960622 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110782519 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125440576 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129325395 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110959226 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161037736 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107491064 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137103168 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142467643 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107899205 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161287734 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143179675 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098350081 seconds)
  done (took 5.476752394 seconds)
done (took 49.704808713 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206757013 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.412901005 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.192379638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.083205209 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.210747271 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.202263985 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.220942291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.19237636 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.241791933 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189548283 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.454755428 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.761271688 seconds)
done (took 58.489639066 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.34521878 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.351580923 seconds)
    (2/2) benchmarking "String"...
    done (took 1.481546882 seconds)
  done (took 3.957089118 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.765936859 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.134016158 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452385534 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191723694 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.19213812 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.48580582 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.908857693 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.563185335 seconds)
  done (took 28.045388888 seconds)
done (took 42.235248908 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.209454901 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.208731001 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234513783 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172670497 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304546599 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.22031257 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.498295643 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.201459283 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.220365701 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172143211 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.220985871 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.191906672 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.207175502 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.465100692 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199953229 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192918205 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.246819026 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.679228048 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.611071754 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206500607 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.230322166 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.237126282 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.214109327 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.21061441 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.240103825 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.205371993 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.198651725 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.195801157 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.751484089 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19290701 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216235745 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.650258652 seconds)
  done (took 190.326908443 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194876269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.302275628 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.358207671 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248594819 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.812053479 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40158982 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.367240619 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.858309805 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211852019 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.216874324 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.497762623 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195514788 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.557465775 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164425335 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.224287692 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.256835019 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.398435002 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.53880845 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.230611498 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.382708204 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.219391317 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.559088578 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.495902566 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.439956589 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.211042989 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.214616364 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.203062827 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.202439722 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.389292684 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.341724445 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.2420424 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.209007591 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.819417446 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.053071127 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.205235839 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.199403966 seconds)
  done (took 150.544601513 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.195974251 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.196074325 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196483484 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229095068 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.195627989 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.776803868 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782949186 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.709221247 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.632531456 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.589698386 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.485263562 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.200503859 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.290090532 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211965354 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197406359 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212615906 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238545964 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200050619 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.196978072 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.777914973 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.213773047 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.393753622 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.377067806 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212563427 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229125976 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586719118 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.197868185 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230069516 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530371676 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246748861 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.196851004 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.583787445 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.499044314 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.196687271 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.197557407 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311187681 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.199266155 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229933504 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198281121 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.478729566 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197826442 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199211372 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.201936658 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865300509 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.196783009 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.779716082 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201131837 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.139691242 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.198314888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198938969 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.481291395 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.910495942 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.21781583 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.197700097 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.200363176 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.199191125 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197959127 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.231213268 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.421433175 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.296632118 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215440949 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.202745137 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231520677 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198424238 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.248838779 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203252335 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.508029183 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258904588 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320120708 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.782159468 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203464916 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2980092 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32129459 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.200894754 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.199942761 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.19971558 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.19997211 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.311604372 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200375088 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.612820285 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.377810098 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.217741282 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.594148599 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30079709 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201326048 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.200062964 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631209162 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.205479264 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.201247536 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954342725 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297883437 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.200930566 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.200923276 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200929393 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.620174381 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.785605636 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.481170135 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205420639 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.500160328 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204376717 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.637372914 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761713016 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907338339 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205823307 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313936221 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378093468 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219457201 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.201434187 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200849223 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.200890411 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.598110719 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.206183493 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.259640182 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606254025 seconds)
  done (took 365.681626836 seconds)
done (took 707.6747538 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.813495024 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.80393195 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.911646756 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.795832912 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.761287141 seconds)
  done (took 10.215115324 seconds)
done (took 11.345193463 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.388349651 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.388750801 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264076594 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390955244 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23430938 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407369586 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.369647634 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.225319284 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302890574 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284323324 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.305445292 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256392369 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23745551 seconds)
  done (took 18.184175963 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50554968 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518246895 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268945842 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519154841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.243250361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507462005 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.404564161 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420218435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447154889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23770103 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219984027 seconds)
  done (took 16.422505863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.556446881 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530722633 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271799633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527163248 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246048479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.509956837 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40360135 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425102919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417897907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237453871 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217918486 seconds)
  done (took 16.474354479 seconds)
done (took 52.211833046 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.211906109 seconds)
  done (took 2.341968249 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246508133 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.40864243 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233950337 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.216909584 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215075431 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217530929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.218186951 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.214808879 seconds)
  done (took 11.102426194 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.210716758 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213843072 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.214886883 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211478456 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.214116066 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214435258 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.210296876 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213602365 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211535486 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.214257738 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215242037 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.211118248 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211249573 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211480175 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.211273909 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21423283 seconds)
  done (took 20.535054698 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.214181261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.212865055 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.212612247 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212369449 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21237649 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2120811 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213496312 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213208446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.212381167 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.212382014 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21254308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212179143 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213432166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.212577426 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.213302273 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213534441 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212929946 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.213459768 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216668292 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21425449 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.214901977 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21324864 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.213742652 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213861659 seconds)
  done (took 30.252008928 seconds)
done (took 65.363702052 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.830139722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.879677735 seconds)
  done (took 6.842830577 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.216429867 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.215866016 seconds)
  done (took 3.567126284 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.216350332 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.216524356 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215692973 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.216013127 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.215650552 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216642707 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215489951 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.216872199 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215893393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.21576187 seconds)
  done (took 13.29477491 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217120625 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216871359 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214284739 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.216865687 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216354806 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214799411 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216403446 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.216876357 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.2170212 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214853341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.2168244 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214844184 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215837184 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.215257277 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.21680616 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215362869 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.214896081 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215039034 seconds)
  done (took 23.020809078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.217667733 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.21757978 seconds)
  done (took 3.570026953 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.216140804 seconds)
    (2/7) benchmarking "second"...
    done (took 1.215055685 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21478934 seconds)
    (4/7) benchmarking "year"...
    done (took 1.215312428 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.215916317 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.215531095 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.215910155 seconds)
  done (took 9.643632755 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.218850813 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.400016085 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.503402214 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811616781 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219339443 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.221773105 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.068541848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.221975922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.223562815 seconds)
  done (took 14.025308558 seconds)
done (took 75.102493013 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.23940768 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.228619258 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.442945365 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.2153779 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.248808223 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.555638901 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.220184422 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.334932644 seconds)
done (took 37.624231314 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.226213565 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194446244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.999825954 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.194064894 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299564041 seconds)
  done (took 18.824634879 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274168869 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552000717 seconds)
  done (took 4.962899244 seconds)
done (took 31.151295473 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221115465 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.218994872 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.219366513 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.218089409 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.22187473 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.217397349 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.217355621 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217369071 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220275094 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22033903 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.220065903 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.219688924 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219942987 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.217219008 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217372857 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.216728173 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219899464 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.216369961 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.216249027 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.219743537 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217892873 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220670579 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217435269 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218539702 seconds)
  done (took 30.387544261 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.22102548 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221194854 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221458385 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.221058336 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.218410383 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.221147538 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221458877 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.218170829 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.221336167 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220742176 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.218425444 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.218337137 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.220199157 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219103014 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221457261 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220849679 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222245576 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2197522 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221341454 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.219401173 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222676035 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221208704 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219978056 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222533027 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22091483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219260214 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222530261 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220934918 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222234191 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.220997237 seconds)
  done (took 37.758796741 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226741578 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.228927745 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.222966174 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.222525955 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222624472 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223243755 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222206135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223127764 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22308906 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224112359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224120614 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.222730805 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222932174 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22329961 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223123494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223082378 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.223153719 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223073497 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225481273 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224263325 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224176453 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.223353376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.223685448 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223296634 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223714152 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22374427 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224063227 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223517918 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223707732 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224237332 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224610808 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225140053 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223085982 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224653913 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.225066513 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22387179 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228435468 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.230528743 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224229649 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224481965 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225312505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224343063 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224497981 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225119115 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225081254 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224290021 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.226109443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.2249939 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225025555 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225457713 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.225405749 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224790628 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225397942 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226085431 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226456586 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226164339 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226559781 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226296109 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22508713 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226483369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225531834 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226398779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.226934267 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22583131 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226886417 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227309096 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227406367 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226955523 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.227634797 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.227711912 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.227259816 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227799105 seconds)
  done (took 89.341449733 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227829738 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224912064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225341601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224781456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225458822 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228331021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225686038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228199604 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223795665 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228436505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227820763 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226163444 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225442761 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227824498 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228122611 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225349508 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229267653 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225218955 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.228054954 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229765318 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229007843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.225462578 seconds)
  done (took 28.13539309 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228208095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229724213 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225930108 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.228059735 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226135054 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229211852 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228325463 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230743059 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229263624 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226825857 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226026904 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228746149 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226052573 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226638129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226354822 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22843738 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228380686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228552107 seconds)
  done (took 23.247291499 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227229576 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.226908055 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229268867 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226542073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227244874 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23084824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228056671 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230620546 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228951363 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227003076 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230714752 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229446737 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.23039236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227240511 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230264452 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.226903317 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.230341926 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227732598 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230327012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227792465 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228619104 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230569009 seconds)
  done (took 28.179465051 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230020078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230074471 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229101728 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227736726 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228969557 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.230577636 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.230495685 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229174382 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233034382 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231749705 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229227068 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.23170158 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.231078157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.229448227 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22963669 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230356066 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.232040062 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230046126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231843164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229291859 seconds)
  done (took 25.752609453 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232517584 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232849695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233285308 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.232681006 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233058382 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232912254 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233858823 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233085186 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232987418 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234084612 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233495401 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.233607833 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233535979 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233577028 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233741063 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234510762 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233371589 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234175612 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234859353 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.233544592 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234606182 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233504872 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234799673 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235294686 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.234622624 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234182903 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235054596 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235247429 seconds)
  done (took 35.696134337 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234812067 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234905378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231566313 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.234145905 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232067227 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.231399072 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.23211979 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.232393911 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23396224 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232101936 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234390388 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234960535 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23455007 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.23545569 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235035774 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235470061 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235531979 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.233579497 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232235443 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232832344 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235520052 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233993458 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235126645 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232927287 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233349777 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.235591181 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233763971 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233640657 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235903374 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233731331 seconds)
  done (took 38.168198522 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253633957 seconds)
    (2/2) benchmarking "in"...
    done (took 1.254795292 seconds)
  done (took 3.659561885 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.233207085 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236859973 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235061697 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233536153 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234580019 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236254364 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236867596 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233194569 seconds)
  done (took 11.031422255 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236646636 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236571574 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237030379 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237422996 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.237925943 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.236391766 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244919855 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.257847179 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238405868 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238793124 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.24427595 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24523402 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.240507246 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23809444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.2376244 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240580435 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.239175902 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238064985 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238021068 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.239600327 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238150515 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240799051 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.23930488 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.236159855 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239935371 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.2493867 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26148559 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238248631 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238025808 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242381219 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239270528 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235671527 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238801871 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239386134 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.239733766 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238933068 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247711638 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257806993 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245122273 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260915064 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239942948 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.237081007 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.239984484 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240545185 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241431228 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.239610798 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240940122 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238250928 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238611372 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242452739 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.245115624 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24018388 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.238208883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243111554 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241011674 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24628624 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259288388 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.244233757 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.249941326 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.25161339 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.27379728 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265656838 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24245121 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.241752472 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25161714 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.26466366 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248093215 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.258460856 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.239314612 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241195714 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24746786 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27375844 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266985525 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.24258323 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241288137 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.243056761 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242102674 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242535399 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248573257 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.263693126 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.242565409 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243507671 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253065646 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27088246 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242412955 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.242719417 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.243568796 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242782235 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.244061597 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253612445 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.262716459 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.244616502 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241995481 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.243253421 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.243921215 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.244134895 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242626068 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244323106 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.241069832 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.243625726 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.243155086 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.247721262 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.252604504 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24346304 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243136465 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250222141 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.264012103 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243962631 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.250227507 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243836997 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244150946 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245540319 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.249843004 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.24329003 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247896512 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.252059717 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244627523 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244773353 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.244729348 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.245352332 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253641693 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269620749 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244852515 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244717601 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.249231644 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.256919295 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244663437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.247516837 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.245882916 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.242305531 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241925683 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246470344 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246356908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245389375 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245454597 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246752295 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.24282611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.246083306 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244928075 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245655929 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246756116 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.246113194 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246489535 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248062077 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.246584973 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247763205 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252427189 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.266259509 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.24811155 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.247383987 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.24402693 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.247134854 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247569832 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.246931322 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.247212885 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246504827 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.246554849 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246238293 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247024663 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.247705321 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247709856 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.24716804 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250977332 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247726835 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.251503387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.247005998 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.245743489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246444548 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24793953 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247018152 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.249018631 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.246370304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.251106544 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.255418533 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.249647046 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.248186621 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250829743 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248065786 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24821209 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249007259 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252251664 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25628005 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.249796428 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.256178453 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.269197449 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249341534 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.250330913 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.24606846 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24908643 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249093741 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.252855551 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258133841 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262478741 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274942188 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.250832416 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.254644423 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.250154007 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.254259421 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252615361 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249484214 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.250363526 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249110647 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250039676 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250715835 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251969594 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250194791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249856302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250958174 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.2502064 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.250315056 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251386043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250858288 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250800014 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.248434301 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.251188713 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.250746011 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250035006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.24890927 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.250356366 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250894362 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.251278134 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250835516 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.257122848 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.249249621 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252842818 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253247584 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250894391 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.251109428 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.252138191 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.253925292 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.251366497 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258578377 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271721246 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252349324 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258867073 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.271468414 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.25269252 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254578169 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.253056915 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250566806 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255545975 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260790451 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25235626 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252068574 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252692891 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252975737 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253371737 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259336825 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271442413 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.25184769 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253851496 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254191457 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.250726978 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255119161 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.252906543 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254617996 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255116542 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254262983 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254665102 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25492617 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.254370982 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253055894 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.254529109 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257568722 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262606534 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.260517467 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254732062 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255817011 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.2556996 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25905412 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.25487163 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255732085 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253716985 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266878792 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279974958 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261839482 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.27513575 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256835471 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2600912 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27530476 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258988909 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256031536 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256390665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255474219 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.255318182 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.253052148 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256161718 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256551798 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256171903 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257946378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.260471524 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.257882308 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.256541872 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.256507564 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256100527 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255504205 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256032664 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.257310109 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.25828104 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257956339 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.256219916 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.257024855 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262623609 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277422207 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257499664 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256238576 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25623762 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.257008389 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.258821105 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.257614963 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260262059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.264937033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.260042433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.266006636 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258664005 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266974696 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.256971966 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260742537 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265197387 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.255535946 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.257033584 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257588016 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258212721 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265440746 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.278995652 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.260143544 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.262991942 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258571902 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258675684 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.260058755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259427784 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259825074 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258348853 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266987025 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.277994138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.263092378 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26121002 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.256764944 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.259308217 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.260268925 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.258347043 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263416793 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.259272547 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260671228 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260272944 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258882265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260600646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260666296 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260467189 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257919263 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.259721928 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266952554 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.281643931 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26374231 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.260683017 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.26745841 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280098007 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266961972 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.28050763 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.260710237 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.260798454 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.261786862 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262054084 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.260455144 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.262161798 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261275783 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.261970285 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265719248 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261276986 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262024091 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261181042 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261642879 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.260128977 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272748159 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285260665 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.262788918 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266785727 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.259099361 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.263584287 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265923348 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262101507 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260974132 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.265712388 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273887357 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269845886 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.263118144 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263332426 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262836071 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263843797 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26350025 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.263827254 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262811384 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264256756 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263786614 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262951775 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26472727 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262793314 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263495114 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264459633 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.264748061 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273811212 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284201671 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.264434488 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263653289 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264704664 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.264703963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263966575 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.263978835 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264481153 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265770768 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.266325027 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270974536 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27211702 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267530589 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26428635 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.264690479 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264824022 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.264968694 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265097553 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.266055526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266070133 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266636354 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264766938 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265866774 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.263357906 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.265995807 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.265270036 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265755221 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268129263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.272397497 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265159849 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263214917 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265235371 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266731801 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263518089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265632448 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274245646 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289746383 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276641961 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273903685 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.270045501 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.266998339 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269036611 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273168333 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266393225 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266989997 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266960214 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266762205 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.267281473 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.269986527 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267099933 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271849177 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.287043682 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266633914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274704478 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.286970544 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267255111 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268500285 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271532939 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.266623323 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.264737543 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267664686 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266143978 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27400744 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287607432 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268921114 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269180685 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266337991 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.269563624 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271631152 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267858648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267178121 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265629197 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.268345325 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267873007 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269022113 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267765604 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267190808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267123989 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271551907 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.274282047 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.266963426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269713483 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267700929 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268480864 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268700787 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268669625 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.266634815 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266821781 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267980756 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269796592 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26876625 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27101681 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267722997 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270637849 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.272225514 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269559563 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272402455 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.279654102 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276812519 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266974688 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268977565 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269403276 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272291754 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269732918 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27147313 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270791702 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271473434 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.271397075 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269600696 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27061185 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.273535737 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285946004 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.29033095 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270776838 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.271216774 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273757776 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.271618731 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268247604 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.272156719 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272632363 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.275641964 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277185573 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271187151 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276180655 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290688367 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272589832 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275162605 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.275079856 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278106101 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274208694 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271420327 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271696967 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277324056 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28926929 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271925329 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281487078 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301222041 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292780581 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272992853 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.2727279 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271060524 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272475449 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.272944683 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271925154 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272952264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273348624 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.272580467 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273936638 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277851566 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273395692 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.274186399 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273987876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.27259838 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27416805 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.271507177 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273176165 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274074988 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273411091 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273640158 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273251625 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.273292311 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287288241 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.301669684 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274864095 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273969232 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271908286 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276557442 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276931595 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284700056 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.282266707 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.274892364 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273983061 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.275987002 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275595825 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.274706036 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.27432513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274589679 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27482725 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273514917 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286744333 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302163055 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.279988927 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.274790353 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275219106 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.276454244 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275084357 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276013219 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275174139 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275605946 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277687788 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27940005 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.276328593 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275944618 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278935712 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283322219 seconds)
  done (took 751.867597548 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273746759 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272854321 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273164873 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.273984051 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273748365 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273792677 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273153069 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275050898 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274478249 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27425073 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274087853 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274776283 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274215246 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274693298 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274438273 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274464228 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274218268 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274426292 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274247503 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275213358 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.274745264 seconds)
  done (took 27.946575805 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.278216276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276191927 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275778064 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.278476243 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275376149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278275007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275138905 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278252671 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27882464 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275714476 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27924504 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278216812 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.275707052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275778121 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275404356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278138681 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279948898 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276602361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27862867 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276847018 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279716347 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276674202 seconds)
  done (took 29.291619076 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279587439 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.279608827 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.278225443 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.277653117 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28030103 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276659449 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.278672465 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.280349758 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.279683767 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.279856724 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27861057 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280438149 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287055543 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.284876848 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.281380686 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279650962 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.42413961 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279842992 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279551747 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279114769 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.27668811 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284454729 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.298850231 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278134283 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.278783571 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.280687601 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280619232 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.280286954 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280629488 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.28050789 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283635766 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.280795141 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280100238 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.282402682 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279164197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28174584 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.284924523 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281877813 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.279904928 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.28216655 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291598897 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.302328459 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.281632849 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28775826 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.303363787 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281825465 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284561392 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288416925 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277827934 seconds)
  done (took 64.17382582 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.281348834 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282741311 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.27878549 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281912393 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281879942 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.281623333 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.282599221 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.28179112 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.279453615 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.279268837 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282055149 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280119912 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280432168 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282344326 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282717079 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280192935 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.280380704 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280428726 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.280086644 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279869755 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281187675 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28381444 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28361153 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.281289584 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283882629 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280645911 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280165977 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282984733 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281847722 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281004691 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.283990421 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284318223 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.28320963 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283331132 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281768179 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284046724 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283863424 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282558109 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285181766 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282128986 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.28488373 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284023674 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.284227737 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284977961 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282108301 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283421241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282318132 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282079395 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.282707723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285232835 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285153957 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.282930333 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285155814 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.28290284 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285808071 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.285832691 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.283059841 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282861679 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285394523 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.287816143 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284414235 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285427745 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284210919 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.286082639 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286012189 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282557732 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.284977052 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28608009 seconds)
  done (took 88.433723894 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285872772 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.284340818 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284960393 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285074111 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285945448 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286138305 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.285720191 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.284958483 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285197794 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285392914 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28625513 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286048135 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286512056 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.286981567 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287101365 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285991351 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285909294 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286347262 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.286463325 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285971668 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285883817 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286232597 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.286192521 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28572594 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287205146 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.286499988 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28599432 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287143507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286813106 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286279299 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287407285 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287227363 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287338075 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287847625 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28638923 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286474956 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287132016 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286778906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287410432 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287539858 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.2867053 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287026908 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287526587 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287475671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287244092 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287629464 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286975994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.288620485 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288878876 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28746341 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.28826598 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287331512 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287252144 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287973749 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.288131434 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.289210396 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289105738 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288879293 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288697024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289007193 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29010388 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.290701851 seconds)
  done (took 80.993080241 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290078122 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290783561 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286765347 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287789466 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290328979 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287830429 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.290233662 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.289865612 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29078804 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289415806 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29103626 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287208209 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287885878 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291464391 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287559051 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288541955 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287709515 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.288142512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.290258749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289029136 seconds)
  done (took 26.984177948 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.288980477 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29149381 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288618929 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.290208666 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290858439 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288809733 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291344457 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291879552 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289347665 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292058267 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29189308 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291503782 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289139114 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290183133 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292912437 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.289089025 seconds)
  done (took 21.851422531 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.288709995 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.291903419 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290772813 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.290787396 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.28924952 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.288833958 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292342853 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289498664 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.289417831 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292927023 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292458059 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293460437 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.293168318 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.292994579 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.289978352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.292938848 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291240432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.290137022 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292828589 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292936941 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291970681 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290791653 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292853822 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293144819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291175577 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292073826 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291177576 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291646892 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290576458 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29436565 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.291653199 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292422442 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29148855 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.291439482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293784805 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291591954 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.293816233 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29453139 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294027326 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294213392 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293312693 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291758664 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294709609 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.29458793 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292388019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294803126 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291902838 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29243552 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291769335 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.292373547 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294342773 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294411242 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295228153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296528858 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295896413 seconds)
  done (took 72.286553667 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295265299 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295626478 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292995742 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295741733 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.294671093 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.293427443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29501199 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294646855 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293077688 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296457582 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295080975 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297666407 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294232929 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297254699 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29487839 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29644992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293817066 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293935502 seconds)
  done (took 24.517215832 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293751188 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294364864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298853304 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293996751 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293940701 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297888375 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294414953 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296846271 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297001698 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295690424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294431609 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297528541 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297433239 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.297741653 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295104849 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294740655 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298487453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29827969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.294811494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295160065 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299054092 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297057184 seconds)
  done (took 29.72471982 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.296323637 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.2951122 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296539798 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.312576088 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316086618 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.319594119 seconds)
  done (took 9.045107322 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304914435 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298769353 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295362922 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299528892 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29857911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295424563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295900728 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295021701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298483552 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296813904 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297049314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299419139 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299286183 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296311218 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299187099 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299043824 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297239842 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299175617 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297375906 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301041141 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29661899 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299779686 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297469629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297616432 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297515895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297536407 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299639551 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297497294 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297368326 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299955127 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29948286 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297766811 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300008531 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298123232 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300997222 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300862953 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297967146 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30120984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299964964 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297814513 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30073011 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300929816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301296081 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298226019 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300578081 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298417768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298365093 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299312198 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298677435 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302940312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302747021 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29865318 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301285619 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301355077 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302018837 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302383748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299252624 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299525327 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302256042 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299755549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298814704 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301555048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299264386 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300360271 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302583633 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300608349 seconds)
  done (took 86.984826039 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300111967 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29972161 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299675211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30094025 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300084632 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300576149 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30065859 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300328301 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300514593 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29989442 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303752304 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300084204 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300546499 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301687107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301472165 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301014018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300778342 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300810345 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301586376 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303357143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301941981 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302246433 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303281466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301435462 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301352937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30471041 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301009029 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301714349 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301612466 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301130902 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301966055 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301667977 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301662674 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301490241 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301693716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302017652 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302486216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302211428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301948013 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304757038 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303176835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304851 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302750848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303102119 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302452689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302631723 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302393265 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303660455 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303178918 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302949465 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303057072 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303470938 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303353996 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303314319 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303674559 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303252522 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303302843 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303610445 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303500075 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306271361 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303197393 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303673784 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306570814 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304120548 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304366137 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304522352 seconds)
  done (took 87.169752498 seconds)
done (took 1753.767548263 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.468278732 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421909315 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304481725 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.305735986 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.304654096 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328403902 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.304431095 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.305315088 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304942807 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.304865462 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304448149 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.521292313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.315005977 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30552551 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.30406419 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399947521 seconds)
  done (took 42.721663377 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.334926873 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.311760444 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.429770221 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331363323 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33392678 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504679739 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.369964494 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31051381 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492659228 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354544737 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.974329326 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335453502 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.310638246 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.49402702 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329134406 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.505930955 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574790196 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.98235786 seconds)
  done (took 30.497937704 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793487419 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.303170742 seconds)
  done (took 9.315516308 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.330920962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.31044203 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.311623793 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.309828924 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.30259469 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.303182029 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.309386052 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.305695521 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.287863989 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449996632 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311956445 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322114441 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332104141 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.312300743 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309879537 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35067316 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.52084857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.311409807 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308572154 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317266049 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312514145 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.405508169 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.35528644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309802745 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.446049898 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.29481334 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.319388389 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319871902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.496477365 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311505562 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310381526 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.311741348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.31358316 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252339992 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.760873958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.331703342 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.337192138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320831378 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311323811 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472930783 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313161727 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.319794049 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.3051132 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.754243661 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448762227 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434235009 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.594527354 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332869732 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314691414 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378011578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314460064 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.314414977 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358711321 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.108175012 seconds)
  done (took 111.432908542 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.312324359 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.699177838 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474842984 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330908849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.954632937 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998977077 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.327027615 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.618245643 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362167979 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307434686 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.598628907 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.833997746 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325232085 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.33264071 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.955242485 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.325397701 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309557414 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.085668446 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.32551558 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307636151 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82434519 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.30873218 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327442383 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.570540401 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.34612726 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785587155 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.911299025 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.777918851 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330778645 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30849271 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79876658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.334626935 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.318998388 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309745099 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.580370792 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689920838 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.686100752 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.327861641 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.33283495 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308459069 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.34088284 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780669904 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689015796 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326922705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327924795 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.803929998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328480992 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311612934 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.311885483 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513584652 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.963745957 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.309865317 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.895136891 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.310956451 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.615159764 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38737722 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.386063076 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814917234 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328156179 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.403913925 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37061292 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309369887 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.316504867 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311566226 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.31105474 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.681637676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.675045518 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312837738 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.678765673 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809221961 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.328683876 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85389863 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.232680164 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328703295 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.372253004 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312923299 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.897521709 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825300785 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.333364828 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.310844567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666987621 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331380831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603201931 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.341382312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312176035 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837180428 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.314336145 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.369921795 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.317185107 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.339896933 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.935538412 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316182615 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589782842 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.340771683 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.313337294 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.317580815 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.35344395 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.326783502 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.312761974 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.315973891 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855252488 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.330017937 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.449889646 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329770661 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313214405 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319097361 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.314600557 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312000181 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532642962 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.836266235 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.336119247 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313907572 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.314440028 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.338363558 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.577327579 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.31791623 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.642643687 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.333984473 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317113361 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313905872 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014168698 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338466495 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314618072 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.333721995 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213840351 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521937047 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333014181 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.334193065 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31512852 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331423803 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.699897717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334999061 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.391523026 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320298561 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041403538 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.360916028 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.336854935 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.616703794 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.318675614 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276206557 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.335665423 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.31557313 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.626922066 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593171675 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.484868689 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317073921 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.334388142 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.029839693 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.387265217 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454553998 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.337750479 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.393784946 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514502893 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495033326 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317552939 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.914655819 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.317057495 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531870453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31682919 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618479499 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825904347 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.33500334 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323257165 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.040023726 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.055184042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.117762692 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.318859387 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602810423 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.307507719 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.796978606 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.317196039 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316941161 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.763022694 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321056657 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318234526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.318666903 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317615097 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.464588896 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490718583 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.976462503 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323394576 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.790857838 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345649421 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.322737704 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324711788 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318913485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.665336217 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.414000435 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.323942921 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.368254972 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320860557 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321118281 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812735576 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.275740978 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.317519211 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.470944831 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975104286 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336695741 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.319467372 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.009530578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.582293436 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851972639 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.386045906 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648610298 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.342558954 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357965689 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.911700444 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.373246074 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812706318 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.337958518 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.31963184 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92902747 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.338153904 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.445217839 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.319499399 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.321813125 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869765161 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.337916009 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.322742422 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.689301451 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340535111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589977995 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320761181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35281927 seconds)
  done (took 1109.061980077 seconds)
done (took 1304.248776766 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.319548008 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.319816487 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30340715 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325011466 seconds)
  done (took 26.504562353 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331555979 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.327873307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328162272 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327915744 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.331655206 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326946129 seconds)
  done (took 9.211705983 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.661601823 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32146103 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326485615 seconds)
  done (took 19.547014313 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.546402683 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.681818177 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.681733949 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.682855414 seconds)
  done (took 10.831406623 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331370876 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330857787 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.331784841 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333785075 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334814069 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.335855738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.334228161 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.334228602 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336088011 seconds)
  done (took 13.242535556 seconds)
done (took 80.576785576 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.997784468 seconds)
    (2/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.965399855 seconds)
    (3/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.468791169 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353483381 seconds)
    (5/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.304786438 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.611423745 seconds)
    (7/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.809460937 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.366665634 seconds)
    (9/286) benchmarking ("sort", Float64, true)...
    done (took 6.346307747 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.353466695 seconds)
    (11/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.417860406 seconds)
    (12/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.14496721 seconds)
    (13/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.996068405 seconds)
    (14/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.573627223 seconds)
    (15/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.055873237 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.342292036 seconds)
    (17/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.457242298 seconds)
    (18/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.691447405 seconds)
    (19/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.530305987 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.233186331 seconds)
    (21/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.457854254 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.566021169 seconds)
    (23/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.355755319 seconds)
    (24/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330927645 seconds)
    (25/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.340757713 seconds)
    (26/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.354166459 seconds)
    (27/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.306280923 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.33998872 seconds)
    (29/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.186996919 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.428968889 seconds)
    (31/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.326688058 seconds)
    (32/286) benchmarking ("sort", Float64, false)...
    done (took 5.697216354 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.307085589 seconds)
    (34/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.585966742 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.263878261 seconds)
    (36/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.366649539 seconds)
    (37/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.339355651 seconds)
    (38/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.896383626 seconds)
    (39/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.308470503 seconds)
    (40/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.561277073 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.764844049 seconds)
    (42/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.002300437 seconds)
    (43/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.334323944 seconds)
    (44/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.47016637 seconds)
    (45/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338086284 seconds)
    (46/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.411166254 seconds)
    (47/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.161317754 seconds)
    (48/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.364718055 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.597264997 seconds)
    (50/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.333933125 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.246790713 seconds)
    (52/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387794719 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.309797124 seconds)
    (54/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.314594751 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.963841373 seconds)
    (56/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.328672473 seconds)
    (57/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.345016928 seconds)
    (58/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.577970838 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.104679376 seconds)
    (60/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.759718387 seconds)
    (61/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.230658589 seconds)
    (62/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.257274917 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.324932289 seconds)
    (64/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.350160435 seconds)
    (65/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.431322248 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.316806816 seconds)
    (67/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.356790545 seconds)
    (68/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.33234526 seconds)
    (69/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.310749337 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 5.594451708 seconds)
    (71/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.337365576 seconds)
    (72/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.348482313 seconds)
    (73/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.479287625 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.571175373 seconds)
    (75/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.33340879 seconds)
    (76/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.703026716 seconds)
    (77/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.413248257 seconds)
    (78/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.355786491 seconds)
    (79/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.360984316 seconds)
    (80/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.454355303 seconds)
    (81/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.347854944 seconds)
    (82/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.365745594 seconds)
    (83/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.178212774 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420909572 seconds)
    (85/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.330449782 seconds)
    (86/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.863284181 seconds)
    (87/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.336480952 seconds)
    (88/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.623881984 seconds)
    (89/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.379116387 seconds)
    (90/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.365192492 seconds)
    (91/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.311928338 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.350634905 seconds)
    (93/286) benchmarking ("sort", Float32, true)...
    done (took 6.34400701 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.548175694 seconds)
    (95/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.202181017 seconds)
    (96/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.018997284 seconds)
    (97/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.736715385 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.77473483 seconds)
    (99/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.330467675 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.984567532 seconds)
    (101/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.536406111 seconds)
    (102/286) benchmarking ("sort", BigInt, true)...
    done (took 6.356847148 seconds)
    (103/286) benchmarking ("sort", Bool, false)...
    done (took 1.858203285 seconds)
    (104/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.849352029 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357423228 seconds)
    (106/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.312902243 seconds)
    (107/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615810293 seconds)
    (108/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425225673 seconds)
    (109/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.855347636 seconds)
    (110/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.021325474 seconds)
    (111/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.338870159 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.1579817 seconds)
    (113/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.313863845 seconds)
    (114/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.70398219 seconds)
    (115/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.590021813 seconds)
    (116/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.313087035 seconds)
    (117/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.358904134 seconds)
    (118/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.334162194 seconds)
    (119/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.359549563 seconds)
    (120/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.435020947 seconds)
    (121/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.432644973 seconds)
    (122/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.45184732 seconds)
    (123/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.408692431 seconds)
    (124/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.207249929 seconds)
    (125/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.756072941 seconds)
    (126/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.419328768 seconds)
    (127/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.93000513 seconds)
    (128/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.153076066 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.899360357 seconds)
    (130/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.333844468 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.155255802 seconds)
    (132/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.326404383 seconds)
    (133/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.366884809 seconds)
    (134/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.360165101 seconds)
    (135/286) benchmarking ("sort", BigInt, false)...
    done (took 6.33437233 seconds)
    (136/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.208945318 seconds)
    (137/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.875761498 seconds)
    (138/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.231626669 seconds)
    (139/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.43354569 seconds)
    (140/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.443464217 seconds)
    (141/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.419745775 seconds)
    (142/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.324291939 seconds)
    (143/286) benchmarking ("sort", Int8, false)...
    done (took 4.365698074 seconds)
    (144/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.335688006 seconds)
    (145/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.354923647 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361499407 seconds)
    (147/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.315373576 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.778196504 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353543805 seconds)
    (150/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.994807886 seconds)
    (151/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.73910511 seconds)
    (152/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.33050041 seconds)
    (153/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.008278174 seconds)
    (154/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.368573243 seconds)
    (155/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.12039346 seconds)
    (156/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.73560205 seconds)
    (157/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.754905505 seconds)
    (158/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.316675273 seconds)
    (159/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.453873943 seconds)
    (160/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.31624702 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.332035033 seconds)
    (162/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.423433373 seconds)
    (163/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.31721416 seconds)
    (164/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.317921515 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.805423177 seconds)
    (166/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.317419571 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.353993958 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.163861906 seconds)
    (169/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.364275636 seconds)
    (170/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.125019404 seconds)
    (171/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.920942785 seconds)
    (172/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.316509517 seconds)
    (173/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.002594206 seconds)
    (174/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.380699627 seconds)
    (175/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.397607696 seconds)
    (176/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.440159842 seconds)
    (177/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.999866041 seconds)
    (178/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.364254411 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 5.441759338 seconds)
    (180/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414062362 seconds)
    (181/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.402859009 seconds)
    (182/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436161196 seconds)
    (183/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.030138483 seconds)
    (184/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.320926576 seconds)
    (185/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.868114785 seconds)
    (186/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.422941552 seconds)
    (187/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.324050719 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.337960079 seconds)
    (189/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.430841013 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.002872172 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.322740127 seconds)
    (192/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.563090193 seconds)
    (193/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.844350521 seconds)
    (194/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366310428 seconds)
    (195/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.319022318 seconds)
    (196/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.364808828 seconds)
    (197/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.365543363 seconds)
    (198/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.721951446 seconds)
    (199/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.861657683 seconds)
    (200/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.446056855 seconds)
    (201/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.198992047 seconds)
    (202/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.526087461 seconds)
    (203/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.255349978 seconds)
    (204/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.891760654 seconds)
    (205/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.494258434 seconds)
    (206/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.920482417 seconds)
    (207/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.36320174 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.333851994 seconds)
    (209/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.369079044 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.317348878 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.381522338 seconds)
    (212/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.320520845 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.082849311 seconds)
    (214/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.339316877 seconds)
    (215/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.34274021 seconds)
    (216/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.794085147 seconds)
    (217/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.320099836 seconds)
    (218/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367326199 seconds)
    (219/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404342319 seconds)
    (220/286) benchmarking ("sort", Float32, false)...
    done (took 5.365899875 seconds)
    (221/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.155261982 seconds)
    (222/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.429574213 seconds)
    (223/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.336672465 seconds)
    (224/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.119046947 seconds)
    (225/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.742153205 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.82189126 seconds)
    (227/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.321742309 seconds)
    (228/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.396726127 seconds)
    (229/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.468616412 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.56622672 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.37951303 seconds)
    (232/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.56506359 seconds)
    (233/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.737150332 seconds)
    (234/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.742053441 seconds)
    (235/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369121956 seconds)
    (236/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.829837829 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.373308642 seconds)
    (238/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.890377496 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.727924301 seconds)
    (240/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.342092543 seconds)
    (241/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.786241621 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.323112608 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.370167911 seconds)
    (244/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.326712211 seconds)
    (245/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.392925963 seconds)
    (246/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.630991028 seconds)
    (247/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.375253009 seconds)
    (248/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.414341736 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.024470109 seconds)
    (250/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.080004099 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.791093954 seconds)
    (252/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.475873127 seconds)
    (253/286) benchmarking ("sort", Int8, true)...
    done (took 6.342987582 seconds)
    (254/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.379883502 seconds)
    (255/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.881256662 seconds)
    (256/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.516271836 seconds)
    (257/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.44671194 seconds)
    (258/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.609355867 seconds)
    (259/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.427161902 seconds)
    (260/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.352486921 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.426825375 seconds)
    (262/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.906022395 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.333745241 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.463876951 seconds)
    (265/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.149312738 seconds)
    (266/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.028825095 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.76605676 seconds)
    (268/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.352179154 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.323267843 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.324514259 seconds)
    (271/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386464483 seconds)
    (272/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.144487733 seconds)
    (273/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.345859951 seconds)
    (274/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.157417028 seconds)
    (275/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.454143508 seconds)
    (276/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.622276772 seconds)
    (277/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.908781154 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.378745728 seconds)
    (279/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.340648236 seconds)
    (280/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.329534303 seconds)
    (281/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.247291915 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366763156 seconds)
    (283/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.325495568 seconds)
    (284/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.357009867 seconds)
    (285/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.694507996 seconds)
    (286/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.427784524 seconds)
  done (took 948.133535038 seconds)
done (took 949.377175872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.378760356 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374058666 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355977972 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378314589 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.466867645 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.382988957 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.366781186 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.35985988 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.403655624 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.40629262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.355591309 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.380573965 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.357005997 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357468353 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.355729944 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371628446 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.482855788 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.357708975 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.374133942 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.368023586 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372829838 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.355448296 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405910334 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.381565275 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.360809436 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360577226 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.360633467 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.376025898 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.469046173 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.360471574 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360994228 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.370853837 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.485309233 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355420196 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353164938 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375810408 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.368612476 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.368455324 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.362731062 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.388291161 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.925653639 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.375974024 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358754074 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.35907103 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.359785453 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363340952 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.358313484 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.366022725 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372447387 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37282672 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.913454584 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.3914933 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.362154622 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.360154708 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.370069068 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.358950871 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.363590479 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376728175 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.378067738 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376877692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.472146474 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363571459 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361764023 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374470172 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.366582004 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.949694963 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373877341 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.364078835 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.924379801 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.38265466 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.949237039 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.385868482 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.362588751 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.37358519 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.391221031 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.48492788 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.355869971 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36171727 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.368455481 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359887531 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371210222 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.376113845 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.365006729 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.363399936 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.375681977 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.386537249 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372129531 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.362403877 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371385753 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.379717723 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.36835664 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.373659984 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365690984 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.357119935 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372460155 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.365679208 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.364937672 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.363865406 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.366849882 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.373626924 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.925465663 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398064718 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358768591 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.358609983 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.362313795 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.376361395 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.925289236 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.381169882 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383369244 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410630137 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363803433 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.475484177 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365533243 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380266028 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372718011 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.366127145 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357689092 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.476775138 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.917823817 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.396345928 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.366228326 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.361080997 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380575259 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365584001 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361904067 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.490504334 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.365307099 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.379673368 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.484087113 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374598333 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396117533 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.362324825 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.368524896 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393338189 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381115503 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395715734 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367659426 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381491807 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.380650842 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.36165306 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.376666819 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.376562301 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367506225 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.371852048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.360833955 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.393693905 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378276354 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379371899 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386575612 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.485719498 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.363033447 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.478621134 seconds)
done (took 231.472148261 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427835471 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.362259433 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.454929542 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361392325 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.468300441 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.46705647 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.359831341 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.360534635 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.3605806 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738459865 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.360783166 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359500167 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.362542457 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.359388833 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448076848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362225873 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360162629 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.702522775 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.364120135 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437267383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.356268658 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.361756025 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362538306 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.746492718 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.362135143 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.359406155 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.438335473 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.363935905 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.711341675 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359487729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.363636764 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.711681003 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.457710731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.382090304 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.373996507 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.371718358 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470245814 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.38531009 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.447455822 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.446229825 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.45800821 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.403545827 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.358700336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.357523513 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.366465735 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.366210697 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.363191962 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.393005319 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.363193057 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.362642417 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704586863 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.374433643 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.373663008 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.362732846 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.363294661 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.385342015 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36394537 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.366333548 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460307425 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366778675 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.431184679 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.748672564 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.741759125 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.367012245 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.359688102 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.365015611 seconds)
  done (took 150.507753725 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434615948 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.439589109 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.483888854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.385149968 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419218193 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.489413215 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.384771549 seconds)
  done (took 11.3094656 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.372919069 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369000466 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41594438 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.417252845 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.367975593 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.547961431 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36859312 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.380357892 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.365537376 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419402287 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37002962 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.368625544 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375157246 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.367644874 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416219696 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.380159853 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.4855191 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.369374123 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.369083933 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.518476732 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.366513804 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.374967917 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.418811472 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378933785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.370217811 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.373116908 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.184866902 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.367422533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.365790154 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.368663608 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.366405599 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.443716028 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.369798949 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.366544385 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366847792 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.483385288 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36884369 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36737927 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.369226926 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.365147742 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368246002 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.369732786 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.369712857 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.367449552 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.369711708 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.391582734 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369107271 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.369981065 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.368783562 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.37020132 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.419694256 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.370529133 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368676906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367766662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.427133796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377092514 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.371408872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.367573996 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.372160019 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.368362681 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52158914 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.41818871 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.370834971 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417361679 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37156984 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372306851 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.371744991 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.371172188 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42437601 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.371099447 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416974972 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.367830652 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556677481 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.393390349 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375749796 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372222388 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.373464907 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371465367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.367027754 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.376004712 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368731443 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372921916 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.376738932 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369913767 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369356987 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.537094892 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479336682 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.369288804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383212702 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.378178463 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.369674245 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424160292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.373047245 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.371409277 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424417311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.491643777 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425722959 seconds)
  done (took 157.14980641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376950066 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380602678 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375908909 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.395293869 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.393624435 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.373818492 seconds)
  done (took 9.574790226 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.375789309 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.375391442 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374360996 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373921287 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.373207977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.37390732 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.373814528 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37524296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.377047008 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37483306 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375583317 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.375243229 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375608084 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.374339467 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.374182037 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.374080396 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.374344635 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371955824 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374496055 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375593811 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468624293 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.374353305 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375054606 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.376101092 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.379918925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.375545199 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381785617 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375659207 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.37515543 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.383630895 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.396716768 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.376484817 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.376721226 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.382165578 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.379483428 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376638686 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380458992 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.378355328 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.373495692 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.377430932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.378337183 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.37674483 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.37753086 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.378242811 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.378011151 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.3836135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.383411197 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385026508 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.377491717 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37845656 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.379644421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.377885944 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.377878167 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.379392964 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.379037431 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401251216 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.383753318 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377291847 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.376962866 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.379389325 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.380628126 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.379086271 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3797785 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382149427 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.385897367 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.380808911 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37901574 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384682941 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379708052 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379312951 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.380048815 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.376551743 seconds)
  done (took 101.615872983 seconds)
done (took 431.428775971 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.506476829 seconds)
  done (took 7.79134785 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.553113775 seconds)
  done (took 7.840937674 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.700078908 seconds)
  done (took 23.990930417 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.457261792 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.489238094 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.401541962 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.376070311 seconds)
  done (took 27.009402789 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.411805886 seconds)
  done (took 7.696561281 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.376681306 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.380825948 seconds)
  done (took 14.044413455 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.535985947 seconds)
  done (took 7.82156052 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.396971547 seconds)
  done (took 7.68838326 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.398245502 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.394057691 seconds)
  done (took 14.091827055 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.351997759 seconds)
  done (took 7.637826568 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.967810198 seconds)
  done (took 12.25387525 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.373180086 seconds)
  done (took 7.661026538 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.398597668 seconds)
  done (took 7.684840216 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.11127525 seconds)
  done (took 10.397428104 seconds)
done (took 164.898486819 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.374401152 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375102196 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.374329137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.37425504 seconds)
  done (took 26.783970081 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.414767808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.415181342 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.416004767 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.425622614 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.417258479 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.416105008 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.407666314 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.42195853 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.425971187 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.418387571 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.417685403 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41688824 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.416214319 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407575007 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.417217296 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.417512952 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.426766737 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.416611645 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407250554 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.418701008 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383422873 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.427211788 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.420043523 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383951723 seconds)
  done (took 35.242447203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.906548734 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.453699338 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.537703912 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.435687958 seconds)
  done (took 7.621743384 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.434609162 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.43656747 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.448980763 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.491770827 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.513555523 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445919603 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407499855 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406714326 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.391146398 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.43746562 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.512996787 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.463305437 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.521088505 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.384575112 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.57082159 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.382790142 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.384871882 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.437167244 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.489550686 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.508337545 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.384640836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.437034997 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.4446977 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.45345605 seconds)
  done (took 36.078489881 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.383925578 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.40211834 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.383752405 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.383105731 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.392452721 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.383534971 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.384552606 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.386400472 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.384834006 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.390017735 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.383603495 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397493644 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.384012375 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.384458104 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390414078 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.385377794 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.390680286 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.384236163 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.384251594 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.390979654 seconds)
  done (took 29.040573664 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.377483881 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.231954359 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.729840609 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.634457814 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.377934248 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.384431967 seconds)
  done (took 28.02706264 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.463368652 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.625153339 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385212021 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.784918194 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.878146798 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.40468867 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.385487981 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.650377795 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.01072642 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.009605334 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.449600049 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.458571012 seconds)
  done (took 20.798377228 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.378711278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.379237795 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.383710594 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414764964 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.446039711 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.409496326 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.392534669 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.379689446 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.446754032 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468318654 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.408712293 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.448555726 seconds)
  done (took 38.249356753 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467792141 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432208572 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.459644742 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466289105 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106823899 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594003343 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.396949188 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117460982 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404280874 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652814921 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386812552 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474488661 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63709774 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382707617 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381286824 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.454157572 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633635102 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912412132 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380930166 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.67009133 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405040392 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37954148 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.757976936 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639787593 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619417694 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.363532918 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.640004103 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156766045 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697757594 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39646689 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391271317 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380147523 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654530628 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07174634 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497706614 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62008838 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428440638 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.928282178 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.374614059 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.747946516 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392466791 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390017547 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394624849 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38263228 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315991713 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396717711 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133585881 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409258031 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.093278163 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381357474 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674918384 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484674175 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.38614164 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.955628069 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447066188 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409506868 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386291028 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480075621 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973322907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.921813534 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388848023 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.325582009 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395371203 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.671847465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051348764 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.407284177 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386427431 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387610311 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317664264 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.781982137 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406317412 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523405646 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.408892586 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044363698 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137367376 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403954186 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321085308 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979839197 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392467661 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325172128 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613209738 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160922544 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325109291 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.328645515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318354319 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1373215 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395108228 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.998353478 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404437905 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.148457843 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646324426 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427945778 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407412652 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610635961 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.261913195 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383764192 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.386594866 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509548088 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40705355 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13400539 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340353804 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389221682 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642754941 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.597445347 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395216496 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.476472015 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940523225 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408583568 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.424065843 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385638547 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.634160249 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.049245236 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421893137 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08520079 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409592909 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165884311 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17823942 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404123281 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.394863698 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390076797 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679351745 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.193439526 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284268885 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454885843 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38910047 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387155052 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.830225036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237701348 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.270622686 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.612583692 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430332048 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.404806323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.389034045 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349684945 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.39117852 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391073374 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.177291528 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613254598 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40339885 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667635504 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323068301 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526673608 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404630989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.612703527 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.684526442 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.412535627 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649530373 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406008635 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.396046698 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426462108 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406876448 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488520245 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411517632 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.396698567 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65335351 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392844657 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392251911 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.723562744 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.16674649 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390916798 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394344784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411796873 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025666939 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3806084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398008479 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284887217 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.404194311 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458658624 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395947812 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6318151 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.874211195 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419906781 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.395788546 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.402786406 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616063933 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400909286 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.698244069 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468398462 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.903111968 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045967659 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423012462 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.324835523 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.103177381 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.083521633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391875581 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.588402965 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393301762 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632606297 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.42924418 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39413867 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056492948 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412790638 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.705354291 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.398112008 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405021892 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397204058 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392069234 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.861667351 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.991734195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400078984 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.410393536 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536276115 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407857191 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327824628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910891544 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398358009 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393721927 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.168799828 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427985545 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.701448432 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242354722 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677221701 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401415902 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688044046 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.804907697 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.428467987 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.405378475 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403410588 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401933555 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.435566534 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420477271 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404945925 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.711952137 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.868065208 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95939534 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195030602 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993287579 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883626242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.422794883 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301841027 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144418741 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350516655 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059910197 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652098772 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162473969 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372473798 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910090248 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.723636763 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259225634 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68915485 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626181124 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.776043146 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432192538 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69788097 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610341672 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429903052 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397236408 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.331547239 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.677091397 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992763496 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431965705 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482004545 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146948422 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417906213 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.182183365 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.454514731 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.236696435 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853004252 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.053763563 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.79176019 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402979533 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41388169 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251608571 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426845183 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925357487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073772858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432888435 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.917418375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35891573 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640474788 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436390921 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.394525243 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.151807974 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.394657146 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.67354239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694317548 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342947123 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398849232 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995015009 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.277530906 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403576585 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398772486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191296847 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400856439 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72787379 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.408336228 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.842765893 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424830765 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333243718 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334030628 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.092575922 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404192883 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368579744 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92931124 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.399338494 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4402632 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415331388 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259802331 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658631738 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.415112361 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.036644619 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646674106 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402964581 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425130419 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.403080015 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40108475 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.388447488 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308808183 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636547061 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419063381 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64662675 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.500783607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.300026163 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.947820395 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613758144 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.283055896 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408867192 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681170408 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.134519744 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.410501936 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173390638 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444762391 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413103933 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424690016 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.408171698 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421691753 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491329218 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646141399 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.44052996 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.412936598 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860772819 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428682317 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429430598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416272026 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495195782 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.137258676 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.888780859 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.176453666 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041700959 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214738056 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.064766066 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.719360038 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406685902 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403644171 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336515941 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551123193 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.931375738 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677149626 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522087735 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.403488571 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443623311 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401765021 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440525192 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621134438 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68323634 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.277403489 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410651646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071382063 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.285516503 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414508598 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61531387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953302842 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005618898 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526106836 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403543835 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164334106 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699375416 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.496225269 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405337964 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.998423353 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.421270825 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.239731612 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.409587366 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414770932 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558845404 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701977498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109808669 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.435332468 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.560409838 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176997326 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.859467359 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664170093 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.943760899 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.649872459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06812324 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.189042129 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670565587 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474579715 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649718096 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.540691005 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552407702 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.414140072 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.288649336 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405391732 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254350252 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.115498138 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415496922 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063099405 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691054464 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.408788276 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.415299104 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430824299 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.414653496 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630028695 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17192942 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632610628 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416998967 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411366163 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.398001048 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062755709 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727062194 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342216284 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.409819049 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674123138 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665412051 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430284694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860029643 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.120943706 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008465342 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.382099876 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429657637 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415425242 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183738732 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057831147 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.894692542 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969694032 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073455472 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419592834 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682698817 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413111033 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409451135 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690636783 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.411581218 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408480187 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660027389 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.075394892 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.297118362 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.416342587 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.778185966 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.345483989 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636788464 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440377438 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344400383 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415722519 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.868601101 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436064389 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528354687 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420116749 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.416891068 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420878915 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.175274952 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.771565848 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.415704341 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.400553635 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.408808671 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439143629 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531276913 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013592329 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441581819 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085807412 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.761019048 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668507962 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419901709 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.395327501 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414266878 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410249899 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13521555 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388091288 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4293012 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014004994 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.418661664 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.427522706 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414124021 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626471108 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623860989 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411753682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683228793 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451951845 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431890612 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.3101812 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18486431 seconds)
  done (took 1700.94352391 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.464712534 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.465926202 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.430138302 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.496090331 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443548073 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.505821748 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.419547898 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.494513535 seconds)
  done (took 53.040461803 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.4200235 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.570278988 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.444161179 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.415640505 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420607049 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.418119384 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.919360966 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.440248384 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.420924544 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.421312781 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.414510053 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.430976722 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.13814613 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428629058 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.421155148 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.41540907 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.422560114 seconds)
  done (took 66.888338948 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.999611249 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.498042902 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.893104844 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.429403543 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.476370518 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.432936689 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.940048372 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.440558765 seconds)
  done (took 55.433411612 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.430789679 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.430812328 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432277694 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.430413327 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432856361 seconds)
  done (took 8.479669849 seconds)
done (took 2107.916999166 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.41861368 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.419981082 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417359097 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.4201693 seconds)
  done (took 6.999239827 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.39271848 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.146234938 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.400882663 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419633657 seconds)
  done (took 18.681499456 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.423058571 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.433454922 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.214726537 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.10173057 seconds)
  done (took 5.641051937 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.17086628 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.181187717 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.165597258 seconds)
  done (took 7.846213906 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.418794244 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.423127165 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.423433292 seconds)
  done (took 20.593042749 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.722469061 seconds)
  done (took 3.052041063 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.567376012 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.617202837 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.795475496 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.750749614 seconds)
  done (took 8.059573054 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.811301844 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.803394605 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.610244589 seconds)
  done (took 6.554054307 seconds)
done (took 91.608405299 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.625065564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.445252941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.624667645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.59295793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.65072776 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625058029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.977243895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.566257343 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.104385384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.093220987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.603442016 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.656484287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92459945 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.446472062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.924988849 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.44453729 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.71046491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.673244353 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.291949406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.424751658 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.985057301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.23547285 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.434798533 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.258920449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.709797447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576209021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.832081538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.444189871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.42745242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.850362708 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.575629397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.420842078 seconds)
  done (took 199.487547701 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.422642319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422221129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.440318594 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.454259193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.424312104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422669267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.443554636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.443334336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.422346711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.442216963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.428646028 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.430824006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422500988 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450556823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423746988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439177685 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435563657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423118795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.423052846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430537289 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.423856841 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.441217665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.439094667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422020855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.449478968 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423115456 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441436875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.443625602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.422820131 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.423030611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.423223627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.441118535 seconds)
  done (took 207.17170685 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.43623302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422710096 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426117456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.424793658 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.443627464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.427319571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.424824568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.452416234 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.423322802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.423436913 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.424563021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.423683966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.444196665 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.424445301 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.44437615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.424579209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424963952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429502108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.424168483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42324651 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.445073092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.424338335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.423744627 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.429913631 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424090843 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.444681475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.424951643 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.424374431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.458663494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425809812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426639267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432120818 seconds)
  done (took 207.110271139 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620252896 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43236812 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.433521156 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.368267012 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.434260609 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.432405223 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.429366756 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.632764191 seconds)
  done (took 15.118430294 seconds)
done (took 630.220021272 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.883081887 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.590324532 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.63935529 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.452864977 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.290983654 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.471566883 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.451764926 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.639935148 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.39286558 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.646947975 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.753722787 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.469724093 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.899512613 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.452555095 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.73153733 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.561901842 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.396461441 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.530763012 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.794924263 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.037374474 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.731506632 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.022900119 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.665981366 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.392401986 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.92053029 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.008455053 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.294056878 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.387139763 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.472084889 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.810916861 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.273031712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.556287822 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.523760677 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.522232402 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.580193664 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.559420606 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.535281871 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.521422454 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.662457496 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.779825306 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.047556433 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.206460996 seconds)
  done (took 97.89977189 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.417504055 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.416776002 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.416543874 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.417920755 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.419128437 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.417177697 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.416739582 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.417370323 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.420336192 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.416006919 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.417152849 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.418465429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.41723684 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.419427656 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.417279433 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.418533903 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.419267401 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.419829358 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.417670284 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.417763177 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.418648292 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.417621327 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.418694745 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.418292193 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.41968097 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.419048129 seconds)
  done (took 38.208581744 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438066069 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.69608418 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.890178358 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446879489 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.437629137 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.441523732 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.525808416 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439769105 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.440708309 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.441400821 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.59998037 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.440104843 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.475730292 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.905154043 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.440879171 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.438609584 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.439420633 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.438826084 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.706894799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447312793 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.551933759 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.440975833 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.526364485 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.44827418 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.464058775 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440675838 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.444054009 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.038157155 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.462507672 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.603259499 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.345230499 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.530154635 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.969296116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.911389401 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.347413965 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.449661408 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.440629508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.606676252 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.442141867 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.440316758 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.527020429 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.440855964 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.89052676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.133685852 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.460985268 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.442401696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.05646834 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.630491332 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.717692821 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448234645 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936315575 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.451281366 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.443778552 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.442913432 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717484224 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44832722 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.441092681 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.076959953 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470669155 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.529770314 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.442367603 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.442143506 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.713862496 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.441105123 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704380883 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.444348006 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.450083489 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.463571124 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.903810803 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447594171 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.170635893 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462944363 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.443520659 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.605186183 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.706978881 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.103324157 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.475050331 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.721633371 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.98311688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.547195273 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.446514561 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.025259894 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.551188515 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.447679237 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445580344 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.445467327 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.444525193 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.489800738 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.528235708 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.093229711 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.186846694 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.1093924 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.553491262 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.457187237 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.444315393 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.075853252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.466720011 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.444328285 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.89188632 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179113172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.472259372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.452710695 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.165380571 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469005236 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.532823828 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.448771029 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.900781173 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.445867714 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.492602001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.444852506 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.451805075 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468980787 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.531248934 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.449829868 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.446841493 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.133095401 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.634900333 seconds)
  done (took 190.825570308 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.451026528 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.438205853 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.443254911 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.438298998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.437776201 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.447380556 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.44076238 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.439966924 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.445858172 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.440209034 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.439112681 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.440100041 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.442245054 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.447241897 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.451553211 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445876216 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.109149104 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.440163618 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.438808696 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.440223212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.260884117 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.441659608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.448322208 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.440464036 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.441560397 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.441463484 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.443321117 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.443429697 seconds)
  done (took 155.226406892 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.44811116 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.0798071 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.467375763 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.594793973 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.472037752 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.445257399 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.591551541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.51175369 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.468009347 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445778804 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.446353728 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.78469406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448689176 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.024160428 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.665068739 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.615151762 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022174301 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468620924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447136196 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.447251626 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.596916337 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.454671095 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.785371885 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.08121922 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.469800212 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095816934 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.434756424 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.450992405 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.447846489 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.081764644 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.468574552 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.788949342 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.534980438 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.515010851 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.130689993 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.051669204 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.045601397 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620428321 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.457361897 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447522938 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.447601022 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.432752148 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.117604911 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.479898254 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.450686696 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.106952554 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.478687601 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.452319885 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45549631 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.447546178 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.51592033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.536875307 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.830957185 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.131318772 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.563053962 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465456404 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.600985615 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.829353227 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453796078 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.026612417 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.433191966 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.123861081 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.480634399 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.434293417 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452294666 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.45666684 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.619592555 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.604402261 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.036243754 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471487326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.028846121 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.639645849 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.450855871 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452203849 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.454935679 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.123974588 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.056986959 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640005054 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.601993404 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.671207855 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.435991669 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.451225172 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.435802569 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.537903399 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451732338 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.126521669 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.056384827 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.473519665 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.454756134 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.453309534 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.455328328 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.653940403 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.148706376 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.566749943 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.018008754 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.833362365 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.822842327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.462939924 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.519575801 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.472310889 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.816889892 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.463652845 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.518529043 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.887493607 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.817409173 seconds)
  done (took 174.598717644 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.712453006 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.725573774 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.548692741 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.610626299 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.111198755 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.05622191 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.88315789 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.610956939 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.573605701 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.738491763 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.76566303 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.546404167 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.686488004 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.534118469 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.240618603 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.549432412 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.57350701 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.610057915 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.621527111 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.521198968 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.184866543 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.779345834 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.660344141 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.50331256 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.554364513 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.293250072 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.048154583 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.04204965 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.636399803 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.895347715 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.00043152 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.631315236 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.531321064 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.231395164 seconds)
  done (took 70.56843288 seconds)
done (took 728.670506172 seconds)
SAVING RESULT...
DONE!
