cset: moving following pidspec: 10562
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.578866585 seconds)
loading group "shootout"... done (took 1.167337297 seconds)
loading group "string"... done (took 0.419776102 seconds)
loading group "linalg"... done (took 7.794917179 seconds)
loading group "parallel"... done (took 0.148271699 seconds)
loading group "find"... done (took 1.236880679 seconds)
loading group "tuple"... done (took 1.894506932 seconds)
loading group "union"... done (took 12.383800202 seconds)
loading group "dates"... done (took 1.281576994 seconds)
loading group "micro"... done (took 0.196954576 seconds)
loading group "simd"... done (took 4.300223097 seconds)
loading group "io"... done (took 0.966244982 seconds)
loading group "random"... done (took 8.62434091 seconds)
loading group "problem"... done (took 1.519928953 seconds)
loading group "array"... done (took 18.652932109 seconds)
loading group "misc"... done (took 1.493962162 seconds)
loading group "scalar"... done (took 38.867651352 seconds)
loading group "sort"... done (took 2.921365442 seconds)
loading group "sparse"... done (took 11.587079318 seconds)
loading group "collection"... done (took 16.650476429 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528029389 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125241323 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136376328 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12116734 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155069023 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117990836 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125032568 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084032671 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.874852699 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145917844 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111533837 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43530835 seconds)
done (took 5.385078914 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173638841 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084996419 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078006153 seconds)
  done (took 1.272165812 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063858176 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126549969 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065804677 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066416882 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066976273 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066747675 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066849722 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067127333 seconds)
  done (took 1.636148292 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072528058 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069067805 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066182606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071126756 seconds)
  done (took 1.390350313 seconds)
done (took 5.66406798 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.238477773 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.107049445 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.305171586 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.327424812 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.421471939 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.091377174 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.074195982 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.070698201 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129990681 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32679432 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114729808 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.188904781 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.0994784 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.184786527 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.994348572 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.130400177 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08541766 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124654926 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094100748 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13244093 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.367776685 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078226265 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083279994 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.071511941 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.068396801 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.651203576 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666404318 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138325639 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083491469 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079470889 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115652982 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.644526599 seconds)
  done (took 10.431738628 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09857716 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100911338 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069657603 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125328015 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098390663 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070545882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074952033 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067848272 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089751979 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127931974 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090908421 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107158457 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066670174 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070025343 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085320103 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200601579 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078445163 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079742265 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067559944 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078611149 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107538672 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0772579 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079994143 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079633802 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129780889 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170563474 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09635148 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097968858 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067064711 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080935603 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115886492 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127330276 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066967122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067086823 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124402346 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098069325 seconds)
  done (took 4.594510161 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.104895502 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091854747 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.102779822 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.605954687 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066297329 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.153401264 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234511676 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073082043 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.371062721 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.156856835 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.147600574 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142944494 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123296498 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.070146672 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.255393127 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.120988404 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270351552 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.069130447 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066652178 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066213616 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075822653 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068021786 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063911891 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.076210034 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092283669 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087813374 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.212752103 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981704758 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.293083716 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068499248 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163333612 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.090206013 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364278362 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.070287968 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.090049022 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.398152425 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123416795 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064267097 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162183121 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.132065028 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066520154 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118222208 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078541554 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069772612 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.072257924 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068379643 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079414405 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078943753 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.103251933 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069326872 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065814233 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170006618 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066212882 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065011826 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066903477 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068063612 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15048661 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06569336 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.146852324 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06499176 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069568537 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095782051 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071548268 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088168785 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113744409 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331741091 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096810154 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.039062573 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067138191 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.898213429 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079932149 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067405376 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.083415089 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.0676471 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069090473 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067093261 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.075934785 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.07136867 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070043542 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.109223194 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066198268 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068544934 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064357796 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071027839 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099321759 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066922895 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.457016027 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096486481 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064971613 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075801244 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104093789 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066126448 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.073409838 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.069046517 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.072940969 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066553182 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068091688 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070747257 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093541505 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070621253 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115751061 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.142580525 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064420603 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.071932276 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065172666 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06767711 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071781642 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070963231 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.070258442 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067408044 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070359327 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068778801 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065543922 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.118336415 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066199211 seconds)
  done (took 21.643614623 seconds)
done (took 38.885652353 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238022857 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083100134 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082586513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083615613 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083204311 seconds)
  done (took 1.771436087 seconds)
done (took 2.965678587 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.129466011 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100778029 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064438247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101562014 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065368591 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104776284 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103273565 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08416577 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10284346 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065136838 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100809217 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065308414 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064707673 seconds)
  done (took 2.353934948 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080393145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085798566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069307195 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081225884 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062309067 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080838166 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08029027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08776273 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080830848 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071999229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06241494 seconds)
  done (took 2.030830484 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081202282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083757777 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06963495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081723289 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062854946 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080967695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08165982 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086031828 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081311405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073834706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062886353 seconds)
  done (took 2.024794797 seconds)
done (took 7.591976084 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075185844 seconds)
  done (took 1.239521599 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532718421 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.457897763 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.075582861 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.096769784 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.194098691 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.106607165 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.229680429 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.081941041 seconds)
  done (took 8.117936129 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095666662 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081648405 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069717033 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070864779 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069010015 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070123148 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068973809 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070135877 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069867231 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069472757 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068607547 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069650245 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069404029 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070622774 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069672906 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069679179 seconds)
  done (took 2.41280419 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096407157 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096179969 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073520664 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075146075 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073099853 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072907978 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075307358 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07447721 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071443833 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073449365 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07589227 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073470345 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073531891 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063803953 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074421791 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075936815 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071708885 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074156963 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074901379 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075853578 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074927877 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064066836 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073208672 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073961695 seconds)
  done (took 3.092882203 seconds)
done (took 16.043265307 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113497892 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078317455 seconds)
  done (took 1.364498786 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.077447504 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078531816 seconds)
  done (took 1.345534019 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075235924 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061511089 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083685037 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.073518577 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063008103 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062363398 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080571521 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.062636239 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062584798 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062738865 seconds)
  done (took 1.875456594 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.064133421 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07246255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069238602 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.077944967 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06928596 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064630391 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.067249102 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064995944 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07181447 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062820378 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068011953 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082866451 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067073399 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084778617 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066885138 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067805769 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069785103 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066942329 seconds)
  done (took 2.448812611 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061793937 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.062896244 seconds)
  done (took 1.323594875 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067103834 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063403318 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066573766 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065537328 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062978679 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062768624 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063278936 seconds)
  done (took 1.642012952 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.368293092 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124832534 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324727101 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071013541 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079606307 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254700185 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064685954 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069691347 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070230995 seconds)
  done (took 2.662455345 seconds)
done (took 13.86220187 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078301767 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084553745 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095453417 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409071779 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093302043 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067521589 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113744833 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176859115 seconds)
done (took 2.329487863 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207350998 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.096535356 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.916563155 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.066075558 seconds)
  done (took 3.276741576 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33201786 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087474343 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07779631 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067680158 seconds)
  done (took 1.772960744 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06619075 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070555076 seconds)
  done (took 1.340205629 seconds)
done (took 7.80903589 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065227089 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065175407 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090571389 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065307096 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064596202 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064976139 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064974657 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064643145 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064661871 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064563881 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064647456 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064688 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065120897 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064773215 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064695504 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064407537 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064513606 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065133626 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064943994 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064627281 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064426469 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064704059 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06530382 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065414558 seconds)
  done (took 2.812537675 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079610325 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065836306 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.066681675 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06842092 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068612928 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068543024 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06799441 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066854008 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068062416 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.066550784 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068850942 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069074892 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066955704 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06851854 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066375855 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068515299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068490979 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066915677 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066362691 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068283879 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068333132 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06700475 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068477173 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068352145 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06876643 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068296364 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066231561 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067527546 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06824488 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06869869 seconds)
  done (took 3.26198866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065918422 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061270506 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062876746 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070562763 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060977334 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061772286 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061167273 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062165227 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061580726 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061285109 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062333558 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061545491 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061084747 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061894928 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06214653 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065925014 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079031466 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061536478 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061147415 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061486071 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064987702 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060863894 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061262825 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061484928 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060916407 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060551823 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063848278 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061034817 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061953263 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061289194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065173809 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065769557 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061088791 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070328432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065871145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061099167 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065439571 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06071501 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061738526 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061199273 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061140413 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061411692 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061993299 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070061325 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061801404 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062799131 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061087229 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062238033 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062300831 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063425762 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061077238 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061525865 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.062916761 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062427612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066856157 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061255403 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061920622 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06108898 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06235631 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061641084 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06096672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060761057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064641477 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.061885339 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07867061 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070348016 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060894144 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06327758 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061723858 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064285509 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06281217 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076870924 seconds)
  done (took 5.777707633 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083206716 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086558543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065373731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066080209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062003502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062150234 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069892171 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062163202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067031699 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081037402 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062138156 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066253315 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066642841 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066276447 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062398165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066217885 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070327521 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062668351 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062017146 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066161633 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062042255 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069415936 seconds)
  done (took 2.716238245 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146093406 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068161154 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107691422 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072092452 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070584888 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072938261 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068009317 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067979607 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068141183 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068217403 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068011737 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068073994 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069831672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068264968 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068593578 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068574356 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067881919 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068402158 seconds)
  done (took 2.578611596 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076565883 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067425075 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086689749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067244516 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067845781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066710405 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071217762 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071380865 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066810702 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067913599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071777451 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06694981 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06738138 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067749582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066818821 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067384451 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.066584032 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067642933 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071754722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070926951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071164423 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072163816 seconds)
  done (took 2.760101721 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077060125 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066882171 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082756335 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068608003 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062407799 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062443128 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068384822 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066148699 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068094584 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066560327 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067035826 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062247347 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068528197 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066490791 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06930042 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066805103 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06625659 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066814139 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06580014 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061850475 seconds)
  done (took 2.573094354 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081653744 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064354559 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064963769 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070390307 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073906848 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065220154 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071118336 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065059968 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066199583 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085553096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065120537 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065837187 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07105424 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068822788 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064743747 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071204335 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071215738 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071166603 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067096387 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064732545 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086049328 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065078867 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071081297 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065338196 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06552936 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064988052 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065131621 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069806298 seconds)
  done (took 3.166889675 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063810722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064820768 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065227694 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064973659 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065870702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064758503 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0646687 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065348406 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064699268 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065519526 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064632194 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064897303 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064563763 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064714409 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064204774 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064690949 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065225093 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065503222 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064656003 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06452841 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064772941 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064355558 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064322138 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065106464 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064764253 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065039306 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064858766 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064691379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064307533 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064696615 seconds)
  done (took 3.173380751 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074524272 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073408754 seconds)
  done (took 1.378062106 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063092444 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079248445 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06102518 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072166796 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070594921 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065509768 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071292515 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070951371 seconds)
  done (took 1.778723148 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085179534 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074695653 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065904793 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078184607 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075839677 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083792988 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12802924 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063931585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074980069 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065164398 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082260724 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065932406 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074063464 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069398894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075351798 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078302537 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061635965 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069390198 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065259383 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062135549 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064163113 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078053231 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07360702 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062695244 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06888231 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092325738 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080837106 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063798521 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070907618 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076325572 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07439293 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060860548 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063349985 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063986537 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062084273 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074592679 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083943715 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071227069 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077770118 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065052918 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073070502 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062398475 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073982879 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074736795 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081255786 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064075285 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063891076 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061610926 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064761363 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070213047 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061659171 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067969061 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061125844 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075783547 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071268732 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079061313 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062353979 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070138622 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070194267 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070793507 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075919079 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070511962 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073444894 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06339533 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080191069 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073455831 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076619323 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061837749 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061525124 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062096792 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077809967 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09323271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074563396 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064201605 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064037211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061957444 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070864565 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064558216 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073213672 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075119082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06325415 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068744764 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07580939 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068036012 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069854082 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070564696 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062317924 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067164946 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064804653 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083176991 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062403517 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062005723 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064512924 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079062545 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071406502 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065257898 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065252606 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075156086 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061754106 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063842535 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064263828 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069231077 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077759822 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067523158 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067987847 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076293361 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072560491 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068276942 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070170189 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060907346 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063213462 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064826415 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074509762 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059910483 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069971559 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066842157 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062567981 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074132453 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061182771 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062108169 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074833193 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074056286 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061626203 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059961796 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069652721 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062035585 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064961356 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075250308 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060876532 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061315568 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06090528 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07044226 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062174229 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074578735 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066285611 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070046313 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.19171253 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062489816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069280176 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077354225 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068974402 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070567923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074986455 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073322407 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063347306 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076810097 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071264436 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067552302 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073219933 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067951238 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062854234 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065858825 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071223312 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062613615 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071707213 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066359746 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070447788 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064604747 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063092793 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070001672 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064311897 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066241073 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068993938 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063357073 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078248194 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070065634 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061942455 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061730314 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070143566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065331079 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063172498 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066437208 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070116982 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064463462 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.062117904 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.063462094 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070684221 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071079217 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066133725 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064254336 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073851909 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081203212 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063336461 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071269304 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064055994 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064254205 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063713451 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07774986 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073850719 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067560078 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071221737 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061021723 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073487365 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075961163 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066646597 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062429688 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066564164 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067545432 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075514242 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068045694 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064642626 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062333831 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070052814 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065909541 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070857493 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06440298 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066771628 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068204261 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062659142 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069893501 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064753325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077935591 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071312571 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061746641 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065742354 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062410063 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075214962 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062069159 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065139667 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06637615 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0647189 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063053609 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070901407 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060927771 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075857047 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076287161 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068631125 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065998063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063373614 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076005111 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069316393 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072083046 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070805169 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073347999 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079421586 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066712204 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070590424 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078587624 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063273887 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061124678 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075360244 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062295827 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06267946 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062777603 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06235954 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070460687 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069440994 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073888917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061163891 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069740249 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062088046 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066026277 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061515474 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071738649 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069665109 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066871238 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074608567 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063003123 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06264664 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069922207 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062376845 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062808007 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.063728705 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069775813 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062570029 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068593096 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064957326 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068390624 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065159336 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060760797 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068069383 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062003725 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068118389 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071565514 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061979371 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067997397 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069163115 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062618159 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.204824054 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067427722 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067105388 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072610782 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070370593 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068852208 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07144266 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0633624 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076307056 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063109448 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077060856 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07009191 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060863373 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069625116 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071185324 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06861418 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064677798 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064189991 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069354278 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063612562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070092025 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075931412 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065574013 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079935906 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074831899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069504686 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070186435 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068931973 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069210752 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066568276 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06811117 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064116446 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069050432 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062795524 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073772143 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071623601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068188119 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07032673 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064103072 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069379934 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065567686 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061238714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066507021 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067006188 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063620177 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076480845 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064409597 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066997007 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062445233 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064746003 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063232191 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061098608 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070174358 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07143418 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064331709 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074591561 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066750707 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070100883 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079333449 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061114875 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062174481 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061816864 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065100062 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076292619 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064469641 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077396805 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068985417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066495807 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061773426 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064065511 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062864613 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061720999 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062175422 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072159178 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066066178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063218971 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063982836 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070743665 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064632163 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076049216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.062969329 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067893281 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063656057 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061240586 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066381355 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066586359 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070442513 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065000332 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064852097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061376916 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063153532 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068309103 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070347726 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063347447 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069365989 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075829849 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063451154 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070458681 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066061091 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061874192 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071425837 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063076142 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063101464 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066194784 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071986936 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07151133 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064077748 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077451544 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065136543 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069148622 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063580369 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062352568 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063093706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063372431 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063132796 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065661487 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064995873 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076230806 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061480906 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069804774 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068038917 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066724782 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073160649 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.063208444 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068575863 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067185845 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064795235 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069093308 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075371126 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06585845 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069592729 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062879233 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068153674 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071954496 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065084791 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074058417 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068175395 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063045255 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068734805 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064648829 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062355712 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062279038 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061775528 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072318228 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.202183236 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066619612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068114269 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062871301 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069272946 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067076761 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077669095 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071545395 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071135446 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062022556 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061963278 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064297039 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066018444 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072204311 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071313627 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074104728 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070046261 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068453275 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063942646 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078214766 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07409359 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072069553 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06558692 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072030007 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064469375 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070704482 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069128834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069347068 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06546975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071516406 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069423096 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066874143 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073622996 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071811083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064971475 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070235119 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069697488 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068605629 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062499936 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063932369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071501546 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072831755 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071405589 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064126278 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0785612 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064742819 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068674107 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065694863 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063338912 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071704178 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062312203 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070192503 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065105761 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064465702 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062130139 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066438511 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065911952 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070865392 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066288127 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062193436 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079069088 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077841433 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070023282 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063210251 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063085952 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061759926 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062522679 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066553213 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064458816 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069580187 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078795447 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066959539 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066249124 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062641445 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064106886 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071926177 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071636354 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061214537 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062241107 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06587786 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068566038 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074469631 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062934645 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063282458 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071783219 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07064634 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062518398 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066217196 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061300596 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071951739 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080324474 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06428227 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069387395 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073721484 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076496068 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063824512 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062105735 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064437057 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069629483 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070020392 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064913309 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064249017 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083357947 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071391256 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066678215 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062425011 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070699884 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066388853 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076932282 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066895175 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064156487 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072945608 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070869933 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069955899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073530027 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074509556 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070654473 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069461634 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.062647468 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06911305 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062161428 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066135582 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064076078 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064003368 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066457715 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069669724 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065982617 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079006999 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077845457 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0660212 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.0610097 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065952349 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066440351 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061457585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063565457 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06112262 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06127275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061163026 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061721112 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068482335 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071249829 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067245956 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063250154 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062697106 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061066515 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.210267918 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070769512 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071285447 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062441484 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064618008 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065281797 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073118777 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066748643 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066744927 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070394734 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069660088 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070634062 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06214666 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076734546 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063313602 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069694039 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066866907 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063654957 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064126337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071064685 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068481017 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065234366 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070707736 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071198383 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065401915 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062358997 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061735668 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073256313 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062646313 seconds)
  done (took 42.442389516 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098178606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064384703 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06265415 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062824055 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072907055 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06374864 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062838118 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063842116 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063775827 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064992894 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062654166 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06251983 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069246626 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077274026 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071710711 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066769832 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062678821 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063220197 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062413681 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063908428 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070152032 seconds)
  done (took 2.751103213 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068520064 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076956664 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074426036 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079951617 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071122312 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06708438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074586322 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067340655 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075151327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072638632 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074870528 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066865643 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072601708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071969863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072730648 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068135601 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075564769 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071702976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067435844 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075021081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067569695 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07482692 seconds)
  done (took 2.910590749 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062748277 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0637726 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069641717 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062412524 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063084211 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06225109 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065924362 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062067359 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065115202 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066102417 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065982214 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066354823 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069908841 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061664775 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066636934 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061693621 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107469697 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065698325 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06324436 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064179842 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062031046 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070270089 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061840719 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06196628 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065865256 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065563759 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063689029 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061916871 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063026645 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065627013 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066190087 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061537555 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069829676 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068901272 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065748005 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065757514 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063372483 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06303698 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064504488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062343924 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069761709 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06190321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063595797 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070174003 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062041048 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061807854 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069657794 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.062877647 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061987752 seconds)
  done (took 4.539112233 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.072857435 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110159407 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068481388 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091566965 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076268238 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069679057 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068181809 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093762639 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063981721 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064493362 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077122775 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077726656 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065478632 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067195385 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069802644 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065247718 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066199446 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06454491 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068919335 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065511124 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06892581 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070176474 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075956151 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076574423 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066461246 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064628945 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064907511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067586808 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076169936 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069414986 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067394918 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067385881 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076989552 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070160448 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065387667 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064793897 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077197963 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065414919 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065319959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063602508 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064793265 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06708314 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069739514 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077537247 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066117713 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069875747 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065860049 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063182416 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076561979 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065424819 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07002168 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077681842 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067267335 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065891522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066957438 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.076540075 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065232309 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064390872 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065826701 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075995162 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063953851 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066797708 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077586765 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.065217032 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069012127 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076217331 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069022155 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067099696 seconds)
  done (took 6.256946701 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071307234 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094352904 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081222453 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079965429 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073611099 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074175926 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073437537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074310982 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073848575 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077432662 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073951239 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113999329 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06983772 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075359952 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074214991 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073963649 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073875195 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073730484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073285924 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073693631 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073408766 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07943306 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073822722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079879393 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076185963 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070177693 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073364016 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074011445 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079832562 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073577571 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076509577 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073257196 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074242354 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07960719 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076221901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07345354 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063385171 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073370194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073276974 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073066736 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069389196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079208607 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07382925 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07002683 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073851812 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073537082 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07961624 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076691775 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076211667 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077133751 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073532955 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079493024 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07359296 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073852321 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079973567 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082577722 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079559028 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080092384 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073775169 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079680557 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079869691 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082172096 seconds)
  done (took 6.088751679 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076680989 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068420754 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080137451 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061833024 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064235225 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071738186 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062159915 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.062451238 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069855499 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069951861 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072002383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072033946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074630566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072123424 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071952263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074957365 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072321419 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07230648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070598972 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072270143 seconds)
  done (took 2.767848835 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074861797 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079254038 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06826625 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072512096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067292885 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072235264 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067604139 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067569791 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068310396 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068152969 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073441365 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074470047 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068383983 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072317903 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073613896 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072444248 seconds)
  done (took 2.484708095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081908474 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069989588 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.07563249 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063655031 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067040313 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.0630064 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06342892 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062396528 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062645911 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076646767 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063362882 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075229773 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06357161 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062368636 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062995323 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06918525 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06269646 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063493347 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063849011 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.07608837 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070761842 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064582237 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068116906 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063676259 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069342569 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071311326 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065267271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067380748 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063702015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063873683 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069173915 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070251694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062942904 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063915118 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062338392 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063532974 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063526611 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064161727 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069426534 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063591892 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062248983 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068686232 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063726219 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064597499 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062503915 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063701393 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062688382 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068842609 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063491802 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069597732 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063450472 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065955768 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063864655 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071021495 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06679505 seconds)
  done (took 4.999388111 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078057456 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066427429 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060569889 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062239416 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068244355 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068721736 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068607046 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068287769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068760875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079952402 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068729142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068153551 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06883431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068128192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068910931 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068769329 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062533665 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06770135 seconds)
  done (took 2.589099944 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072382511 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066417916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071577868 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067581117 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067543315 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067018856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062660586 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06261954 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062510652 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067185066 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067088247 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066419185 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062373929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066273469 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066893236 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066964942 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067276915 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062860592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066988362 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062631402 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066668721 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062508287 seconds)
  done (took 2.803957182 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094679074 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08494647 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14111378 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080540853 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088382213 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072625098 seconds)
  done (took 1.914084159 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091269816 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097339104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067675697 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068030273 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074433428 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070626819 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070995535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070870228 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075573069 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075649181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071136206 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077313663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075428253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07714272 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073376751 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073033779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070807379 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07133192 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067702273 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080055572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070833479 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074952181 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071094886 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070590153 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071270794 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076702293 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075072802 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075950149 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07060062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075067749 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073034566 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070889135 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075775197 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075864786 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067876029 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074906871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070778947 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080221275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073414165 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077405501 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06762605 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073346064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075722167 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074622776 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07563382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071324949 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074739143 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070739748 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070716523 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084830524 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073303441 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076828059 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072846628 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075746591 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075360726 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081765605 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075860597 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077073303 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072924476 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075738865 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076390741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071118243 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076696929 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075867149 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073132683 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07680703 seconds)
  done (took 6.273120448 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101766803 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06658814 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069165397 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074982955 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077093006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070818248 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071150743 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071266591 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071216419 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068174763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106222698 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071590585 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077421637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07772613 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071126299 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07116946 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075114472 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077189883 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068146618 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081980559 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071259914 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076737851 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077204357 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077170613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075349197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073179245 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070979405 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071219374 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070388564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070361477 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074779355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071057635 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077114279 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06809831 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076741495 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071151514 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070716243 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075235829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070760335 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072885294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077276216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080506799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070971126 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070996757 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075983123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070932771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071228514 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068122255 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071204323 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067653258 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076053862 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075868164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075972234 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076929147 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07078253 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071632567 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070904467 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070914941 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07082443 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073191482 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076772362 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069853845 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079441772 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069084131 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070476553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07681418 seconds)
  done (took 6.254719552 seconds)
done (took 128.258723265 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206302132 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182742897 seconds)
  done (took 1.725326276 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073004437 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102643301 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082416781 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133957218 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070086955 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103191175 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102485728 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080408714 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069541691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070841971 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070700537 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073604498 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137679426 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070118872 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070846544 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074518753 seconds)
  done (took 2.742719548 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101694031 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.214942721 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109486733 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069967678 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104021304 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076767757 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071320289 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083160438 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075839183 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071389022 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077069758 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075706057 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071363997 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075041601 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075678964 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077627426 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071257684 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076843908 seconds)
  done (took 2.940997166 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10017831 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095661181 seconds)
  done (took 1.561965205 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.170416737 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.131976505 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200571743 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.33325438 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.149045697 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.420610914 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137218514 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137541872 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114216907 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12979599 seconds)
  done (took 3.28328624 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102159263 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198348566 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296914184 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1221824 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076341712 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.108215056 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.124065217 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082013056 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082052333 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.08072552 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082195797 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078009591 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10112527 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077445491 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076243974 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077940259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103773784 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075488806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076079317 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076561852 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103818603 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070290727 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076359759 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07500021 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078990204 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078451073 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071175779 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069982813 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075793287 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076375462 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079274265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105427736 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078849427 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103885574 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074676062 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105420594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077549637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07429398 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075760722 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074256365 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077570545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078625144 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078533613 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077461339 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070892208 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077402262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07099379 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069805998 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079560563 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071089484 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079953505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078102366 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1018372 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069190621 seconds)
  done (took 6.190404814 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.1053423 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105307659 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069589574 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112750732 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104271888 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071166121 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105437059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099534509 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107699713 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071144679 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069940778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071176551 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078937409 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082145956 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111406915 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104970714 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071326219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068914794 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107839761 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107951608 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069710182 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102029191 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098441516 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107616682 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069322207 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071416236 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070059091 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07110229 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076035938 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07726438 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071356363 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078184191 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086712237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076474344 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068629099 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069237413 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069791079 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077849299 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079368892 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078114566 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076842472 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068598212 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069016289 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070129235 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070189786 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069087806 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077212102 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078308726 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0775303 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069427274 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070567388 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0693178 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0699313 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07743215 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076283061 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078874007 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078159211 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069380709 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069609129 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071301634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079448004 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079100707 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077680313 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069990406 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076251729 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070121094 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079019299 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082466411 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070593567 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070373884 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069326829 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069430844 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069885991 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076094802 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076341703 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070538114 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070320444 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069099951 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079101928 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076919002 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069674009 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075730125 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06831594 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06951486 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071018091 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070642134 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076062673 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078598867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070758566 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06952906 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070032929 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069225957 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069013167 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076464771 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077693117 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078014523 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077297166 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070370537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078001062 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077591739 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071396834 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077414235 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069839287 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070222275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069766888 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076124245 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075611869 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076462749 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069227012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068290713 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075549207 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078092097 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069066709 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075621317 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078234833 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076037221 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0678681 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078412908 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069330783 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077922366 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069988376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212394657 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068936205 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078935385 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070942675 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070805404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071344169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079365807 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07075316 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069885678 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071435755 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070857545 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078333389 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080961493 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071793669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077984051 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078483486 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071280388 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078003164 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070635005 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078414771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070637637 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070072509 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068951964 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08017788 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070535295 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069878963 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069592885 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080437487 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070411963 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078965106 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077788787 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069520348 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083811869 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079550013 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076592471 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079470586 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07143256 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069031405 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069415877 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070206876 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076532331 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077611103 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071499337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069086159 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076055538 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079321565 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069643367 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076354166 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076911641 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077541138 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069645944 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069388992 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081124184 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08034195 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077844222 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077068703 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078239023 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070400652 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077017371 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077539339 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070639869 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082927591 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070703715 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081644727 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077716781 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0758554 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077473206 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079158026 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078251917 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077371327 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.07931049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067219671 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067631127 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075127623 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068308955 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070855803 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077361218 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070404047 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070471118 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082941594 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068785498 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076771339 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067324764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075918456 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066849362 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068577709 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080071557 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069025515 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070656296 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077226412 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072540535 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076264044 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080018903 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076285509 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069799047 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07071882 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07786579 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078326517 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069552973 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069487569 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070979357 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076943493 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07677277 seconds)
  done (took 18.526292308 seconds)
done (took 38.345428209 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20863271 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157849645 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186602169 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117677374 seconds)
  done (took 2.132949213 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106555276 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099150566 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088337846 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065861231 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.095358181 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066095081 seconds)
  done (took 1.925126566 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301035236 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.205393051 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183706843 seconds)
  done (took 2.089382269 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212570175 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.201732698 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466092064 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286005901 seconds)
  done (took 2.663172424 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141851536 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.085494712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065074921 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082410007 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.124341962 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.150451247 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09529392 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11919518 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076637434 seconds)
  done (took 2.397800718 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148673236 seconds)
done (took 12.7785566 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.257234021 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114974307 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073115748 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076139531 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075621098 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.278120511 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074873454 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.113095716 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075694805 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.202701534 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075716457 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07711183 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.186643276 seconds)
    (14/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.190035167 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.237447219 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.158256227 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075102268 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.172274509 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.198105301 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075355872 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.180864432 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176853813 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.235723467 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075169427 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09811915 seconds)
    (26/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177110405 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.181098565 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.115364067 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105943 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084414388 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067615528 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182897177 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.245063282 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.2085326 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190162348 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.144151278 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067239476 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.176712449 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072338561 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115772014 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065364641 seconds)
    (42/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076618481 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.134886814 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064130136 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066379357 seconds)
    (46/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103879304 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08747624 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.098099358 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.070412085 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.155268371 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100844447 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063520764 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126084893 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074067056 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075742852 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193524444 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139033086 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.067388613 seconds)
    (59/309) benchmarking ("sort", Float32, false)...
    done (took 0.131819253 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119444375 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.097089514 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074127392 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073190357 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065737053 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075325602 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102348143 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073312579 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084070087 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065419941 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.158735609 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066305488 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094286796 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.235848453 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.227902396 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076964599 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110315318 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139382679 seconds)
    (78/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244950661 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06626445 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104124526 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.164730731 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173549211 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065558299 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14186365 seconds)
    (85/309) benchmarking ("sort", Int8, false)...
    done (took 0.176470181 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088406819 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.141032674 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065703433 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.329308792 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065125492 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087554435 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067495766 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074424823 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070557352 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067601314 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.140831191 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145057403 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095322321 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075653007 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072860558 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.096454293 seconds)
    (102/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073213854 seconds)
    (103/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073388506 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096128484 seconds)
    (105/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076951377 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07104849 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230992477 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066054893 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066653749 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167141687 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065487407 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065841485 seconds)
    (113/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211829442 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194944683 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.20149251 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075957889 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075656881 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075049015 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073101242 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075204957 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074995918 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066042182 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096421172 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073421851 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091693532 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095740078 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077492342 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120607791 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076108817 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07650738 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077312806 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067395661 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066672902 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067067199 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075408417 seconds)
    (136/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.209757571 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066786032 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17105297 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073287063 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16316643 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165607179 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125939506 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066851865 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123457626 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073502445 seconds)
    (146/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066893948 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093185368 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065219304 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073993943 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066962781 seconds)
    (151/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139100367 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065648165 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.094273199 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067596023 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066026018 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.064902296 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186915936 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.167022504 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075217617 seconds)
    (160/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075643748 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065788674 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078161974 seconds)
    (163/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.195927754 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073198254 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162418689 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077239185 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067360465 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129845349 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07890828 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.06531297 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141024344 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06574645 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14674081 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.065233621 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066289847 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066365308 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066583761 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134084956 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124436555 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093060749 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095643298 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06621202 seconds)
    (183/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135845165 seconds)
    (184/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.063898494 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.065280395 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079774832 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178934924 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06727814 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067187565 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070776455 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07706851 seconds)
    (192/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067113424 seconds)
    (193/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069290821 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065697531 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065398006 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066845982 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065768348 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070421243 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073114415 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076733879 seconds)
    (201/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065019156 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066315414 seconds)
    (203/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.139316923 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070054664 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07314412 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091228738 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09019726 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142090247 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089660317 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064992558 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06614911 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067821778 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.137760517 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07581888 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074317728 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065138097 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.064514435 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.336108689 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140373838 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069608914 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067237981 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.199786581 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069105874 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075558228 seconds)
    (225/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075117931 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067767399 seconds)
    (227/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08012185 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.166542819 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082460134 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067295804 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072941242 seconds)
    (232/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.139470907 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076700964 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068179803 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066145472 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080473029 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089887962 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.070400462 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069692435 seconds)
    (240/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067119108 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075390992 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124139564 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067599065 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067298021 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134699514 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066147106 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065632262 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090152247 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065850754 seconds)
    (250/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067339036 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066537312 seconds)
    (252/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068608062 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067166204 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066505207 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080532212 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128984531 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069896266 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065793146 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133677245 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11729172 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065686915 seconds)
    (262/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067150376 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 0.131490461 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081933087 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076451698 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065592974 seconds)
    (267/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065154526 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180983958 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172809183 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074872768 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073308488 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066733612 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067106099 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067966986 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093292805 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069414101 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066802585 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133873938 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073827356 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066638849 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067414861 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090475957 seconds)
    (283/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069093311 seconds)
    (284/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067313917 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066350005 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066957944 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067636789 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073417329 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066617993 seconds)
    (290/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.065929055 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.121951813 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.066864427 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06671657 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093408927 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067584761 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066598018 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090496916 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075220563 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117426196 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067148804 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065195558 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072738782 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.065712311 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.065372826 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06620266 seconds)
    (306/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094165823 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068733046 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066952761 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066566371 seconds)
  done (took 32.978118692 seconds)
done (took 34.395057202 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084552412 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100121753 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074789859 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094134311 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082183846 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097516819 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075433007 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079643093 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082309376 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081356012 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080006706 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07375527 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075767491 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075603161 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073952433 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097409204 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080554329 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074789974 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074562957 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066367066 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074398328 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067107664 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065981582 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072768991 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077890775 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0743846 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076356391 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075370972 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066611062 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06663825 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0713774 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075037876 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066454036 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078626094 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075311884 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074665526 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076034178 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078671519 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066156193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066735803 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076930866 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06687715 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07527496 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072880371 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071912122 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072873655 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074412838 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078539947 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097446721 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072072262 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07678885 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077656234 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077782138 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072066333 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071425235 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074445497 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072848317 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097780599 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074486282 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07173555 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07575871 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075355531 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072305003 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074169466 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07444492 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077158086 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078317032 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072557624 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076451723 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073908815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066299987 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074463234 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071465797 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06862768 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077362511 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078856802 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065382658 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070925506 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074278313 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074762557 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066491288 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070145513 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065820231 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071320902 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070351028 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071800083 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070362726 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073095543 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066211404 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074909107 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073625426 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073804103 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065605135 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078710018 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066097718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072683077 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066394946 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066307703 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066067455 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071685582 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066406051 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070484648 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075230612 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065509876 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071496663 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080066793 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066197065 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07360252 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065633428 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066124505 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077442809 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077031575 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066440486 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071541035 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065517318 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071626698 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065892812 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065999892 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06590755 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066518682 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070768191 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066002068 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070281838 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071975258 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078471465 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067849143 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070553322 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070177071 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066139174 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072545253 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066365618 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066166783 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066105362 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079343943 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070565295 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066038798 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071162823 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070347677 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073439878 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064750191 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074202047 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071642087 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070135844 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071562244 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065012553 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076158935 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070335867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069498951 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064681849 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065201393 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064388199 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065260489 seconds)
done (took 12.645413282 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068459812 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117035207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091282684 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093830567 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084229304 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068090051 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07448941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.090424624 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068584923 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09513965 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090291852 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08838396 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.1086755 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066685975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067164653 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068427584 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068358992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07730669 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.092592938 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089919124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10501821 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067080672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.084302533 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085312146 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.079702604 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087784388 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06639709 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068471435 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070211356 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087193405 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092188891 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070343793 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068376569 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08932208 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084344264 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080306175 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068037784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074319009 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06746213 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067204818 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069062593 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.086063523 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074146878 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076958754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06885449 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076146636 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068651606 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081170514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.083720561 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075060629 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081028623 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.089924253 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070636362 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081837621 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066447409 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081436744 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07501258 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067593505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068116136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07246576 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067709273 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070123486 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077149962 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075061972 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070846581 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081249866 seconds)
  done (took 6.664870618 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084878676 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094653267 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083976711 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083540153 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06685332 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067877716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067113843 seconds)
  done (took 2.073620635 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06615946 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090043404 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092490675 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092760069 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084590948 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092028082 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075468866 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068256047 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101610594 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066469658 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089145941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103283191 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072458992 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078882455 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094569246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067381919 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092349716 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067947727 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068912373 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093045155 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071648154 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094106675 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080703365 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067660477 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080401101 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067561308 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116618916 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075251503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06895172 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068432848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068855582 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109590583 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079985236 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081171388 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069252594 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081773742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080479609 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070512403 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077901899 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078300233 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080680839 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068730135 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06642846 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068749121 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071513349 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07805476 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066321333 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069080083 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068600428 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088392454 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066570515 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080444923 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072428159 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073142945 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0731177 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072259839 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076699817 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069710615 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088213441 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068519181 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085459988 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085025151 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080878282 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084918886 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068442171 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08029148 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080035317 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06909809 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069625545 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069068246 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08470798 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070955487 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069379134 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078696499 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06804911 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093886088 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093656655 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067111877 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082136736 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067616363 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068597292 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080095585 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0933794 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072292292 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068786036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073506502 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069918034 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07057319 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06627361 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071717316 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068767818 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073134461 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068385715 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071949654 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070270906 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084495313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066776028 seconds)
  done (took 9.012236291 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068773425 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069609517 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070825021 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069184178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069056711 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068774906 seconds)
  done (took 1.970217869 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088443223 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067947213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080827666 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069300973 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108743405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082886204 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08328853 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077481983 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080839463 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07991336 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083016002 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085733371 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086819664 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070214987 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082363618 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069476325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082661161 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072125453 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080372083 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070959761 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08089817 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070548302 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071191683 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086894869 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071224745 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069861403 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076917766 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079793149 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07925253 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077061385 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.07027961 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071675044 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07570158 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077363441 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08259156 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078122752 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068078419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074286452 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070620101 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071252595 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085241331 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070541432 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.070961838 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07423934 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076895723 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076205843 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074490894 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076296386 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082909716 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075172484 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074292767 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069005307 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071023515 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074189036 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075874038 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076573149 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074332813 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082484429 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070338588 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07591871 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068023482 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071290621 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07701956 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071432469 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075702915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074429006 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075621409 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070142608 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071169313 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068325971 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074697472 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068354568 seconds)
  done (took 6.999736885 seconds)
done (took 28.269698198 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.512818712 seconds)
  done (took 2.013259082 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610393583 seconds)
  done (took 2.149142372 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.497688623 seconds)
  done (took 8.035108029 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.407526471 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475291189 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.743150982 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131766965 seconds)
  done (took 3.325038764 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700924969 seconds)
  done (took 2.248193352 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23864543 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231159386 seconds)
  done (took 2.0274345 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342171523 seconds)
  done (took 1.878714296 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.062695106 seconds)
  done (took 2.597185353 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250876813 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164942756 seconds)
  done (took 1.960718172 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.439268738 seconds)
  done (took 1.980867553 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.23197784 seconds)
  done (took 5.776681351 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235805177 seconds)
  done (took 1.814976412 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230928114 seconds)
  done (took 1.775270463 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.722678894 seconds)
  done (took 3.261944055 seconds)
done (took 42.393133177 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081305761 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084921601 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083654729 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080218075 seconds)
  done (took 1.847070613 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07355722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070667784 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075225886 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071573289 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076452278 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071936947 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073743659 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074957267 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07154925 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072519691 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072067258 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072415709 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074789163 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07321217 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070642581 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075101568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075720232 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072320899 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075034098 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072177105 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070057466 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074574514 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074716665 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071219875 seconds)
  done (took 3.293771974 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077769998 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072498132 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075210862 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073490619 seconds)
  done (took 1.846058617 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076520571 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088363404 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086760061 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076907795 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090167455 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085752993 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.0680146 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068635663 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069961672 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077822983 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068096924 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09474607 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088139437 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078338535 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079993761 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064476411 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06591137 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087276123 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078526014 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078725851 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06957361 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078388712 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067632783 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087937867 seconds)
  done (took 3.422874219 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083395617 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06708205 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086346594 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094926741 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094298082 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067316087 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087978017 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09402456 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140018029 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067365817 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073129336 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067552732 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105662577 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067427823 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085605145 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110098892 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113654071 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070965326 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099324883 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067340606 seconds)
  done (took 3.301421843 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.082828468 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070065145 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071974693 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06652144 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077455035 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074823107 seconds)
  done (took 2.00326929 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067093192 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067485851 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06709091 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067243891 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073583659 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07153067 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067604441 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069460732 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069148473 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068858617 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068491794 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067990392 seconds)
  done (took 2.378694197 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.158157871 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06918652 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070111366 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065211191 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072654622 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067867028 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083428465 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070589214 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087882684 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068354235 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06832947 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071239346 seconds)
  done (took 2.507282782 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185992479 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074743001 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219438804 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146819054 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101383854 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109511196 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107597457 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107288627 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133543246 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095193427 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14750787 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152857547 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10081308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123030027 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087069268 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125203718 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139218605 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15407958 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100606944 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152539006 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134992162 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120238297 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139068141 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098693111 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099830016 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11582763 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072461135 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076688319 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154778368 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11851068 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130220055 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10284512 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087286652 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161559714 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153422673 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126489811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136955604 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07865192 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.114107789 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.123443552 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189743612 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088267243 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147552855 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103725923 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079054112 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120645826 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1104729 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113630579 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.095633362 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083783732 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273955918 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169222787 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.129683908 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084404894 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11865454 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104598239 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.108032995 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113993105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169202144 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147932434 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120676639 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070861971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107861442 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140806974 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125775519 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.104174603 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117778206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090324651 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123622086 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146265155 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123464072 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13065306 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112799261 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085281571 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113394828 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130133023 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117764536 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15862517 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115301655 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071854541 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112805294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093968259 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077117519 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139953887 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071683322 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158777766 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093202261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.116839483 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120627777 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103035817 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102201042 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140202031 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128689746 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0978788 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082397392 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097100686 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113038977 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131193887 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083303636 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102787912 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105044311 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.074972348 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121079567 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073659514 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11115384 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092563878 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113073765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115676944 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076961207 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261101141 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098086809 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.096538528 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123689286 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146305315 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085744063 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079256427 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154875069 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113698844 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099190713 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134013018 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148485634 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.119452483 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095506152 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134698675 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163147763 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088985158 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148833443 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097799623 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081388055 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103093677 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113279015 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105945645 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117826922 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07934293 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111115108 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152936973 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072931753 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092902932 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123356051 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079199454 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079028167 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099912346 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098625606 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093571242 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096880108 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.097518597 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125346237 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115364218 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100639589 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115534701 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09395396 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153614772 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085200668 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099022975 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10150952 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07143688 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126389594 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14228585 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076925829 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14954645 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114372419 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110641393 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112455179 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081184949 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130866872 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076557048 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071502074 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129467552 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106365695 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103587005 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.134933255 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261145755 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118203877 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112225221 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121073772 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122652069 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120842426 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104303591 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088356194 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109826576 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122539113 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071714438 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08857003 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079856885 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100508857 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091295632 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082042931 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131201127 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115853868 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107275222 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108545921 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093932962 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138398147 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076750318 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11810847 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.114935256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091992929 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140669774 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137106818 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123141708 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098082661 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128295443 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072434157 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072862829 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084512426 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118312108 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081840861 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082448486 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105239294 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134620273 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117724748 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122953778 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11759144 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11167767 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144289456 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072058422 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118478141 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133304631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11332248 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10263262 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088712239 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096403242 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132852133 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099243426 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166548327 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107499685 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116320879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145614854 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098193131 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076453087 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100087541 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122222911 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094227706 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.283703853 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096037662 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084802149 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104194916 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076973442 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094055496 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12003045 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109539215 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128558895 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107834889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120886311 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076788631 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106138317 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115311989 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112181475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082466413 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111775575 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152961154 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094722689 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110863157 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139612359 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077253334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134834536 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158808982 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135006664 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082777794 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099804596 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114074781 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118457015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113193187 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132226232 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098179486 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128915904 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104383993 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085459026 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083547337 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094492796 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100606851 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.110025975 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098936724 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107024168 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093005444 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123625164 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098561457 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10664597 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111369291 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098869085 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096011258 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094236587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160000555 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110265133 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157973996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094142502 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132278096 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150297826 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0739978 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076736737 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078191775 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129500486 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082187961 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115507337 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.25637855 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112460801 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115531889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130674606 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094238915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072112605 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104716161 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122155471 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11787573 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094855002 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.097825631 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148403063 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115914298 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076553933 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10884305 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112285903 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099760103 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160918223 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080647229 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106088671 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076147499 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078623684 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118310359 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14088823 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083605381 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101139307 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113576186 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10399994 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11847659 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093153962 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108434578 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126516205 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136337092 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120714526 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087393865 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106434608 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121949247 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142861211 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09807478 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094803686 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157712465 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13787029 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.144511676 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082374222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108331497 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108306035 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103297905 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125477526 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081743613 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147166219 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077391451 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12290965 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093587353 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083303689 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114561454 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110066438 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085574322 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131890052 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107047815 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079750782 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076909852 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256785375 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108559118 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098262469 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074221078 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130155198 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072947273 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124663351 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156345355 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07898685 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100451455 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092972354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08113578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098051217 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098699897 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083613965 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09747997 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157279815 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085541737 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136773339 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125687018 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107023037 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129693854 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100079312 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640693947 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078533243 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138823724 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109745938 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16575209 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097273906 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111501794 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105743598 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111619895 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132713436 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097676434 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178805582 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121244438 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106724337 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074541451 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098112787 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098960606 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084746062 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103704134 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108273898 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106509116 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091829847 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109805796 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113645965 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081707349 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092899256 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142231668 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110058884 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134351491 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131746131 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081944528 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110571006 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124245802 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078230598 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112534239 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136928417 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250570959 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095566061 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081425348 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.095394509 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15944628 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072636491 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143961658 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111783593 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104997176 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10807278 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103926877 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120307191 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0976022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113725989 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089045992 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10495287 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106365923 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082742673 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077966365 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10057757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105902202 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09555622 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093067408 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09739381 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139043941 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071320577 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093992608 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111228339 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130796036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160300352 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.105049505 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082005315 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111861631 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111524421 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106427506 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112877749 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079992344 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079206355 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080138651 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099442676 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.153009601 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105130545 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112771801 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104566875 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149497227 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082314484 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226132787 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092607498 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099667588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087724075 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079630525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094060384 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092580553 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100305908 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109039937 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159574763 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091823225 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087938399 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08888944 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074010076 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081700078 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116901267 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105291567 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108838826 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09808585 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081078969 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096098561 seconds)
  done (took 56.050054396 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103944955 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078306937 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100134721 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.142862101 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120817317 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198176471 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149966283 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187463006 seconds)
  done (took 2.792010401 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067478464 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093904869 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101037336 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083708405 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068591779 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069324474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232592381 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081923626 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067748144 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.095408498 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078562371 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070502555 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431951329 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067669314 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068321517 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077353388 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068641116 seconds)
  done (took 3.486282309 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.37898926 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596442793 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361699978 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075139603 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.836339675 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091115078 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.121407049 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139343809 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07969575 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.515541061 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368706607 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128590085 seconds)
  done (took 18.368929665 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079923045 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07868102 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091186066 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091724317 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079692722 seconds)
  done (took 2.088364406 seconds)
done (took 104.962884525 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079783162 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.194933036 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069048042 seconds)
  done (took 1.95989664 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089084137 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089002072 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090222163 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087418898 seconds)
  done (took 2.033509382 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073274938 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078113544 seconds)
  done (took 1.822164821 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240416958 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17335984 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098021167 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081470961 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08133195 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081598322 seconds)
  done (took 1.927555713 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071725966 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073480233 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073640464 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077047121 seconds)
  done (took 1.969198127 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070008551 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067503135 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069836343 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073557361 seconds)
  done (took 1.956567787 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.082733418 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086568852 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081402361 seconds)
  done (took 1.925348071 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100313719 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094234986 seconds)
  done (took 1.86735406 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078776314 seconds)
  done (took 1.756802229 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091965166 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101761263 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133322647 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115768449 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142970804 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.120973855 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083943082 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088302983 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078583704 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085705553 seconds)
  done (took 2.716051706 seconds)
done (took 22.197034395 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077559563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365588515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362409691 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093248362 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673084377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358325088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971730568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094269865 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.109916444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070307186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087924063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650989216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.962803652 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325902667 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.950142121 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324386317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654149473 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070041841 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069714091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070014093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.95803014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06995936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070534598 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070061854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651592401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374642228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071054421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324520343 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070174122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074250106 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360242779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072541679 seconds)
  done (took 16.159231034 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070566192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119734155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07480305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087545531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072269732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072244985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073396639 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070949789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120209228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073083794 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088788311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069657322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074482675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07170042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091388192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070750689 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073752695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071384939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070815909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072205733 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090789467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070914521 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071593367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071299465 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071145836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084383129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072581552 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070880047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070948497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075130643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076096328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072450044 seconds)
  done (took 4.177602731 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115485354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125841275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076294001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108268541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118615982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072001648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14686435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094986916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122686818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070933188 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088953349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070511481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104984599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072095289 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092689667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071286395 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074560277 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072016839 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071963258 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071604251 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090689188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070928206 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072141956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072041448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072411555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086020206 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07294148 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071510846 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07143035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075266073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076946349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073009195 seconds)
  done (took 4.442279721 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06944566 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073930759 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082484957 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083382569 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068943751 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071237463 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072911398 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070275874 seconds)
  done (took 2.286513819 seconds)
done (took 28.753403825 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077073084 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069817475 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07221333 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088154415 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075031282 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079109086 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066637665 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076556336 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073832888 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073608188 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076476309 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068398154 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070988985 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066166299 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073487276 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067488738 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080440168 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071432125 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080648211 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080832377 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071320987 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073815749 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076238222 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080495869 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081195399 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080724613 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077843366 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073817782 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069812407 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072492812 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071268312 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079867351 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082746173 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083501405 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068911129 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068764718 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072795425 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070482383 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081836665 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077309042 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070632942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077067853 seconds)
  done (took 4.809862571 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082660868 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087363034 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082333822 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081096587 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099741146 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083401373 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08800616 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07988409 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078663853 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087447233 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074906766 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082029519 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079806953 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.074370682 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07846791 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075806264 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080531426 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07524547 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078119987 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078771116 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08854059 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.074039569 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087543055 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080856209 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075899194 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081849454 seconds)
  done (took 3.820303247 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072643488 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085864558 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093803899 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145243827 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111763886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087627104 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082788551 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095245787 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.098228129 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06977006 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07406498 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094114314 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093971087 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075601283 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112359083 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085298784 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084676102 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071391858 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076481965 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097631946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089580518 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085877027 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094675305 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086183933 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069415409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071841884 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074173426 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085156607 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071564394 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08057777 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072113749 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072607847 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069877881 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079236871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071757629 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068271618 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092508458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080912338 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081561487 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106215981 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078314574 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069844268 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094082022 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127988389 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068719985 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073015298 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072499916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080387769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068190321 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096376287 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081078314 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068787843 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070150426 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068844071 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068750627 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071435046 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071412571 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071030332 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079232397 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074765766 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090256522 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073754642 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088195715 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06818636 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078945402 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068074347 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070440595 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068248662 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097650093 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07058975 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11367284 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069967672 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0675006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080174952 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079278138 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074607734 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068767474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088303493 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079521275 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073080216 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077761429 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07215458 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072223184 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099129898 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069676899 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068741515 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067631394 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074836225 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072437459 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069548625 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08094497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068037642 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072060686 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088772653 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068723634 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070173943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072025581 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071591809 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068124325 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080878008 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07263025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070669102 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080099888 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070228367 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071763144 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082318137 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.0760525 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067474209 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071183012 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072451905 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070201488 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07085965 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071860071 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070840614 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075676565 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075343998 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07493384 seconds)
  done (took 10.96921888 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16330274 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156545276 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071758952 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.151074484 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077512747 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081497722 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152101754 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098924506 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070185202 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070587043 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069371838 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11001685 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104988675 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118408751 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081353105 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070438033 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095099064 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115372397 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154988275 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149258246 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092627078 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077963262 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072367497 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070887323 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071531217 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07989396 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089578227 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078784986 seconds)
  done (took 4.533473776 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076378041 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.102457568 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07417517 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09357296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090043709 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070324348 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071848424 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071114361 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.0861259 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079302006 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070100728 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075735295 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073313818 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073045757 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070379824 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075636084 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077262457 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069046521 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074001165 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075367188 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07958472 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094207416 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07544728 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069309855 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072335862 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069483024 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077653724 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081609974 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069659757 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105637422 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067628079 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074586479 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083721635 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069797067 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068679507 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069617234 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069621064 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069653362 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069968839 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068169063 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068003338 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073088926 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068117597 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077316838 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082334925 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076006362 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071460339 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071966036 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072802408 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067278918 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072227732 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072119475 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071913929 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077606456 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073401258 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072460318 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070649644 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096925194 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075871757 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069182145 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068418733 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068456363 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071708598 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078953564 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084550297 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071535516 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068512422 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070097251 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081779611 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08237053 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069033229 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073845707 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067075235 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070115675 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071968501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072612791 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070703322 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067835981 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069355598 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069649929 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070104333 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069013407 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069028267 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071976356 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068045895 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06850152 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069880941 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073467008 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078086014 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069508278 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073459138 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070672029 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069104317 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071714005 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07542459 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072446035 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079433126 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079143901 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069967144 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067988667 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083368909 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072661936 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06851386 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075129845 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073727462 seconds)
  done (took 9.530906341 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092807631 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067928261 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083932759 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091878372 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08001169 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074916045 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079390493 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069108179 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085993413 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07505656 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077436085 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068516025 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080448111 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079470676 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070013268 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078842978 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072037284 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086801055 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083541434 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068239513 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077882911 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08152128 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081865283 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082275051 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080381169 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08178977 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079317724 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.076771108 seconds)
  done (took 3.95513957 seconds)
done (took 39.306439413 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.7986045 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.035316135 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.774763941 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.994781428 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.006230925 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.78980104 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.862933708 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.778487765 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.843579441 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.81783916 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.084871658 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.252005521 seconds)
done (took 65.861478907 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.781345265 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.920141157 seconds)
    (2/2) benchmarking "String"...
    done (took 2.013139834 seconds)
  done (took 5.633308775 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.020009212 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.425167034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.032710847 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767815603 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.773045336 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.195247269 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.54388819 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.218243242 seconds)
  done (took 30.658328199 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.934058087 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.985522906 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.461650282 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.50420252 seconds)
  done (took 15.636535383 seconds)
done (took 63.527397918 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.813823342 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.777909027 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.834493039 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.802434594 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.778269609 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.779314843 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.777498219 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.7807729 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.783453846 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.017722769 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.780153875 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.769364551 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.766962848 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.807024005 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.26475115 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.814224023 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.77153772 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.766964355 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.770299746 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.822208399 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.778997906 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.768096173 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.195224587 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.919631851 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.383169528 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.934720717 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.114018583 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.149228037 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.779119364 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.926867833 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.864339682 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.98837156 seconds)
  done (took 204.98255733 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.769925593 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.558842524 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.638342898 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.781343977 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.031610008 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.949323968 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.875788779 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.180743353 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.776865861 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.779141406 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.886215703 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.777331238 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.921106702 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.762715833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.809835709 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.857366735 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.92913817 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.939932828 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.817337734 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.919055037 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.788459177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.760934687 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.690132447 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.875282185 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.789723648 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.867844626 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.779751102 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.804330157 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.959356866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.894635391 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.779916696 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.789580737 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.950986213 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.642910734 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.774174529 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.783060581 seconds)
  done (took 168.596813722 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.961811523 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.778644308 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.77237365 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.822549124 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.892130013 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.776074116 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.437959569 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.780831889 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.347208222 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.774337187 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.770404956 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.770701198 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.780456833 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.783133531 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.874060816 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.77136898 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.786127937 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.775661169 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.796681601 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.775814683 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.772037578 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.771079481 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.772835262 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77264935 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.770724345 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.772819948 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.93866716 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.025349872 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.773848096 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.77268199 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.284807241 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.786017769 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.976111289 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.775603665 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.863210216 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.824670092 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.886864245 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.77321036 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.990190258 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.844948646 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.773527192 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.771561955 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.837377069 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.786319779 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.781997833 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.772703791 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.778219392 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.838481209 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.018804047 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.774605911 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.893467443 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.259581056 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.778701947 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.774112429 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.772509451 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.774074129 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.358987103 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.776869124 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.77354443 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.780223427 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.780470745 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.774087816 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.782540377 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.157395087 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.845907334 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.9780268 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.778407081 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.995429128 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.775825435 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.273610002 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.905774831 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.775121957 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.773894523 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.773897628 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.77686962 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.774151368 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.776435689 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.895711604 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.784097012 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.889652633 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.855330159 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.897677074 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.779150516 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.782821134 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.615034783 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.847518825 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.809584041 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.601019025 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.776016244 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.14770535 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.538729691 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.775574337 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.7746433 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.787454311 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.775078705 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775189313 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.775617196 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.854966112 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.775441562 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.896614684 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500965795 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.046492695 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.780699477 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.784055528 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.775650797 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.776716337 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.781261902 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.857836045 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.897355711 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.780386834 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.842371159 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.782634942 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.777324012 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.864549479 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.777660589 seconds)
  done (took 400.348788998 seconds)
done (took 777.650596851 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.394117035 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.365631855 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.461201245 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.383979199 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.36215491 seconds)
  done (took 13.676495634 seconds)
done (took 15.385132974 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.853510407 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.858218248 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.794418496 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.862845228 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791616794 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.856869868 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.840662171 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.798348452 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.825957347 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.799050361 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.827779777 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.79900486 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.784975703 seconds)
  done (took 25.402433042 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.009844752 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.016374488 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.843912081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.013055604 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818113107 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.007733243 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940139529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.936092488 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.926727528 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.788399848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.785073584 seconds)
  done (took 22.796685459 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00974268 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.021082617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849884518 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009180135 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.82336426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.018853672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937856978 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.941161067 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.937722989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787861471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.78657068 seconds)
  done (took 22.83497597 seconds)
done (took 72.743414611 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.785092923 seconds)
  done (took 3.496804208 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.79825985 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.954243784 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.7790101 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.778564317 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.785815942 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.779777104 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.779901207 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.779629735 seconds)
  done (took 16.150192453 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.785268703 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.786907518 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.78564114 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.78601737 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.785200479 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.78605648 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.787176176 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.785673082 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.785373387 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785651202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.786212045 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.785658218 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.786318866 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.785530161 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.786857965 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.785803973 seconds)
  done (took 30.288830012 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.788219278 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.786337904 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.786031466 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.787415171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.786177915 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.786068275 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.787877591 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.785616534 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78577376 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.786483637 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786289267 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.787307996 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.786377677 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.786336704 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.78685623 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.787466237 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.787247219 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.788464614 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.79263632 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786189968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.787242508 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.783109155 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783597487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.783657925 seconds)
  done (took 44.598532927 seconds)
done (took 96.246351208 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.503936233 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.438946719 seconds)
  done (took 9.654062071 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.786287554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.783755527 seconds)
  done (took 5.353318104 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.78375866 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.783518718 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.782625787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.783194792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.783489948 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.784328286 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.784267204 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.7837117 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.784041554 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.783926602 seconds)
  done (took 19.547658493 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.784483508 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.783611129 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.784823043 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.782449662 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.783799535 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.783832157 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.785343693 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.784290377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.784334542 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.784148986 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.784121564 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.783901484 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.784153707 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.78508965 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.784725601 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.783617009 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.783584557 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.785637984 seconds)
  done (took 33.827821438 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.786143802 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.784719074 seconds)
  done (took 5.282439878 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.786701921 seconds)
    (2/7) benchmarking "second"...
    done (took 1.786982634 seconds)
    (3/7) benchmarking "month"...
    done (took 1.785414812 seconds)
    (4/7) benchmarking "year"...
    done (took 1.785787318 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784338732 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.784402798 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.785653583 seconds)
  done (took 14.212119473 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.78684633 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.931441127 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.990983208 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.459840027 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.787797069 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.789235539 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.701972389 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.788570829 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.790742499 seconds)
  done (took 19.741079887 seconds)
done (took 109.328920237 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.651258399 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.787966174 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.056798757 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.84117074 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.807898365 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.073745912 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797034541 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.056269607 seconds)
done (took 42.783911431 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.793380098 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.330969157 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.57389776 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.684189116 seconds)
  done (took 13.303265449 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.780697043 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.222705031 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.803067698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.677313509 seconds)
  done (took 22.227766823 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.145988898 seconds)
    (2/2) benchmarking "read"...
    done (took 2.139662143 seconds)
  done (took 6.00313928 seconds)
done (took 50.042567447 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787126852 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.788559806 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.788457284 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.787479571 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.78713605 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.787477793 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.786486153 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.788339146 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787897859 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.788172191 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.787835579 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788623182 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78900833 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788858411 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.787904179 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787931466 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.787492027 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.788718805 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788069345 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787712079 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788482154 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.788091383 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.788542404 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.788642701 seconds)
  done (took 44.628329606 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.788174622 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.788589134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.789034905 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788809317 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.789640579 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.788735125 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.788661828 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.78775068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.789081302 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.788881396 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790644475 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788401734 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.788496817 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.788880178 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789284185 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.789051446 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.790873898 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789406367 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789788803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.789578017 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.789201051 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790383714 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.789831014 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789597175 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.789113033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789283588 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791026359 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.790941775 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789607793 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.789501485 seconds)
  done (took 55.398011522 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.789699579 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.790288877 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.791061648 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.790184417 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.790000136 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.789520256 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.790867739 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.789065854 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790434552 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.79031323 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.790633061 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.790515609 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.790456224 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.790205166 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.790332395 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.789863674 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.790979687 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.790508912 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.791741052 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.790767862 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.790541819 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.790886205 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.790973382 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.791012813 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.791449083 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.790925119 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791769794 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.791966266 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.793232063 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.792060694 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.79170842 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.792092859 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.792089536 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791143541 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.791489798 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.792125711 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.790907738 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.79135338 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.791066695 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792012246 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.79251668 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.793153013 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.791818219 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791729032 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.79285994 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.792169079 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.792525961 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.792684783 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.792329054 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.792222364 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.792303655 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.792795988 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.793372809 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.792235134 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.792297208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.792935785 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.792732772 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.793781347 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.793621302 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.792645384 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.792485374 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.792972176 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.793126156 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.793928005 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793766314 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.794421819 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.793016764 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.79432079 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.794148883 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.793621256 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.793178932 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.79346487 seconds)
  done (took 130.733538934 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.793106255 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.794051381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.793356838 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793577672 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793883588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794265383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.794665476 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795670126 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793284437 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.794569477 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79562153 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.795004054 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794408203 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795019158 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795356451 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794406451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.794301454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7945319 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.795243528 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.794734602 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794834875 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.794623859 seconds)
  done (took 41.200068603 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795783228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795805279 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.795632451 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795152256 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79646174 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795736241 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.796850728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794896475 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795071183 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795064511 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796497425 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795587459 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795155377 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796568966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795720308 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796218712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795442849 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.797816094 seconds)
  done (took 34.047849339 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.795363787 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795437221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.796022499 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.79524116 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.796871448 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.797002357 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796327861 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.797227824 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.795712881 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796689798 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.796387313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796618419 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.796728498 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796092888 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796506523 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.796491653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.796857831 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795758352 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795897176 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.79677701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.798321712 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796668876 seconds)
  done (took 41.245598165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796487377 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796713033 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.796448465 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798363197 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796529714 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797431261 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797760622 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.797168467 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.79607458 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.797256917 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797434212 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.79781129 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.797276657 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798773492 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.798665978 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79834194 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.799059613 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798601569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798129248 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797718736 seconds)
  done (took 37.676745331 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793252016 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792573132 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7923034 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791939465 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794699834 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.792925613 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792863729 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.792313037 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793446791 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79293267 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794038656 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79242004 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792525772 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792414972 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792531368 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793274117 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792225781 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793103793 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792590669 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792774291 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.793722848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.793201935 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793540897 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793052051 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.7929549 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793054741 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792573219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.795613337 seconds)
  done (took 51.931172391 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.799022419 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799347654 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799832001 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799396549 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.799491137 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799501034 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.799175882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.79994871 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.799551884 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.801036498 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.800103619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.799940519 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.798841084 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800386207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800794325 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.800331366 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800148257 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.800382509 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800149154 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799966018 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.80099629 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800070922 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.800080178 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800370425 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800125845 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.802449233 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801079104 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800456763 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801086463 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.80106736 seconds)
  done (took 55.731275384 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.822798771 seconds)
    (2/2) benchmarking "in"...
    done (took 1.822891986 seconds)
  done (took 5.372874966 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.801009201 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801927411 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.800263817 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801249441 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.800721077 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.800544022 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.800707427 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800421903 seconds)
  done (took 16.134988071 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.807167355 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.801611252 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.80268346 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.802036079 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.801943806 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.799571148 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81387916 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.803216216 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.807970382 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.799230957 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.813982695 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.807205445 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.809802475 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807592266 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.808104376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809122139 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.803480795 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.80332174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802745793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.801804465 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803010918 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811062318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810170388 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.802791466 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.809315024 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.817945796 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.812859075 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.803943974 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808631163 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.811864306 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.808182691 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.803261038 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.80426863 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.804428751 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.803851588 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.803903008 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816650997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811746173 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.816984898 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804379571 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803758546 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.803750882 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.811249345 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.81124987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.810119261 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.804975396 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.804025059 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.805118417 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.801980358 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.813852421 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.812306684 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810683432 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804613521 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813616865 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.812022215 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818568889 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.806487962 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.812707581 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.81839847 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.820189274 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.821582235 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.816295163 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811505123 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.805123554 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817967631 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.832635468 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817171062 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.805665799 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.806230451 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.80610847 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.817482177 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821877872 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.82020165 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.806933853 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80647094 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.805903483 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811987498 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.805970084 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817948918 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.814570429 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.80761354 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806717831 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819384678 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.83343034 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.81168457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807612586 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.808118048 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.807330973 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.80469568 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822197652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.807817396 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.807750703 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.803100386 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.813404814 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.804499375 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.807649005 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.802573134 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812383676 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.806115075 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.807409884 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.806854072 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815156039 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.82083309 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807458128 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808317842 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.819411849 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.809344446 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813338358 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.818874707 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.807579604 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808252352 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.805059018 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.818468831 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.80710015 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815975814 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.812763569 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.807938174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.814245807 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.808749997 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.808609659 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821364615 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.838874574 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.808413188 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.808593897 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.816778714 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.818909809 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.809745089 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.816740122 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.808836357 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80979431 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.808985251 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.815668558 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.810400837 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.815165263 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808684284 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815214768 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.809565873 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.810425464 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.810187735 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.815298111 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.807081328 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.815301625 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.815166432 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.81828879 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.809529428 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.816198845 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.821862875 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.807792436 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.817279516 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.808194799 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.809454754 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.810560133 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.81690726 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.810748018 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.807696981 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811545524 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.815293999 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.810888054 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811302626 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811701436 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811565172 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.808614383 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820243994 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.811455075 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.820366183 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.816270101 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.810340808 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.81047954 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.811043094 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.807066689 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.811429998 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.807327852 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.819352776 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.81890284 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.811361071 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.811698678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.81919662 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811065078 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811454963 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810910526 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.819417877 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.82494363 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.811785254 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821641569 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.813831276 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810888611 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.81201442 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.818775552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.817439957 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811580264 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.820138177 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.819122263 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.828055368 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.826513738 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.80993029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.816192486 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.81024195 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.816474128 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.822679154 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.813674911 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.813290507 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.81239429 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819327643 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814620588 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.819902864 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.814017082 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.809787741 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.813502495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.813800953 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.814581265 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813331344 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.819930885 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.8196373 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.813480029 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814914467 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814277876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.818834862 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.81446523 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.809004538 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.809972159 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.814682747 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.813295046 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.824683698 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.813240772 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819888883 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820530145 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.819532352 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.810063748 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.814745524 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821503696 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.819588137 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826521759 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.811851485 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.819700568 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82620301 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.811371722 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.810627035 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.822809897 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.816138547 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.815867915 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.821598118 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.822160602 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.815973744 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.815542047 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.815207611 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.820867294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.815828908 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.827974971 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.816123126 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.820134409 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.81641047 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.812809212 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.817084804 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.822939629 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.821915728 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.813474044 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.82320548 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.815938152 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.817899498 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822550866 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.815598149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.816310721 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.817310672 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823532382 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.824458591 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.827038562 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.813265333 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.815086246 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.814033648 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821294451 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.822247595 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.816565932 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.821639962 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832259193 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.82566739 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.828697356 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.823317576 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817246714 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826890989 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.814715655 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.81806394 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82236236 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.822207713 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.822011522 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.824241419 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.817337469 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823962309 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.816948724 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.823991945 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.823830633 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.821449315 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.818624754 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.821685811 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.818231158 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.818031799 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.817558717 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.822367304 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.817613344 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.824657196 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825473713 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.81347594 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.823916964 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829238587 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823587714 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.824191531 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.823073407 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.823265783 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.81477032 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.815924216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.819761828 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.825436236 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.826934388 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.826659056 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.832851978 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.825145276 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833749149 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.819590594 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.827530731 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.827430658 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.821327305 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.814606295 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.815784258 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.819923652 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831523638 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.82125498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.817382889 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823694099 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.820780089 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.820490612 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.820840505 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.820690157 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.820444788 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.820521748 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832053525 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.817516322 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.829315483 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.827166239 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.820353371 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.820312747 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.820039774 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.816410339 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.829155086 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.821770822 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.826579777 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.825317808 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.818235036 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.822087548 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.820990041 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.822241186 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.821687342 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.821074173 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832698175 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.819211978 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824914853 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.821310722 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.833140722 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821816345 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.833475126 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.822784595 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.818066049 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.822104833 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.821075665 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.81850164 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.819188012 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.827341596 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.823145707 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.819955671 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.826031408 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.823492518 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.819898214 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.827214175 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.822989541 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.826972305 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835867044 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845796372 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.828188249 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.825518875 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.821170819 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.828217613 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.827086969 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.823345731 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.817527453 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.830784882 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837743872 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.830523337 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.828839879 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.823187571 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.828187397 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823374135 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.823006224 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.823451273 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.823717294 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.82415236 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.821317158 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.823986413 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.832907828 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.825295317 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.820650166 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829949307 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.821785902 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.838716468 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.824731706 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.820995529 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824148689 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.823427473 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.829101252 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.831121605 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.824580068 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830026011 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824086579 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.829674116 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83547331 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.827311879 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.830934223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.829080228 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.825270387 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.829665224 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.821907978 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824523898 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825431302 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825194094 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.831196436 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.825250718 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.823126361 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.820763019 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.824580648 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.82267422 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825559891 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832770537 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.837466179 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82976459 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.825548788 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826371262 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.825664848 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.82179917 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.830894106 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.838663078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833287163 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.840615326 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.830153773 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.829991588 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.831144676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833313655 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.838789815 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.821464338 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.832053134 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825719318 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.833509029 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.82188798 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.835162206 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826355939 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.837415468 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.832161081 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.822523687 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.839586561 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.832104883 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827298933 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.832429413 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.834956884 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.831102541 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825932096 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.8265993 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.831977993 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837494703 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.834370336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827109116 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834015675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.822466252 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.832494286 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832221744 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827417297 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.833565457 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.828025886 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.833133258 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.827533014 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.828679948 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.82784028 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.8236764 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.825564158 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.835729684 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.832417104 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.828437184 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835407204 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.833938754 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.826799387 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829599718 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.82839392 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.828641104 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.828379905 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.825054337 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829028978 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.833861235 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.835257097 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.825116056 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.825405981 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.832377134 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829120666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.836611138 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843466866 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.836218996 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.829887295 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.824302046 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.825989492 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.835383942 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.82940086 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.828952652 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834332776 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.834547054 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.829294751 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.829717333 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.829544613 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.836732137 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849874822 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.830087257 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834218894 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.835027661 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.838697662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.830956596 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.829302968 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.830114753 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.828474117 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.837325911 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.837792854 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.830413797 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841063275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.836035234 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.827399355 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.835139849 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.838376292 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.833857959 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.837551524 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.830909011 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.831541135 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.840409272 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.851370683 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830719469 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844689839 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864788891 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.829481933 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.828014592 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.83122275 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836540058 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.831542138 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.830062743 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.831705247 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.83151357 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832390175 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.832938696 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.828856137 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842838198 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.837946114 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.831184528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.831782313 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.828430346 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.830703824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832253549 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.832202483 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.830948105 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.833598543 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.832693169 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.833194278 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.838404138 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.84769204 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.837799857 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.832041655 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.833119717 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.832499362 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.840255489 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.840790056 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84687892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.840248218 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.833185811 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.833073905 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.83931452 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.833538375 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.832651902 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.839513638 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.838146316 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837641691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.83272004 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.848658379 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.841305002 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.842897429 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.830207916 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.834348377 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834616657 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.839533721 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833711125 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.834477868 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.840076911 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.830633654 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.837908075 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.834054838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.83501758 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.841948778 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.841861208 seconds)
  done (took 1087.47231097 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835069597 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834997901 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834842624 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834777139 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83360809 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834301375 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834811401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835518615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834179524 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.835403942 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835311146 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835088075 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83515833 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834648506 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835103466 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834732306 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836019178 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835386291 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.835074593 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834814007 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834508864 seconds)
  done (took 40.292953558 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.835556496 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.835119701 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834949786 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835599116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836208318 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836010798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.836302638 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836108163 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.835838369 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835931078 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836467335 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836359259 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.835572602 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.836321287 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836563068 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835685592 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.838489343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836680535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.835833797 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836187625 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836120361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.835665741 seconds)
  done (took 42.153629375 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.836021299 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.83691249 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.840889951 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.835767336 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.835548271 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.83769957 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.837792802 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.837551967 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.837956939 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.832707337 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.832224303 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.834055913 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.848332221 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.844310319 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.835507872 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.837536006 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.983876903 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.838164338 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.837627317 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.837614523 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.837322207 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.847893181 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.83772163 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.837477145 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.83341309 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.838178784 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.838245167 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.837680096 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.838236552 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.834920176 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842510969 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.838597982 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.843052989 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.845286086 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.833675183 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.834599607 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.842544293 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.839665699 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.837724388 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.839403604 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.851230493 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.860782499 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.839090022 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.849586171 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.838364279 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.839708875 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.846284485 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.846873884 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.83815344 seconds)
  done (took 92.048329939 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838891051 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.838955762 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838508173 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.838332564 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.839440122 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.839031391 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.839567733 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839898837 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.83912302 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.83902488 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.839263053 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.839654764 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839714458 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.838694354 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.839509017 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839539177 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.839411327 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839739666 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.83899593 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840001505 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.839829114 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839545045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839404038 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.840013455 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839482534 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.839512531 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839790003 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.839454125 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.839746614 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.83917065 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.839971499 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840318475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840035339 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.839634107 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.839312239 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840414108 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.839725249 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.840398266 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839161957 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840265464 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.839645512 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.839898521 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840679552 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.841216175 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840049793 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.840949694 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839915311 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.840519225 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.840466087 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.840577445 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.840741938 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.840472927 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841199918 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.841205721 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841035795 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.841238435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.840609729 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.841549726 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.841398592 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.842219161 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.84104776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841125576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.842240559 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.842029913 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.842047777 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.842142481 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.842320214 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841822084 seconds)
  done (took 126.896246455 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841585737 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.842753271 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843318587 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841919322 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842868658 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.842817078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.842315866 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.842692551 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843066723 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842255187 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84239199 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842759343 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.842517638 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84203673 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843025747 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842533224 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84429442 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842946267 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.843270208 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843585066 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.842851739 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843641685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843763305 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843203299 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.844280616 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844204136 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843545566 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843521191 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844226683 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843671671 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.843964404 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.844372433 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844496514 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843149445 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.845354703 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.844627371 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.844216731 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8439878 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.844874412 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843687952 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844307718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844961315 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844541439 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.845655072 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844505576 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.844634853 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845301627 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.845165698 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844545011 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845383701 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845539142 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846053334 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845712203 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845940069 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846280361 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.845240493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844949117 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.846897687 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846961487 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.845678293 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846026973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.844618186 seconds)
  done (took 116.101518327 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845390933 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845015096 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.845096489 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.845154772 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845313091 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.84654533 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845128519 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.844960817 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.84517172 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.845383023 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845946837 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846286429 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847113703 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846544486 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.845824364 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84724239 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846369113 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.846029298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845797269 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.846271362 seconds)
  done (took 38.687444918 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.845639165 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.846277587 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.845719763 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846273096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.845985922 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846578321 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.846728198 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84670193 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847108219 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846735027 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846117036 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8475401 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84638895 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846621702 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847330832 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.847887729 seconds)
  done (took 31.317594562 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.848119733 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.847941352 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848244693 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.847779662 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.847696706 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.846213239 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.847695432 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.848016755 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.8484766 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.848332006 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.848141942 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.84819721 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.847632076 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.84875093 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.847458056 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.847260295 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.847296523 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.848832704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.848294123 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.848003295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.848042259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.848718778 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.848009654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.84729088 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.848819316 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.848528633 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.848646004 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.848432438 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.849026133 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.849285654 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.848326467 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.848488621 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.849314638 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.848411784 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.848800271 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.849219437 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.848286992 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849116368 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.849119806 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.849164241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.848570433 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.849399052 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.850269536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.848664885 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.84894045 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.84953472 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.848755416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.849157151 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849534684 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.850234032 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.849323117 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.84995756 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.849142558 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.85052052 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.849681026 seconds)
  done (took 103.446725395 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850796019 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.850905937 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.850128387 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850497839 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851279498 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.851004746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850483097 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.850656828 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850904922 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.849455063 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850380919 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850257378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849850025 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.850497205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851202544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.849889437 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.850475586 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.850847639 seconds)
  done (took 35.084816434 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850759636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850621283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.850358935 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.850973792 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.850743995 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850467132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851602387 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.852301034 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851444406 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.851125665 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852357524 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.851687788 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850882415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.851873548 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.851919322 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85183414 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.851190679 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852387624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850730876 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.851835373 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.851124822 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85263387 seconds)
  done (took 42.508103537 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.847422233 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.847452732 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.863818461 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.868061017 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.86868468 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.880632451 seconds)
  done (took 12.952619454 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852982962 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853240642 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852371816 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852583442 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852799891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853097086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852838539 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852478995 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853396983 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853546872 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852691546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853828372 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853396249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853467268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853838735 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854689046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854165265 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853546674 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854006583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853548506 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854147488 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85369833 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854517548 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853168645 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853729722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853355683 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853833396 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858127891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853092317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854082563 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853864893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854280588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854231608 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85504787 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85410477 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854737918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85444251 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853861144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854342149 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853698474 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854145592 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854033725 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853832116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854841772 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854133213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854159333 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854622356 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854864332 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85464073 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855133821 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854495391 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855608122 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854857354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854132679 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855178645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855019889 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855125446 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855178031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855508149 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855811506 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856115234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855632289 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856323522 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856113385 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856370163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857128777 seconds)
  done (took 124.162697405 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856558351 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856129645 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857007813 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857843009 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857066032 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85573731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855321961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855207082 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856356067 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856082781 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855837028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856410873 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856615066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856919506 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856642771 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85679637 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856674611 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856673432 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856570769 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857159532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857403646 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856593044 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856389005 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85778013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857940115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857147137 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859296019 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857201683 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857699704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858301742 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857791176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857515295 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8569328 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85753065 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857609205 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858232858 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857845747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857847383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856801145 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856873906 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857991729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858385822 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857319812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857372011 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859146723 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858054006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859194845 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858899195 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858197675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858597351 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858823186 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86015737 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858237105 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858619496 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858321632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85786118 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858484209 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859357949 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860028534 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859135262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858844945 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858463813 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859378099 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85894814 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858658794 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859381851 seconds)
  done (took 124.389663837 seconds)
done (took 2533.334913525 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.903612753 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.935683702 seconds)
  done (took 15.622001927 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.017666888 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.97231473 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.856019869 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.878255357 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.856503294 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.877469748 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.863757978 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.855831705 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.855858621 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.856555691 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.857160409 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.040437365 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.855126076 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.856463246 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.856949232 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.948933648 seconds)
  done (took 52.098309157 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.859345924 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.861073742 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.870600248 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.861144443 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.859207238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.872023102 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.889857343 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863242327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.893845146 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.870961767 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.931237486 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.873919356 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.862227973 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.911446675 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.874886875 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.876660144 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953777706 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.938211955 seconds)
  done (took 35.709489377 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938668763 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.869099053 seconds)
  done (took 10.602349304 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.869463012 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.905766636 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.938482853 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.868566026 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.863080992 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.861388913 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.88673571 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.882271337 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.902376553 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.895796871 seconds)
  done (took 70.664791742 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.867053311 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864071976 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.861705319 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.860793346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.858879466 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.863114647 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.859680223 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.860005564 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.516941926 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.89781595 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.869097426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.866633467 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.861537618 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.862380231 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.866348595 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.884624843 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.981731825 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.865633587 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.866019777 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.865778076 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86175412 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.912681382 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.874604209 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870061242 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.893087452 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.517989597 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.870311164 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.868041449 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.961722026 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.865855139 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.861351779 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.051532844 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.865211129 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.328022707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.130658099 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.869704104 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.876535145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.869856255 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.868513071 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.978928841 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.863409694 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.868410218 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.794959904 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.110272502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.961469767 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.905529983 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.173741298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.878824815 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.862780644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.890671544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.865416102 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.863047994 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.877650185 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.375991657 seconds)
  done (took 132.379759377 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861910412 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.207992648 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029718168 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86434682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.145388629 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07168466 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.865745071 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909607572 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.864750778 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.090656416 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116774247 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96789419 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864674388 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.865580502 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865953647 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863330924 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019350235 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.934830063 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.867653618 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.863286994 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890712996 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102969963 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987035964 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865930636 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.889646864 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.073993698 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985212087 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96653434 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.648677319 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.864006428 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925786828 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.866373058 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.86551395 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865274162 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020389151 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959082889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.949502582 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.866952432 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863309193 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.86414773 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.612286147 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.061786039 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.95930447 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.993267872 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.116340279 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068395132 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.642920028 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.863844535 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.598439354 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.028461158 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.091545675 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.092527717 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.984407844 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.867977644 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.110515397 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.864309603 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863243241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113299849 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092228344 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.960969221 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867796279 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.866599725 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865324099 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152562009 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.867932844 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.959824868 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866945111 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.865469607 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.960070086 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962847297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.097564877 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076780964 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.895971288 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.203659595 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.37028381 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.112006435 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.930524442 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113881504 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.867961581 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866478761 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.941909419 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.7042558 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117891945 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.14662732 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.108994305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899807891 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.57827202 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.866550753 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.091435194 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.08614604 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.123973819 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111844265 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.108696753 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.170850347 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.865606082 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.866706831 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.131024493 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.438225979 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869549998 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214249646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095396305 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.39478869 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.892827115 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168862172 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.997955956 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869200486 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.494164567 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.865987872 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.094657229 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.905906284 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.868184079 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868304218 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.084607913 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.849471098 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86895929 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.761152536 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.928017813 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869277945 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.09910149 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.871785631 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134334122 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869943647 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100067792 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.28176601 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89666474 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.039487518 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113335841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.870872246 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105762118 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11077809 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.983150092 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13928971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.769320234 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.868529122 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151879823 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870109277 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.868428842 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036366408 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869993968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.010146145 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872365453 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.162858702 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889883865 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107497046 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871747225 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.121854328 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.902658478 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919706888 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873084652 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998905112 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871610482 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.788327347 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.025809954 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86927469 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.8695404 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.414527014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.870159481 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017414623 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09542578 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890523024 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94127236 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.534100472 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868742569 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94816662 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.89134152 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.265828866 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.87085848 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.120226731 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.874718989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.870135777 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.86925158 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.153566779 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103581181 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870719342 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866538073 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.77298718 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.862271352 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8576536 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.036927395 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.207978394 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.85625119 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057737535 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857505363 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979270553 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.856068026 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.93787939 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.180861198 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850011285 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.848627417 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845495547 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845870656 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845388567 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.048485639 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.866176638 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.33178326 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.978427897 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109788483 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.149058818 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.078895474 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.88346589 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.846584738 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.096896722 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842532251 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.898317676 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.839654397 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855083834 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059955441 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837331855 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040642118 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.101279072 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.674523649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878398606 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.836151648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835486224 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.830184415 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.973271797 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909320441 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.830414704 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.827238147 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.937847336 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.945480078 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032908795 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.826125742 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.900498077 seconds)
  done (took 901.686350142 seconds)
done (took 1220.546954969 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.819250334 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.821375704 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.822533496 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.820206639 seconds)
  done (took 29.038365448 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.819243925 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.8152787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.814643992 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.816068923 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.821459774 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.81724877 seconds)
  done (took 12.652155217 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.966382785 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.813904027 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.81664015 seconds)
  done (took 21.343855539 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.886529815 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.195948213 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.954267789 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.228145676 seconds)
  done (took 10.011953628 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.815115298 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.814805072 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.815317886 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819335828 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.815557883 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.816194436 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.820742704 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.820708724 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.815956445 seconds)
  done (took 18.101276151 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.950870526 seconds)
done (took 96.853420987 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.88708988 seconds)
    (2/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.994079431 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.9476902 seconds)
    (4/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.87971962 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.495125704 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.036008024 seconds)
    (7/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.899375005 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.872955962 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.108825572 seconds)
    (10/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.038760422 seconds)
    (11/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.888595085 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.896508617 seconds)
    (13/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.971255728 seconds)
    (14/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.09377269 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.322056372 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.985459591 seconds)
    (17/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.039024907 seconds)
    (18/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.324008671 seconds)
    (19/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.874693776 seconds)
    (20/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.967339507 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.026561244 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.876896208 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.23345763 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.902327247 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.889513729 seconds)
    (26/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.312110993 seconds)
    (27/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.872238969 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.855492596 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.162315992 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.96485162 seconds)
    (31/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.147945298 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.871677615 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.633834133 seconds)
    (34/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.92938285 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.172775559 seconds)
    (36/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.118460932 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.971703768 seconds)
    (38/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.869865875 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.733564642 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.872974361 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.644991889 seconds)
    (42/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.888255332 seconds)
    (43/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.25856809 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.997231102 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.880656998 seconds)
    (46/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.641046356 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.211894442 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.253384103 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.896523352 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.100165437 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.123769203 seconds)
    (52/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.083474141 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.997095176 seconds)
    (54/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.904757593 seconds)
    (55/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.908982733 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.652446017 seconds)
    (57/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.886085382 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.607112946 seconds)
    (59/309) benchmarking ("sort", Float32, false)...
    done (took 5.601680351 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.018014065 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.714607018 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12612892 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.0388039 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.039906 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.910333295 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.275944417 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.024025655 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.096363947 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.979461216 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.022960331 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.200456796 seconds)
    (72/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.886341668 seconds)
    (73/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.701665767 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.210550595 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918542047 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.005206116 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.022499656 seconds)
    (78/309) benchmarking ("sort", BigInt, false)...
    done (took 6.883868053 seconds)
    (79/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.889276794 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.403893335 seconds)
    (81/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.20808234 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.099188713 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.277327726 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.887929998 seconds)
    (85/309) benchmarking ("sort", Int8, false)...
    done (took 4.755220382 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.78480917 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.065950768 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.112414813 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.889533309 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.990599193 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.838774296 seconds)
    (92/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.007821464 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.1330628 seconds)
    (94/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.886635538 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.519461337 seconds)
    (96/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.044986849 seconds)
    (97/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.885529762 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.520094143 seconds)
    (99/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.039616713 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905609959 seconds)
    (101/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.762791723 seconds)
    (102/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.997282281 seconds)
    (103/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.891982628 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.673672598 seconds)
    (105/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.890523794 seconds)
    (106/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.373476282 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.908258284 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.864486594 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.891319264 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.857331873 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.642503583 seconds)
    (112/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.885647074 seconds)
    (113/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.36470454 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.253917884 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.186878447 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.978312714 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.195602937 seconds)
    (118/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.91333464 seconds)
    (119/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.264671453 seconds)
    (120/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.044658261 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.913185055 seconds)
    (122/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.025459948 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.497500444 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.162976359 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.99604159 seconds)
    (126/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.92619525 seconds)
    (127/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.021331888 seconds)
    (128/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.888325909 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.888033481 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.520702674 seconds)
    (131/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.928999481 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.886202494 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.967597313 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.967002181 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.758343794 seconds)
    (136/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.885180696 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.5924876 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033544975 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.909626193 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.123932261 seconds)
    (141/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.973237147 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.823133692 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.181083212 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.891387011 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 3.434825869 seconds)
    (146/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.20935037 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.504197773 seconds)
    (148/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.229208418 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.919478819 seconds)
    (150/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.202002572 seconds)
    (151/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.887448196 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.476140171 seconds)
    (153/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.917191554 seconds)
    (154/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045095227 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.586022383 seconds)
    (156/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.096924465 seconds)
    (157/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.249465873 seconds)
    (158/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.048957875 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.924861858 seconds)
    (160/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.914808719 seconds)
    (161/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.908207129 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.886595843 seconds)
    (163/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265863746 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.980263787 seconds)
    (165/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123405628 seconds)
    (166/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.89592347 seconds)
    (167/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.996379984 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.960568726 seconds)
    (169/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.064779403 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.990793021 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.892607038 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.245721943 seconds)
    (173/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.398420237 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.033711916 seconds)
    (175/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984074817 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.130281304 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.207851705 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.919953726 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.00900735 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.583490198 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.895001702 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.192813073 seconds)
    (183/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.047070923 seconds)
    (184/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.050642679 seconds)
    (185/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074745426 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.587491429 seconds)
    (187/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.88910776 seconds)
    (188/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.124798535 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.128407101 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.955717945 seconds)
    (191/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.89400794 seconds)
    (192/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.98522152 seconds)
    (193/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.973303965 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.785635689 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.073182964 seconds)
    (196/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.977682866 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.083517864 seconds)
    (198/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.98383533 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.956627161 seconds)
    (200/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.887407409 seconds)
    (201/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.167603077 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.93275318 seconds)
    (203/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.245932996 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.969775852 seconds)
    (205/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.124487588 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.795964411 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.81836482 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.896456182 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.233349258 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.226408736 seconds)
    (211/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.974891765 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.162672871 seconds)
    (213/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.11414952 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.563501477 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.215465705 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.289086637 seconds)
    (217/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.243198786 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.330982566 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.893122876 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.935774016 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.063967038 seconds)
    (222/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15212008 seconds)
    (223/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.905327213 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.120240044 seconds)
    (225/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.928040457 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.886327037 seconds)
    (227/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.762378073 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.14032336 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.568679593 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.963952751 seconds)
    (231/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.987784173 seconds)
    (232/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.036319004 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.885259527 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.416844065 seconds)
    (235/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.150112325 seconds)
    (236/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.794028763 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.996632039 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.067262173 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.944116545 seconds)
    (240/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.147544761 seconds)
    (241/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.906047362 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.9952494 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.178403785 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.878553471 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.967946504 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.057138602 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.125712393 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.864386234 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.001821457 seconds)
    (250/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.004432117 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.245408052 seconds)
    (252/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.176883257 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.664575756 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.255241613 seconds)
    (255/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.357256319 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.012505779 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.930001002 seconds)
    (258/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.002912692 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.988644901 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.989147678 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.869282371 seconds)
    (262/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.249865495 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 5.660327341 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.719085474 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.293996267 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.154948602 seconds)
    (267/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.974616381 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.857650718 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.032267598 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.885417242 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.874071019 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.251742721 seconds)
    (273/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.990275018 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.91245949 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.73866224 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.941842288 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.186912297 seconds)
    (278/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.853826279 seconds)
    (279/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.876027948 seconds)
    (280/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.086170551 seconds)
    (281/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.976263087 seconds)
    (282/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.87003022 seconds)
    (283/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.86997033 seconds)
    (284/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.987105953 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.531818893 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.936556032 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.123248793 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.874395628 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173122596 seconds)
    (290/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.204656271 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.855071402 seconds)
    (292/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.346253095 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.854031346 seconds)
    (294/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.923118208 seconds)
    (295/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.071309384 seconds)
    (296/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.855609467 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.90975668 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.713533881 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.853445917 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.421811113 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.959294989 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.884873657 seconds)
    (303/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.958221407 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.972168314 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.071364732 seconds)
    (306/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.895626752 seconds)
    (307/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.84796026 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.619126327 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.855567822 seconds)
  done (took 1010.301338151 seconds)
done (took 1012.168333289 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.875721382 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869480994 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.852610719 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.87455891 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.965936285 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.896782702 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.865426863 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.857900601 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.902720394 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.903983155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.853312594 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.894149472 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.85392707 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.853784248 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.854150341 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870139521 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.160084319 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.889724736 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.871853277 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.866031734 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.873704729 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.852287564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.90354744 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.895363451 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.859533855 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.860170124 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.867334352 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.874282628 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.967544399 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.858951543 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.857632833 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.86820246 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.159307138 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.886855883 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.852821002 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.874330562 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.867203579 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.867763486 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.859582689 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.888586828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.250175851 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.902161217 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.857364137 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.855761829 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.855924295 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.864139138 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.856266342 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.863606259 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869513379 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872434207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.243135788 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.919563272 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.860525877 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.856490258 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.869943534 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.856634051 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.858872874 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873769348 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.875701127 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870978358 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.146568733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.896117064 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.860455952 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.874607642 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.867221652 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.27878499 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.898373335 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.864225288 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.250557028 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.908381452 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.278342525 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.910557324 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.861124 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.872742349 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.890481105 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.162471252 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.889521632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.858162916 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.865121702 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.855369756 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.870680307 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873043698 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.862185059 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.858059556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872837913 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.901028101 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.869930728 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.858497082 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.871718375 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.880023751 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.86814696 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.870298143 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.862019588 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.85881148 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.871372383 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.861641724 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.862299981 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.861569494 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.863477398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.871871991 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.248980761 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.920279543 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.856801555 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.855599807 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.862051508 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.874363165 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.251299647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.904223812 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.881254605 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.909574881 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.86060178 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.150059788 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.896356374 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875959902 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.871699584 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.862362817 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.858795973 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151423646 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.281927113 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.920340729 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.863641533 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.857003101 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.87621086 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.861229913 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.856533811 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164795083 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.896830681 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874016862 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.983731683 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.873239849 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.893297365 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.858638928 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.862486471 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.9050186 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877607189 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.89665731 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.862268935 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877182052 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.879093237 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.85761655 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.872781725 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.873700593 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.860280245 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.868217526 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.858021505 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.906673671 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.876272905 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876595885 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.882226508 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.984904829 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.858311518 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.154530826 seconds)
done (took 292.346559624 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.941420893 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.862713338 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.951686603 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.865394184 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.949612695 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.934793715 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.866246966 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.865880271 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.866058304 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.344033363 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.867023701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.872389306 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.861627101 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.86566566 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.928988707 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.86752208 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.86474531 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.301493366 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.867066979 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.940749617 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.861145102 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.868839974 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.868134853 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.345305163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.859291834 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.855652829 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.935520227 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.863911186 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.288269695 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.854286685 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.853029449 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.289545058 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.931659637 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88350786 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.864485156 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.861579926 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.938458184 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.870003633 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.913741626 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.915208402 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.93913532 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.886492191 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.84893094 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.842860639 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.85175174 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.85062103 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.848138237 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.881409164 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.843326845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.852897301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.284104097 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.8492601 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.852111168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.843295572 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.844559137 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.871297504 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.844870592 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.843107224 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.914899069 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.843169992 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.903591958 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.32174513 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.31536876 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.837965232 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.83084265 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.838569195 seconds)
  done (took 184.080383714 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.899922664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.909207855 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.899474683 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.838174452 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.88155749 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900633882 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.838816354 seconds)
  done (took 14.927059701 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.841067072 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.838658883 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88404136 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.883905333 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.838634223 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.991549818 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838121645 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.846940839 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.84451693 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.861250751 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.832935292 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.839793282 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.845558692 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.832090597 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.88270496 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.844834669 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.95027907 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.838177834 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.840357649 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.982311756 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.843295108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.846181219 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.860706645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.846352129 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833886382 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.840284773 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.428108644 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.839707291 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.840364762 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.840928308 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.839997966 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.877764892 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.838819441 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.835393535 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.840129751 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.947621809 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.841019622 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.84111572 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.839840644 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.834561988 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.841321632 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.839649546 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.840050157 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.839533717 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.842541025 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.854983246 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.836753667 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.837577547 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.837632051 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.83661394 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.859382629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.83419615 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.833989699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.840200103 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.872296775 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.844252904 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.831509325 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.832758901 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.832318158 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832750555 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.977471826 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.875991086 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.827581391 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.87239602 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828624629 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.828904225 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.828745706 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.828434601 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.910973141 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.829155127 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872802616 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.828320265 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.981477289 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.846608523 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.829450807 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.82786884 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.828620007 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831110818 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.823280253 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.831498979 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.829062846 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.827980684 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.831248593 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.834981685 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830388717 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937030575 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964710155 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.829322957 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.825991516 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.831338991 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.831681695 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.874988762 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.831164645 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.829358148 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882304071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.940153565 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.850720611 seconds)
  done (took 202.187994169 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.830524701 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.832364428 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.827522751 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840666705 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.827248221 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.825873374 seconds)
  done (took 12.735854832 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.828653548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.83555137 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.829677731 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.827905181 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.827207459 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.82842202 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.82757485 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825463089 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.829131907 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.82378602 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.824772351 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.817465622 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.817985425 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.824612298 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.8207202 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.81752481 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.820361259 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.81990325 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.821072893 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816157959 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.064951546 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.817216213 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8170296 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.81310273 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.820683546 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.81574175 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824757606 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.816358532 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.816278847 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.820399647 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.820701836 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.816253854 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.812652988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.818941071 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.821696406 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.813945506 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.820631634 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.811340481 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817873352 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.818165199 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.811082147 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818209495 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.816671744 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.811057555 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.815309331 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.818460555 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.815877025 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.825569721 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.818419374 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.812341146 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.812172302 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.817729526 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.818427984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.811969659 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.816974194 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818663799 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.81664673 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.818265632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.818997781 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.815460593 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.821914733 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.818801182 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.815227866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.823725681 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.824158564 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.812871026 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.814926522 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824111652 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.817559849 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.818789521 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.812768452 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.819169569 seconds)
  done (took 133.989868932 seconds)
done (took 549.72684961 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.043011719 seconds)
  done (took 8.783050522 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.82685439 seconds)
  done (took 8.627545071 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.346962859 seconds)
  done (took 10.094844447 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.830853843 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863893568 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.831505329 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.825211753 seconds)
  done (took 29.118322159 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.992627072 seconds)
  done (took 8.737986607 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.839722422 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.814677303 seconds)
  done (took 15.467870951 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.904880417 seconds)
  done (took 8.657391223 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.139568031 seconds)
  done (took 8.892468823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.845905471 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.831330894 seconds)
  done (took 15.445533485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.823663069 seconds)
  done (took 8.568423018 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.881552881 seconds)
  done (took 9.649352112 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849985458 seconds)
  done (took 8.669638182 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.836565185 seconds)
  done (took 8.583868719 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.938406213 seconds)
  done (took 9.683507757 seconds)
done (took 160.718294208 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.83554036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.819635859 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.819151705 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.815191579 seconds)
  done (took 29.035335133 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.85710466 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.858406688 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.858913481 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.867693769 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.862705914 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.857592703 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.852312549 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.849828878 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.86893686 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.861013316 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.861510046 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.861717357 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.857728242 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.852329423 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.862042005 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.860065776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.87044907 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.862185183 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.851404908 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.862236399 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.828657885 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.871388176 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.86046733 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.825538849 seconds)
  done (took 46.329722277 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.011758152 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.891722652 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.97399944 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.871690113 seconds)
  done (took 9.495064789 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.877762908 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.878876362 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.888777583 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.927993194 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.953369913 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.887871192 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.854437325 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.847543269 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.833367828 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.879717895 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.955538417 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.873855852 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.966315142 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.826491752 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.008932162 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.826624196 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.826630943 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.877533701 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.930068642 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.942955155 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.826402958 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.878142597 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.884293046 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.87446135 seconds)
  done (took 47.076106021 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.827651996 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.83501254 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.835273282 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.828359367 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.828746114 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.827639955 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.835129994 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.83107863 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.850857074 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.830536337 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.828890504 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.82910064 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.834830565 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.83122651 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.829588853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.843685776 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.844512663 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.829721232 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.833515173 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.835773085 seconds)
  done (took 38.418878299 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.821600058 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.666481021 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.16417047 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.072905317 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.824349382 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.824569428 seconds)
  done (took 31.123880301 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.834931167 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.829018691 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.822483748 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.880929403 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.964525364 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.833348204 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.823202833 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.833671806 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.872672207 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.889151991 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.844837789 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.852393024 seconds)
  done (took 24.029255365 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.822359883 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.825074217 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.826082363 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.838090697 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.834451816 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.830727802 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.830708326 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.8218271 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.838684004 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.843362815 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.832212749 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.835987625 seconds)
  done (took 43.734076749 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906624931 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.703465079 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273717597 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285577109 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3509372 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030781396 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.822123763 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.913979211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.828577512 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.098581879 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132298784 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119769576 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.164085768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.603474477 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01867793 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.380765598 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207186229 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131809086 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951316699 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569834315 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0191435 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49313338 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.532115379 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024156475 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124316297 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.043903396 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.184907703 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871528959 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970169897 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925335384 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927716438 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923356226 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193779097 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043080568 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993227998 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926839665 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330376472 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.626641151 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.921909052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.526280599 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.370453469 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.031567747 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926904251 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924526802 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849437245 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397506229 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122991929 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.925229488 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.624669628 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.925771219 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928069173 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99833772 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.924573217 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.730386316 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602406591 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18960783 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.925618927 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923174877 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485451165 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906666614 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467493112 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.963908845 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.006905195 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.527755677 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365785874 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.073165778 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.925336103 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923623886 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852358878 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.531920853 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029119594 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059898494 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.941352598 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564855167 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205887169 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.287727983 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967213721 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196895363 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.663791479 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.966510275 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141855536 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873483645 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85066471 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.769646595 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852519135 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141187457 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962023571 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.515894734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959330402 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008999538 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.929863083 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938971841 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929201642 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.141746743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.81326369 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927844725 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.177548248 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17623696 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94409409 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.0124975 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854102008 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.928806166 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178947387 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.131432025 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.105885118 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.503462849 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016798676 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.801987116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.052850624 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.793694602 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.045730921 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.190448083 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985170942 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.90980901 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042358729 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.878539321 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174492842 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837208623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.140913576 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.2282541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158121704 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.260015638 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177879601 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991606841 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.937315704 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929336925 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603547531 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.527642742 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.145987473 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.936266745 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381088648 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044884965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.923109527 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863764646 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.551096832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.257891778 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.001506644 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142775673 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.824061518 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.315320217 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858013065 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067349009 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.934597875 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.145672403 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.565371706 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.008199337 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179713689 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118201467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.222131373 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049603992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945454057 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026532886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948745631 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.297359009 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.287794841 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.932798741 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.936118333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.59340539 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.980913223 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93282414 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.933272181 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464305441 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201331874 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950631574 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941083983 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.808170857 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.944323996 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996131807 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936512225 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937002348 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.453781201 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434266236 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.940508226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.575280387 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153426963 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93589377 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.579381673 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109189485 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.946455103 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195323943 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997762869 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.861058413 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.633621207 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.637417803 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935642485 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860595374 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935853534 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93850801 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940051826 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.119904286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.206062733 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982916237 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.535565553 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.032773988 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940548511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.938583311 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93700519 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.454433386 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927632612 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478815884 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.055011564 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063690231 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.946515783 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.862237371 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.936374283 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939596729 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933489546 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.883964994 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988775833 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.551948062 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.130805639 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184732467 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.33554527 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944068095 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.539280087 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.048204747 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.125001865 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.174410418 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.497736972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.040728521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011862103 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.942645821 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.53672669 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.660906814 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502558283 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223908464 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.243279913 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.27435291 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.364863376 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.264911456 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022875815 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163186521 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45800213 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991409448 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.028532615 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873768999 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950612935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.57060211 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281483412 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945096075 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15337295 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222310412 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.247927968 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064621957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141660779 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967245813 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.791553159 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969313803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.466835373 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95732441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.292244349 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131735744 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019973057 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.175891521 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.007654136 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.933489113 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274065923 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980572685 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.638157243 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.289807299 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390264772 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.365180547 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152896738 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944402526 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.377610735 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279830993 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.186530136 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.063956179 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86602482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944316924 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94483104 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.94430017 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.914381052 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.772019169 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.187070318 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944096589 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166082179 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.124014284 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301568784 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.83894006 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.943818674 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941535691 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188212604 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.751840993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100179532 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.316244545 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.516542715 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9482275 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.867163328 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865813795 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.642318033 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.947410541 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908376244 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14762376 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.038731599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.61429154 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378762893 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254985689 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183825192 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.95205147 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202337115 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213999386 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.42759787 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962244612 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.03872299 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.206119396 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.66780463 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.154596574 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167855092 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491300269 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15864548 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393972903 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.909452077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.938444824 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147390948 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.155197149 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.26389363 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109557683 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.656096809 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.947629244 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307055555 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004510733 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.252453544 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119357083 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.024446559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944693377 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021586156 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947965134 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.949452255 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948967297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951705235 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.253742757 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.055726804 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.954121008 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01944699 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936844214 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.509935998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.954705831 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209015472 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27834155 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265202532 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.005144961 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944248764 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955161288 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869288525 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072397471 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.383657987 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215096086 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.059849841 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.074714154 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964458301 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.203927213 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.25190102 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25747323 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21763147 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.829181135 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.705353739 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066053703 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.161135654 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951022175 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.147282129 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158882647 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246852134 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512069368 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.137260319 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140872399 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216120138 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312657004 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948407119 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526256395 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.954227309 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353959544 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.980266873 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.255977962 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198299582 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946739035 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067567413 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.950248225 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.15011901 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.418907401 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.610233696 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284270884 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.794056351 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950231144 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208759732 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264367608 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247267812 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021408725 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952417834 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.634567688 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080242539 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.802106152 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.166315201 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947576815 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149557766 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.65700755 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9536519 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215307114 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254189498 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.94601109 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.852702215 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949195012 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947930712 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162218342 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164691993 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195456961 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951067098 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.957094653 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.756927136 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214729698 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008418993 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872303544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.949781078 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993261978 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.177579582 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966695086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.464022042 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.650556855 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226914561 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.851462147 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965087852 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395236253 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321719945 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267172738 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.467742682 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163879132 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501136893 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.847117852 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329483157 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.950067842 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39912677 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.335130233 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.951069473 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.50976797 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064315883 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.211014783 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275049957 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.967633195 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.678535035 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.972364376 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161669024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305924323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879833447 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.956319516 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.990512313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950843992 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.935742919 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957012932 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.862350641 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434802749 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.797924456 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510303687 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.952665385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.965041316 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.242210358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.515860893 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056105372 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96796803 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954135627 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.637275707 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.232686998 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.196492916 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.504838871 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.03890898 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.954585468 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951570517 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872054312 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.136116375 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.133445634 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228336567 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.359884394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.062805243 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952630767 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.165530758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156349777 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.264580346 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0763015 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143710651 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070202953 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.883152034 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.659054077 seconds)
  done (took 1692.178513289 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957070406 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.962814739 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.959907885 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.989160208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959130854 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958886193 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.992674686 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.036902817 seconds)
  done (took 57.685943897 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.953168295 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.048840552 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.957497891 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.95428423 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.95563413 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.955318766 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.108654589 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.963232472 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.953777022 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.957209768 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.950274352 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.949681869 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.729493987 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.974926749 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.950099191 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.952497224 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.959634739 seconds)
  done (took 76.15427055 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.953846634 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.292812392 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.989664251 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.951705373 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.755026697 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.971422384 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.946330601 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.999945751 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.955275137 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.003643925 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.248748658 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.955852549 seconds)
  done (took 90.896612786 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.969009131 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.956934229 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.956764104 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.961197981 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.960479623 seconds)
  done (took 11.687091304 seconds)
done (took 2199.68405465 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.212526552 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.011665018 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.051733781 seconds)
  done (took 5.934301945 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.102747955 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.147354416 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.260012105 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.265694687 seconds)
  done (took 10.656671508 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.260267533 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.333024668 seconds)
  done (took 6.464476898 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.273655532 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.972835671 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.333331239 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.960717039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.961019729 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.963680087 seconds)
  done (took 22.765139769 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.958626591 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.962773271 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.960558713 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.961677352 seconds)
  done (took 9.716457291 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.953368785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.66347083 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.956070465 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.964303582 seconds)
  done (took 21.410200833 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.150702612 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.074809704 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160503438 seconds)
  done (took 8.259355752 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.177376293 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.066611013 seconds)
  done (took 7.117462824 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.107052403 seconds)
  done (took 3.979291098 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.989944808 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.233065446 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.443113951 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.471479788 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.549917109 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.837053605 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.285959198 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.18183936 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.39797439 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.418362548 seconds)
  done (took 25.682913904 seconds)
done (took 137.650335566 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.301870648 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.977336944 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.161079264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.310822859 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.196099478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.157284782 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.176074224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.308578228 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.99448563 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.981336725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.313621818 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.188543601 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.11989017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.980941522 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.126174796 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.977175194 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.190628517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.320465143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.003123949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.218444107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.184393751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.957644355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.154842838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.975538541 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.192671036 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.112792149 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.502040966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.982976764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.146060821 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.515022906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.114098103 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.363437215 seconds)
  done (took 171.077550306 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.963016693 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.956323097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.958605665 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.957623078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.4353275 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.960205628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.956871533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.958616864 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.346687283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.332625672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.9585201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.428372794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.960018058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957498295 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.959434079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.958173513 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.490181887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.957644249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.958223428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958889767 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958057678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.256857663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958712035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.260672852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.479454905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.958774422 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.958920361 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.960109625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957378626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957866173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.958456747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.961828583 seconds)
  done (took 211.91987153 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.961298304 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960331532 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962643093 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.961295434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.958197969 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.96070499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961610407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.960374873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.603544098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.59459884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961274168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.960652403 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962064919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.958835849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962516857 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.959363049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.960059638 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959790891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.962054414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.959910625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.960851823 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.691803773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.96855404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.6961868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.960922289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.961433276 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.96120864 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.95923355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.960887391 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.962624523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96322776 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.959285002 seconds)
  done (took 223.379122526 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.209309067 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.964492585 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.970234067 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.875473994 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.973301075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.970096619 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.960438859 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.215957495 seconds)
  done (took 20.020416005 seconds)
done (took 628.280945273 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.384842412 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.219563831 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.136730822 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.98386663 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.274946777 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.028747675 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.985541445 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.046689744 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.818506652 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.057930242 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.620652807 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.007520126 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.725073093 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.01076931 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.105616598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.038619557 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.552154596 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.641026975 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.122010794 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.063901103 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.156889853 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.900798351 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.064698838 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.851882181 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.637621889 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.951626679 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.027514333 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.548966477 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.993748064 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.142244352 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.669138927 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.265097662 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.998615531 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.981056064 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.036382643 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.01640917 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.201281394 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.996126251 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.107936396 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692966757 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.084867648 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.712138855 seconds)
  done (took 106.742983477 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.976691966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.970029787 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.970133306 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.968670513 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.978086214 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.968225147 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.967668473 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.968496772 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.969306463 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.969449738 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.970368756 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.976970452 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.968360843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.978217376 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.968962343 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.97060291 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.967860985 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.979032906 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.969009065 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.96941036 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.972777118 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.970527296 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.964734054 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.970783479 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.973115316 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.968648778 seconds)
  done (took 53.142674342 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.972821112 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.123005366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.21250266 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989032138 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.967873414 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.972722643 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.987401836 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.974843868 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.9724293 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.971156409 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.073151817 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.977431377 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986316003 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.214224429 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.984165659 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.972616086 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.972497377 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.967453774 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.132943996 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980397373 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.986686686 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.977362223 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.98928562 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.981504722 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.971126068 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971390471 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.973366513 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.462291399 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.975788308 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.069909566 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.013121961 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.992190378 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.377509595 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.223689755 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.023204449 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.982374982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.974706036 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.077777608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.975280971 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.968938186 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.986432899 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.973249233 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.216123893 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.490963196 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.983222011 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.974669833 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.470771669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.086362395 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.007801141 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976143435 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.218309218 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.985072467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.976261925 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.969765041 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.00650766 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.97330457 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.968340504 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.333260431 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.981134672 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.987374005 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.978066932 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.968399084 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.139926112 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.977802784 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.123734044 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.978285359 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.974845435 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.972007995 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.219238802 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.985459926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.503988489 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.983846268 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.971785019 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.072012512 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.128053212 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.496952556 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.986157219 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.139402476 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.391807919 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.992229775 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.978229217 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.452797595 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.997068036 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.977118982 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.976349653 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.978939344 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.977532003 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.019884509 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.987882256 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.417555287 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.504879496 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.349289792 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.997220838 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.986647279 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.97325686 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.334760054 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.9825418 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.976288806 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.21337429 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.510831138 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.985445378 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.97895502 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.486103164 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.985042665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.98987327 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.979509472 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.226502161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.98830873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.021865323 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.98156595 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.981644869 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.976469356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.994707037 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.980130722 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.977892236 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.481262471 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.093473269 seconds)
  done (took 244.51229579 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.973307348 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.971302866 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.972552541 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.971977598 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.970100546 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.972611737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.971545313 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.971818223 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.97232906 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.971768083 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.970340968 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.975195782 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.976055411 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.979327096 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.976447836 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.973612265 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.57341993 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.973919303 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.972984745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.972920559 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.627493456 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.976426871 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.975170294 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.971151868 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.97344624 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.972371002 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.981923438 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.974875762 seconds)
  done (took 170.409415304 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.981832669 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.08783823 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996918566 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.00472568 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.984611436 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.979609648 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.072923776 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.991942038 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.979606178 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.980951511 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.981384757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.033686881 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.990095589 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.080624526 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.005836828 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.084831229 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.078046296 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.987958556 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.979879673 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.98030744 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.005105007 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.981587265 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.033561573 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.096365005 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.997731557 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.088017914 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.994436594 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.98049213 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.975981418 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.090769223 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.99773931 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.041467904 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.002018454 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.99134933 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.093894882 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.091397141 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.088385609 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.084598852 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.982751103 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.980380681 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.980524668 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.977288745 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.088406726 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.998486446 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.976593418 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.093307456 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.999535816 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.983372092 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.98185113 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.98008373 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.990158111 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.996710173 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.03986739 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.105622087 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.018678233 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.004039725 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.077070351 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.11416099 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.982919611 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.074139098 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.983259537 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.097488864 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.005086492 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.976809838 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.985810192 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.988502102 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.018012841 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.088440399 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.081672952 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.986527007 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.07704052 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.01910639 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.989854905 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.985256907 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.984968326 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.090062959 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.094055554 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.020668155 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.013636701 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.006851947 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.98508022 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.980007802 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.97908725 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.993541095 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.988668289 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.10098802 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.096370785 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.989177706 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.984649438 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.983260464 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.98613338 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.007569994 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097421234 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.015593047 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.082229143 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.04607077 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.055049672 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.998468975 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.99995781 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.991959113 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.042508239 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.000171551 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.996442295 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.311908605 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.037241788 seconds)
  done (took 214.45990873 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.354551827 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.025023234 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.033421932 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.295645188 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.338949979 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.033373292 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.027963404 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.02692789 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.052665729 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.213609798 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.102931661 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.051835212 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.012572787 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.000593919 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.028131032 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.047289448 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.034129036 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.380936943 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.248857909 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.1875175 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.019898291 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.318730472 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.37744652 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.612938027 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.075776912 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.440342256 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.600116572 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158168974 seconds)
  done (took 65.005649038 seconds)
done (took 856.15179202 seconds)
SAVING RESULT...
DONE!
