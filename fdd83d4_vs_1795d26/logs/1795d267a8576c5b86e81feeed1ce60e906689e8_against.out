cset: moving following pidspec: 23926
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.041418605 seconds)
loading group "string"... done (took 0.605886305 seconds)
loading group "linalg"... done (took 9.848480318 seconds)
loading group "parallel"... done (took 0.201893385 seconds)
loading group "find"... done (took 1.570984359 seconds)
loading group "tuple"... done (took 2.283968144 seconds)
loading group "dates"... done (took 1.4960772 seconds)
loading group "micro"... done (took 16.273314718 seconds)
loading group "io"... done (took 0.745839875 seconds)
loading group "scalar"... done (took 47.562858135 seconds)
loading group "sparse"... done (took 14.464984396 seconds)
loading group "broadcast"... done (took 1.365284986 seconds)
loading group "union"... done (took 12.959358501 seconds)
loading group "simd"... done (took 2.761072515 seconds)
loading group "random"... done (took 11.067915654 seconds)
loading group "problem"... done (took 1833.694912686 seconds)
loading group "array"... done (took 27.765995428 seconds)
loading group "misc"... done (took 1.227664395 seconds)
loading group "sort"... done (took 3.993805524 seconds)
loading group "collection"... done (took 20.252845664 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.761642092 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143230269 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.220386927 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.38177291 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239091163 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151826964 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.17035818 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.614771652 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.95796726 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.225735826 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154828351 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.60838033 seconds)
done (took 6.329711834 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.334270244 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.401171898 seconds)
    (2/2) benchmarking "String"...
    done (took 0.179457258 seconds)
  done (took 1.220903624 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078966536 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188798939 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11194598 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098878571 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.113132647 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114173068 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.113516222 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112916814 seconds)
  done (took 1.494762922 seconds)
done (took 3.778212134 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.565245633 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.918304201 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.580973828 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.174324647 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.204923411 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.182441178 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327437353 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.158696096 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.112127312 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.107721114 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.220004322 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.393079386 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.515251472 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.079965805 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.104367215 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110471979 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.095840337 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.716197697 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079487416 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.132268723 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.604635607 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.114598722 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114578872 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122785229 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.20351306 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132131262 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.155213945 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105422079 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.677139752 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102981649 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.234821832 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.0852706 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.175628157 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.259522883 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082513406 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.107031103 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67413936 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.182903336 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117705368 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100274698 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679059715 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082343105 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.251895677 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104303887 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.095736832 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192938465 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.117436662 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.097895211 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.087503639 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.097159807 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163580563 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.459071737 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105816751 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174524818 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.10866005 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.703100242 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09865024 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154146658 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138132809 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105018287 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080593565 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.109065665 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.151525786 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.113790002 seconds)
  done (took 20.351296274 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.163553634 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.170920836 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091471144 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143093442 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145082191 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094478824 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082684263 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.092864391 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128027968 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239426459 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14271351 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174243133 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088508653 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086587038 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144112733 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25144022 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122894849 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1210633 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085929675 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105015051 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142177088 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097300544 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109775088 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112821196 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169508749 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202277839 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110607631 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121662867 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097751535 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.117773058 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138974737 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150330786 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.089075478 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082743925 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188626841 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119400157 seconds)
  done (took 5.386005558 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.22768442 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116604071 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.244889344 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.181125594 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149354046 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183090957 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144965544 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.310624374 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.322044079 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.190798297 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176476783 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112565611 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113006946 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092416843 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080542329 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091704171 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.737552809 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.181600419 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151574887 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.154000001 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104246075 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.095809479 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081039331 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100646034 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094875658 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086283166 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.141854534 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357592364 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.210231874 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10185922 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.399965269 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118971951 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107409004 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114239663 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208227164 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136155832 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142803355 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086199257 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096035423 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223835102 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110450691 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.075605817 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128498201 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131571118 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135098613 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096686577 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095737269 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.251176391 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096852976 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104386298 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.18364559 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.201550647 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141406683 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078828424 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.098162269 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112281151 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088112846 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.395232394 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082159893 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.313844634 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137880874 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097772939 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.076306543 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101598519 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09263805 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.436289357 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108344915 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.923989411 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081856956 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.172888806 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100435765 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104591856 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100226901 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085467662 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117596789 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078544142 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094057971 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096217383 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079956139 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100321755 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10342869 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100438389 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.094288669 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145861866 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.095122859 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118801043 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098210333 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12381133 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101674896 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078521542 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127225512 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096005049 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083192886 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.191388094 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08759117 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122324056 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100036127 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140949341 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095113927 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.21383137 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082813506 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123268344 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099402569 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126326855 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.108195732 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096731756 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098384779 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078069356 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095353005 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145453483 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093181649 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079221038 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098947479 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112720469 seconds)
  done (took 24.65877278 seconds)
done (took 51.035172138 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.486823843 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.121318493 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122225744 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122649802 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.122068717 seconds)
  done (took 1.704239325 seconds)
done (took 2.399280119 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.388485988 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190112684 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120911463 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188464203 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106185678 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19447342 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.192854656 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103726138 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.226801998 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100682986 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.186516643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099453663 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090569587 seconds)
  done (took 2.918951038 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101379131 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.122516162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084384084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11485073 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077820618 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113120187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11114486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121034526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111664882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089251697 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094381222 seconds)
  done (took 1.833906371 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0967348 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118070601 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086001472 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110995537 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080414913 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110823875 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093903528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123682043 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109616531 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091525843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093761058 seconds)
  done (took 1.807246174 seconds)
done (took 7.247756124 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.26896865 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.413422617 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154801111 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.210885149 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.389345032 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.260004769 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.644399122 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.193498367 seconds)
  done (took 13.44437592 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.175468542 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084959678 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101249907 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099868476 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085898255 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101392384 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086723894 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099125457 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085370449 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09833782 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086740147 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099092398 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098287974 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085683885 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099097207 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085289133 seconds)
  done (took 2.339615455 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12303203 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120908523 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10831181 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112899913 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089796564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10562989 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108242777 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092366602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102822218 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104120321 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098827331 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109426344 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109914024 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.089124869 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10860192 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.113683051 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089477862 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107470918 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10879564 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094516841 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111573049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.091413334 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110065731 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110576353 seconds)
  done (took 3.331271321 seconds)
done (took 19.808803391 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.186230527 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099587186 seconds)
  done (took 0.988628192 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.154489773 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155684734 seconds)
  done (took 1.015316668 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116946362 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097298391 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145193922 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119586057 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.099612086 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084074573 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137869788 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098706314 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085207632 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098625199 seconds)
  done (took 1.791297937 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090992365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102986642 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097918802 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.165987663 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098171922 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102328832 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103903949 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088729488 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104904002 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086089159 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108197566 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124809916 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108100215 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112114722 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103836999 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109454102 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101054084 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106193989 seconds)
  done (took 2.624911727 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085990852 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101323299 seconds)
  done (took 0.897855927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093011592 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099685543 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090654006 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104418445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099472536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085027422 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099717197 seconds)
  done (took 1.379548232 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.566634813 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.279017452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.388048139 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.123470237 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144648748 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.397638439 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146409617 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.116679692 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117753875 seconds)
  done (took 3.032322324 seconds)
done (took 12.436236706 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091721583 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.240655626 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.649401248 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.242988959 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.099582467 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142243651 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.334141125 seconds)
done (took 2.512390243 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.36565706 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161567067 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091543805 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096044039 seconds)
  done (took 1.424842532 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08022525 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106913102 seconds)
  done (took 0.90056338 seconds)
done (took 3.04656973 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083420507 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094211527 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081722978 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.096668424 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.081614547 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095443906 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08223472 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.093906357 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.081829952 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128680528 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.080135614 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09628642 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081037071 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096266349 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080755498 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096091522 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08216482 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09581898 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080884426 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095853009 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08019196 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094602245 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.082442747 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09512851 seconds)
  done (took 2.91172652 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109837005 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100903819 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106511426 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091468455 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106731369 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.104043136 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091133335 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100522791 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08890028 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100089723 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105919083 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089310204 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098501703 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10497338 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086306921 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106381302 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.103578693 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085304082 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099275988 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091378477 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104515027 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100732101 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090763109 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103944311 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104195398 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092018202 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100547602 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086255084 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103633161 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.107084817 seconds)
  done (took 3.683886733 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094018405 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092796944 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083906834 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106363727 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079029899 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098487307 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080093135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095184863 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083868823 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096715553 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084990425 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096230355 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0788831 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098998178 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.084831582 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101124701 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10778226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080329093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094457418 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.083739261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100216804 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079803604 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096834724 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083313746 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097120048 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0795561 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096725967 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.082729915 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098328515 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082968779 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099389532 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085204487 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096035932 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093852707 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100307278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.081523026 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103141451 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093800991 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084641771 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093435784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079331812 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096771301 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079511118 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103666212 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083839625 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097861494 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080412188 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099442392 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083858831 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101940443 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079175404 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093774744 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085566758 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098872916 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.085607277 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093839929 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.084521036 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093502015 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085130651 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097457758 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080098954 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094994874 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.102493612 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084240858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114302956 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091064624 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095077337 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085823577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099380688 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08832977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100610661 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107498969 seconds)
  done (took 7.319882484 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100703318 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111293792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086165115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100613478 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083730611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098751981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107385319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084252175 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101303403 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094094647 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09905823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084718925 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101958388 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099019697 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084134064 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099090939 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09435889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099430394 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08326677 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100552292 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084498527 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107332826 seconds)
  done (took 2.829819279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.269059203 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090343144 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154415302 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117402103 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.123910504 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118611777 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087764932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106314223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089056633 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111112275 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110446239 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089897834 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122726654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11174212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111963676 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096906451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103051418 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112120353 seconds)
  done (took 2.853718107 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105390338 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102978545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126722891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087903892 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103296535 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085599433 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111586312 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118018855 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087379639 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10235537 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.112658464 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087657755 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102746259 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08671438 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102502014 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101248897 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086874393 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102951877 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09689682 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111801474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.111534616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116266765 seconds)
  done (took 2.978323984 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106070817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102776981 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.138330392 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091320774 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101561071 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084897148 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109294574 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101711433 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095198568 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101388348 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087734989 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099763689 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112347168 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088759665 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.111731062 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086695265 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101485557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102334311 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085513841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100579654 seconds)
  done (took 2.736552745 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.186392959 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101100251 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118683596 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13188228 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117447398 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102994394 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131459916 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116531785 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102526098 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13314847 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118187433 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102234707 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131119093 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127242837 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11801533 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116640078 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131463894 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131556684 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118782548 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102563219 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.13375148 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117891816 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.131666562 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100813197 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115878253 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116615287 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102684844 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125247152 seconds)
  done (took 4.114272038 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085504617 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09794356 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083418902 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098012775 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082212931 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098350546 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083285085 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098383705 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083693 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098157258 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082155393 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098157003 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083777686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097114554 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083498608 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098713558 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082919713 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097669567 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083599406 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098941826 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0827504 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097261188 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082636723 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097551148 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083661718 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099171657 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083710696 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098001748 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083615409 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098438705 seconds)
  done (took 3.455226055 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098410232 seconds)
    (2/2) benchmarking "in"...
    done (took 0.127091836 seconds)
  done (took 0.95795486 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095738025 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122816364 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084332606 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102172392 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113379861 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085200195 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113192891 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110298843 seconds)
  done (took 1.561874267 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.158855773 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.154840519 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090549767 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1149727 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.155081037 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147924126 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152039796 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09164149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104779039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081446488 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.15107662 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09745087 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106219191 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087253147 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106960763 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097171068 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100904687 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111163405 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.092707566 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101982691 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092059476 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116105029 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107788108 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097109074 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099931051 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092654567 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111567861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.114381887 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087137544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107940746 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088332667 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.101615174 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089414639 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107206638 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102492391 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153347843 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099436504 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103806136 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.090004142 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108283945 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112536608 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085696238 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.108924144 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08785335 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111179498 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.106788272 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092110446 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101789855 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081026061 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101140161 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086127873 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100839558 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084973866 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108777662 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108023284 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098808202 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.102709977 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102508255 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086166504 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099908115 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089041018 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10154101 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093768505 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103824102 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109033877 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091008837 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108025182 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086083727 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.104539812 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086816731 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105637562 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123882111 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094009469 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108864849 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108819404 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086057113 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103836765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091399886 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106978491 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107759475 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091053681 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109974144 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094555766 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102568721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086098407 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109131753 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103981226 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088916287 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097898866 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101407624 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104093356 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0860562 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098756935 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104724382 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084811481 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.105611284 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081777325 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108509471 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.084727515 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.107285688 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091598211 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104492004 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110099666 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092676548 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108986729 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090048267 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.147444772 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103038033 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102330052 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.086871797 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108172331 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083258518 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.109023725 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083139044 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103937772 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085931804 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108082777 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107938772 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087600612 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106855154 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094438533 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109398783 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104110858 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084682749 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103573311 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09001587 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113677519 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093553323 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105349296 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102971767 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087252867 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107196689 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089796794 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105415908 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092767123 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104958388 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100446902 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086081511 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109297363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09132438 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102293811 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088720359 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109520137 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106554322 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087961019 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108932427 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084680541 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098794045 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107673992 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085835591 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102998998 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096222982 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104360372 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087558294 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103760689 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114628509 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086498667 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.108970088 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088085273 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107622705 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092470032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097236781 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104374403 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.089154764 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109925641 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086491436 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.104736027 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085254827 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110197842 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082553105 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.106801679 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098985798 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087803578 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10851799 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086822776 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.106136585 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086019569 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121177758 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118242226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092771871 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107659262 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089623602 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.106584827 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10594336 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090842051 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110272746 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.091603564 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.104750341 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10732477 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091176647 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104048781 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088726072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106468193 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094509029 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099832088 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095751445 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099007581 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.107380447 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094109464 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107431141 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.093388564 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105560361 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090141201 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112634455 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105086529 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091202924 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100018233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091846994 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.113851517 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09284299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11062979 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110828278 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088531216 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10410292 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09694069 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105253115 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109786295 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.086805835 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.10075878 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083163625 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.110151425 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089278648 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103422195 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08465166 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111361211 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119190645 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089030231 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.0998092 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091528953 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112717773 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085722036 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108378877 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104030922 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089544269 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118362396 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082673655 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103477052 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111845986 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092320247 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.102397532 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091829005 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.107443528 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.093345102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106834539 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089271749 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106443457 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112183539 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089733076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101739582 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088777502 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106789749 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083604094 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.104702249 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091524938 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105638565 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103537575 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097926459 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111516746 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.092676444 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106093642 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108128752 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093567511 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.109793062 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089743215 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110722547 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085021982 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100180802 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103093254 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.083247216 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104310812 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086143269 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.109940218 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089251584 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107705581 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.106435925 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095680345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105409813 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092116327 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121995258 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102409659 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08296684 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106564437 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090945278 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103997133 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104118922 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088532948 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111081583 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091105166 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112928267 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086467972 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102659871 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109933812 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087497396 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110609213 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.093230728 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110143369 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084962028 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108113526 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10526509 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097406563 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101788753 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090364376 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10739252 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10899462 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087652012 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.10742295 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085623698 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099659352 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087707303 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.110565487 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107134789 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090846613 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107592482 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087773216 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104689838 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08600757 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110126742 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106503136 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.094462635 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.103213182 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083745445 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100733875 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.092217078 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108592308 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108985278 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087604852 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.107131562 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093725772 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107667274 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085435696 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114132754 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094510701 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.109898965 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116059349 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082635845 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105712425 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09760066 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102750824 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090008447 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105839304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100513635 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095268317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111413654 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093614001 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106858303 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083644935 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.104452019 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.111521607 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089196205 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.107644255 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.088569907 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109307326 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085311701 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106940696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09354485 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.108074645 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112568766 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091760094 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107710293 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087355743 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.110119902 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086203176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101541421 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083196118 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105132106 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111472202 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084908865 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.108857581 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090917097 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105660319 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088471493 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107552144 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087089556 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113555235 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107747321 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089891852 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116586637 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086693173 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10726273 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.109142482 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.092330299 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101305689 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090256026 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108020415 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094748162 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107248336 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.109156395 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091771136 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110426643 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087694377 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.110720337 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091581036 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11118487 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083422209 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.111023008 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113034062 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088721477 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105230122 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089649552 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104767957 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089793545 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110932638 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105047481 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098006509 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.111855338 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088889055 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106550454 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.110966478 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090818731 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111979094 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087148672 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112636433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084683663 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112794223 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.107162434 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09478344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.104697026 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085606294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109133332 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091341496 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10746668 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.112368881 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093850439 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101911127 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085736412 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105975629 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08864283 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116234147 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113433429 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089218403 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107712832 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.088753048 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105203411 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093962422 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103110658 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104966676 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091315264 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112700671 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.089575645 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103967053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090851534 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10791274 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113732421 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090043173 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103736504 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090700493 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.112486177 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107025576 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087345998 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106622971 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095173705 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108872188 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086790716 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102658605 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116137766 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094288776 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113469034 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087598566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110146994 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106096935 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09007468 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112946988 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088919304 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108873202 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089413748 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109819767 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119626085 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083990056 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105790937 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099104294 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110062871 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111762473 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08848695 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107996487 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094667922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113361147 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089425107 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103203949 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.085625031 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107851468 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102011859 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089554028 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116675886 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089579806 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106191449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090910249 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109084826 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.106321764 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089198935 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.102878529 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09588504 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105657918 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095717555 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102534101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084634443 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10692787 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110125248 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089971738 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110247045 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08775267 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.107743342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08479695 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106591931 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11372583 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091113487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.110641492 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090315244 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107547438 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.090277053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119443914 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086856935 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108534251 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119035595 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.094948112 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109578573 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109512405 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097283353 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.112993065 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.090423172 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113231601 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088934925 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108770082 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.112504979 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096532925 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120766822 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090098324 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10303911 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.108715464 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089066882 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103276941 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.095813837 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113392537 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095202408 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109918854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105217597 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096468632 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116315011 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09189353 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10755667 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107874474 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.091631079 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106775019 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090715097 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.105445448 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096994555 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113456508 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091769001 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11457045 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103801837 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100233806 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.113785967 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.096719345 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105186236 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084979211 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102862523 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.107718688 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095344465 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.112038377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090932757 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.109160559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.091952097 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11145022 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092358861 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10863726 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.113233712 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092299811 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.105821243 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093862906 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107129332 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092961594 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105658705 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.093984592 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113241409 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111657914 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099119664 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.11230787 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089829425 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10573359 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110689479 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.088815616 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110402722 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091601492 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105900109 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085605098 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111302282 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095734493 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110565459 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112821133 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09714256 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108513687 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.093755188 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115773223 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.110700324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088292211 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111781205 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.090519292 seconds)
  done (took 60.909281243 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.171693291 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097025371 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108424656 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090374655 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138322995 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109680871 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089217271 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109128378 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090901025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122929093 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106977065 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089638071 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1321016 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142328758 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138232274 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12341551 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107276319 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091816553 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108023129 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091907823 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131192269 seconds)
  done (took 3.176584223 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.119074301 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.128361012 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12734852 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131391421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119664125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.108071389 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.12673182 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125035295 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.13274043 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120827544 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112624048 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126964528 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122292367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.122480105 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102135802 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121452416 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.131525963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120079299 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12760091 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108501233 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119864068 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12706541 seconds)
  done (took 3.464774224 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.102595016 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.110195238 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094923821 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.106311497 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093095118 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.107362291 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.100768263 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.107868524 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.098445714 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.108141627 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105300395 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.089667558 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.113609746 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.089415659 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10563269 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088600284 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.118079874 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092725327 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.114373988 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089824325 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.12734519 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.107075128 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.090181042 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.105736612 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122152201 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.093911129 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111879923 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092073774 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.104114125 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092239616 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106678305 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091928648 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.112241794 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086893252 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.105560593 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.110994731 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.092680671 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107735311 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.088893631 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112239646 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.090823182 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.112146055 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098591496 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.108079107 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.089322952 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10974508 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111865487 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089496656 seconds)
  done (took 5.696840122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.158352338 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16860357 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098700254 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13383688 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134997504 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.126313431 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.116051455 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.154069107 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094052261 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.115341358 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136631527 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13751528 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12406511 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105805767 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.120791977 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117944828 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100475297 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.116182867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.123781202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096899711 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.123588469 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11861891 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.134025524 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115132924 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119474459 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.114742258 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099591129 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127818854 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.135039633 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12718452 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103036184 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123268235 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134773329 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.119345125 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096439745 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.11899823 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136310885 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119866935 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098557351 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113596523 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098753828 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.120865529 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.125124169 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138808545 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102308321 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.120383558 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117458964 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095247503 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.133733776 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119432876 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.127579038 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13548488 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103463844 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118169525 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122619382 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134048193 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09779279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.123502849 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102135143 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.13408205 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.113281368 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.119996576 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115990102 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.116360343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.127643486 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134982923 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101364783 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.12158741 seconds)
  done (took 9.127834039 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134591831 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120364494 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134487338 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135001676 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10091196 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.119757485 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.12006091 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100348392 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119104092 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129323327 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119646881 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.214145307 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.116391625 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108746483 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121014185 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119208347 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.099976103 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119425327 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12124643 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100952188 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.120263827 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135213456 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.120167885 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134706998 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137376178 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098245766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11991468 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10129288 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13543468 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119227844 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136546734 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121078327 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101029463 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135065322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137282015 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.120450852 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092894868 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121105489 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119619489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102213537 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116435322 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135588061 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120264996 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097263852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119752255 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120130721 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116192655 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138447976 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127225099 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128876609 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120520935 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134490463 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10112125 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120489469 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.135458853 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147064069 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136558095 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135255388 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102293067 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135971206 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135046801 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146402316 seconds)
  done (took 8.432892456 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094403371 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108378064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.090092459 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109652473 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089802022 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109020545 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08911414 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.109027353 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090298654 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.108121592 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090405853 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108632033 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090595004 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107801655 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0915066 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111265585 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089281413 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108468978 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090347463 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108175634 seconds)
  done (took 2.791166151 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10698676 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.134496024 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.113094788 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104571379 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113390636 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123261792 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.094953429 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113505243 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095634077 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113663811 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125821005 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10725375 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113505982 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122258065 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126278719 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103478274 seconds)
  done (took 2.608269944 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123758893 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.135282406 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.174807156 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.116273711 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.095817653 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.122342166 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112114423 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094848782 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.111701522 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10063041 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.116699499 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.117829275 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.093970853 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.111856258 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.094368615 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.116509716 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.092833982 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.118032369 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112440977 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.175377414 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101468707 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.117098175 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.114876407 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09879713 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.116398029 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.101654044 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.123341579 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.113842167 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097093593 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113929961 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097380649 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.12432805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.112703796 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.100041108 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.113422397 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.097145379 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114096108 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113769249 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098881459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.11335551 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.095372493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11543842 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093691498 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.116883101 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111165692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.09478804 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11163792 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102160095 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11587824 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.116575792 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.094304369 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.120170663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.099660109 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.125215544 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.122923475 seconds)
  done (took 6.95948918 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114192411 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115312944 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109527919 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110944259 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.114898087 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097163597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115206491 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.097465166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115472912 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091153137 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116768645 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114614925 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096442625 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11610836 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096304488 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114925702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109922034 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.096240003 seconds)
  done (took 2.745341482 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106264438 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113019909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100258002 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113801341 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.094516458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112896321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09197066 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112691625 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11048479 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094411432 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113887329 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094401129 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111908186 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.09420705 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112984383 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094085924 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11347829 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092348966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114027108 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112561687 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095764934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110706807 seconds)
  done (took 3.116437374 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112056057 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.174293735 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.123073938 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.185659064 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.113199122 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.090570182 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.123086874 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.112417959 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111938315 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11126175 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.110511712 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.092312692 seconds)
  done (took 2.26665273 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130016145 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157576756 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114265264 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09441552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127080346 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119328617 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101406414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120187951 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133450403 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138353557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102068325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136231603 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132335995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136760765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128285843 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126794887 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100644432 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120614509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094852048 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168114756 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101830848 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133573267 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121183699 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101078828 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121705294 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13520084 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1346194 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13946436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101061042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134267708 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127890795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121219521 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132968014 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120004317 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113789988 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13486507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121107407 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146944771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108640879 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136417964 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113127679 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127537883 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114589954 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130617262 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134377726 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120594946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129926317 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102382704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120034011 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155771172 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128071771 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135643644 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109013347 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133637378 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134619383 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154645919 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139531596 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135415715 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128423434 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140931217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135178031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109279827 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139277512 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139269959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127957162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135843705 seconds)
  done (took 9.160088738 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169525674 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097120499 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121627179 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139387549 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135290925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101681976 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121397639 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122049647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103631205 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116109347 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176946314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122131273 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137049233 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117161131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121709552 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120981216 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102993285 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136715841 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116418829 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156866125 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121352834 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136149989 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137194802 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116858076 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139685825 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128099792 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120239698 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102080449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122627038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12070804 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132042036 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10195234 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137473124 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116214704 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136464477 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102102981 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121237927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13079611 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102571176 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129097022 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136528864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147517447 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121527355 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102238219 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140558231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12198532 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121724484 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097791369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122301269 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117340446 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140568068 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121293671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139131514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135673656 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120822756 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121559629 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102637847 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121686607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122503755 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109227823 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136338637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121180104 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157267922 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12288555 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102538868 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137151014 seconds)
  done (took 9.04904382 seconds)
done (took 165.620653694 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.162885094 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.180898557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156542683 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152953807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108259872 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.124285171 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142791861 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.158578775 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087744865 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.107616139 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.088519501 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112576313 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.176017452 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088553691 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108159483 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093689694 seconds)
  done (took 2.863536556 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.214536327 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310984738 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.130522948 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.093435543 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.118686693 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111595115 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093887964 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.115274333 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090957779 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124006608 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111384657 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09370347 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124383173 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09251201 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110266839 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111429899 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104394822 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.111763528 seconds)
  done (took 3.085612171 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124324737 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.174648759 seconds)
  done (took 1.119799062 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135287634 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.198215024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323516089 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172229012 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.143151317 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13856101 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153517085 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130416958 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.204560675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135735358 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136954178 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115763976 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144338835 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104800546 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.127932398 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116352037 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127911604 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.125100097 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.124546403 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098502139 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139362562 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117065593 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103853145 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126175019 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196026666 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134836656 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.117267159 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.097993759 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.119433072 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104949535 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124692463 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135688684 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.135607354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.188111167 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122501362 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.202258561 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106121662 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.115996702 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124471316 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097098397 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.122385055 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12155482 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115821012 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11580628 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.096688336 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126343031 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.118998006 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.097175437 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.1273186 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128038747 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.125799538 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105346817 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.202694403 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127494984 seconds)
  done (took 8.118400473 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.926511253 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138880695 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117146162 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.060135682 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15015358 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13180766 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.909757562 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14045026 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285826681 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.92666728 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112190308 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129570137 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.267474261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.296636028 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.196152512 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.380430485 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.786510544 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.129972362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.124146531 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.190095046 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103665454 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148335303 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137823719 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445048708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117378151 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09461361 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12324594 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128275867 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18370743 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.11386083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.336247071 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.224709694 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288937393 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.238029377 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116676339 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093039283 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113226154 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189690259 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324863852 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.256351683 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187839693 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089942108 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113239299 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128920838 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117604474 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110836598 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187711817 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.218575544 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196368175 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119323347 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128596193 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105143453 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128452638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.202397033 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.090851307 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376191134 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.402354861 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092638499 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125572366 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135626908 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.304632311 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093324922 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.286257233 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123481774 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248517375 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11372871 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823005786 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.187435946 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114148488 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124701738 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103938546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122234102 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128516444 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180626556 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398774839 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131987587 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097837679 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113304883 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.275646198 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09432664 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113569447 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185099544 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116972441 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12524472 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113157666 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130883117 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.213329799 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269689669 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131997636 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124049297 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100977873 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130496282 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115752176 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.238751199 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.256484275 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.200207163 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23524863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129516232 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186962936 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211350073 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126792972 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196462613 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124443374 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132735502 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1097128 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273947589 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157723217 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093511317 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120175704 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10262394 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.17940775 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.096044878 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.123021513 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193057007 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.511273037 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1891696 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110325083 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097123616 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125470043 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.203306687 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102783787 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297860635 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125757697 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191454019 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123335451 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109489754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.105441859 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.209171312 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129576111 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104613529 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13049975 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124261673 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.274836789 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256835925 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132916036 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268971346 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19170255 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125922269 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197794541 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125090854 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.212985471 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105788132 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12962478 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117660964 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81971174 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10954256 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125092885 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119732957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.207171974 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093146203 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115256674 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092517695 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110944898 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.849569614 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.096340563 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111182151 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094089252 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126305033 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124752821 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124557859 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10001553 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205755914 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273050165 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128358991 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103120659 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1137611 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182608199 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118392747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093357375 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115046984 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113526907 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104966902 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120573545 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095367576 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.21721659 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181384897 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.279347098 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553547368 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114342765 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114035648 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272450246 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094479889 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.346946476 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124944674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.26486299 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.210003381 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089922107 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.395823099 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193331778 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208185025 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.117638186 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19658122 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111456022 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.102767564 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.205341987 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093090732 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123616397 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.20089058 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113463124 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13271022 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.201059769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114747547 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254849234 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.111076592 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193333421 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118440551 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12908148 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34960143 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095453405 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137897268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.204171464 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099189662 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115021002 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.751352614 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094011083 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12823279 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125254563 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.264681454 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.190556809 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125687464 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124612672 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108654695 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.206353908 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233579058 seconds)
  done (took 48.557105087 seconds)
done (took 64.564089922 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.329939966 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.290180341 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.349180664 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240988889 seconds)
  done (took 2.148292704 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.252221389 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166146891 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.221409325 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092441046 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.232025424 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.092398271 seconds)
  done (took 1.905990212 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.564453904 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.453425839 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.387775101 seconds)
  done (took 2.261270798 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.270868968 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.299078285 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.370862948 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.504918751 seconds)
  done (took 2.409271698 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.297198458 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119900762 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131857977 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.190575058 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.267012706 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.286988171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.162699757 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189057212 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.140282935 seconds)
  done (took 2.688316532 seconds)
done (took 12.266946356 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.319562997 seconds)
    (2/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.382663601 seconds)
    (3/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.269715873 seconds)
    (4/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.284487924 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.156261965 seconds)
    (6/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.277574586 seconds)
    (7/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.311313495 seconds)
    (8/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.172044435 seconds)
    (9/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.346832117 seconds)
    (10/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.170503829 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100821117 seconds)
    (12/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.166774935 seconds)
    (13/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.235074742 seconds)
    (14/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.194698807 seconds)
    (15/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.182782829 seconds)
    (16/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.132260089 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131917917 seconds)
    (18/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.248926421 seconds)
    (19/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.225978515 seconds)
    (20/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.119209677 seconds)
    (21/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122990535 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.190591379 seconds)
    (23/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.218938457 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.209440371 seconds)
    (25/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192680953 seconds)
    (26/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112513297 seconds)
    (27/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.262096358 seconds)
    (28/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.111866207 seconds)
    (29/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.238927514 seconds)
    (30/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.237359605 seconds)
    (31/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100659349 seconds)
    (32/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.120079534 seconds)
    (33/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096203981 seconds)
    (34/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.130456379 seconds)
    (35/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133921746 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.237861372 seconds)
    (37/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.119256564 seconds)
    (38/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.231929946 seconds)
    (39/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.17809007 seconds)
    (40/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.148596395 seconds)
    (41/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.198474424 seconds)
    (42/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091834025 seconds)
    (43/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.133891697 seconds)
    (44/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.084872183 seconds)
    (45/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.219455802 seconds)
    (46/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219785794 seconds)
    (47/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.171500678 seconds)
    (48/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193126586 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.165359481 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.151432605 seconds)
    (51/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.166879423 seconds)
    (52/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202721516 seconds)
    (53/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.102439004 seconds)
    (54/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.104972519 seconds)
    (55/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.12707737 seconds)
    (56/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.133461394 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.224163423 seconds)
    (58/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102893073 seconds)
    (59/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.219884416 seconds)
    (60/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115131936 seconds)
    (61/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.205800056 seconds)
    (62/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.194394794 seconds)
    (63/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.139754755 seconds)
    (64/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.224771345 seconds)
    (65/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.090100806 seconds)
    (66/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106944605 seconds)
    (67/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.286506045 seconds)
    (68/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106283952 seconds)
    (69/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115849107 seconds)
    (70/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.148430656 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.122734427 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099915843 seconds)
    (73/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.13529095 seconds)
    (74/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.101465593 seconds)
    (75/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.108584055 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.15865725 seconds)
    (77/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.217085425 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.144237739 seconds)
    (79/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.1078669 seconds)
    (80/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.085839248 seconds)
    (81/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.104547466 seconds)
    (82/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08350731 seconds)
    (83/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.167436145 seconds)
    (84/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.238352142 seconds)
    (85/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.083381623 seconds)
    (86/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.123460823 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.160990455 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.158888414 seconds)
    (89/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.231544646 seconds)
    (90/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099916227 seconds)
    (91/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.133504776 seconds)
    (92/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166840506 seconds)
    (93/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.092712776 seconds)
    (94/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095213469 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122639317 seconds)
    (96/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127789534 seconds)
    (97/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.085109284 seconds)
    (98/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.135161755 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.159440643 seconds)
    (100/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107957565 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.122486767 seconds)
    (102/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.202774525 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114911985 seconds)
    (104/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106526821 seconds)
    (105/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.1957983 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.123921603 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.131947841 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101232141 seconds)
    (109/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.164085542 seconds)
    (110/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.170368451 seconds)
    (111/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.084525021 seconds)
    (112/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.091555529 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123819633 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114300215 seconds)
    (115/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11387267 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124801536 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102075154 seconds)
    (118/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.120736633 seconds)
    (119/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.10349441 seconds)
    (120/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.123734626 seconds)
    (121/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172861041 seconds)
    (122/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.091199082 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.135347006 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.111163726 seconds)
    (125/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.203862872 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134688334 seconds)
    (127/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.22028764 seconds)
    (128/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.20247001 seconds)
    (129/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085866623 seconds)
    (130/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090334209 seconds)
    (131/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.211485736 seconds)
    (132/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141188688 seconds)
    (133/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.22088227 seconds)
    (134/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.106877802 seconds)
    (135/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100554301 seconds)
    (136/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124867905 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.102344873 seconds)
    (138/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107373583 seconds)
    (139/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.091423631 seconds)
    (140/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.107316898 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101456044 seconds)
    (142/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.202096358 seconds)
    (143/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.085723082 seconds)
    (144/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169982346 seconds)
    (145/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124700969 seconds)
    (146/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.147764179 seconds)
    (147/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.123808448 seconds)
    (148/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105197364 seconds)
    (149/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123857651 seconds)
    (150/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.132772536 seconds)
    (151/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.115142961 seconds)
    (152/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.138146964 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100946248 seconds)
    (154/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.124082531 seconds)
    (155/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.107613519 seconds)
    (156/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.103318131 seconds)
    (157/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.123276291 seconds)
    (158/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110818988 seconds)
    (159/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124941581 seconds)
    (160/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.08623197 seconds)
    (161/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.108114579 seconds)
    (162/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103481071 seconds)
    (163/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114314329 seconds)
    (164/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.21526614 seconds)
    (165/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086228708 seconds)
    (166/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099978149 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.108173744 seconds)
    (168/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10152804 seconds)
    (169/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.106960973 seconds)
    (170/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085959882 seconds)
    (171/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.106312361 seconds)
    (172/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085023424 seconds)
    (173/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.108494648 seconds)
    (174/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085491612 seconds)
    (175/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.086093211 seconds)
    (176/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.106503374 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101279381 seconds)
    (178/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.10614488 seconds)
    (179/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089943556 seconds)
    (180/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.107348273 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100577723 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107790334 seconds)
    (183/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110103347 seconds)
    (184/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.125633179 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101970359 seconds)
    (186/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136143287 seconds)
    (187/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125076122 seconds)
    (188/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.086549274 seconds)
    (189/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11475736 seconds)
    (190/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.135996214 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.115065522 seconds)
    (192/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.111326649 seconds)
    (193/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122942047 seconds)
    (194/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097788501 seconds)
    (195/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.108449518 seconds)
    (196/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.085452631 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12330538 seconds)
    (198/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156150958 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116542282 seconds)
    (200/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115854946 seconds)
    (201/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086546739 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123162119 seconds)
    (203/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109285399 seconds)
    (204/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.124180453 seconds)
    (205/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.086201765 seconds)
    (206/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.108579397 seconds)
    (207/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.10697762 seconds)
    (208/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.108189264 seconds)
    (209/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.103960455 seconds)
    (210/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.114783082 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.115580464 seconds)
    (212/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.107487104 seconds)
    (213/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086664018 seconds)
    (214/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123647015 seconds)
    (215/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.092566203 seconds)
    (216/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107468091 seconds)
    (217/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.084308624 seconds)
    (218/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115492909 seconds)
    (219/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086596434 seconds)
    (220/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.085555304 seconds)
    (221/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131754525 seconds)
    (222/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.09405672 seconds)
    (223/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116197375 seconds)
    (224/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126795511 seconds)
  done (took 32.510882773 seconds)
done (took 33.373079185 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.535139253 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134321657 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.105047353 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128668458 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.192450785 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107359881 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.136508561 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.132631728 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.109509563 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.124464666 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.117435582 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.110371764 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.128068492 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.191642966 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107517378 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.121652145 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120266579 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112232366 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.135580508 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137652292 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192216167 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098782126 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.133671105 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096237835 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.191789403 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121963922 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127829611 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106021909 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133730562 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102133699 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.127463426 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119100949 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114517974 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.13720084 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095757554 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125089131 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09457648 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.117143942 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126650498 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.104736949 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.134418326 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.104494086 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.13098528 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.121433298 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.105313495 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125739197 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094874489 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133107569 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.117394516 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.105609944 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122799276 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115163161 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.124847574 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.094609946 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.118698698 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.120892081 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.110857505 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11749484 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.110435894 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118398202 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.099116472 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116832513 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.12842367 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095839964 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.124165903 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097304562 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125507094 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.127350231 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.102808526 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122814291 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095276052 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.124797097 seconds)
done (took 10.041405402 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.1055364 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184715872 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.192202207 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.195858042 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.152986913 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.13865116 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140988603 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127828342 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137055881 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145582401 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159799041 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.127207569 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.226587 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.109712263 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.138788962 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.127994162 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.110863257 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129980293 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.200828241 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148127935 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158578908 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.110984293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159405755 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140618613 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.103147272 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.160170106 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.130339424 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126690781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103280389 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.134277437 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.14679823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104242043 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.12840904 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.119247233 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.13773068 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.132953794 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117014675 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.129198666 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125801626 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100935779 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14135534 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.138468745 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.101374528 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.140520284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.12760681 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114086735 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.13467923 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.134207644 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.105825892 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129036549 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105187636 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.159503444 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.13383743 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.138578739 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.112058155 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.134161699 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.110837465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.132602465 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129698409 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.110154333 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125607098 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.10421609 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129460682 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154595904 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.128865016 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111776562 seconds)
  done (took 9.762031345 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124453164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160901294 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136776339 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.137444402 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11019621 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11656663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092548673 seconds)
  done (took 1.789446108 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09616648 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.196583763 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.192785461 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.192617859 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.186580029 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.227349928 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117870879 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.118822513 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158683605 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.105891773 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.192711372 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.254542049 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.126476197 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.115752173 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.196335913 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119251952 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.197199165 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.118232326 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.106777867 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.193606333 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135710261 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.151939849 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.135342125 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095397525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.187449641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120469208 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.249844446 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1364221 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099927852 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.129126491 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131430447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207132758 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.190809888 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.111218899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122738505 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.193653372 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.186741558 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131618251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.203512182 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.125300978 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.187666302 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.106251109 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.133443452 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.133072899 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.108388917 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.175643546 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.13765037 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.109957843 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.129439457 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19531227 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.132948049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.189456039 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.104948039 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.131996661 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131690513 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111397322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137712179 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.107459786 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.219641755 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110400514 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188597224 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189953828 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.188131762 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213833269 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118919012 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189867239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.186777528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.130772653 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105141481 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132181621 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.189423473 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.131818763 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.108912711 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.176228445 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.136000109 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.188979745 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.191066375 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128177311 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.110610647 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.124125941 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.128767279 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096151205 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.178583469 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.131822428 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104022707 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157644297 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133762587 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.110488374 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.12419614 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146994209 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.107964053 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.133383464 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.136987692 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.107428185 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137723353 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.193851259 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.133623218 seconds)
  done (took 15.363910502 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.097371771 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.120211937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.103133123 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.121629386 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098135076 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.122115575 seconds)
  done (took 1.58446559 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13067857 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.13563296 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144592808 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.111969462 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.192521142 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.198921325 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.200988306 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108324998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.15205847 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145470961 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.202196284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202465195 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.195990651 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.138558928 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202327857 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137656485 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203690321 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107123444 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144489519 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129917808 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116072542 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.137080278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12971285 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.192319618 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.138515723 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.112991776 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134725213 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.142354131 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.118151553 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.134736151 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.136653597 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.112815563 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129954603 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13179337 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.22150913 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.105908192 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130478561 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.142531142 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.113004919 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.137819657 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.201761586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13156189 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.14273805 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.115495658 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.133374582 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12982458 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117620065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.133158665 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.201150326 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.141121336 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.142350478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.110149687 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.137490472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140367887 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.129740385 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108884158 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14083137 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.203344092 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.138476251 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105600387 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.135716469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.1386877 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132909496 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115456146 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.137332284 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.140303343 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.106621856 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135370545 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106256956 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136682172 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141362784 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.136114511 seconds)
  done (took 11.220825969 seconds)
done (took 40.624176398 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.157736074 seconds)
  done (took 2.081434324 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.003432514 seconds)
  done (took 1.929209494 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.487844839 seconds)
  done (took 17.447096166 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.567602301 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.666742241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991056426 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17450785 seconds)
  done (took 3.324890926 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.986128458 seconds)
  done (took 1.933363038 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.335294414 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.289528115 seconds)
  done (took 1.555524398 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.865512639 seconds)
  done (took 1.80414655 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.177718325 seconds)
  done (took 3.113321768 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.394032737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201912945 seconds)
  done (took 1.542646992 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.68474905 seconds)
  done (took 1.626378966 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 29.466118102 seconds)
  done (took 30.409307916 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253221789 seconds)
  done (took 1.20732532 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.32116206 seconds)
  done (took 1.266420644 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.497639666 seconds)
  done (took 4.442463901 seconds)
done (took 74.615077118 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106778065 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.133582123 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110535365 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.131156415 seconds)
  done (took 1.418711584 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117675394 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133057572 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.113635219 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.133442129 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.142379547 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.110101704 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132324113 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140141051 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.109214097 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.135179588 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.109518115 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.133076602 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.134675947 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.108556346 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.130076131 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.111424424 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.137369433 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.133172617 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.110176271 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.133773964 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.108123131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.135412686 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.135859842 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.109649261 seconds)
  done (took 3.946630494 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.109527818 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125314856 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104359058 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124517459 seconds)
  done (took 1.417275833 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117567265 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.148896229 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.14778324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.117021014 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150370921 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.147275614 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.104943929 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127941868 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10696849 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.139436755 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.106204552 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154377015 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.150063829 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133616654 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.119511683 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.125286771 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.111464647 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.149765513 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.139358091 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.117575308 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.129516294 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.116055523 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130450932 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.146104754 seconds)
  done (took 4.08810142 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218778096 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.122307953 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.158658008 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.18759814 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.16089936 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.106719791 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.161032879 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1366944 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.115044146 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.135990293 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.137612619 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.195531429 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.110784206 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.136507988 seconds)
    (15/22) benchmarking ("StatsBase.var", "Float64")...
    done (took 0.147491821 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.109236227 seconds)
    (17/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139982138 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.138397533 seconds)
    (19/22) benchmarking ("StatsBase.var", "Int64")...
    done (took 0.183519948 seconds)
    (20/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.111056473 seconds)
    (21/22) benchmarking ("sum", "Float64")...
    done (took 0.138397343 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.146038954 seconds)
  done (took 4.149996946 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.110044261 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124274234 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096159438 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125119562 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.110509184 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128710511 seconds)
  done (took 1.648871351 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097665393 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.117696827 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096012541 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118403253 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100907739 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11944953 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.093984501 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118414895 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095357388 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118586742 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095848104 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118060654 seconds)
  done (took 2.244250039 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.319016072 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.099038103 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128143181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.124164439 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.105337417 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.124199879 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.140853225 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.101038972 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265339065 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100218882 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141403638 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.20373205 seconds)
  done (took 2.812055591 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234409316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108935565 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295441596 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40157675 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176770345 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186278427 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293042543 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186733691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.210675593 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155129046 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218942775 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174370711 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172374838 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203604105 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155301359 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183296675 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195324361 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224822287 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165340406 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258202391 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185295713 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189018097 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205496256 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16876776 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127709085 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176095276 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.132947395 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140436945 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19482455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191961674 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195428449 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165513161 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156852306 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227665353 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273099491 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203096259 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.337951037 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149098075 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210757582 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.20591756 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287347024 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156034025 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220957999 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172268503 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146043455 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20593769 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175734981 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205680406 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149634824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157087149 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212226088 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19632981 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.23526112 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1267243 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.340355644 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165729914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139770586 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195356 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238514957 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219136035 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187543664 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.134126822 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203597929 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20544073 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203632651 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164418984 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193716103 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140472898 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197217135 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.220825474 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229438865 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188779596 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.20960995 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150138529 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186025196 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192015409 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171494253 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20223032 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181821481 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.106946209 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166294041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153033995 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141198899 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.207430619 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110590266 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256643261 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123922529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.209797625 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255129647 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17654416 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181014026 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185279356 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190626117 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162224341 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110721103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166046443 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.181558563 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176437478 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1446177 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176280247 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135568768 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144456324 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169956205 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.135131438 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179784243 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.12511646 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188216383 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185648873 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.148549207 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188669671 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167722707 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.178283081 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193065715 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211237814 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147052277 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120075533 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244143976 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177858084 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12969398 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196408875 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239082906 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.187238255 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127793619 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218973583 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219503452 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157016203 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2148112 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157484873 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122031743 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171380039 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179368722 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176441806 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172677248 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142052229 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173158477 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220825439 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.139501123 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123922325 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196382268 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142293041 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141268379 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1606991 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126952867 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.158986695 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170702768 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.158491436 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173890169 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178516878 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170317151 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178530022 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132778658 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249615734 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146217528 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153898829 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162583231 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.132518098 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.207673922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210798797 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142913301 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210028199 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193450944 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242767129 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185103161 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11757862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202617832 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144903433 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.133792109 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189473142 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182730261 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182405795 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21055244 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238227803 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193856359 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.173542314 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139415537 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21456431 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.197495196 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177692158 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.135616677 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180971762 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214963319 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.107958962 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140646533 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.115121831 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155246984 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145856712 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145671047 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207436986 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185469454 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206395069 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181429329 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155701401 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208047963 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.141437292 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187369597 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198388789 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154226785 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213130242 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205034299 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18900302 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158112244 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194465922 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.134928109 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11111067 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.152318382 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191130083 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147787796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147631547 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133771921 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.232519438 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198189679 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167278478 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225284228 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189980467 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245186544 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.109277094 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.184036209 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192979585 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177576139 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.201588263 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122509052 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.17918478 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203969624 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160953379 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24524893 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181566346 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189528053 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228657333 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176836497 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144120191 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165238652 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188099112 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129437367 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184294475 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162302727 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152619833 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175070999 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.155579343 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116506382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233750055 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158476793 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208616991 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176374084 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198486997 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138583403 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160387875 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179331712 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134901447 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.133073301 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193918033 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215100438 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165481529 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179648805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197195054 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143210652 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.3276217 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213805109 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235706865 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125919324 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161859911 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182763502 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179359808 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186274325 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204312205 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16166567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203516804 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178687913 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.159559684 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149845189 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136489855 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167391253 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173368005 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152963285 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178149173 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.157933466 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212391081 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161883809 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178365665 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184719232 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.139533236 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.173852119 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157600504 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226162937 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178552148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19949103 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.175005264 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190491686 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23684591 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112123798 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141689271 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.115208404 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205858331 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146098933 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179133485 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.200288946 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243521897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181643687 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19055095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151154583 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.111965 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178876862 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166506423 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24342713 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131713442 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15587966 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216700635 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16891961 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145840745 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184480758 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30450441 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161092841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198107013 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107757352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.314036331 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115710475 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145591369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178503056 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193465994 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.165797688 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176318786 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182945761 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161292386 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179208623 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1540788 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209488231 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256769998 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19460578 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199720715 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.160316206 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179223188 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183459539 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199060858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160863953 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.162666054 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15244344 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233457678 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.214803366 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.151065065 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18395059 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183689777 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179777147 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200708925 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147283702 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211900829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11723459 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189347826 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157958281 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14150828 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17901682 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200996664 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147687395 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198153602 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178347012 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145107961 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115056877 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170579813 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178849203 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161694811 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.143165491 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205511328 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.112480576 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183086984 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206203175 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144800491 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174493823 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160835515 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12080561 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160870488 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161841616 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150344069 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.159218719 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229045674 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121636123 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223992307 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198795425 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188029078 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180117074 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16083756 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.652548899 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.144777634 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207192114 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163456555 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215803399 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166699899 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188630944 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181761094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165560009 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191840501 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16743041 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24422929 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188967067 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182511278 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118037633 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160907027 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16299187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.148678682 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169123289 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183907129 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129209249 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156887249 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180953893 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16312582 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.161751274 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126705393 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234596851 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137229996 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235115159 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205586102 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126984605 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18719099 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228883874 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116015214 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185128622 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220359509 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132029524 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172421086 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.14916405 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152360926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203030635 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.11086756 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179727566 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179897562 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182499318 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184483973 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155346235 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18072442 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159366181 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181110551 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115427002 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177739911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179431531 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14748106 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.117200508 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175267005 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178585628 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.17754365 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143710534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162095732 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228869606 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.109528744 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149879825 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315139758 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178140808 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217020688 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173745138 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150086005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160741207 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147399236 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17559478 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179666014 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.144829738 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14677258 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.122361319 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.201453958 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175824125 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177513417 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201018334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181812006 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211879094 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162113988 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.291014355 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15359933 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174702912 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.121684789 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.147293233 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157167261 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123219221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163188987 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.235315204 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200731533 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145063677 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.162748657 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147363911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.109434217 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147159058 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181499833 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174124988 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17937972 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163538436 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107095188 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163865504 seconds)
  done (took 86.865460612 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17106694 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.164237048 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.170404388 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221661975 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190900328 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28566753 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228123339 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251303903 seconds)
  done (took 2.722933186 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.112526316 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.146973037 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.154065931 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.134413887 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136581551 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.434808851 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.150833809 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.135097232 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.19877603 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149637948 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132169052 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.692821882 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.131919159 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.13207535 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111660812 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133795624 seconds)
  done (took 4.125195689 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.413129735 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547187756 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.8005083 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.264001582 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.24783739 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.197022143 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.738079175 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.184563856 seconds)
  done (took 12.435054731 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13942842 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.152882391 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.363987274 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.23335416 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.1721703 seconds)
  done (took 2.112361561 seconds)
done (took 130.927820544 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110889144 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.154978254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11107159 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156872143 seconds)
  done (took 1.568929081 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.16480205 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.123067341 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097281385 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121737329 seconds)
  done (took 1.555492763 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.548894993 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093960163 seconds)
  done (took 1.721419816 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14187425 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.157205428 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.157581015 seconds)
  done (took 1.512332308 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118843565 seconds)
  done (took 1.16447906 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107851524 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134391255 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.20211472 seconds)
  done (took 1.496457388 seconds)
done (took 10.0693036 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133822429 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.443952233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.422751513 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120525987 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.735558225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415077637 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030365883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.168956446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202298988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128326284 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149026356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680847012 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045152157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352943868 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.029473222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.47359125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683988511 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129784163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.10776381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12902853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038959341 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10064507 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128710797 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102947994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707617999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.415180525 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.127371851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.489877958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100328976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132117011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390328734 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127836014 seconds)
  done (took 17.487132842 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146569789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196866686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137408038 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102509893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.13382325 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101611483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139914042 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142749469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204004261 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099282664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.149959226 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126636118 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106195872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.127554486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.125632765 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127570272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10354656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.130485814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.135952282 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10293006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149767774 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09860312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129741402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.128477154 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.1012875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.153931765 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10181013 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.143116226 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127725619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105632843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132353221 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100327255 seconds)
  done (took 5.167194084 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151835453 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204977037 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137919792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.162411915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.182905027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104054343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.220442573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170950716 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.206326737 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128082933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.123815888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.128675493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.169555002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102098423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153242477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100744883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132012425 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10319465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136522124 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131229637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.122888307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128326874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102136801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130364315 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.129068268 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129527679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128141546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.142628523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101500847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132859562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106716255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129350473 seconds)
  done (took 5.494788219 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.117500189 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.142655462 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.123375447 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.15376169 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.133664015 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.113988096 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.1415368 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.107743667 seconds)
  done (took 2.091187334 seconds)
done (took 31.291543299 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126700241 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.148423091 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.120373224 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.141029626 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.21088646 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.104882804 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.145821861 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.103201221 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.143418364 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.122490726 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.12808816 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.10693637 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.149658297 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.138438709 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.194153977 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.116103728 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.19728548 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193479958 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.134930519 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.114745773 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.13530651 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.203325924 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.112069257 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.13670155 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.20497009 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105265099 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.19130297 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.14064941 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109775443 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.133323972 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.194533491 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.112308963 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135229706 seconds)
  done (took 5.805961697 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.214784055 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.225038312 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.107333654 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.135241046 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.223823885 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.105980511 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213915158 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.135224958 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.10649459 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.134208038 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.105564773 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.21541589 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.250442622 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.206107946 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.280496571 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.225554283 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.21220832 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.222173556 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.211121863 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.229115447 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.213645075 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.10511463 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.225012217 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.226944868 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.134663478 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.105413999 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.248773502 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.2216084 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.276968355 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.181420013 seconds)
  done (took 6.764940108 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.115834045 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.145143998 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127629861 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.205497768 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174839538 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.143396701 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.115449095 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.15411207 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.12945309 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.130541661 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.112871611 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.169946988 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.147568741 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.113137942 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.136365012 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.12205196 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157237775 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131451204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108819172 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.152096898 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121698913 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.148638502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144446296 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.11294271 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.129684497 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113224311 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.137213952 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142383957 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.111070886 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.140738032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.108102166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.135593709 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.104874303 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.140056693 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134333581 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.116224436 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.15884312 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111905606 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.143718632 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167304626 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111014656 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136856858 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.151439398 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.151687783 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.132568999 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.11520437 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.144067345 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.139959925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.102317273 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.150581267 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117744673 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.131697831 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.155049179 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.102517667 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129350182 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112211465 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132241144 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10572457 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.141644804 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10663237 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.158239895 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.138324351 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111430297 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1328644 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.109714008 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.131208558 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.102253694 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.138327493 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.155733584 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108973419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16442844 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103723394 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.142644046 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.138824243 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.109547672 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140030841 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.103169491 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138852963 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112300806 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.138067941 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.112052136 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.135170693 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10675242 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.150855757 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154608625 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.144078371 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.114610811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.142869322 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.108610363 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.132743223 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.116499261 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.133063038 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.1068145 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.141933315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.132886848 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.105941932 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.142101473 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.112647215 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.129980229 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123328029 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.138219757 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.129811721 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.121662419 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133270357 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107822542 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.14265694 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.114796427 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.132358193 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.111248923 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.143918274 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.130112706 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.109435711 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.135501052 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.104072973 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.148586464 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.11536556 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.136207877 seconds)
  done (took 16.35244377 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318263182 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.326632 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.213786432 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.418761158 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129668133 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.212162941 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.321839249 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.244120626 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13257487 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1814583 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.196755069 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.253626768 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.132934824 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.165721738 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.295538669 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.392856979 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.167290659 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.181615781 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180209851 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.16013545 seconds)
  done (took 5.706745445 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128906039 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.176724878 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165813265 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166847179 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.110761694 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.146765622 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.103622256 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.157782879 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.140234492 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.112617437 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.131038324 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.146846321 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.113247066 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.141428802 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.122451594 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.182652175 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137359112 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.111190498 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.157233952 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.138353099 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.116221295 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.163627398 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.145570428 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.160760753 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.120242497 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.146553745 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.102894954 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139169908 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.107142234 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.13657502 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.138157945 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.12666879 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.140209092 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110828007 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.141459116 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.144217682 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.107206332 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.131781932 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.106856182 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.135363686 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12215684 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.140957796 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108085087 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.128847225 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.117415507 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.135257217 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.116529748 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.144252406 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.145543704 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.120816602 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.141840207 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.115984849 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.138593363 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.151116133 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.106955154 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.148347082 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.117564873 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.144398145 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.138977085 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.102856253 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.128412056 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.110008211 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.136666556 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117103176 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.141506894 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.157808803 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.119691099 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.131690061 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.137694646 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.108970227 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.135717928 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.123786815 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158225835 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.136838511 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.106962948 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.149702053 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.107226773 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.124250251 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113850676 seconds)
  done (took 11.540128401 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134663582 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.137120968 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.126330004 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.170957236 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.145879493 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.110855862 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.137383391 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.123875579 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.146061441 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.117432864 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.145061579 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.146142712 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.129776277 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.145339971 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.135881846 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.120284021 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.143208973 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149982264 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.152371326 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.167278841 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.143137251 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.109254011 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.147622365 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.117639405 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.168890533 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.116298383 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166228021 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.143204417 seconds)
  done (took 4.999185874 seconds)
done (took 52.233327878 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.241205019 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.378444508 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.16434031 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.170972801 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.191313901 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.193533692 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.161456707 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.353707064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.823688854 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.150255966 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.162493588 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.160264574 seconds)
done (took 27.244580763 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.271628376 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.751607478 seconds)
    (2/2) benchmarking "String"...
    done (took 1.515035125 seconds)
  done (took 4.361748995 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.157916979 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.157347521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.403024916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.161298952 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.173490541 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.158760233 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.16525164 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.167046232 seconds)
  done (took 15.469730793 seconds)
done (took 25.345585188 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.179415274 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.499148855 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.456633197 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.18068498 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.159931139 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.159320736 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.156226401 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.233739536 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.161605369 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.155606864 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.159115639 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45068893 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.157465924 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.589198176 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.15313374 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.168723467 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.186530716 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.501116271 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.159751543 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.158038921 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.167104262 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.152444215 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.194986817 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.216010533 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.165412542 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.171549347 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.172085684 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.153423456 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.452540251 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.164091753 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.211151824 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.162141992 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.174332648 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.161851189 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.2689545 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.17873802 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.462653034 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.158405033 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.156163065 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.173683446 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.445117682 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.550937735 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.161954242 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.166078738 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.165643722 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.204788641 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.160215764 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.877279183 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.162807965 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.158367868 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.191051761 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.589165214 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.177592892 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.180028379 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.165712144 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.52865656 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.192363798 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.220103041 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.193431888 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.179217904 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.167229404 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.164428998 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.215311088 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.17027934 seconds)
  done (took 141.61768481 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.163457623 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.163526146 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.162928774 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.18727 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.164328332 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.162798252 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.159520793 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.162591938 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.163416889 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.188884548 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.163769217 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.161799667 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.168175351 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.174548238 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.168312818 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.172668422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.16416916 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.163985747 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.186448352 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.163961936 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.186648583 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.165083567 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.181425507 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.164044618 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.195405554 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.24693177 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.201449335 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.178463535 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.171375538 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.164601741 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.206565041 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.186408048 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.753841949 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.025139827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.179932105 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.174570575 seconds)
  done (took 78.837127094 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.163876757 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.165311162 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165580759 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.193665264 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.164311034 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.710733879 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.717738684 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.96332146 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.57162428 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.169198919 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.464822649 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.396228563 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.165617845 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257806984 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.178609444 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.166767108 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.182203481 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.209315644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.16669591 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.165960506 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.703432849 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.179424704 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.166307053 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337609809 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.182542418 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.196758327 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.568757929 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.720236254 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.169122818 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.19696835 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.49511434 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.214403933 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.166462647 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523505746 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.377491086 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280333619 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170320187 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.196954708 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.168210811 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.445177364 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.169084752 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.169555551 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.171465114 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.826586587 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.171350279 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.713494646 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.173107703 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.097403173 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.168210077 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.168027158 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.321360908 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.857267392 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.188088465 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.16839703 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.167006727 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.168711355 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168883143 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.171513679 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.201314077 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.422633424 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.285058816 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.183994359 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.171440558 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199193522 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.168684618 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.181307079 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175411096 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.548007393 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.242653236 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.384297818 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.707147281 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.169744245 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265638828 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.288247754 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.169257279 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.169775155 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170351963 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.169459192 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.280170554 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.170101379 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.576692749 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.340806636 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187127063 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.499567659 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.172420838 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.265351972 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.169938545 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.531025402 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.176086388 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.169596326 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887619861 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266090842 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.170008642 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.169946677 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.171487511 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.580725371 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.71990896 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.407798915 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.176021132 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.519618034 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.175594853 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.583722656 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.701838805 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.831830653 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.176459747 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28265521 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.342438652 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.187417847 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.171159044 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.505858406 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.1754956 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.23059974 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.17284028 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.569731097 seconds)
  done (took 361.923579761 seconds)
done (took 583.463444782 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.921396391 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.870870436 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007374657 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.899945995 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.866639768 seconds)
  done (took 10.661744667 seconds)
done (took 11.756717259 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.358809857 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.359063704 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.230927032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.360988274 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.204121976 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.375573184 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.341373881 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.192449349 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.276273721 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.250609349 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.276900587 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223722326 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205746148 seconds)
  done (took 17.752783176 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.436283819 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.177951482 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24036332 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417871527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216602818 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437604782 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476307718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.180225111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325233286 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.190752864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.189949345 seconds)
  done (took 17.387867341 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438384951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.179362142 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245723919 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428930092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.218692434 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.448302803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.507982125 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.177907785 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339066574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.19259158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.191966449 seconds)
  done (took 17.466956746 seconds)
done (took 53.704347945 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216596862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.345582262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.203737995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.192178112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.187022334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.189896014 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.19215452 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.187705306 seconds)
  done (took 10.814170868 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.187171587 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.18647644 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.18602914 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.186399322 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.187128278 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.186305161 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.184682026 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.186359379 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.187294086 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.185673257 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.187357848 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.186419562 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.187129027 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.185459395 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.186809297 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.188558122 seconds)
  done (took 20.084790259 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.190029685 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.186691266 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.187538317 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.186722797 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.187196968 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.18834348 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.188839675 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.187713273 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.187555538 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.186637731 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.187992269 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.188161931 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189020131 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.186756444 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.188781181 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.188683071 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.1908762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.188825165 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.192460591 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.189107827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.188222476 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188018038 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.187306686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.189163784 seconds)
  done (took 29.619946125 seconds)
done (took 61.616404392 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.177353982 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.196574841 seconds)
  done (took 5.474401059 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.249758216 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.251535005 seconds)
  done (took 3.602660287 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.190644754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190299762 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.189893805 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.189777457 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.189862535 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.189796554 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.190383165 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.189159537 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.190547097 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.190553367 seconds)
  done (took 13.002278718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.189102284 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.189579773 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189501121 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.188897292 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.188106383 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.188916326 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.190117734 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.189297863 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.189782564 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.189002887 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.189425006 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.190765726 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190081518 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.190757458 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.1893232 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.189029544 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.18910841 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.189432394 seconds)
  done (took 22.512071366 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.203030346 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.210109663 seconds)
  done (took 3.515219597 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.331274908 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232726509 seconds)
    (3/7) benchmarking "month"...
    done (took 1.306703053 seconds)
    (4/7) benchmarking "year"...
    done (took 1.297598536 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.231919892 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.21258974 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.23292243 seconds)
  done (took 9.948593841 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.190786077 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.390002359 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.504918748 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.766131782 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.193056483 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.21648258 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.045395397 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217770472 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.212484565 seconds)
  done (took 13.839298016 seconds)
done (took 72.995009598 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.18011148 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.261015983 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206214381 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.201252794 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.532949881 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.18814681 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.18457305 seconds)
done (took 15.857827185 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.178771038 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.177917717 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.189140905 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.189296328 seconds)
  done (took 9.839512644 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.182103817 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55951427 seconds)
  done (took 4.84639486 seconds)
done (took 15.790663334 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19327361 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.191826245 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.192106937 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.194162689 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.192212387 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.192681779 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.19346378 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.193556491 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.192664928 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.192350835 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.193364596 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19303191 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.192411142 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192287024 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193556855 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192563096 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.193346132 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.193079494 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.193814716 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193623694 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192998709 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19375396 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.192990073 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.193474652 seconds)
  done (took 29.738434484 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.193729393 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.193032054 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.1941323 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.191811719 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.194162335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.193183355 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193905796 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.19381493 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.192819924 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.193600942 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195064725 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.193979347 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.194906318 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194030735 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194608322 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.194232906 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.193928663 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194420647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195839248 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.194527717 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.196783206 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194471219 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.194292539 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193820479 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.195322301 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195398831 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.195267439 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.195294664 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196043543 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.195879112 seconds)
  done (took 36.938568316 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.199776201 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.20227736 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.195679782 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.195091191 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.195932586 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.196426374 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.196743649 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.196163596 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.196363183 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.195423816 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.196413952 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.19616354 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.19609695 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.197541226 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.196375873 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.1973052 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.196492597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.195415827 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.196625933 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.19608247 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.196348775 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.194882185 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.196992315 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.195687787 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.195849932 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.195233406 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.196642087 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.19548221 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.196461643 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.196569174 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.196433404 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.196705074 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.197314322 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.196414315 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.196765999 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197965684 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.201343791 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203438893 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.196976273 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.19856889 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.19800983 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.197439097 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.196733001 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.198533676 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.198689373 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.197983532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.198435613 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.198674632 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199035202 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.199557126 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.199209274 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199292113 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.198578952 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.20106054 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.200431234 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.19821543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.201099865 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.200555662 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.199815489 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.200286561 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.199399417 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.199313058 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.199830242 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.201355166 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199555332 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.19962327 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199082497 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.200260647 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.20024075 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.199087819 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.201054344 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199628068 seconds)
  done (took 87.367474523 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.201353172 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.202294792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.199690129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.201011438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199968668 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.200095446 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.201224427 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20078184 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200606513 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.201443263 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201947004 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.20070801 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199369651 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.201523385 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200496833 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200867353 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.202455918 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201579664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.200812113 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.201135682 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200819067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.201322931 seconds)
  done (took 27.532403356 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201121007 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20205614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.202854837 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203019335 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205053369 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2035185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202776579 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.203352246 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201171973 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.20174512 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201585557 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201523895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.204459742 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201916975 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200681778 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.204689913 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201821686 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.20453187 seconds)
  done (took 22.760737552 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.20165258 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.201318575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201774466 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.203527652 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.203918923 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202998722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.203049797 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203681498 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202049072 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.203863544 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.202072241 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204219386 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.203797256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20303665 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203023722 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203112297 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.20421837 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20465469 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203073513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202818552 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204010962 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202915448 seconds)
  done (took 27.581270371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203672814 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.203897486 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.204191163 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.203640776 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.203003078 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.205026242 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.204622878 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.204316148 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.204271762 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.205435291 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204922517 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.205536199 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.206496099 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.203913029 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.203882683 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20483132 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.205397637 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.204755787 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20467818 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.203658111 seconds)
  done (took 25.203150522 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206103579 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206472802 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208272748 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205803505 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.206366278 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.207432723 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206413855 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206355074 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206327531 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206976454 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205983633 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207360702 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207952277 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.207660024 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208107725 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209231895 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208978926 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208991132 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207326163 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208126405 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207160422 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207289856 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207925978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.207986325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.207953592 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208177308 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207695607 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207747297 seconds)
  done (took 34.924680757 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208432279 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206017435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.208657915 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.206980084 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.208382769 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.207003398 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.208520233 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.208228755 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208597935 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.207071835 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.207962024 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.208235717 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208079549 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.207681153 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207869049 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.208797646 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208598594 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.208918966 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208123014 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209115005 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.209121271 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209304982 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.20806069 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.208905304 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208592834 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209321818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209848744 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210083482 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208969346 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.209349321 seconds)
  done (took 37.36928389 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.257081551 seconds)
    (2/2) benchmarking "in"...
    done (took 1.258720234 seconds)
  done (took 3.633562082 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.211505316 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20973125 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.208519893 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.209795533 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210399457 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.20953809 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.210115985 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.209126068 seconds)
  done (took 10.796454308 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.20585432 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.212800548 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.209270593 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.209545387 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.211105847 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.205686212 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215087861 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.216529149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.207271277 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.209454381 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.212138367 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.211536569 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.209686652 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.209365444 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.207642925 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210869299 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214342177 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.212042767 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.210993976 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.212070525 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210154516 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.209303847 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.214007322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214215831 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.208841933 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.219436036 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.215502861 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.215980034 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208230173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.214605107 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211573252 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.214718562 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.212607151 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.212815711 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.212705101 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.211810001 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218998511 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233718608 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.217676421 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21701758 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.213747511 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.212558851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.210752631 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.212218935 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214044871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.215527349 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.215241479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.213017525 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.209019241 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.212639026 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.220963973 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207934423 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.21473561 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212750259 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.213627862 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.220233782 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.237160073 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.213813205 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.217065096 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.221035028 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226807567 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.223419523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214001056 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.217604952 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.219283604 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.227033864 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220534374 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.219423328 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.215547466 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.215657501 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.219066127 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228094313 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.228077224 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.216361322 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.21688487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.215402655 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.212573191 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216788324 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219249425 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.219816381 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.217227388 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216483594 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.221529195 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228688512 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.212481745 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.217227221 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215614503 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.216383999 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.213532319 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.22259684 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.239943201 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.216250082 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.211528323 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.210966133 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.212812289 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.214936426 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.211916305 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.212870814 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.217541312 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.215903834 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215905916 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216918651 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.221569691 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220371077 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.218179868 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.220985002 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.222774108 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212912204 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.220469021 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.222540084 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216813998 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.215664445 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.218112221 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.218831412 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.216015952 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.221180502 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.220159429 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.215914472 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218995616 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.219833407 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.223032803 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.234179823 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.221913538 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218500319 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.218189577 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.227219179 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21807801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.216674568 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.221536847 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.218210983 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.21885876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.215662389 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.221336019 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.21540269 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221251088 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215818855 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.220074109 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219543518 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.219227279 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.215222387 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.21749852 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.21753682 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.217920186 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.219428758 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.221495912 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.216838717 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225071968 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.218744707 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.218687436 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.219172727 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.220539722 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219842997 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.217582451 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.220798682 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.216722509 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220502963 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.215887076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.219768713 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.222027473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.219923662 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.219937421 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.215974311 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220501145 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.222250403 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.221274663 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220716622 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.223955908 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.222286327 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.223496628 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217371023 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.223713268 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.217589587 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.220302677 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.2287115 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.222096698 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.220398546 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.220501869 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221292073 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222188739 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221534157 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.219463434 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.223680634 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.223355592 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.223796857 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.225435531 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.22107353 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.222078458 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.218565921 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.218280892 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.221969304 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.220920545 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.229986161 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.230449315 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234547534 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.219767212 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.226020263 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.219370319 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.225599904 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.22307929 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.226580682 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.226361362 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.224190295 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222108263 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227511923 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.222723053 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.224760562 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.221970615 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225374887 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.227577671 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.224301169 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.225761717 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.221527783 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224229484 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.228042941 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.22537274 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226429233 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.222334077 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.226561647 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.221384751 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.219996188 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.226528406 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.22584834 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22971673 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.230184807 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223667798 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225663732 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.224227957 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.221253859 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.227496505 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.223876344 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.223810586 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230857763 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.227486645 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.224237686 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23167899 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.246342027 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222770852 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.225825969 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.229779428 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.226153102 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.223187231 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234672558 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.229336771 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.22576356 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.227515456 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.222627922 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.228453589 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.229633995 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.232757257 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.223578545 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.228176807 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.225266134 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.229918768 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.224231652 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.225557854 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226447996 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230768794 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233843357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.229822639 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228728643 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228702453 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22791454 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.228125568 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225175514 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.235411089 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.229633087 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.228358233 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.227322016 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.225207333 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233354734 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.226106647 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.228754341 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.223828978 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238834597 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.243737312 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.232284573 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.230365744 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.232444962 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.232125696 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.231757407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.22935807 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225453399 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226680011 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.225515935 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.224890511 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.232283469 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225989862 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231074675 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228279965 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.22925026 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.232811292 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229830924 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.22483588 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.229895881 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.22941408 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.23048228 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.223168744 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.231000743 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.226299901 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.228389562 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.227084248 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.226794611 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23632977 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232511085 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.228052833 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.227485724 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.228066293 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.225420186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.229626321 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231723782 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.230102356 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.237484202 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.227723047 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.233609195 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.227270609 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236537381 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.233574704 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.228782832 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.237696187 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.228980653 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226042809 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.227258499 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.23069871 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.235905248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.237709506 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.228681433 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.234008984 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230819211 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.231095594 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.232468284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.23082139 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.229982444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.22968821 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236395824 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.25278763 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.230670474 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230783449 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232897669 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.231504798 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.232078915 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.225702964 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232453626 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.233398136 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.228383189 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.230142496 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.230888174 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.233803958 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.234015655 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.235467444 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23511689 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.233779502 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239172649 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.237137949 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238725975 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.234442552 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.238782528 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239898281 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239756672 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.241075864 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.230129072 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235182531 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.234384269 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.230914683 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231181489 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.231418965 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.23518435 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229358849 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.237254956 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.23466115 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.231763394 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.233196794 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.235525908 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.230652875 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.240432593 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252808748 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.230714237 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239136958 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.234507824 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.230951292 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.237948859 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.232568695 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.230689073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.233862564 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23900558 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241926187 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.230790568 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.236615923 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232783723 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235903159 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.235140014 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.234844946 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.233308914 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.234836639 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.230819344 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.235798401 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.234715128 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.238978211 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.232470419 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233521392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.233413971 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.242794901 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.240274669 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.232352405 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.236500153 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.236786588 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.233394335 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.233665959 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238664467 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231552647 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237746421 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233788732 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2378489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.238747693 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.237778648 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.234743956 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.237703836 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.233956049 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.233636595 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.238920692 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.237254828 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.236331721 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.23406921 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240105302 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.233068801 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.232870503 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.238431546 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.23258296 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239811489 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23550711 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.240632053 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236404092 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.240572758 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.238239668 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.238181753 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23351878 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.23498302 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.241458082 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.241306675 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.241781879 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.241295454 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242232325 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.235876997 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239803418 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.2419738 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.235431989 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.236933139 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.240117503 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.238104114 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238368185 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.23791164 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240259942 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243398772 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.240318819 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.235118661 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24549945 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262712783 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242205454 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.235814803 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.239526981 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.237426081 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.240697566 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.239199834 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234953292 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243857264 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.243168273 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242418386 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237628917 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.237621072 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236016892 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244445111 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239038719 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.237629326 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.243663221 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.236197301 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241791606 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240274462 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24050055 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.23662393 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.238372784 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.239823973 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.242105228 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.24064013 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239239635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.240598516 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.239950555 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241791752 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241437412 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241233835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.2424047 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.236431806 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242687054 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.238450854 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.241520833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241208545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.238844755 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.246325438 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241925906 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24145602 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.245769942 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249048167 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.24332657 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.238416463 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.241251839 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.244506014 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245451105 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.242898419 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239862883 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.242657136 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.24495247 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243909827 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244919985 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.242162184 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254768371 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.269622057 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240901246 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.240920694 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245924456 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.248731465 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.242807779 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.242868928 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.241921088 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.243912118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.250175961 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.242231488 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248007858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266253294 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.241808908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.248408852 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.242637842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.247580405 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.244822131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246801451 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.243339301 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.244677224 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.256146273 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249376105 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248808743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268504784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.248105095 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.242938085 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.246364599 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.24137189 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.245669456 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.243783587 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.248411396 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.245437999 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246019222 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.24494176 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241118682 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.247888557 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.247046987 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.250557961 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.245681923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.240667729 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.243633562 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.247009246 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.245186073 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247528663 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.244592478 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246284876 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246340943 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.241448817 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255650844 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.259319945 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.248562921 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245818958 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.245307217 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.246452876 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.246496525 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251652463 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.252783358 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.246720336 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.244490887 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.243759902 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250025697 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.249903289 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.241972216 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.244047089 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244788734 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.247550505 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.257427592 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261552554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.248497038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.246048485 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.248614626 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.247720658 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.245318737 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248178166 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247135498 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.245630904 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.247567944 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251478996 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.249239676 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249082853 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.248872157 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255012521 seconds)
  done (took 734.522260414 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249936732 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250938928 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.248409376 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248735079 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248963527 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248065217 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249111676 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248723173 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249604634 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249989151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.248869664 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24794491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.24845999 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249870014 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249947457 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249120929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250765103 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249429225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249467091 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25016894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250143304 seconds)
  done (took 27.390254769 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249312857 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.250342574 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.2498503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250255547 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250316666 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250382298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251210546 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249537582 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249654172 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250535478 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.250438593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250775285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.250041018 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.249875237 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250747957 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25008267 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.250343132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251764577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.250994613 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250697043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250494769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.250731349 seconds)
  done (took 28.662316595 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.250903757 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250726198 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.246629011 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.251836496 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251033196 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.251334907 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251054082 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.251733405 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250866432 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.247088288 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.247450156 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.248151025 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.254413887 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.258118926 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.250025706 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.255135945 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.251691252 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252924461 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.251385657 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.25147528 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.255867445 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.258179354 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.253775001 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.247186838 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252298925 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253479562 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.252506545 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.252966587 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.249391529 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.254630778 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.252799733 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248702523 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.252721834 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.250398696 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.251473686 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257172977 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253940734 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.252154628 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.255058465 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.25759027 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.273823754 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.254291398 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.255608336 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.259792996 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.253761599 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.251840414 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.25974846 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.25458048 seconds)
  done (took 61.30711356 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839652601 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.857704056 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.860858373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.862921408 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.872979863 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.864473445 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.859327886 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861698596 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.861270234 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.860495449 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.855273283 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.863598819 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.858498557 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.863217696 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.859984403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.860360088 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.862102455 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.873428639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.860727717 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.858445656 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.859539912 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.862150177 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.860481368 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.85613645 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.862270323 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.862084882 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.860880617 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.860223867 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.86233612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.861885296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.872468549 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.859577493 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.860911909 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.86013278 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.860686765 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.858770512 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.857776891 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.862485107 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.861816744 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.865890062 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.862790316 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.861435244 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.86673733 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.883296168 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.866887764 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.86778463 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.866907144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.870911247 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.871451528 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.866015086 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.865429998 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.86649556 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.867928392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.865599805 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.866514296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.865338771 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.878954624 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.865045992 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.866903017 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.866377753 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.860296213 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.866413245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.864214773 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.866375892 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.8675849 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.869181249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.873820593 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867358406 seconds)
  done (took 127.899914463 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258580914 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.260590741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259660334 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258683578 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259247715 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.259804243 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260696889 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261048821 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.260284558 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.260685412 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260300999 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.260467143 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259723237 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260372663 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.257635878 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258340857 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.258809737 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258157378 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257953683 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257365515 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.259479178 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258969466 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.260372436 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260753388 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.261082088 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.260575188 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260682067 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261420519 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260402133 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.260999631 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.262342608 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.261055307 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.260985972 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26080817 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.259663869 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.261860814 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.260387481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261256698 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.261119417 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.261791295 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.261019924 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261505816 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.261040765 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.262590062 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.261641883 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.261294411 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.261094213 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.26290061 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264049783 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.262474435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.261174703 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.26242439 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.262259759 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.2621747 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.263491826 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.263325634 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263173805 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263593309 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264789304 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.262808084 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263201231 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.263649227 seconds)
  done (took 79.344884735 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.262729644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.264547733 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.262606287 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264117358 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265380211 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.263755494 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.26268195 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.262807007 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.263125048 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.264473683 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264893039 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.26442659 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265544682 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264003033 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.264959039 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26629615 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.264294605 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.263565739 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.265833017 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263395687 seconds)
  done (took 26.449209115 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.263642277 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.264589691 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.26451379 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.264455208 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.264421508 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266062944 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.264691259 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264985266 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263961941 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264870625 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263690638 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.265346972 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264679962 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265220952 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.265030647 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.264550538 seconds)
  done (took 21.401475599 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265877655 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.265310482 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.264259153 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.264602305 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.777334837 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.26561019 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.26564658 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.264939452 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.263865847 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267000383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.26432878 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.265526713 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.265191333 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.266323977 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265492055 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.266514124 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.264802482 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.264261956 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.265244122 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.265388842 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267343481 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.265047996 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.266219329 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.265639521 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.266759728 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.266322013 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.266487373 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.268021451 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.265179673 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.267491793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.266283712 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.267006089 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267076246 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.265584567 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.266212921 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.266716562 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.267052258 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.266014163 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.267831048 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.267719007 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266951283 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267450374 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.265507351 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.269122015 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267514591 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.266787261 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.268278109 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.26905891 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.267358343 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.26773664 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268194027 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.267854508 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.268862716 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.268214954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.266424836 seconds)
  done (took 71.335005778 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.266796544 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267255311 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.268892994 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.26827722 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.268161661 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.268220411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268572003 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269226129 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.267871662 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.267190165 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267952058 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.269007084 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268414041 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268514086 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268933225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.269438435 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266907254 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269481222 seconds)
  done (took 23.999118915 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.268795262 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269802469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.270077953 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.267400464 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.268189783 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268331267 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268323441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.269248605 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26807691 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270056866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267898616 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.269966107 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268704411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.268518807 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.269571994 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268859245 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269720154 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268815771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.269063981 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26894504 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.271630296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269932115 seconds)
  done (took 29.090580685 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.264016134 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.26554258 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.26339792 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.27945299 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.282969367 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.265020296 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.265007629 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.266400905 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.284142861 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.307704398 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.305261741 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.284522306 seconds)
  done (took 16.504096005 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269594478 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271054174 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271885508 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270917025 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270463847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271938601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27246444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271362363 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271856524 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272131893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272623246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271358682 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271872073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271689233 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272346956 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270733473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271896603 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270927493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271535963 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271463941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271936199 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27274955 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272554353 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271445414 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271905377 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271655304 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272238524 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272670247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271627048 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271615647 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272959482 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27192779 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272604382 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273626846 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27344701 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273141621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273179141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272693301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273031008 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272767932 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.272956732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273450425 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27207534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273781122 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272928698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27371032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273504631 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272628873 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27407271 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274615018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274730352 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2745308 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275867838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273702429 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273482002 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274320483 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274375202 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273929681 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275139882 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273754546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274941571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273916184 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275713354 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275938273 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275498598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275192408 seconds)
  done (took 85.183820597 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275455741 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275285435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275144724 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275970943 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276189239 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275196721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275984068 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275502971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274914179 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275861159 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275738418 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276181908 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276931497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276072795 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275931164 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275611998 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276457177 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277399197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276059002 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275093393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276262367 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276356849 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275729374 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274913936 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276430334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276619066 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278518242 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275709661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277054925 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276285883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277245451 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276504303 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276635518 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277671301 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277100473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276648045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27703748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277295781 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278260897 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276893422 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278243816 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277514132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278993084 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277959617 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27910538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277946866 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278924735 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277334492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278973068 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278677183 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278816927 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278978982 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277210823 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279746321 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278688023 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279123417 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278568634 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280461268 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278127255 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279163676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278930569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278807801 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278315661 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278477579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279918288 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278343274 seconds)
  done (took 85.476253453 seconds)
done (took 1763.518396343 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.439481264 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.392000211 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.272893421 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.284235379 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27201469 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.268766088 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.288218239 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.273741729 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.274422669 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.272849236 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.27483039 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.463802018 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.270544568 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.274813679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.275008148 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.371555789 seconds)
  done (took 26.149482803 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.302527451 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.280746264 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.394383233 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.297034524 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.302677973 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.478140752 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.335284775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.277557559 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.454940406 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.29712118 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.272004576 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.300872906 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.279083572 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.272768646 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.296136215 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.479968862 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.528844465 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.273644676 seconds)
  done (took 28.306084429 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.743999425 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.291420007 seconds)
  done (took 5.216981613 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296999274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.278725157 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.279554592 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.276660111 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.272204622 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.285737344 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.277317006 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.27052081 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.295985081 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.405457583 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.279828297 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293979912 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.299135703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.280386794 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.284459066 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.322667081 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.442887974 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.284438698 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.284543016 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.284758819 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.279058799 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.367913671 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.324132721 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.285266776 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.407334071 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.283273396 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.280011866 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.287276599 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.41579284 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.284654476 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.281389922 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280348191 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.283075354 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.274656615 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.761077915 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.303668554 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.288962518 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.307401446 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285674404 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.436846782 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.280580027 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289332843 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.275464129 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733486701 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.442731028 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.403085307 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.292454242 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.281332145 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.284643515 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.347979193 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.282440034 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.28339972 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.342415033 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.082969097 seconds)
  done (took 82.525985781 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.286401551 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.274563961 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.455693674 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.299378288 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.275842949 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.274146826 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.275386032 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.571772594 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.326128877 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.27562494 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610536456 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.86130913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.295015432 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.33234769 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.142497558 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.352824115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.27802555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.292359459 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.276929085 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.27654623 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843523765 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292856161 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.275485249 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.404363937 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.317023548 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.802555357 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.276525128 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.276241068 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.27871257 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.276132133 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813891697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.300587611 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.361529768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.277500216 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.559359131 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.664401404 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.627370543 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.286759171 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323655451 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.276336735 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.288987449 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789197514 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64769383 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.278993244 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.278790161 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794914458 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.277758059 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.286118516 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.283059135 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52794614 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.278944115 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.28036655 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.29389748 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.277736975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.278435792 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.36472773 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365311925 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804740838 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277922049 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.278712672 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.308799994 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.280054991 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284543829 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.280668369 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.300060427 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.649423138 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.425319697 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.28822569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651169649 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810080757 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.29458308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.876672598 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.295167631 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.292217683 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.497918093 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.278715012 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.280240336 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814744765 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.27898603 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.278613433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629880627 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281094351 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.615674523 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.297610981 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.279668551 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85533486 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.283291668 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.290856493 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.280188929 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.280194176 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.296074468 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299667512 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.569815368 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.322923615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.280232373 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.280812117 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.284428719 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.280875748 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.280880984 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.285556037 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874180731 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.299300727 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.280462531 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.282070342 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281150438 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.281266461 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.282786021 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.284469766 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550183727 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.281501527 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.298989563 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.284266535 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.280667808 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.286411623 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413289115 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.286385292 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.600570253 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.281407737 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282535255 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.306120003 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281515226 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.284279658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282376538 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.28487588 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.182455655 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.588564105 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.300085305 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.28360407 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.281509947 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299454891 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.300404709 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283853707 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.330861064 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.285757964 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.088197771 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.328577487 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.316757269 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28147157 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.292256691 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.282952772 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29020086 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283710233 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580540333 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.563773363 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.428925019 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.292813209 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.283269382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071557321 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.323383506 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465180309 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304434909 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28407248 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536442078 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.516266386 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.285044247 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.283673389 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.28363258 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.544963122 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.284817401 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595910348 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.847240408 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.300905581 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288504211 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.095707199 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.021267253 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.285629744 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.287294538 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619505237 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.303097228 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.284302447 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.283408378 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.285553414 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301913696 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306022325 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.295352725 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.285623345 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.288245029 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.303639538 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481194094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302678668 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.294971983 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.808056846 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303900223 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28636523 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.293468102 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.290498031 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.28646502 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360131542 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.287869639 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.293181601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.288680042 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.292752286 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866621961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.287384444 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.287164678 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478243369 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004591173 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.304321895 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.286879835 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303455205 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.200518886 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831850409 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.354404533 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609538216 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.301598597 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.328450431 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287098605 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320893283 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83226045 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.287426306 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.306271743 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959730089 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.304590736 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.800839064 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.288127646 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.28831885 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91317439 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.305835631 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.290242933 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288979376 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288627916 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589172153 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288613857 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.306174818 seconds)
  done (took 487.790623603 seconds)
done (took 631.168820457 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288352468 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.289151624 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.288454497 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.293329308 seconds)
  done (took 10.358734159 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.30376342 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.295312032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.300976601 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.295152986 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.302230773 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.294786931 seconds)
  done (took 8.991773256 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.288363395 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.289420405 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.292903194 seconds)
  done (took 8.06997085 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.504224455 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.314678717 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638476007 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.320763011 seconds)
  done (took 8.977328737 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.300983515 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.301996263 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30255465 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.302761868 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.305662422 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306804467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.303229501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.302266572 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.306369366 seconds)
  done (took 12.931834974 seconds)
done (took 50.528381007 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.353510937 seconds)
    (2/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.982028769 seconds)
    (3/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.283015525 seconds)
    (4/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.302366715 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.379752061 seconds)
    (6/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.291440492 seconds)
    (7/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.288248139 seconds)
    (8/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.388452186 seconds)
    (9/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.284784878 seconds)
    (10/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.310596723 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.326150815 seconds)
    (12/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.328803884 seconds)
    (13/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.299727596 seconds)
    (14/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.28951041 seconds)
    (15/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.706282552 seconds)
    (16/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.346241801 seconds)
    (17/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.39145401 seconds)
    (18/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.508079698 seconds)
    (19/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.550545272 seconds)
    (20/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.509254258 seconds)
    (21/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.392826344 seconds)
    (22/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.285249414 seconds)
    (23/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.954599243 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.441150562 seconds)
    (25/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.288438476 seconds)
    (26/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.328665796 seconds)
    (27/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.472620945 seconds)
    (28/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.286202314 seconds)
    (29/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.436485874 seconds)
    (30/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.437035982 seconds)
    (31/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.285582925 seconds)
    (32/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.300726512 seconds)
    (33/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.304990826 seconds)
    (34/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.30226707 seconds)
    (35/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.359361603 seconds)
    (36/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.035109299 seconds)
    (37/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.339122144 seconds)
    (38/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.060213851 seconds)
    (39/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.524688145 seconds)
    (40/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.312674672 seconds)
    (41/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.9565944 seconds)
    (42/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.366152583 seconds)
    (43/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332116239 seconds)
    (44/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.392590852 seconds)
    (45/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.104805421 seconds)
    (46/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.117059672 seconds)
    (47/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.410356153 seconds)
    (48/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.291933218 seconds)
    (49/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.379174037 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.318167044 seconds)
    (51/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.383619969 seconds)
    (52/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.286690346 seconds)
    (53/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.350349106 seconds)
    (54/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.457218975 seconds)
    (55/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.426749437 seconds)
    (56/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.482186452 seconds)
    (57/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.085712543 seconds)
    (58/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.349176892 seconds)
    (59/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.287137193 seconds)
    (60/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.415682175 seconds)
    (61/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.300965635 seconds)
    (62/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.430860308 seconds)
    (63/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.311581256 seconds)
    (64/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.380978082 seconds)
    (65/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.359916108 seconds)
    (66/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.044935124 seconds)
    (67/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.433702937 seconds)
    (68/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.313813233 seconds)
    (69/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.429855139 seconds)
    (70/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.314830982 seconds)
    (71/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.29489415 seconds)
    (72/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.40965786 seconds)
    (73/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.376561604 seconds)
    (74/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.33005998 seconds)
    (75/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.989744267 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.517175785 seconds)
    (77/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.289460024 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.343763712 seconds)
    (79/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.467991658 seconds)
    (80/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.289736568 seconds)
    (81/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.338575 seconds)
    (82/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.449447681 seconds)
    (83/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.370038797 seconds)
    (84/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.463338873 seconds)
    (85/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.354868074 seconds)
    (86/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.341805647 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.377700184 seconds)
    (88/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.300165143 seconds)
    (89/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.483886321 seconds)
    (90/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.483729008 seconds)
    (91/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.410586967 seconds)
    (92/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.35057563 seconds)
    (93/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.290094474 seconds)
    (94/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.233471202 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.461536875 seconds)
    (96/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.416597922 seconds)
    (97/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.485471151 seconds)
    (98/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.504974384 seconds)
    (99/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.376059801 seconds)
    (100/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.504313812 seconds)
    (101/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.403814015 seconds)
    (102/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.446996751 seconds)
    (103/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.391843546 seconds)
    (104/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.399500147 seconds)
    (105/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.433282866 seconds)
    (106/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.436199816 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.443923197 seconds)
    (108/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.402878859 seconds)
    (109/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.386223106 seconds)
    (110/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.360736757 seconds)
    (111/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.356415459 seconds)
    (112/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.527334563 seconds)
    (113/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.527466506 seconds)
    (114/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.412035448 seconds)
    (115/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.380412909 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.329846571 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.520092151 seconds)
    (118/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.291795554 seconds)
    (119/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.446189496 seconds)
    (120/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.337016993 seconds)
    (121/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346493141 seconds)
    (122/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.462111557 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.407293672 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.336614236 seconds)
    (125/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.449846956 seconds)
    (126/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.335665277 seconds)
    (127/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.29314417 seconds)
    (128/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.455412119 seconds)
    (129/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.292197208 seconds)
    (130/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.091097436 seconds)
    (131/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.350398608 seconds)
    (132/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.396198835 seconds)
    (133/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.99092005 seconds)
    (134/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.400758201 seconds)
    (135/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.423191169 seconds)
    (136/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.36185377 seconds)
    (137/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.338937417 seconds)
    (138/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.083428672 seconds)
    (139/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.483232503 seconds)
    (140/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.95127109 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.392915172 seconds)
    (142/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.43768557 seconds)
    (143/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.292309317 seconds)
    (144/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.484658771 seconds)
    (145/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.333568464 seconds)
    (146/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.363654696 seconds)
    (147/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.33234794 seconds)
    (148/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.613998832 seconds)
    (149/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.302043012 seconds)
    (150/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.429105 seconds)
    (151/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.43220078 seconds)
    (152/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.3806982 seconds)
    (153/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.413184111 seconds)
    (154/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.316546754 seconds)
    (155/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.2975729 seconds)
    (156/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.337768532 seconds)
    (157/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.329758093 seconds)
    (158/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.319554713 seconds)
    (159/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.341551469 seconds)
    (160/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.295035219 seconds)
    (161/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327943433 seconds)
    (162/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.336270098 seconds)
    (163/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.581756282 seconds)
    (164/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.30707553 seconds)
    (165/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.295655951 seconds)
    (166/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.365314334 seconds)
    (167/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.293470582 seconds)
    (168/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.356834072 seconds)
    (169/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.012092559 seconds)
    (170/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.29389297 seconds)
    (171/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.06149385 seconds)
    (172/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.014984139 seconds)
    (173/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.097773267 seconds)
    (174/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.511910477 seconds)
    (175/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.311735278 seconds)
    (176/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.423357431 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.466423156 seconds)
    (178/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.339330018 seconds)
    (179/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.233467904 seconds)
    (180/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.312923581 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.400238256 seconds)
    (182/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.019867386 seconds)
    (183/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.448139619 seconds)
    (184/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.364081799 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.398653053 seconds)
    (186/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.353281765 seconds)
    (187/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.311814504 seconds)
    (188/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.342439179 seconds)
    (189/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.308605619 seconds)
    (190/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.362152838 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.358680293 seconds)
    (192/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.323653805 seconds)
    (193/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.410498197 seconds)
    (194/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.317612324 seconds)
    (195/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.299518749 seconds)
    (196/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.474007132 seconds)
    (197/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356342596 seconds)
    (198/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.355136929 seconds)
    (199/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.409115145 seconds)
    (200/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.365757131 seconds)
    (201/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.437990083 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.462719685 seconds)
    (203/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.518889786 seconds)
    (204/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.336103612 seconds)
    (205/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.298245658 seconds)
    (206/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.955913936 seconds)
    (207/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.521467492 seconds)
    (208/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.104394252 seconds)
    (209/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.360029823 seconds)
    (210/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.485478828 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.508331958 seconds)
    (212/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.07058871 seconds)
    (213/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.250452666 seconds)
    (214/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.360582373 seconds)
    (215/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.469480864 seconds)
    (216/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.310296652 seconds)
    (217/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.348149953 seconds)
    (218/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.480612564 seconds)
    (219/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.298443157 seconds)
    (220/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.203281784 seconds)
    (221/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.536605411 seconds)
    (222/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.404860579 seconds)
    (223/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.437768073 seconds)
    (224/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.493905459 seconds)
  done (took 380.815523669 seconds)
done (took 382.014856913 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362335709 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.495640065 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.315503418 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.312592371 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35847601 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.305662419 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.356208124 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.323082893 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.322480098 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324354486 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.306203857 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323247662 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.326972254 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.352882505 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.427820216 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.324990884 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.31412815 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320020874 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.362591468 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.381588094 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358258457 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3583335 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334097845 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3154262 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36287266 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363500651 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.320563193 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.318528305 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.322062702 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.365080943 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307563866 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.322723203 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.373005594 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.370941279 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359890697 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.320994186 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361183151 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.500199746 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.359913895 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.354442145 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.326842961 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372399173 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.327125262 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.327592971 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371209149 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.33653407 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366508636 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.439314913 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.30747898 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.319770493 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366026387 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.382482333 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.326704174 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.323997262 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.319325243 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.440464156 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.324176922 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365426056 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324304974 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362258238 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.430606192 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366377381 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.383300957 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.365494465 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323865221 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.331912182 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.322212859 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.385005788 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.324906351 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363115975 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362771535 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.327903708 seconds)
done (took 106.501706754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.448633754 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.317931727 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.460842102 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322427523 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.490803292 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.471450738 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.323479708 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.322709523 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.323306466 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.17236919 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.322806566 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321628127 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.319474098 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.324290584 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.454338248 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.324059121 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.323878448 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.061401981 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.323064972 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.460553162 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.314737674 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.321815922 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.322993562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.183336524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.318960701 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.313264147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.460778252 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.324992445 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.075867007 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.312750445 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.315514938 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.074167703 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.462959254 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344849974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.334108759 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.33386295 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.491558564 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.344053792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.452785772 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452701306 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.465307437 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.363630235 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.314360392 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.319060089 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.32695398 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.325631914 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3259308 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.354443893 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.319682642 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.324986272 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.064740817 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.336266986 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335118155 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326775731 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.325881423 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.344174987 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.326429464 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.326207363 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.463701968 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327351792 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44842168 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.185084454 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.173479136 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.325429569 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.317459321 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.327184226 seconds)
  done (took 108.058515748 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.386423311 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.396893706 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.434416258 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.339079714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3731895 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.44084307 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.339441694 seconds)
  done (took 10.930562179 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.329077592 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325292066 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.372959869 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.371357386 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.32503301 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.477072836 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.326590709 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.334016706 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.327326984 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.375799243 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326257063 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.327188832 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.336592494 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.320780422 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371621036 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.334589775 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.439135603 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.32407567 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.326100994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.479104684 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.326803874 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.337352645 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.375549191 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.335396938 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.328378738 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.329993134 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.100419104 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328008403 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328225058 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.330005611 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329968997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.379780209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331104941 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.325240029 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332952379 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444406417 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.332113909 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.331172203 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.332488476 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.328567854 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.331264288 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.329447844 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.330376311 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.329613894 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.329714128 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.348962452 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.328900244 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.328337328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.329205465 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330167982 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.376091939 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32991735 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.329868943 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330543639 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.381970025 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.338588479 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329721518 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329226528 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.330484911 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329717131 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.482273194 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372415454 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.330866609 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.373464698 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33080521 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331808237 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.331083691 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.330223943 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417531672 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33078364 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.375904487 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330113961 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.509366019 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.350806952 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.331899549 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.331208223 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.32838057 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329803792 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.323550591 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.332034784 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.330860459 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.328408688 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.33301883 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33112803 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331819233 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.484140691 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437490358 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.331106259 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.340634517 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.333521381 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331502707 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.381528404 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330862474 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.331342516 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.379494477 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.442372875 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.381647398 seconds)
  done (took 137.020529294 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.339750973 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340676785 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.331920519 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35799185 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.329375995 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.328911077 seconds)
  done (took 9.256141212 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.330605752 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.336165719 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.333220813 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.333847639 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334182054 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.335302993 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.33340749 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.329431595 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.336689523 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.333470067 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.334453115 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.337139063 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.335853076 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.335353265 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335110145 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335358325 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334898042 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.333720331 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334569324 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334927837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.327025366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.334113314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334385271 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.329764319 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.337690655 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.333657513 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.351245841 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334261302 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.334311583 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.338399972 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.354218587 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.334486333 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.331254837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.334197039 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.338826231 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.332851677 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339803499 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.33943281 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.335634357 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.33754532 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.338493915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33754769 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337490126 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.340904685 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.334945471 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.336117956 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.342995451 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353706512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33575603 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338582319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338957131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.337214994 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336570894 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.338674673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.333089797 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.35354674 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.341972541 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.336440177 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.334281456 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.332392219 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.340045516 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.337437543 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.332430318 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.340779107 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.33662902 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338685229 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.332407423 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340593811 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336945984 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.337349182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.339610177 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.336462381 seconds)
  done (took 98.480223078 seconds)
done (took 364.963477311 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.245047432 seconds)
  done (took 4.475107345 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.480030018 seconds)
  done (took 3.71292504 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.705993717 seconds)
  done (took 23.94545806 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.3778725 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.427171117 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.343954531 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.333199852 seconds)
  done (took 10.713142202 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.684039586 seconds)
  done (took 3.91437892 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.341045808 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.338609094 seconds)
  done (took 5.913300059 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.61578099 seconds)
  done (took 3.847385904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.544318301 seconds)
  done (took 3.784363023 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.355445053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.347014428 seconds)
  done (took 5.940029285 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.317923075 seconds)
  done (took 3.549615231 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 31.677330488 seconds)
  done (took 32.909943441 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.345255787 seconds)
  done (took 3.579015705 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.359972898 seconds)
  done (took 3.591187689 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.172967045 seconds)
  done (took 6.404620643 seconds)
done (took 117.511407101 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.326796381 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.333991856 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.333345904 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.331966163 seconds)
  done (took 10.556962037 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.389760072 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.392418946 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.391400017 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.391369126 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.393754648 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.391426078 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365163314 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.36498275 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.391744522 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.392067435 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.392351484 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390774507 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.393325656 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.380560262 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.391876395 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.392883685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.391654621 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.393601708 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.365785591 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.391910086 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.340633524 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.392983985 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.39121039 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.340749765 seconds)
  done (took 34.448360846 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.83048802 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.408656484 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.490286676 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.390005285 seconds)
  done (took 7.352260661 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417284127 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.422393651 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432910459 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.469587447 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.487782938 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.432742838 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366978421 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.36348661 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.347957138 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.423678587 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.469845582 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.412564027 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.502920767 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.341176504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.552057051 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342543519 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.343007931 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.419950896 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471600401 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.489148051 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.341961196 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420382696 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.424745313 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.41233384 seconds)
  done (took 35.343996863 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.351410123 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.358481957 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.344572834 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.359480653 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.345367824 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.344796907 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.347381817 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.352213703 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.343605293 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.344241774 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.344716616 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.359413908 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.347948471 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.34395734 seconds)
    (15/22) benchmarking ("StatsBase.var", "Float64")...
    done (took 1.346105108 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.353422408 seconds)
    (17/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.34591342 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.349805203 seconds)
    (19/22) benchmarking ("StatsBase.var", "Int64")...
    done (took 1.353193743 seconds)
    (20/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.349376472 seconds)
    (21/22) benchmarking ("sum", "Float64")...
    done (took 1.346441414 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.351207862 seconds)
  done (took 30.918989437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.331296808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.33171642 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.683542973 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.587822059 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.332993602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.331864774 seconds)
  done (took 13.834768093 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.414812033 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.576240124 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.338037591 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.717564074 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.802372063 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.338324196 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.338737013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604505648 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.945263528 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931017085 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.401322379 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.413119503 seconds)
  done (took 20.05901791 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.341620613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.336171178 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.340294821 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352613797 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.396104211 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.360460599 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.346462949 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.333730193 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.403471438 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.419871124 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.362705191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.398528445 seconds)
  done (took 21.631063151 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433477487 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340075657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348458488 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393445955 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339626082 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190006437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411221692 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084283691 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.36714696 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616260183 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33987811 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443222948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.597025641 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34682539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343580138 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.327938485 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578856472 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855809914 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34317064 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341201924 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378009842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357879894 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346780057 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613615469 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.348696503 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339794626 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.604275542 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.341360998 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640997733 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362249395 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351792066 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340894066 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617466195 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031008215 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460593658 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571092161 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35585081 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343584161 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.346365444 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.348095583 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364672198 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349881973 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351457892 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343354665 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343205291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359169988 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10094112 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.371548876 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.34420996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.344604448 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62246464 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447925136 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350347761 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345448757 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362374553 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342283533 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.347782716 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4756744 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943951935 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354236888 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351665523 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.366832967 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356347306 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34513314 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994562445 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.352119607 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.351024037 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350810615 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344902329 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345403403 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.368956321 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345140401 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.372537173 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346615819 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146276574 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352568798 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352019578 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922698079 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357707841 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.348292672 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580338401 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346223944 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345547822 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.344118588 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345435467 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119712357 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358224211 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.333944583 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390739489 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112876852 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.607139407 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367391816 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376959912 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.570943755 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.334008248 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347404633 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.347644532 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371945697 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369448349 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100315726 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366352668 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.354117521 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608177163 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.559901538 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347018867 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.348519944 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861891385 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377171326 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.362557305 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.347675774 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597859001 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.9673229 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.370361504 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347821352 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364510898 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348382974 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154188136 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364383517 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.453207062 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34894006 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640282734 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.20269509 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350045509 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414607226 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351234164 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.34817457 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350191572 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357140418 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350004754 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.572005471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373417614 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.365155331 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.34933511 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348146108 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.356458157 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352261474 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.356720905 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574373587 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361548975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625332733 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34905229 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349049592 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349962313 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.572404214 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.350817226 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.687999229 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61380152 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350895304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358420224 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367153569 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368253645 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453501024 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373020945 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.351946243 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614856801 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.357243143 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.358603931 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357609466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.358549878 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355327181 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.35815212 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359719604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970069393 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330269852 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358963008 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243849592 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367716037 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418395696 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359454927 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595482133 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.356821756 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350084131 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.35934735 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.363619254 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578179752 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362013966 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.358274764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437202465 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.865041816 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993920336 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373981261 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.350616797 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.349820724 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.350529719 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351742516 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351734094 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352021213 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585744851 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.372447662 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353037199 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.003245205 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361025528 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357955409 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366534056 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366365736 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.361233748 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353184994 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.351777971 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384940182 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367496883 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369798899 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499162048 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.370126284 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354157822 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872258315 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361421976 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.354922382 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352987134 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387952533 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359832643 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239593639 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638216958 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351053236 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666379438 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365965895 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379320211 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.354035471 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353805292 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37074985 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.375895915 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362597326 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.365386444 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361943103 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364212112 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92965838 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191727009 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933567365 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364614236 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.392263993 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357749907 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109476866 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375480279 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354931056 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608638265 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13873416 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37880425 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885820285 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.385224194 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174116523 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645530709 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596262959 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356228129 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.358135822 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644734075 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575066754 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389860488 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364936343 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360343547 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.343342543 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946959154 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378879977 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445797104 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111330457 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379925916 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365010735 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.420299596 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357550872 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808797683 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383237972 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356369692 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371755542 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37091425 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227688431 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384675604 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357665316 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00435688 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365624316 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.871566715 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379108279 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.611068007 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.37324847 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.361302106 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.366674222 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.360446883 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.618689856 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647530733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365284065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364799391 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944457946 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.233961823 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.366780271 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357809243 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169030051 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364794643 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666132089 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.367235169 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375295469 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365302735 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.359526251 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359682334 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.360024258 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367321254 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330839962 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876577209 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.360812874 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36337649 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394582692 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366928196 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619012978 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376894584 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989289941 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598652663 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361454137 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383701538 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.366755899 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373726197 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.357330456 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360882915 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361449582 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381643742 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.586313837 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377343627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.350794711 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.422310973 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573302444 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360798058 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377977462 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634040063 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.369382436 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.37778699 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192886055 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413582812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375878336 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370252297 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364886528 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405331353 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431465043 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60963318 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.381604394 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.37214607 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.812933935 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404802632 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37005821 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.37772836 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456883987 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365376559 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.372086907 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.143917014 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99508425 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180245107 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007345434 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.65494571 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371903228 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370550045 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362787258 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52734189 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362251292 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638500859 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364171863 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.363358178 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386634524 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375813164 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387632186 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581874482 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639598472 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364484561 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364903601 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365423431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.364326766 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375530267 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.57936332 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887311341 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949280828 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367642721 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381313289 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131907252 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661944324 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364517546 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36448556 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365229214 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.38141484 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365006942 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.373468904 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364673355 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517261399 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659412239 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089781758 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.401515983 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.395198601 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.88438178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380866773 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.629853339 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366087491 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620326382 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003812428 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.120941871 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633481098 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435346948 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619792052 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.371549511 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527767665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.373504206 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370935998 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364979564 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36569755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.367189715 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.376005249 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999293844 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63584638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.372299348 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.37349431 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403366991 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.375847061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590916722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127546596 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593692317 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.378764499 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374432669 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368469113 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997686445 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654245132 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369884036 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.375776821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625064597 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369791384 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392490171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.886524576 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.366485648 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957066812 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.344737246 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389703602 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366451461 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127452535 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995767077 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.379928441 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894160859 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372189202 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373687098 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648187524 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.376575388 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368086044 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653211498 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.373533692 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368223574 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622950599 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.992261667 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202480982 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.39397199 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371018691 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.371280187 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369163739 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397243212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370883572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369709973 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.838494565 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394950892 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369770125 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384348528 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.373203895 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376233079 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.375693592 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370739578 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.377909218 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.385299647 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.389159048 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.372253583 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509433735 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980327085 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394580334 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.182914855 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.700142397 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629727787 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374950869 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.364160466 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.378630363 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372307566 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372026214 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37152224 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372111451 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952761212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.378904919 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.3889572 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378770434 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.373019575 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584871339 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374428628 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642851972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375536175 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396235262 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.358881894 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373246135 seconds)
  done (took 972.455265386 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.405895623 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.392038357 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.388149031 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.421939691 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.4374409 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.409611823 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.473541737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391053577 seconds)
  done (took 20.587386554 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.376588088 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.378693388 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.375065088 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.38196515 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.382496507 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.878896463 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.386470122 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.377833745 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.393414655 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.376646776 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.37328725 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.362161384 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.383789871 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.381107539 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.362626975 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.378453513 seconds)
  done (took 32.824555354 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.613360892 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.592406946 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.68413461 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.406281179 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.382710697 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.385701664 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.697642622 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.405968488 seconds)
  done (took 27.437914408 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.381867487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.381312149 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.381355497 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.381515753 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.382269427 seconds)
  done (took 8.177676593 seconds)
done (took 1236.861340728 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.380977929 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.380719035 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.381451052 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.381226898 seconds)
  done (took 6.793972499 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.363630354 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.365529661 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.366844888 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.381974205 seconds)
  done (took 9.74744264 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145490749 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.040356204 seconds)
  done (took 5.455321844 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.870006095 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.86281215 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.86724822 seconds)
  done (took 6.873149491 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.676506392 seconds)
  done (took 2.94929327 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.288548948 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.375790446 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.059870738 seconds)
  done (took 7.99649402 seconds)
done (took 41.084740129 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.373883083 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.646647488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.542625122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.378161627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.54612056 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.542821958 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.151376772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374441174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.386739608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.384852329 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374662415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.540845517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.12885632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.62928528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.12970941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.722838384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.540929379 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.378901657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.375548222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.373644951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.144254078 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.377923018 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375220024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.380536221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.539249824 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.530615559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375295055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.74165436 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38564951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.375787874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.531016709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.37461741 seconds)
  done (took 82.929564845 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.38686335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.375189796 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.376754792 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393985364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.374664903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.376469897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.397091307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.374549884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.403331998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.37985926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.374543393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.375415059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.382220689 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.377818962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.385843961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.379620687 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.376195342 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.376367782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.395685422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.377720848 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.399083329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.377164107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397981316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411371571 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.376331331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394858818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.395803894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.376384393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.376330868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.397121776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.377061443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.395067281 seconds)
  done (took 77.591471772 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.377467446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.375723693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.395409442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.377026244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.395314682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.376403386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.378774123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.381313743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.38986165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.390671219 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.37839802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.395105176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.380038098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.387285261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.376926641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.377300215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.397762314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.386421646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.383857422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379573824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.397057955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.392046754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3833971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394679611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.378315908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.406701717 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.393279548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.378831248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.377927363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412785279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.389330571 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.378685666 seconds)
  done (took 77.641108827 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.66639941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.390616312 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.392844319 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384018506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.393716347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.390191012 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.385352947 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.673043295 seconds)
  done (took 14.954375797 seconds)
done (took 254.389801102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.394958278 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.913740605 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.429788709 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.385638638 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.409492403 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412831789 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.619296269 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428213987 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.622601019 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.403975441 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.406026369 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.395390414 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.25376936 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.540941939 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.26309548 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.37593803 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.340738061 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.381336735 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.987103568 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.678415756 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.412275198 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.393950453 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.255912205 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.368667378 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.381199768 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.473606787 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.49190691 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.616204093 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.551209399 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.471355491 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.936521505 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.392160924 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.386427592 seconds)
  done (took 65.054267884 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.388640148 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.519095147 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.391827192 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.393314021 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.523725835 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.414294249 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.395845184 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.39253713 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.393143756 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.393502169 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.39249355 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.393978073 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.395872808 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.444596827 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.526843511 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.408923678 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.389203142 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.518212934 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.388682793 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.387139285 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.442536434 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.393354777 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.395483002 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.445810586 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.39511084 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.39556706 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.521046476 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.41801553 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.396286004 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.517246656 seconds)
  done (took 44.054946551 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.394190559 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.016025219 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.178896431 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.397758954 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.390665284 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.396561908 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.704934955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.39593697 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.395071921 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.395180172 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.914015362 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.399208728 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425933049 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.207415751 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.393553191 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.39666426 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.396623228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.391970304 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.025802204 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402394933 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.725671035 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.39733014 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.705613685 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.401899386 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.41565251 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394091453 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.397083961 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.240680423 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.417734356 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.915679936 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.257231742 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.709717408 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.172517902 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.216426907 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.250425419 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.404140787 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.399062284 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919097512 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.395405546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.394128041 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.706103982 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.39383782 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.188711717 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.105627057 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.414217528 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.398619487 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.26282413 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.936869823 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657787589 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401047647 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.217298639 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.397438655 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.400848824 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.397237123 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.660627422 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.396085347 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.395772967 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.275947443 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.421026661 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.709582902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.399419665 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.394959887 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029908941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.397660828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.023871956 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.397717832 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.402984265 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.417384945 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.199136824 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.397840785 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.12738607 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.414402118 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.401233615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.914419171 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.017243647 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.328169132 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397554352 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.028129072 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.20153067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.730139125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.399366992 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.221991108 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.732267475 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.398938485 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.401861643 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.40159141 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.401508431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.478441315 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.709143078 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.054369133 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.115634847 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.297717181 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.734708715 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.404119981 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.397986645 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.27906224 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.422325687 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.401900084 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.193982824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137821028 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.418040121 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.406656555 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.129116137 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.41945232 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.713903058 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.403070378 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.204458408 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.399332117 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.479940874 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.402003146 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.404974157 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.42405734 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.713408077 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.402539198 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404788083 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.108035968 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.94834387 seconds)
  done (took 197.361244218 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.408910233 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.392086403 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.407717312 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.391981363 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.391865722 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.400490686 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.392952174 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.393097125 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.39909149 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.390990368 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.393132683 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.400646989 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.400239525 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.393583576 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.406394012 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.393736552 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.407090097 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.410116362 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.393245554 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.392961412 seconds)
  done (took 45.251407653 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.405520428 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011395829 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.001921557 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40645514 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.405365648 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.400718598 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.461699644 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.407651288 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405394047 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.725619417 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.593700222 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.430323167 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406156901 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.403904373 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.983455106 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.39649454 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.726028195 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.010750297 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.406186698 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.010668172 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.39660799 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.406623301 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.401557623 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.011584425 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.751897326 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.716969143 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.464120712 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.013629502 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425395379 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.406778572 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.011962592 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.40641024 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.40297048 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.011519613 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.424636162 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421423084 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.406730625 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.465214053 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.467439366 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.731432024 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.01760608 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.742816754 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420600551 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.59874776 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.410440452 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.400149571 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018478482 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.425647428 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.39847365 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.409591554 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.413595675 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.997346225 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.423790595 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.999132341 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.427742597 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410182706 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018008659 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.997994882 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.010638516 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.591606996 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.42220224 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.720361993 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.410708975 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.024499577 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.428975115 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.409585692 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.410706203 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.595985077 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.035946679 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.721672913 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.733534303 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.733640025 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.413650253 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.473829914 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.428907845 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.736817037 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.471638535 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.852762251 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.735132132 seconds)
  done (took 128.931514648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.69870822 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.525697527 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.838185913 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.047996201 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.409553257 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.552411076 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.529392916 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.680608875 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.411793969 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.483525868 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.100206545 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.531631487 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.197132329 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.499410123 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.514092613 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.557228175 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.822180486 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.401448926 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.127516826 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.080920096 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.41842477 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.516183184 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.967474399 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.630645006 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.41509416 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.024474319 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.422046927 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.113912328 seconds)
  done (took 54.814355885 seconds)
done (took 536.74563885 seconds)
SAVING RESULT...
DONE!
