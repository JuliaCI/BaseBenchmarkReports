cset: moving following pidspec: 16764
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.140938876 seconds)
loading group "string"... done (took 0.721770891 seconds)
loading group "linalg"... done (took 12.284994709 seconds)
loading group "parallel"... done (took 0.252259898 seconds)
loading group "find"... done (took 1.849250407 seconds)
loading group "tuple"... done (took 2.73326281 seconds)
loading group "dates"... done (took 2.051481322 seconds)
loading group "micro"... done (took 16.569158959 seconds)
loading group "io"... done (took 0.781847022 seconds)
loading group "scalar"... done (took 64.94061199 seconds)
loading group "sparse"... done (took 18.731145511 seconds)
loading group "broadcast"... done (took 1.653302183 seconds)
loading group "union"... done (took 16.066141071 seconds)
loading group "simd"... done (took 3.767443057 seconds)
loading group "random"... done (took 14.749077626 seconds)
loading group "problem"... done (took 1833.389773277 seconds)
loading group "array"... done (took 36.777389162 seconds)
loading group "misc"... done (took 1.460554371 seconds)
loading group "sort"... done (took 5.577936186 seconds)
loading group "collection"... done (took 25.222816976 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.79633761 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.153374261 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.229924728 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.398546544 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.265413557 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159623145 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.178851003 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.629294768 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.035932872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.234080639 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.161525795 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.617979718 seconds)
done (took 6.690557702 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.316582444 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.408379197 seconds)
    (2/2) benchmarking "String"...
    done (took 0.188213377 seconds)
  done (took 1.359666857 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080642125 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.19497503 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121004623 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.121790061 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.120228529 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.104811833 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.12181158 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.121072471 seconds)
  done (took 1.669563632 seconds)
done (took 4.20529402 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.583109324 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.933592412 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.568499197 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.178423146 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.217488363 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.191646553 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.345399709 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.178066018 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.12887216 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.121137549 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.217151555 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.400248821 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.528234604 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.092441566 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.114066471 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.121576576 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.104939994 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.742514582 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.088943598 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143294639 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.623100682 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.126141467 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.128171448 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.131375664 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.215230691 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141083149 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17932408 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.098646589 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.743569936 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108200205 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.241808514 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089066267 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.188963139 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.267508904 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.090444726 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117800979 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.744346641 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.191325347 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.126052723 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.12357708 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.709275226 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087603074 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.264842076 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.12365609 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.119041063 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.204672221 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.126611469 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.10377333 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098450877 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10875665 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.183969704 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.500343235 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.112209656 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19914929 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098230973 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.756825139 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103945597 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.165440929 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.150471864 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114261144 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090135843 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.117642987 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.172584815 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.119818131 seconds)
  done (took 21.370062904 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.175644604 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.181197526 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101561963 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.166409889 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.153159752 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086084242 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105506222 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084431002 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.136161626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.263235364 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.149580964 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.18410335 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097922372 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092392875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.154855969 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.267567773 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.134096346 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.136041588 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09434396 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.117792844 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.155195741 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.11915533 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.102295241 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.124705508 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.185849201 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226319701 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113133936 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128729596 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.105761537 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1281833 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.149169787 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.170056208 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.081828759 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.107021817 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.202582348 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127571987 seconds)
  done (took 5.902875567 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.245808239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.132873393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.259504485 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.193280214 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.161583965 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.201760851 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153884542 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.319465859 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.276545369 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.195446216 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119329712 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119847295 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102009907 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085995698 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101727098 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.792788565 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148700858 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202964937 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160526783 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111429809 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.10382068 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.745135424 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092508783 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.105881142 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110959068 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.200465304 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.102514149 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.219934045 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112880855 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.452502838 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108158361 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117498652 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138611195 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214654329 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126622446 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151746376 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110946099 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104461187 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.235414123 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118848207 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.101009465 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120343743 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140698467 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.143762366 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106433701 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.119193863 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.259591629 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.08885117 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130930211 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106238795 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.191613065 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.208463372 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105162229 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.143362717 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.08677091 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.410532698 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105674255 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11388951 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.105613534 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08867522 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.328384512 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143400382 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.106056313 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.101259805 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092498922 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.101860441 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.815714741 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102943983 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.184843865 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087019882 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.195895034 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106606928 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097667233 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110386368 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108084377 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109795599 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.104886173 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085188565 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104606809 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.102710554 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091221263 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.128674142 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109833587 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.102636704 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155334724 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.124518873 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122433469 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132259481 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091572433 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.104103659 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134422134 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087593324 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107243928 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184245567 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11294516 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.128218179 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106803971 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.134103036 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104674147 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.220266842 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099920324 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.132227207 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.108322874 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119523647 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.132376603 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105396241 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.107101107 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083997547 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.105406667 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167625156 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08756308 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.103267766 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090762549 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.120073509 seconds)
  done (took 26.825229888 seconds)
done (took 54.858655956 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.518569913 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.13446848 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.132313707 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.132809914 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.129355997 seconds)
  done (took 1.917099344 seconds)
done (took 2.755047809 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.41940408 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199287507 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.131898506 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.201648283 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.115371256 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.225499775 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189716968 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.131156995 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.238438542 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091145967 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.216948763 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091254785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.11557186 seconds)
  done (took 3.239527616 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109982882 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.137648513 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094865391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128585161 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10794903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107777382 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125295508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.156383971 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10452658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116744002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105356403 seconds)
  done (took 2.128892253 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105683811 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.133426829 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094110568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124586856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108126038 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.105127757 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124008541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.136239278 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105617907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120107199 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089857744 seconds)
  done (took 2.080836219 seconds)
done (took 8.277302535 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.284116976 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.669955668 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.164094027 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.241483955 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.427729243 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.270773124 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.681096367 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.187704165 seconds)
  done (took 13.974551889 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.190248823 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.114460698 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096507426 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116972689 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097073191 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.115594067 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114292544 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096129757 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.111597678 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111408523 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095565862 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.11060751 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096059724 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111090634 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.111589293 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095973291 seconds)
  done (took 2.702409647 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.149321096 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.150197802 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102770392 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.126793819 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.120710234 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100661439 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.123552343 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.119117568 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.115717352 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101792278 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.124393167 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.123290215 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105936321 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.115681099 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.119819874 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125456201 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100370466 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.121345631 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120018763 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104550344 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.12296232 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.119516212 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.121685764 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107417417 seconds)
  done (took 3.789056825 seconds)
done (took 21.305713312 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.197270828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113127635 seconds)
  done (took 1.158565408 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.16613621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.167891682 seconds)
  done (took 1.188784009 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.141083405 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09388041 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.157366968 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.131679476 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.111077368 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093791044 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.167043941 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095660071 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.112038758 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094593361 seconds)
  done (took 2.055232363 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.098526814 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116134511 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125976474 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.165081699 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.126736394 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100178608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.116855003 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11562986 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.227885721 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.111767783 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.120020119 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.136838466 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.10342722 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.140521992 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.117275326 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.123114786 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.126257722 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102916336 seconds)
  done (took 3.132762408 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.094144593 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.113472949 seconds)
  done (took 1.06763185 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100081729 seconds)
    (2/7) benchmarking "second"...
    done (took 0.110980862 seconds)
    (3/7) benchmarking "month"...
    done (took 0.116095777 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100772445 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.112281051 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.110980916 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095768227 seconds)
  done (took 1.605421608 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.603158706 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.301833411 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.417536686 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.138122141 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.158769027 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.411099591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.161284033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.132864048 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.131124696 seconds)
  done (took 3.380417422 seconds)
done (took 14.445488086 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.102299448 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.279138384 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.684886357 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115611957 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.110759641 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154016023 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.348154689 seconds)
done (took 2.65959567 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403116857 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.178192381 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086363603 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.108475744 seconds)
  done (took 1.635878693 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08943048 seconds)
    (2/2) benchmarking "read"...
    done (took 0.119255056 seconds)
  done (took 1.074142346 seconds)
done (took 3.585534626 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091011307 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108046401 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092034757 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108431788 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091788637 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108657008 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.143399886 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090712562 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.111837779 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.112026439 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091722206 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.111544611 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091634041 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108534392 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091641745 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10858295 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091197871 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10857275 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109847507 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092033313 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108585829 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092601577 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.108245119 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091893354 seconds)
  done (took 3.37306244 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.117611978 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.114529245 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117760895 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.119502866 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.1011571 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116715514 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.116513731 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096538687 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.11745891 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.112229111 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100206705 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.118963036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.11136022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.118194582 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094763939 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.117983626 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.115673941 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096769274 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111684854 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.116472468 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.100683873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113858981 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.117095425 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099755035 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.118165587 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116729561 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.111456073 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096187693 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116335068 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.11811287 seconds)
  done (took 4.214258182 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102187125 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.106400808 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093362783 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120229707 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.106293752 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093721823 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106299664 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090600271 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.112000115 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092350038 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113341402 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.109404113 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089119393 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112098385 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095936341 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.114133554 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12178739 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089602275 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.107441386 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095427491 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113892426 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090501784 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.110535688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.11097177 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093162362 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.106002416 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094023498 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109936925 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094406166 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.109927645 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112887715 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096864314 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.109846213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105110593 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.114658178 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.110253645 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100196129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107810864 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095077322 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.108675754 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.108441243 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093432653 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.107700985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100799045 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.110122488 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096176245 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.107425227 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.11182924 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094566773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.11534026 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090240207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107821864 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.113166381 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095490611 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.114742315 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.090478078 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.111309452 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107958301 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094734509 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.11101372 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090063387 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.107244674 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099418429 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.114092717 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12802509 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101637339 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.107188497 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.11461786 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094679623 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.117564026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097401502 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122510396 seconds)
  done (took 8.420829322 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.109054723 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125140395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.096876733 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112641062 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112351192 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093952768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.118791426 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110431194 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096177158 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120763578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109955935 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096010291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113792298 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096620668 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112816614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112910476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104367588 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112220485 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.112124781 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096011745 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112386708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119512593 seconds)
  done (took 3.27704009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.282983498 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10280598 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.167659237 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.130171578 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.1368665 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.130819539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.117023802 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10129388 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115934359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.123505637 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122575738 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099623268 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1354617 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123558924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124973595 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109337973 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117774345 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126052543 seconds)
  done (took 3.250274946 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.113642544 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.11566804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.139935243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097503759 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.116432177 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11438695 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106653936 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.133589567 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114580242 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.11445669 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109511455 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114804854 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.11494344 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098285437 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115326635 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114319596 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098175882 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116939268 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126126817 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107086279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12406279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128677766 seconds)
  done (took 3.418360353 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114733898 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115592162 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.151312082 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.11941044 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096974373 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.113422129 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10414174 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.115700084 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.124631821 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096703037 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116258652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.112544638 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107704337 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115410156 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.122434312 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097357988 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116350538 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115069186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097713775 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.112782109 seconds)
  done (took 3.15316567 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196460605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130833038 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113295472 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.144974141 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132256208 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.131540911 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127449434 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130508766 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130717832 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148093228 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113770669 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131657764 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.14551017 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.141217967 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130645013 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127237144 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145291515 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.144588721 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.131363158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130720471 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148007147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113337231 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14503229 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.13181494 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130342991 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11306361 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131073926 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139820493 seconds)
  done (took 4.668983171 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093774873 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111253622 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.09390426 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111773595 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093529486 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.111587662 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.093844576 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112782874 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111100105 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093457583 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111501787 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094158244 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112262367 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094763513 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113179807 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.112359675 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095502674 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112718825 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094225093 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11164563 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094356265 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11239111 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094661642 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113014835 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111842692 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094095463 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112461262 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094533784 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111946427 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095095349 seconds)
  done (took 4.00766518 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107598658 seconds)
    (2/2) benchmarking "in"...
    done (took 0.14145892 seconds)
  done (took 1.146967851 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104542261 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.134951409 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.112861408 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095556133 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.125494043 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09713821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125252355 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126103228 seconds)
  done (took 1.818884278 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.168398262 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.170178179 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.102323526 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.128832672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169071996 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.160574401 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.168875088 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.122520666 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.099394019 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.113393163 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.164869543 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.110651863 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.102738752 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.116861692 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.120374756 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10996019 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.114538143 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.124510286 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.105054161 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.116363662 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119540097 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110602015 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123713117 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.126730323 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096385656 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.124020059 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.124640511 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108825001 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116449276 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.123698557 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.100097382 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.115796859 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101162037 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.120898366 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.116042942 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168651753 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.13116284 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098562345 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.122573336 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121930932 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107546478 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115379124 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105148138 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.118408722 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.126443055 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101474436 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.122543616 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.116923871 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094360147 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.116749428 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.114797931 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098106336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.115705627 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104564103 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.122583796 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.130574273 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099476472 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.117329296 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.118363325 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.097530206 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.120565298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.116884197 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106771799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.12037536 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.123231697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.103819678 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120721854 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.115626417 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098351462 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.116230916 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103129944 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.138828653 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.124079279 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.122166344 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104399655 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.116439062 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100355994 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123444914 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121520937 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105115961 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.121805418 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124567942 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106140972 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.117242628 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.117503816 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104873307 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.117979851 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.119005618 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093917875 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.134688324 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099824664 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.117987182 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.112946519 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100729582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.117815454 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.120497183 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094547538 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.122910576 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094939748 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.122017662 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12414074 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103358358 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.124496984 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122811855 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105125251 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.121796619 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164091659 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.118419867 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.097913783 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.120469675 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104453966 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.115059495 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.125607619 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09556543 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.120743661 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11679013 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103870535 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.123588611 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098662675 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.120291737 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126106176 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.124208723 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099291384 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.115774612 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.099412215 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.121103571 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12688737 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.105981334 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.118601114 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.118243021 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098358505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.124289922 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102901018 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.120863654 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123013862 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100761763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.116336961 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.118623582 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102867414 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.124492937 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.098019414 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.121744252 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.12542423 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.12256122 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101621119 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.124682497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097357773 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.113804846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.124070374 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.098128412 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.11822683 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128388222 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100133425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.12113247 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.099586951 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12794242 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.119714978 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104976403 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114497843 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.118964165 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109253991 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.108109227 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.11503985 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095868753 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.120497152 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112749136 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094596742 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111912738 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101132415 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.11000754 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116704982 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090726224 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.118088147 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.106763993 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.120452668 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.1224855 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09848549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137730105 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133327663 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104997403 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.124125521 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.123988516 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103240736 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.122281819 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.123255652 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105900751 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.124939288 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.120272879 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105532243 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125105326 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099710926 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121687294 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1215192 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112488298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.109240318 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.113700699 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.090645577 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118191929 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102035337 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117897457 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11849513 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095449835 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115754421 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123384915 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.094912814 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.116581781 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.090515553 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.116826226 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.124211626 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101269334 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120458808 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.120692628 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096219664 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114129615 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123517359 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095723575 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.119294719 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094622457 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109319745 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.110528637 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10038098 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116334532 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111295044 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093489072 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.120535264 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101758891 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.114174823 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.110952297 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099329664 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12399497 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.116528307 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10563277 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.120228879 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.122882066 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11520811 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.115351392 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.119105478 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108385586 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.125104896 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.097952769 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.124458746 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.122260668 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104898058 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.122127744 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.121237646 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101994022 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128919687 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101898098 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.11813368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.119884758 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.101871599 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.116467869 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100626446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.125991734 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.122146154 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.101103476 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.130009654 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12822282 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107065964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122853882 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124721116 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107118569 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.127234772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123256767 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105740649 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.119277071 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096473805 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.120226205 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.117316793 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.101244018 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.120526492 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.125139531 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102432811 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.125101933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.102999295 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128601101 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.123069732 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106017634 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.139022398 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.118985006 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.118370435 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10176874 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12445421 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.120876597 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.099667368 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.121202984 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106843751 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.125174606 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.128391049 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.100113169 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.119032187 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.125259432 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099353052 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.126273616 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105970906 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.127628519 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.119612695 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103742586 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.12145291 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.131770726 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097021306 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.125411427 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123794728 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10425852 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.122642064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.12306177 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099196751 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.116637261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.095400593 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.125903565 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.124138967 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104663487 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.124956486 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.122710926 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101129709 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.120579708 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107721688 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.121497782 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.123367087 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093991977 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.114470183 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.116927898 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105005048 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.126031232 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.126755946 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099200178 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123356913 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108033006 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.123235065 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117848805 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11027958 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129981896 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106686475 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.133695801 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.118958886 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10153452 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.133368489 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.121642935 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101621562 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.121615518 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.118926908 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108607595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.128085281 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.126988804 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102603616 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.11794022 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099940219 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.127670378 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.122264008 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099012844 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.118602233 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100350382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.114554382 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118070109 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100542376 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.118990021 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121488118 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100018034 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.118364718 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094866104 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120151276 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114856296 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.092090553 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.114576922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.0996717 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.120132512 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.114237645 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100275918 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125372269 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.122152542 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.103688106 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.12725775 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101451539 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.132330484 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126543123 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103664015 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.132700724 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.12136763 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102814347 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.12629247 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.126297065 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09659111 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.12576885 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104902472 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.129697056 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.125373192 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10531347 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.126754768 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.127336224 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10216078 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.127382383 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.10536613 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.128107338 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.119390802 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109667667 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.132213255 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.12341375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10220119 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.124458317 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.119812003 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103787595 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.130338228 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102010531 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.132373556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.128512831 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103393517 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.122862596 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.127459585 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105615534 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129532891 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.124784044 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108966745 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.119691083 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.130305057 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104594628 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.129953444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10142247 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.119528018 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125559925 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106270219 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126083343 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.13104374 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107789431 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.119445665 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097949249 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.125122468 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.123953209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112632819 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.131379162 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.125648991 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104945636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.123107443 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.120613132 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107847046 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.12066029 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100917789 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.126947793 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130114746 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102124169 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.120272254 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.125878631 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.104077728 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.132071003 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.126114232 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098854607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.12583981 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.12948628 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103842491 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.122955327 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102679396 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.130511114 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.126610344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.101981978 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.120220618 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135361379 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109373397 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.129778637 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.122745542 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105672283 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.12518611 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.125046433 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109195376 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.126039396 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106090636 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.124641747 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127841799 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117436789 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.119285185 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.124044031 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110260634 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.127771974 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.129561831 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101724188 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.126652396 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130749312 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109088456 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.125124242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099160646 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.121544583 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.126082347 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098910937 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.125379283 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.135373581 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.104908804 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.12510621 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10484458 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.127278378 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.125651581 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.10231931 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.121254944 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109954882 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.124768807 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.132967961 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.098797421 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.120179062 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.124882126 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106238988 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.128903435 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108062019 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.123353641 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.125617202 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099287601 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.125804406 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.132341055 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104984955 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.129637937 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106085892 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.126941398 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.125046432 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115307712 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.124078488 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.127545718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117526706 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.131127073 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128932087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106218443 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133165813 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.131626129 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104896394 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.132474239 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.125848782 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105487708 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.132242552 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.110031967 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140939029 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.128629817 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099305862 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.128913711 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.126337119 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099557018 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.133568872 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.131446968 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109803772 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.129745664 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.123738737 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110285457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.136321156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.126864432 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.097244507 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.123936527 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105158875 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118456724 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.120373565 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.096157421 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.125866084 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125192336 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101042186 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126986339 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092413207 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128368618 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.12636271 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10387708 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.115750578 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.113947328 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.094040116 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.123076326 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110406334 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.131631423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.126191493 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105777629 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.127867841 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107942663 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.13108428 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.12681271 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109809904 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.127349386 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.122724694 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.108534265 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.128440987 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.13056432 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.101742456 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.130767951 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110228076 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.130671862 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.13689182 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108208899 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.126417006 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.125042443 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103693103 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120513449 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.122915122 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100120709 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.118041685 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093235896 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123204433 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124939745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099941051 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125307388 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126328855 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098200621 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.126484674 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127676016 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099905039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118181957 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.101939628 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.118521607 seconds)
  done (took 70.280889188 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.18846745 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110518461 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127941968 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126823715 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.158626882 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105600481 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126462149 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105494871 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.129776477 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.14352784 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104204982 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126833433 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.154744414 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.16301813 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.156739016 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.144216174 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127564025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107323286 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126950886 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106281353 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.150729258 seconds)
  done (took 3.75782857 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.128990474 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.149344166 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.145017059 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.151775732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138418926 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.145686304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.145548267 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121537923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.152084806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.14082914 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.149517395 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.144714413 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.14190963 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.140159051 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118040026 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1396423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.150173012 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.137836757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.145677298 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.146248267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117457987 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.145950388 seconds)
  done (took 4.063719179 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.112601204 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.13069872 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110834491 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.126529146 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.130054716 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103706524 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.13842204 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103892904 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.137327653 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.128542312 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.101735995 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.12831069 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.133755676 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.104009627 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.126914035 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102889022 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.138042615 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.130842816 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110552381 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.12722119 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.147248429 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104112651 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.1291272 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.101928647 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.141768206 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.134156841 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.108496017 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.130983749 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101677174 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.131749421 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.127189713 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108008617 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.133461426 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.124943064 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.102581636 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.130454565 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109867391 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.127165578 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105380848 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.133429925 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.128895153 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.109637234 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.138239871 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.128577758 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104835791 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.131705265 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.130535851 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104019314 seconds)
  done (took 6.809349727 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.186436059 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.184786861 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.139478609 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.17946547 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.146127774 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.139357146 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103723075 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.169514475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.131310636 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.128292217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.148599164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.154010108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109893778 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.138637857 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.130876107 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129123329 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.114109774 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.126526695 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.13628565 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105035944 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13900119 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.129653029 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.145893009 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.156147956 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134639001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105305073 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.133815483 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.133649489 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143777114 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.142335178 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110398128 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.134629231 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.149937815 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.131846154 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126729859 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113945115 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.149622095 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.130402497 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135609076 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10430363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.128722799 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1321869 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114974973 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.149012481 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.131968624 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.131380241 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129654208 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.109789639 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.146935771 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.130440644 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.146841109 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.146996301 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108983975 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.130637025 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.138787851 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.147085616 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.132692786 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106900207 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.130218815 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.152324678 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.128602796 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109859502 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.153432369 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.128656571 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.137043418 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.148368559 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.138833126 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109174179 seconds)
  done (took 10.266922948 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.142195165 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.132354179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149964801 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150902782 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133161313 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109628461 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132243262 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.130822284 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131515348 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142928892 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110504058 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.246230824 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105984606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.140151669 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132621253 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.132190108 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109326715 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131741136 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.133496368 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.133335726 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109948355 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.147946777 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.132590303 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.147571284 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.150294532 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.129901978 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109428801 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132937638 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.147031099 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131995381 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150919771 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.132870606 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109500017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.148020845 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.148615596 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.132422674 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12363979 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110581474 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.133397976 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132926262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.12841461 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125456621 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133102486 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.128633975 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.131999856 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.110909747 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.148033066 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.149571273 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139705789 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141921726 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.133382073 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.146780993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110415655 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.131985692 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.14761674 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.158355774 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.147500185 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.146971576 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132797308 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.148362012 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.147792148 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.158519073 seconds)
  done (took 9.426836403 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100290589 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120657941 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099093536 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121298227 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098853242 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.122899291 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098366966 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12022655 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121464633 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097712161 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124073445 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098779011 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121196354 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098199471 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122556146 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121419074 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099797148 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121450245 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098475204 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122102631 seconds)
  done (took 3.213821367 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112670312 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.149285376 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125267037 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11354898 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.126617215 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.135836718 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.125386946 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103212715 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12590131 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102735024 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.140710318 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.138004688 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126607273 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.135196037 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116101814 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.134969047 seconds)
  done (took 2.999499474 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.130314416 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.14905479 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.184861722 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.129438607 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128332675 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.11116379 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.126508726 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127793733 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101688186 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.133538583 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129674118 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106666677 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.125605603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.125542891 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103100312 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.130486695 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100574919 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130201137 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.126634243 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.184893456 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.133436038 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106127574 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127184908 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.130372202 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10680684 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132569857 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.134831695 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103284327 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128129091 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.12678006 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106856085 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.135407483 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.125158861 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108949522 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126182379 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.128232854 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104285699 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126409139 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.131570834 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104689635 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126556493 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.128811232 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102861964 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.130031569 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101610416 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.127713014 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.123165597 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111184596 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.128317073 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.130054176 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102854176 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.132923605 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.130259951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.113519628 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.135839628 seconds)
  done (took 7.833242299 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.124761594 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.135870436 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.146900762 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09976349 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127473567 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.12904937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104882456 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129635079 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.128038857 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100111464 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.128893086 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106166031 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129364283 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129034556 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105324924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126890507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123388701 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105024179 seconds)
  done (took 3.179702311 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116252871 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.130659929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107362172 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125957655 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.125693341 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102371429 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12366225 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100050706 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12493762 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.127035868 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102916169 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.127240386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123212387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.102293756 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126124478 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103232845 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125755107 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123706404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103367872 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124373505 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103222409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124732919 seconds)
  done (took 3.573850454 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.118806842 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.192307669 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.139164339 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.196332182 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.127131152 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.124573495 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.136541398 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.102867581 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.14459673 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.123639597 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100624163 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.124162648 seconds)
  done (took 2.6323248 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13690889 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170367338 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128933366 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102715781 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14108531 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133254727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133472415 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109729288 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145373621 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152094538 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133531355 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146627056 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145463852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147726327 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141128824 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140881261 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109748457 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133259839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127762582 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158352984 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111036063 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147566929 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133922586 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134992914 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1329993 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148032102 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122922369 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151455719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132573534 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146971491 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141315136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133210257 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147217931 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.15139588 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103895922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146539368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133695387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159530556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140823076 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149138209 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103158628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140661588 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14676741 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1431701 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147486767 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134929346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12062416 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133635035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133604396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168939782 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140465198 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149384655 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140632469 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146133431 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146419423 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167596203 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.152169128 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149068263 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141735778 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15182339 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12576973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140777948 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150799776 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152274354 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141217511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148590699 seconds)
  done (took 10.227804008 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179668711 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105480575 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13490634 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.152237056 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148646676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13437839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111715076 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133955035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134490046 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106111373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.213281332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111217188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15087844 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148537962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134036131 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133849612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133474813 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124287947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128469748 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168370053 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134189029 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.149305539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149693955 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149711552 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152209489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141820155 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110695041 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136707296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134367414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134631399 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143058523 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11095701 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149491448 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129052142 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149671256 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134979863 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11042063 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143933712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135620377 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140311473 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14850984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159322551 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111030434 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135853995 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152912383 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133838339 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134391123 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105642566 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134360201 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129600508 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153222252 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151942188 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154453264 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151085387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112886312 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134852025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134715727 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13453403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111457778 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142352554 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149527613 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134520682 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169462812 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135152947 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111302881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15080438 seconds)
  done (took 10.11607766 seconds)
done (took 189.997953349 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177234141 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191780387 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.166405342 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.160719888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.122702648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156846173 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.131365793 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.168057979 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.120794643 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096461811 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.121020337 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.125572863 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168932788 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.119897717 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096982936 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.124816146 seconds)
  done (took 3.257585903 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.22751479 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.32341635 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.143118696 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.127184416 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106016336 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.124952628 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.125913668 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10394851 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.123103298 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.136777563 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101614734 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.124880791 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.136309553 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100537148 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.123105023 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123486023 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112677237 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.124324237 seconds)
  done (took 3.510972185 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.128666843 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.187367428 seconds)
  done (took 1.335933898 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.139472088 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.237368084 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313899502 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.186805089 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.154814217 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.149822612 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.186687042 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.143217635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21974675 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.148743076 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.150281963 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.128693432 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133838423 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.13618901 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139991593 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12921692 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.13537965 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13977236 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.138017949 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.130789032 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.128604312 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.130524519 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.135643336 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114217659 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.231195863 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.148811129 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.363855879 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.129897379 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.13050294 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114098238 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.136230821 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.148947012 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.148097625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.227679557 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113293397 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.218855529 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.137804693 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.105206568 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.138584177 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.128189056 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110763031 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.13539526 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.14815747 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12789924 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106816852 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.137806838 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.130124718 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106089695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.139484681 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.14151435 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.139772966 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.137017378 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.193956611 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.140570741 seconds)
  done (took 9.289770173 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.956994955 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.171970565 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102217243 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.110711538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.161567017 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119813113 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.960407701 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.152003156 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.273109315 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.953216683 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145925599 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.14217026 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.28642639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.311073317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.212147799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.393007193 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.815046007 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.142522389 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13261123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.205446244 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11294532 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.162275241 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150274569 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.465949572 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.107248706 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126012147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134573206 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117306299 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.218133684 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101904692 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131073309 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.244696573 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312832702 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253344987 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1322564 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.125176586 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101911829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.229547779 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326601336 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.271547498 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.198577989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122166575 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102245236 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141064933 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.150828968 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121977307 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19932523 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.235706384 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.208895772 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131659483 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140507776 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.137644329 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117010585 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.220993693 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123719506 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.39470464 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.400311421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.127737931 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136998453 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123290107 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.343368402 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103175595 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.281502338 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156902692 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.264018711 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.126520226 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882695885 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.224679883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102387267 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137605739 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.136510812 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108633169 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1414273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.194165521 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.430659629 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120438079 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133283906 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124959878 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274591873 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104688861 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.125827304 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19878304 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129243467 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137861792 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.144534543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119222254 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.231349989 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.285196039 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142904926 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136802382 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133074462 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141440151 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.106620317 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.271413509 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.273881791 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.192808568 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.272552714 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143348596 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.199886282 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.226005194 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.139661664 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.207142019 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.137179325 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14734796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142279003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.272793299 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.168361752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126546585 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108779643 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136332978 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.174381831 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130532752 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136516565 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.207071105 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.512364305 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.20126851 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.124088384 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129449507 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114066986 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.2222827 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138175539 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.314526256 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114084321 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.22997152 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.136288103 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098409611 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13785926 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.223806784 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118646211 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138790562 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143301816 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136336893 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28614476 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.298286285 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12206181 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.286753078 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.204304961 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.139341921 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.233206819 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137162009 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.205116404 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139647887 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140554631 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105265523 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862789409 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143243275 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.137358047 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134184352 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.220065687 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10154667 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127865659 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126144928 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098909361 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.859193731 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129899966 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098988224 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.129307961 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138722954 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.137361657 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111476115 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.133332573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.221547139 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.291454536 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.141064697 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112031466 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126708461 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.19405775 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.131057091 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125864336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101836317 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.127011095 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13947193 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.108246979 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.129088558 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.232340175 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.196213834 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.276815072 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583748877 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.126284999 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102415671 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.309721125 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101648249 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.385548821 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114918812 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.306092785 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.204072743 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122961044 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.395204087 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.228159097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.218039501 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105835844 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.231305567 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099340266 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136655629 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.220910227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102804477 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137184117 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.218236879 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122777313 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144957518 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.215247902 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.127407762 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.287639998 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100571602 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.228294342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105878943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141140501 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.364278421 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.128899716 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149822903 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.197816643 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13354703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12720743 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.654666142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104462888 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140774891 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.139568612 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.282589488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.224679543 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113866649 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136813899 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.143273991 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.201344915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.269276564 seconds)
  done (took 51.708312265 seconds)
done (took 70.115875079 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36428227 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.305918686 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.370476499 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.258192681 seconds)
  done (took 2.441990483 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.2585369 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.179592711 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236948058 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.101203699 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246971477 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100791786 seconds)
  done (took 2.183140268 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.585625869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.48032243 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.40938315 seconds)
  done (took 2.542057889 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.294604632 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.305399372 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392034102 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.533233685 seconds)
  done (took 2.732728573 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.316573101 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126506346 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.148121599 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.200232145 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.280403778 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.305674171 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.176024943 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.229628794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152865195 seconds)
  done (took 3.054648148 seconds)
done (took 14.018619618 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.397890978 seconds)
    (2/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.27540717 seconds)
    (3/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.181630634 seconds)
    (4/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.364839469 seconds)
    (5/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.243813076 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.292328337 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.325622693 seconds)
    (8/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.146004927 seconds)
    (9/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.20562907 seconds)
    (10/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.319727538 seconds)
    (11/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.238634194 seconds)
    (12/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138630352 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.107967962 seconds)
    (14/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.243365542 seconds)
    (15/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.189719537 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111095663 seconds)
    (17/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.336699576 seconds)
    (18/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.158482587 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.167220853 seconds)
    (20/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.282755098 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.171047719 seconds)
    (22/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110857436 seconds)
    (23/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.14060243 seconds)
    (24/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.152034546 seconds)
    (25/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121344842 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.211178696 seconds)
    (27/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.131596497 seconds)
    (28/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.233288197 seconds)
    (29/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120425499 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135939305 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.14799158 seconds)
    (32/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.23520772 seconds)
    (33/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.239138419 seconds)
    (34/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.237393176 seconds)
    (35/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.22800555 seconds)
    (36/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.218336712 seconds)
    (37/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.291372246 seconds)
    (38/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.227919901 seconds)
    (39/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.095056175 seconds)
    (40/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.147505365 seconds)
    (41/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.248751679 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135961224 seconds)
    (43/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.182948134 seconds)
    (44/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.09352264 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.172470612 seconds)
    (46/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.193484076 seconds)
    (47/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10703519 seconds)
    (48/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.136752845 seconds)
    (49/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.211365512 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.169533607 seconds)
    (51/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.159578252 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112531591 seconds)
    (53/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.136001361 seconds)
    (54/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.211229105 seconds)
    (55/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.238545317 seconds)
    (56/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.212365269 seconds)
    (57/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.135711509 seconds)
    (58/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.232686996 seconds)
    (59/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.171175364 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.119977026 seconds)
    (61/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.133728167 seconds)
    (62/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.212130607 seconds)
    (63/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.29017515 seconds)
    (64/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.119598497 seconds)
    (65/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111118278 seconds)
    (66/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.198889177 seconds)
    (67/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.14394523 seconds)
    (68/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.147390654 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.272978089 seconds)
    (70/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.18042647 seconds)
    (71/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093397455 seconds)
    (72/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.149299155 seconds)
    (73/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.092801873 seconds)
    (74/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.134670838 seconds)
    (75/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.211903124 seconds)
    (76/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.22490106 seconds)
    (77/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.093758581 seconds)
    (78/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.214236375 seconds)
    (79/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.125702256 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.142526174 seconds)
    (81/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.123209252 seconds)
    (82/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092364535 seconds)
    (83/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.192434075 seconds)
    (84/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.213716794 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.146994628 seconds)
    (86/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.214180401 seconds)
    (87/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.21704592 seconds)
    (88/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111594399 seconds)
    (89/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.21239741 seconds)
    (90/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.17470762 seconds)
    (91/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.133984171 seconds)
    (92/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.106607005 seconds)
    (93/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.118654286 seconds)
    (94/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092169715 seconds)
    (95/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.230836335 seconds)
    (96/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.132499554 seconds)
    (97/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.1567282 seconds)
    (98/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.1585422 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.135580347 seconds)
    (100/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.092327445 seconds)
    (101/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150180005 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.10812058 seconds)
    (103/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.119682075 seconds)
    (104/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093718259 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.150847332 seconds)
    (106/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136344738 seconds)
    (107/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116673596 seconds)
    (108/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.132603455 seconds)
    (109/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.135959652 seconds)
    (110/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187360158 seconds)
    (111/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11954931 seconds)
    (112/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.149982045 seconds)
    (113/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104260525 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.147500385 seconds)
    (115/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.141939731 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101567098 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.137135313 seconds)
    (118/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.099109167 seconds)
    (119/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.152427237 seconds)
    (120/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136622101 seconds)
    (121/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.158291148 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.145045165 seconds)
    (123/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.121034661 seconds)
    (124/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110077054 seconds)
    (125/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.121539951 seconds)
    (126/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101777134 seconds)
    (127/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.147385299 seconds)
    (128/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.133240022 seconds)
    (129/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.150013939 seconds)
    (130/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.128368947 seconds)
    (131/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.231521772 seconds)
    (132/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.14985202 seconds)
    (133/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.120453558 seconds)
    (134/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.09396732 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.135961923 seconds)
    (136/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.126223072 seconds)
    (137/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.139929376 seconds)
    (138/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.188068224 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.136687944 seconds)
    (140/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.113083785 seconds)
    (141/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.169430992 seconds)
    (142/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.155196131 seconds)
    (143/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11104355 seconds)
    (144/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.119885353 seconds)
    (145/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.136841082 seconds)
    (146/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.193329874 seconds)
    (147/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.120921115 seconds)
    (148/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.138539327 seconds)
    (149/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11380173 seconds)
    (150/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.241309726 seconds)
    (151/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.186539304 seconds)
    (152/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150432565 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12472937 seconds)
    (154/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.120988662 seconds)
    (155/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111349093 seconds)
    (156/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.119859434 seconds)
    (157/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.138306236 seconds)
    (158/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111786984 seconds)
    (159/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.140354619 seconds)
    (160/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.093311716 seconds)
    (161/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.13887939 seconds)
    (162/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.135635903 seconds)
    (163/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.094112935 seconds)
    (164/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.212563325 seconds)
    (165/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.141940001 seconds)
    (166/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093126213 seconds)
    (167/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.121213097 seconds)
    (168/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09331026 seconds)
    (169/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.154753172 seconds)
    (170/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094154616 seconds)
    (171/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.167073373 seconds)
    (172/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.099664062 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.139201558 seconds)
    (174/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.187926821 seconds)
    (175/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.094149855 seconds)
    (176/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.120873928 seconds)
    (177/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094204643 seconds)
    (178/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.120410456 seconds)
    (179/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.119670917 seconds)
    (180/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.119948876 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110028882 seconds)
    (182/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.121814761 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.13620875 seconds)
    (184/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.093272734 seconds)
    (185/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.125278358 seconds)
    (186/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.094021535 seconds)
    (187/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.128136415 seconds)
    (188/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.094691048 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.128671815 seconds)
    (190/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092851283 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129472409 seconds)
    (192/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.09336742 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137463382 seconds)
    (194/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.093674494 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151967718 seconds)
    (196/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.121701354 seconds)
    (197/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111901568 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.13743129 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110774355 seconds)
    (200/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.120707702 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136663651 seconds)
    (202/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.093355125 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.172445001 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.12787213 seconds)
    (205/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.094547342 seconds)
    (206/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.173043843 seconds)
    (207/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.10966845 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.138235776 seconds)
    (209/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.121588279 seconds)
    (210/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111074975 seconds)
    (211/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.120129299 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111917286 seconds)
    (213/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.14693841 seconds)
    (214/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.14122896 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125775611 seconds)
    (216/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.142491005 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.136157387 seconds)
    (218/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.106939579 seconds)
    (219/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.121843762 seconds)
    (220/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103533646 seconds)
    (221/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.119888141 seconds)
    (222/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102460442 seconds)
    (223/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.12910482 seconds)
    (224/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.143011261 seconds)
  done (took 35.652232771 seconds)
done (took 36.720048765 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.550057547 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.146012233 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113611567 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.141537808 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.202069885 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.145385032 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.14982571 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118417351 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.145963209 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136704631 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.104467325 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.146766213 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.14136614 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20161684 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.14551864 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106604535 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.134197087 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146820688 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.121256031 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149776919 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202141478 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135269811 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119797597 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.133947115 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.202353371 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136492137 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.114315885 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.141886836 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146435872 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110910501 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.14068898 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.133035529 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.124035944 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149646558 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131058221 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11170193 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130782911 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102989814 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.139095003 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.138332496 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.119353211 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.139376666 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.144903975 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106514506 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13997221 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.139355929 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104026983 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.145113783 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.130722987 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113990122 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135485549 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.150496469 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110901751 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.130163553 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.131439031 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107095096 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146129545 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104287213 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.14681705 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.13140147 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.10662343 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.130266133 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.140711342 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103376898 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.137680244 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.106127667 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136502544 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.14167575 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110376211 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135105637 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131760639 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110130737 seconds)
done (took 11.169168573 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.11245401 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193939106 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200799554 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.233606983 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.166499025 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125093715 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.153776235 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.164718413 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.150894055 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.157806127 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144201219 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.163383583 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.206994467 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.146492262 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.152422765 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140267308 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119721753 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.146082046 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209313448 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.159139606 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.171608751 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.148638065 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.170421993 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.128745646 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.139714899 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.172956119 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.141992033 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.112989448 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.139479953 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146960906 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.13139931 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.138444472 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.141160355 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.159628246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122527755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146132983 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.151908875 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113486575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.137851835 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.137176454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.153209609 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129054473 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.137124756 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.152249518 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112902518 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145485844 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.148937686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119535935 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.142360169 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.142108555 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113779655 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171038981 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.147731715 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147818925 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.147261186 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118277604 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.146015126 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144039825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114989373 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.14482219 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.136710143 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.111805054 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.141817382 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.168412391 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.141477675 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.118978798 seconds)
  done (took 10.816057085 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133590697 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.175295462 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.149651378 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.14980011 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.145815513 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.101659333 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.128876733 seconds)
  done (took 2.125655268 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105147274 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.204159352 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.202110884 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.230564696 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.19550737 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.212255795 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.153663689 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103066454 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.190529006 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.14351868 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.203831609 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263840229 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112090686 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.151745068 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206794715 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.132452557 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.207177019 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.13149014 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115784405 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.203283761 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150429945 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165866448 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.149183941 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10422261 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.196181623 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133754536 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.288188356 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121129489 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137670266 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141792697 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1171216 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.247662529 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.197833666 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121722762 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136459768 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.202430334 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.19624229 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144948132 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.212702714 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.138155921 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.198280869 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.145293469 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11770302 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145470794 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.143597438 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.183781855 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120692397 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145542036 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.142822293 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.204377483 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.16435972 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.197364163 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113046742 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.145174964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.14549535 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118785667 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152084429 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144082769 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.204443099 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147829359 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.198049701 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.199094569 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.198017253 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197724044 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155931366 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.19972091 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.19440908 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142264093 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142173472 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117552798 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.198981672 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143035442 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.145658622 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.186091417 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148111252 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.198238145 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.199221508 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111951726 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.147501302 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.136802748 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113014315 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131581936 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.187132478 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145496182 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113379026 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153989338 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145616215 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.145110193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108606206 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.158708287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.143629823 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117942823 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.150280803 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14251136 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149821014 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.20130141 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.146401552 seconds)
  done (took 16.808569472 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107559111 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.13382484 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112851321 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.13522329 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.133584133 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106710942 seconds)
  done (took 1.882142112 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142160959 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.148345132 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156764654 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.148341419 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.203508683 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.206630434 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.210424394 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146528692 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163033067 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127928866 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.236959634 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.211510109 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.204801202 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.150437816 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.210456053 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.15124571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.210981365 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144118714 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127411885 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142119518 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.152448892 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120476699 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141550142 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.198288221 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.150652407 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148033404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147022474 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126028575 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154199282 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.145853775 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.148781354 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119550957 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.142811225 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.145558927 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.209148042 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.142635947 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113842192 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.152752076 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148470474 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.150765915 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.211003715 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142627068 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126832042 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.152353619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.146819367 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.142306663 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124751779 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.146027014 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.20852853 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.153960118 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.154131476 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.147885004 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12131557 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.153199657 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.143572632 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.145234184 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.153357644 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.210347108 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119987877 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.143703406 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147760678 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148644576 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117437377 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.151216368 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.149383555 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.151981592 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.11454133 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146905157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142312674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119414128 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.152525324 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.147639148 seconds)
  done (took 12.302186763 seconds)
done (took 45.060682816 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.142725514 seconds)
  done (took 2.301942595 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.064703613 seconds)
  done (took 2.221955922 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.904906541 seconds)
  done (took 20.097811579 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.612991414 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.692181342 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.038411258 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.186206271 seconds)
  done (took 3.681120665 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.052106474 seconds)
  done (took 2.222754265 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.374891698 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.275182289 seconds)
  done (took 1.807354381 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 1.013963766 seconds)
  done (took 2.178376969 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.28620776 seconds)
  done (took 3.450523021 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.406069388 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.213743326 seconds)
  done (took 1.794290421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.698492339 seconds)
  done (took 1.867546644 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 32.593625081 seconds)
  done (took 33.762221315 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2620638 seconds)
  done (took 1.449761127 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.329605081 seconds)
  done (took 1.505291758 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.941230117 seconds)
  done (took 5.113951021 seconds)
done (took 84.619900755 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114733415 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.147226825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.117005596 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.14331088 seconds)
  done (took 1.687944626 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12512008 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.146122961 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.1492105 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116320322 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.154620077 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146014399 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11588801 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.153688036 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.144806273 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118276151 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.146916558 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.145321196 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118812145 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.143817968 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.141865652 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120497572 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.149064822 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.146299496 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.118013177 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.146700116 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.145238898 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117489625 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.149205239 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.144855646 seconds)
  done (took 4.485072967 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.118089035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.13769919 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111297643 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.136637703 seconds)
  done (took 1.688098781 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126339611 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.160760367 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.159587235 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125308059 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.161509908 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.161500001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.140583448 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11281051 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143791242 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125165969 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.142919818 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.167153333 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.160320683 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11734887 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155063424 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.137084196 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119494752 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.162162499 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.152615674 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126140508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141954941 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.151972026 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115101464 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.158447872 seconds)
  done (took 4.613404247 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.231416608 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129527163 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.169984817 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.200665997 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.173081827 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.143991086 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.172847547 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.122311543 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.15375109 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.150399261 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.12197692 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.207324632 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147422121 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.148885243 seconds)
    (15/22) benchmarking ("StatsBase.var", "Float64")...
    done (took 0.16190058 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119645185 seconds)
    (17/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153366317 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.151114084 seconds)
    (19/22) benchmarking ("StatsBase.var", "Int64")...
    done (took 0.196914853 seconds)
    (20/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149588891 seconds)
    (21/22) benchmarking ("sum", "Float64")...
    done (took 0.123258531 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.16009842 seconds)
  done (took 4.678774425 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119308087 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.138272952 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.104697971 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.138094948 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.146109233 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112201982 seconds)
  done (took 1.957416702 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.105859941 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.131993959 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103734816 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13148881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108460118 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.132500537 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101861329 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13275462 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.131868663 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10369538 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131347521 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102058922 seconds)
  done (took 2.616503363 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33403351 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108767896 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.142296395 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.135523421 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.142782463 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.108032559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.155321342 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138195111 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.2528243 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.139685952 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.155711512 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.218288716 seconds)
  done (took 3.226515278 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248658929 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148011975 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283912514 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.425599884 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190510872 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199688131 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.313552978 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226401931 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225327688 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168270553 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234224705 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188532004 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185687383 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215673946 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170305727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.198533663 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21188981 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242264722 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178245652 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2762692 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200052524 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202606776 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218614573 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184322007 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167334507 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191170607 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.146076909 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127305901 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239024743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205111328 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210403457 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178954024 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170691755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24245307 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296406178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214386113 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.388248592 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160095595 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.225164553 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.220600433 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.308443887 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169963485 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235807185 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186984377 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157952136 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218735262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188997526 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.21808669 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.161710448 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170989175 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22435296 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208759159 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.253005791 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165713576 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337726062 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176171777 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.179215583 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209272016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227958246 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259690777 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202901098 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147864942 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216513606 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218122165 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216938907 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.178193693 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.237473967 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123677353 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213057874 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264939098 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220913987 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2022358 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.253160993 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162361343 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198764578 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203395084 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185510007 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214080562 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194636463 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115692338 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18034833 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164506324 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154752013 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220035114 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117770514 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275780248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162175529 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.223015322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24176856 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189987756 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193710846 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198429252 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233460085 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145848949 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.14788219 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177302026 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.195211412 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189130808 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159119252 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191143501 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1751767 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126987303 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181675262 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.14885783 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193673167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.16434156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201306786 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199511066 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159387949 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201604728 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179905516 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.19241277 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206825159 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223427646 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161421881 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159215042 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232153054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190809402 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.169573295 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21172635 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228176484 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.200924782 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1678103 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206177208 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261867313 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142175289 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259039411 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171247761 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131793752 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.184931913 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192671186 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189050989 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.185191823 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15574319 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.187881663 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234082073 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154815444 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164558693 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211077591 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155787804 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124364915 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174886567 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165200855 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170033712 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.183771925 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.171080164 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186953857 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192355183 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185941135 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192796342 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172345982 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237039937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159983312 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19423892 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178380333 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115399078 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.251195932 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223008573 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155729054 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223447883 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.207104644 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258592634 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199108601 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156522158 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216805353 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126173005 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147879531 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202349238 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197751451 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195813072 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.253428188 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226303253 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.206187714 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.188302596 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178945198 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201234753 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.24183576 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191463135 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.173652943 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196217841 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205546289 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118111817 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.152130869 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.157241813 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169065052 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128464625 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159415565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220658381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229097465 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218322247 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169646488 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221647526 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154968385 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200617859 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.211089189 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168230916 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.227094872 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249818365 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202368915 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140829994 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241181433 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117414191 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151738903 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.165258132 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204823293 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160494301 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132155607 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173933014 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220125566 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240168061 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180240744 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239185418 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233893188 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232594767 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118759032 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.198425114 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20499732 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190810069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.224275909 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158752271 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.195303988 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.220445956 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176301722 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231232609 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197104206 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234278832 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242061358 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189893055 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15815632 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180737253 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203723952 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170310351 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199661321 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174969111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164477392 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185226722 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137172557 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15620821 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219209455 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172814401 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251156386 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188517946 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211430589 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151625896 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174723869 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193947535 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174773142 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115476285 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205114025 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258949369 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177438703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191889395 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2122164 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157162734 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345591621 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229115589 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254234885 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135254093 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172912972 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195854262 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191795697 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197280742 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.247521128 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142447436 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249023407 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192223699 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141370796 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164546081 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180214615 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182136907 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.187025645 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.165407513 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.190302307 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171470925 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225177471 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174689642 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191956156 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199980973 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.178299093 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.18783749 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139530841 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27446792 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190850603 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215259544 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.189566746 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.205212408 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225081042 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15226426 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154514988 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124685504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217333338 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161590961 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192203127 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.243410324 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230754646 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194374463 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203622434 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167797268 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.153188686 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193746062 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178377177 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232525473 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171512806 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.168510672 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231271705 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.182790717 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157751824 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197603037 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319384527 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173839306 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210628939 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.147333779 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307695347 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153257067 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130543309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193822789 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205350696 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.1785417 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.219423075 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198780769 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176329257 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193758417 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16739265 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221964918 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274226303 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208895055 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213408868 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.17455948 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193551831 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19793355 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213138117 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174119228 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175675158 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194175385 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221664954 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.260386068 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132525673 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19740054 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229748739 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161886706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246348488 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162060109 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226616401 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15920583 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204338989 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169885358 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121998984 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190539872 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.24561628 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129846584 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241683616 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19112352 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127700954 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156522852 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184647831 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19346894 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175845425 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156573404 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219593908 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153632597 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19795485 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218081693 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127097106 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187436319 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17623654 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163582763 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174882462 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17572029 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163901868 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173397793 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217352478 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.162668172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212771462 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241975992 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200234769 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193715517 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173265815 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694773033 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12559107 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220853374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177024161 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260935773 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148003785 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235011451 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196163165 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149617633 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236051948 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181026142 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.258690257 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203609992 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.196220129 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158371786 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144461866 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17777494 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161929397 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184082484 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197501694 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170926178 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.169074036 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193072824 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177174155 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144232769 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168018463 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222447245 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177767236 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254859502 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221115612 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168814242 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202257007 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214219825 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156894186 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19838953 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208304772 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172549724 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18563549 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.163285093 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135102049 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217096308 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151418496 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194855172 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196705615 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196763518 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199605919 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.167760544 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194703536 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173048967 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196084136 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124030195 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.225185818 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190280108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13029585 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.158760492 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188795751 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195189329 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192941287 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158429436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176033059 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24777172 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.119666467 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163469603 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319081977 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191039957 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263613485 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.153965275 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164306776 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173987467 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190651756 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.190524899 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194211358 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.160666294 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127739196 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.163458145 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.218994155 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.188251741 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190622995 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21565509 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19635202 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225233581 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.178907508 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.306509303 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168563551 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1894502 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.162833103 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128833862 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170284131 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164818705 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17743982 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225173386 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214714156 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.186599584 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.176143764 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159331934 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.152051056 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130349768 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1957278 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188881308 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192058722 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177515513 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.147028416 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176196942 seconds)
  done (took 94.555276579 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232794047 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.242403949 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.190719897 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.236488401 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.217400769 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.301669398 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.252707736 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270009708 seconds)
  done (took 3.236320251 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.150768815 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.131249178 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.169924323 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.148802158 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.149682845 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.481269137 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163795325 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119709002 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.213734294 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.192399329 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144978325 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.698999933 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.148849619 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14849631 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.151840885 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.146022298 seconds)
  done (took 4.654263379 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.88389804 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.607733717 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.617082295 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293205345 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.270995845 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.189979319 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.839648255 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.223374715 seconds)
  done (took 14.223505888 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.150376376 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.166561839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.378167791 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.240727698 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185770029 seconds)
  done (took 2.430660379 seconds)
done (took 145.229878532 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.122137485 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.170662976 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.151926391 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.139294376 seconds)
  done (took 1.875012206 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.170864469 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.138366911 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.107274312 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.135587891 seconds)
  done (took 1.863546029 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.575497418 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.102978567 seconds)
  done (took 2.02160268 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152102953 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.168858015 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.181553361 seconds)
  done (took 1.820114328 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.129328968 seconds)
  done (took 1.437253807 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.11776748 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.147240064 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.20882362 seconds)
  done (took 1.787225318 seconds)
done (took 12.112090317 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143783234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.458033188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.438558523 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.160978174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716178131 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430634364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.076517803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18294326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.218437157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141285737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130711944 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.72231352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063248996 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.363905768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.050436242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.395074439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694183583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143501523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147833067 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112264921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.051278174 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109190843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.142356067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141966133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.691187591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.447878916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141058829 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377931596 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.140287152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146238414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.401517525 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1406041 seconds)
  done (took 18.017690911 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158656438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.21076867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150946183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14338768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115128997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142745731 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.152951097 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125324913 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.249655487 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110525492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1645553 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109808772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146456068 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142065203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135852142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.14150268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145353951 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113209119 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149828414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112627264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163420571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140434805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112780344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14399707 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.141002926 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.124869821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142048666 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156688249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111425005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147769175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.146792343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.1105459 seconds)
  done (took 5.878980123 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.171588898 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.221732856 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.15432197 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.178706045 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.198197601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112650207 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.268179599 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185323839 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.219299844 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11205503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166898801 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141142178 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151913208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.143165689 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166919164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110304094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.146167325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145004719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11829839 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144792083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164240643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110939358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144843494 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112185693 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.142480682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157747153 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111374171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.157216704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142708417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116927263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.148983246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142518459 seconds)
  done (took 6.233220719 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127365147 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.157261309 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.166296121 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135211516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.151286499 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122289272 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15558908 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.149908638 seconds)
  done (took 2.486408308 seconds)
done (took 33.925569782 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137955189 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.163280269 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130497136 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.156083146 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.218273879 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148109203 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127170462 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.147745471 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12484812 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.167121619 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.14231426 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.1166157 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.163639905 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.120430345 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.235721251 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12665074 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.208198444 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.204086285 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.150984029 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123964986 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.151026155 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.210516009 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.155540343 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.116882894 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.213470781 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.148295947 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.202303993 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.155152424 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.120117664 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.147294394 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.203727053 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122740568 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.151781654 seconds)
  done (took 6.519362539 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.221524687 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.232110798 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.117834061 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.149150385 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.232044497 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.14883496 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.219799436 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.116212579 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.148613226 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.115477802 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.147696714 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220067071 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.230050289 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.24455214 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.296325788 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.232639164 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.216679895 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.230439485 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.215685812 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.23321634 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.219830921 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.148983753 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.231400828 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.236025245 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116194739 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149075933 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.255819463 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.227103557 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.257541336 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.217771269 seconds)
  done (took 7.362245969 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125714035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.161000567 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137798058 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220013381 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.188826807 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159504888 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.158836413 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136825692 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171421855 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.14451212 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.123097817 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184106301 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163145899 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121901235 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150242013 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131768291 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.172689036 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.145860555 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119874903 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.16579349 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164907682 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131950693 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.160883404 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155302863 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.1117892 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156958882 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149994121 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125617343 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.153084073 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154430092 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116966969 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149675778 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115921095 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.156821012 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.150145088 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125940177 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.174105295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.155071196 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.124877151 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.183171265 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.155572902 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118317292 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167814936 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.195112812 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147001775 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124501288 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.158342061 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.123044904 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143708067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.167184548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127831309 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.1459696 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.169385776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112817706 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.145825664 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153694198 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11419625 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149816842 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.123165532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.149727477 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.172891858 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120519482 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153004174 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147488114 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.119084366 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.14593791 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.112968412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1520943 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170904907 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11798704 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.179788894 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.145995635 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123638929 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154534118 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151339852 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122279472 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.146518837 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119742526 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153586779 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151898216 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123257525 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148954899 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.149085712 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132260519 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.169348942 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.159627447 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12400136 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15757438 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.149283518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114115254 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160040874 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.147362909 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.11641896 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156959449 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114573345 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149536255 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158680689 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122331701 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.145068097 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.165481339 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120102634 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.145237703 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.130591134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.14682902 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.149862993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123755363 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158409399 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.145558303 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122255369 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157169575 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112879409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.152209471 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.150227931 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.112631286 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163031552 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.156898708 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.117875083 seconds)
  done (took 18.332524001 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.328915829 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.339589112 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.26757807 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.405793462 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.174007182 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.219794637 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299328203 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.288202284 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112956146 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.195608386 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.212919094 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.297553262 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.148127202 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.147550103 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.336925602 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.409046821 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181716891 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.19768859 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.197924911 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.174445038 seconds)
  done (took 6.294673378 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139587558 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.19368771 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.181245266 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.183303344 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.155560418 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.128817661 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.146750677 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.174941373 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.122258015 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.154634724 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.145042405 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129212339 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.155929247 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.158697292 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132633055 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.198250677 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.151129629 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121946022 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.17030777 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.154118269 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.159734586 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177239934 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12631375 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.177052083 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.162682824 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.128993963 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.146289886 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.15397298 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116495049 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152437414 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119714046 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.171233179 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.153728169 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.153902448 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123630833 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159390984 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.116277663 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.147781935 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.149402875 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118144804 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.163867273 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123912616 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150803537 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.111965512 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.161072817 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.151062438 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.126864964 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157288921 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.162097541 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130230366 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158373437 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.160335108 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121098596 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168585693 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.116768979 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.16481236 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.161862419 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160330689 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121840254 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.146122961 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.1118931 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.153566259 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.152256488 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.126474843 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.157783901 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.171831559 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.163055263 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113815682 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.15431008 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118657872 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.150562956 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.166605759 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.177869462 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119141125 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.151019328 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13122127 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.151016205 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.139316283 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123355839 seconds)
  done (took 13.031866554 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144912012 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.152404534 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.170087169 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.15321248 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.16153004 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.153962273 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.118788862 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.169285939 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126659858 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162520523 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.160283585 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128595472 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.174892924 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.160508828 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.119206883 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.1622417 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.158006402 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.193375226 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13439696 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.184121809 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16100189 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120039724 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.16294021 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.161858184 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.150478123 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.16103697 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.182710226 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15884219 seconds)
  done (took 5.723479006 seconds)
done (took 58.583971288 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.524034568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.670535903 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.435432929 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.431893052 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.453511505 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.481115417 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.439658141 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.629243773 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.237653045 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.429345874 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.434027009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.433523739 seconds)
done (took 30.970938161 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.791571572 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.05370003 seconds)
    (2/2) benchmarking "String"...
    done (took 1.752617998 seconds)
  done (took 5.181437731 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.430373787 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.42863069 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.67047899 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.428164348 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.446167431 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.44434138 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.440467033 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.442385156 seconds)
  done (took 17.655414865 seconds)
done (took 29.418581843 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.444143483 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.697611172 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.718367253 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.45048192 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.448902126 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.435147694 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.427257166 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.492704858 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.424405886 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.437624426 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.42919594 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.728351878 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.430723824 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.871307188 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.432731581 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.437297899 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.445554053 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.781051161 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.428238479 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.428524021 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.437524621 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.430225006 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.452561811 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.45399775 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.447049794 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.441963474 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.474992191 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.434438163 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.733229025 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.43645064 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.486115036 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.430044844 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.492477372 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.431355522 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.547367329 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.457225858 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.709011431 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.439638842 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.430798344 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.443328257 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.737337998 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.884038104 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.440609758 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.435644686 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.434993423 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.514376427 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.429123967 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.183268363 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.452309248 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.435269744 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.503605776 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.858829045 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.433567228 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.437862035 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.438312825 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.790644519 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.446142448 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.523566767 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.476807991 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.448701351 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.445536488 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.4311706 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.457012391 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.43798727 seconds)
  done (took 159.430826352 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.431905825 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.437329711 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.433416867 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.456119527 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.436139376 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.439877884 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.430503303 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.43314103 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.436294837 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.466927595 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.433876918 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.43159076 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.439632044 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.395692059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.438355699 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.457459584 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.435732348 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.452647392 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.434907215 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.433630077 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.456716464 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.431349483 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.449025151 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.435524711 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.434299686 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.445565049 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.45970632 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.449407026 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.437014876 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.433402846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.452080457 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.437787293 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.12383932 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.295988693 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.452530407 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.440385475 seconds)
  done (took 88.750184651 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.433665283 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.433760444 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.434345343 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.472469205 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.437302094 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.070554744 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.089839457 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.24651756 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.659483369 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.040352181 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.778713342 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.433882057 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.534144922 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.448158339 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.439504462 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.448200294 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.475806157 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.432436058 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.434077151 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.095181836 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.45091736 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.643665615 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.643496472 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.452010195 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.471115959 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.440341168 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.842798515 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.433020031 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.472533655 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.786892256 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.487926397 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.431322103 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924640443 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.077682986 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.554538177 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.437834007 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.477384975 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.438392809 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.725757262 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.435220563 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.437341588 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.43862259 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.206369496 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.430630504 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.08724321 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.441261536 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.46730575 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.432061748 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.436090759 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.433668215 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.998601411 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.279128241 seconds)
    (53/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.455812319 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.434775404 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.436750055 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.439962814 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.436200632 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.43853679 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.474995802 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.436821426 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.976785847 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.562726306 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.459823058 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.440325938 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.4749806 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.440249113 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.979767291 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.43587088 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.545888641 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.517133472 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.545243298 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.08777257 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.442416677 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.540643526 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.558958908 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.43773506 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.437063164 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.439903191 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.438510807 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.551503438 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.436845028 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.920304243 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.624726672 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.45637441 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.011420742 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.539886979 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.434096247 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911446112 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.437158867 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.436993949 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.27505404 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.53822055 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.438749554 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.438998985 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.439835087 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.921076125 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.094952229 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.781878232 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.437130365 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.094861453 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.441878811 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.929629296 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.067592198 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.176494862 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.437836257 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.553472454 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.627135521 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.456435322 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.437386659 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.008131579 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.43849281 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.497020158 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.44687996 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.839977677 seconds)
  done (took 397.819788582 seconds)
done (took 647.359895277 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.209967733 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.158976658 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.289656771 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.191892266 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.152291759 seconds)
  done (took 12.367037946 seconds)
done (took 13.735111902 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.649983466 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.649869661 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.512473158 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.654459442 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.475855331 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.675039935 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.633715788 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.46219381 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.552582999 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.528048867 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.556359557 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.496982392 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.479502453 seconds)
  done (took 21.69230309 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.73641446 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.445583795 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.514359171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.745844389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.484533807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.73505813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.78849855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.447463799 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.593382931 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.457390784 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.45796355 seconds)
  done (took 20.771985812 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.764055548 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.447401428 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.532756264 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.746944663 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.48665909 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.729551595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.778409391 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.445813435 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.588870093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.459763044 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.462816441 seconds)
  done (took 20.809416144 seconds)
done (took 64.641923215 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.487618815 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.624593341 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.473236014 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.462406962 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.456007661 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.457352815 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.461845064 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.456919311 seconds)
  done (took 13.246755067 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.45478611 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.452369276 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.455023454 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.453465296 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.448275695 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.454838171 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.453168501 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.452843343 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.45477833 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.456147924 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.45487257 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.452213359 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.45136215 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.456217629 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.453614087 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.453582539 seconds)
  done (took 24.624352572 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.458805002 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.452915214 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.453952291 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.452780669 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.453938122 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.453907592 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.457583375 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.454271827 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.453199272 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.456478759 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.45407722 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.452906211 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.449121496 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.453756395 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.4530373 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.457904856 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.455116422 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.451757996 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.460650237 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.454281476 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.451452204 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.455867298 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.453549744 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.454236356 seconds)
  done (took 36.273296483 seconds)
done (took 75.510431473 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.444982564 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.445212865 seconds)
  done (took 6.257357247 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.514613443 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.514123452 seconds)
  done (took 4.397344272 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.456293965 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.455494079 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.457821292 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.457290682 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.455911528 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.45689514 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.454856538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.455485428 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.454244274 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.458350479 seconds)
  done (took 15.931138975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.457692096 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.456198087 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.459663361 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.457744201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.45746435 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.457438279 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.454408166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.453682266 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.456125184 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.458379345 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.456313642 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.453637621 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.45837804 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.454477822 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.454856265 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.457331433 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.456992897 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.457624615 seconds)
  done (took 27.587695019 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.469307914 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.474459046 seconds)
  done (took 4.312116612 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.595443148 seconds)
    (2/7) benchmarking "second"...
    done (took 1.492888811 seconds)
    (3/7) benchmarking "month"...
    done (took 1.574172261 seconds)
    (4/7) benchmarking "year"...
    done (took 1.561900498 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.500251918 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.475736805 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.502139503 seconds)
  done (took 12.070818156 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.458775992 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.652035464 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.772101104 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.036097025 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.458817405 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.48604693 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.323903827 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.488869031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.479292649 seconds)
  done (took 16.524026983 seconds)
done (took 88.448496075 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.447951096 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.505523412 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.459763224 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.471321013 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.753469204 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.504129575 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.450362278 seconds)
done (took 17.962647518 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.453088425 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.460382478 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.460873144 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.451980801 seconds)
  done (took 11.193941641 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.458309504 seconds)
    (2/2) benchmarking "read"...
    done (took 1.804459248 seconds)
  done (took 5.631728385 seconds)
done (took 18.202637358 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.46305292 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.459298904 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.459380027 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.45831801 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.457047709 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.459368422 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.460196891 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.460295756 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.459593743 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.462271369 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.459519748 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.456399011 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.455860425 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.45947916 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.461769208 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.460430353 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.461563312 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.458772628 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.461760592 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.460537803 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.459158971 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.461263404 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.462451779 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.461597504 seconds)
  done (took 36.411841049 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.460300932 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.459920438 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.461011498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.460974852 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.460999982 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.462082478 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.461038995 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.460569852 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.46196855 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.462061348 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.463390514 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.461416088 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.463367037 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.464404108 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.460668069 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.461991263 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.460910477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.461577138 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46126547 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.461990142 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.463591919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.461562502 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.460312207 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.46028283 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.462655072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.463943477 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.46213169 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.464372942 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.461109109 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.464792799 seconds)
  done (took 45.230702786 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.465587803 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.468096536 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.461074745 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.461912682 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.461829475 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.462050791 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.462252785 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.462703935 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.463776903 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.460974701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.463291876 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.462709677 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.461824302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.463010722 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.460631654 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.463579653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.463575325 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.463744037 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.46137455 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.464333678 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.46404558 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.464641426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.464750112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.463454886 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.465135609 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.464788312 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.462476483 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.463844233 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.46554569 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.462644231 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.467681917 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.466647079 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.464466191 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.463952497 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.463629779 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.464375087 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.470370071 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.473325532 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.46644093 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.465584351 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.463357396 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.465391021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.462367775 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.464409285 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.465659566 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.465895346 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.465628001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.463560935 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.465698764 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.467141103 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.464630485 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.464427198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.46519437 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.468957227 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.467121333 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.465897473 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.469282999 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.464052485 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.465558507 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.465886452 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.464888043 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.464787415 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.4623851 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.465270103 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.46493713 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.465486089 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.468308731 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.465630687 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.464841476 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.464781109 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.465961465 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.469849741 seconds)
  done (took 106.842321265 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.468931411 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.465542933 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.466977212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.463286133 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.46601804 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.46456485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.468819484 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.462884096 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.465293913 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.466728032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.466735696 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.467461277 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.464681895 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.464814971 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.46715721 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.465097445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.467022102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.463062943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.468273125 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.466941701 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.468125411 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.468065922 seconds)
  done (took 33.63288069 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.467477333 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.468578965 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.464752171 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.467579219 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.465874226 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.470008994 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.467304682 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.469510585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.469272191 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.464606605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.469636838 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.466310614 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.46870889 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470540761 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.464285654 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.467705833 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.468056471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.467857875 seconds)
  done (took 27.792481689 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.467738824 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.468683246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.467589426 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.466571101 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.469448074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.469004338 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.466824096 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.469469771 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.467518965 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.468487871 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.468658912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.466416392 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.470426164 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.469250495 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470565877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.468742951 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.468301085 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.466279139 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.46345434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.468703629 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.467129626 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.471056937 seconds)
  done (took 33.678860826 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.470109279 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.468336269 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.46802023 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.468712428 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.465978681 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.469249398 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.470416488 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.47179872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.471729484 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.468779625 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.467609052 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.468760122 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.4710752 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.468522414 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.469504149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.467031418 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.468593006 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.467682253 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.471187043 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.468585101 seconds)
  done (took 30.762009105 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.470149603 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.470469292 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.471732717 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.468711891 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.471715783 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.47256098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.472217433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.475394304 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.468037597 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.472691546 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.473391632 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.472707628 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.466932805 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.470060359 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.469565855 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.472330475 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.472485199 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.471299544 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.471465285 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.47163319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.474235839 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.47140098 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.472284113 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.471996275 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.472279904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.472694507 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.470436566 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.473238828 seconds)
  done (took 42.582535334 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.473861233 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.4719499 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.470789221 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.471732687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.470824865 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.474531153 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.46930027 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.471193858 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.470995294 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.472939928 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.474766614 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.474148404 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.474548672 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.469331707 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.474669498 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.47052682 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.473157801 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.474094972 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.472443442 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.473346342 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.471918082 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471911587 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.471277957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.470126163 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.470537533 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.471400337 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.472910214 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.472412034 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.469662724 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.474870555 seconds)
  done (took 45.547629529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.516875477 seconds)
    (2/2) benchmarking "in"...
    done (took 1.521582667 seconds)
  done (took 4.419315123 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.472946676 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.47273572 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.474169004 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.470981487 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.473764796 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.473421085 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.476995298 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.472685607 seconds)
  done (took 13.171312766 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.469093335 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.474165799 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.470697258 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.473069728 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.473609328 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.47051442 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.481003828 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.47900235 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.470068189 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.469109846 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.47329183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.475924256 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.47219061 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.471295676 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.47036197 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.475630527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.475150701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.474149561 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.475531713 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.474532608 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.472824348 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.472661235 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.470659791 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.480147527 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.470618653 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.478429633 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.478238859 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.479745747 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.47348311 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.476411806 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.474897521 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.476776579 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.474478711 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.476563685 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.481088208 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.476336351 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.48238219 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.497444648 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.47884328 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.478759804 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.478304013 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.475593155 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.47114361 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.476473348 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.475118722 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.477748225 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.478534681 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.475357991 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.470988657 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.475420931 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.481021444 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.469814108 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.478096153 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.474012284 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.476416126 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.483703583 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.503722252 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.475179963 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.479208171 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.48037043 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.488780799 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.484860418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.477620101 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.475996025 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.484358347 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.488197688 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.480803332 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.480692072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.481453342 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.477759524 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.480658758 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.490283776 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.490739121 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.477561618 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.475520574 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.478394064 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.474748198 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.48030053 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.479669222 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.479713744 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.477090133 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.47859257 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.48040721 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.488231415 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.472870173 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.478379586 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.47972776 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.48125802 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.473876345 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.484770211 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.50064371 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.477695315 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.472077023 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.472392291 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.47438696 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.478480296 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.474605352 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.476493797 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.478081015 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.481314208 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.480310003 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.477817279 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.480659103 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.480428326 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.480016181 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.478950116 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.483328678 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.475315656 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.481391825 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.483694945 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.478514801 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.479829442 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.481555504 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.482753378 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.475664518 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.483332241 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.478470413 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.475974692 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.47915551 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.480660888 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.481459589 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.495849002 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.481730122 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.477980441 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.478658536 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.487156689 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.480740224 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.481684686 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.484301384 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.47727834 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.477626746 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.474107629 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.483738507 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.476470721 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.48120279 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.477121621 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.482520803 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.479018034 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.477480819 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.478186869 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.47952992 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.476348556 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.476123081 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.478925978 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.481078513 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.478876913 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.485542112 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.479409274 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.477571157 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.479046398 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.483259362 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.479531079 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.476838128 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.481616289 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.476773358 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.480532344 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.477337083 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.481338616 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.4831613 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.480951381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.483306241 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.475375976 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.478252676 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.482662643 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.482395908 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.477609721 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.485985842 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.481234554 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.481033351 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.476642633 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.479358879 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.474122591 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.480343147 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.486538934 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.482966029 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.480248976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.480709516 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.482918322 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.482135365 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.482103056 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.482167825 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.484457278 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.482306354 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.486921078 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.486457689 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.483529808 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.482718792 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.477482651 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.478793514 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.485512198 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.481453461 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.490135317 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.48941935 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.492928125 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.480033586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.485193675 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.477086896 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.483102415 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.484605635 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.484219842 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.481159497 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.482463807 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.480514396 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.485442232 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.482604345 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.482180913 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.481894076 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.483490242 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.484385173 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.482525222 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.483557278 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.481106371 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.480942728 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.484892994 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.484367845 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.484529648 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.481678124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.484368579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.479982331 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.481829526 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.485844274 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.485464063 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.489140844 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.48914696 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.482958503 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.483835974 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.482720249 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.483549029 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.487011044 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.484282395 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.484487053 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.48965029 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.485921999 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.479786971 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.48888969 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.503502464 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.481978781 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.484975728 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.488282327 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.484840424 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.484548937 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.488142348 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.484546185 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.481717154 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.485022533 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.482463255 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.48736197 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.487375763 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.492601522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.482472547 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.48620548 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.485197721 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.486547169 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.484188102 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.48719156 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.4871652 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.48676776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.492846487 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.486992186 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.484056928 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.489877714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.488909564 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.488389605 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.484286748 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.494141143 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.490115298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.48334458 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.483496715 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.487312315 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.493609692 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.482755253 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.486061688 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.483618975 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.497421935 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.500706002 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.492901061 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.488543036 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.491880788 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.489071659 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.485275964 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.486109287 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.483359999 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.485630423 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.485276722 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.483796886 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.490501779 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.483051115 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.4900592 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.488219169 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.487578537 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.491982689 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.488543919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.483948674 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.487803436 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.487678035 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.491309976 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.483236496 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.488300959 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.490007036 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.489618969 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.486608287 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.485044931 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.49405275 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.488728876 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.488645842 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.486096157 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.481883411 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.4858889 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.486785854 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.490213359 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.486312981 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.492656091 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.48748504 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.492771407 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.486326902 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.494004623 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.491647761 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.488229976 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.495747803 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.492857394 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.484830831 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.488170007 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.49017 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.493608742 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.494995188 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.489672428 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.492585505 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.490718122 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.491372639 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.489829243 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.488942861 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.493913878 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.489241868 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.496873593 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.512766288 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.491594016 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.488469435 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.49573456 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.487172232 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.491867382 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.488409728 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.492606494 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.493174852 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.491854478 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.488331279 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.488461074 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.490733922 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.491190913 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.491348039 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.493196229 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.489455699 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.495257156 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.492377663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.491959363 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.491378815 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.491517955 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.494188683 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.497367213 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.493493327 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.491612819 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.493298989 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.492960941 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.487339411 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.484545519 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.488699784 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.492965215 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.489434421 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.49656259 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.489321434 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.491833578 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.488433462 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.495471425 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.490960658 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.50089917 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.509152441 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.49281152 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.493150397 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.492211214 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.489380344 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.493235902 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.492811527 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.490191398 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 2.015453872 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.498496231 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.49831317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.489583185 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.491699999 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.493188225 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.495905606 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.494956373 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.491939095 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.496130148 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.495744307 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.487651008 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.493665256 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.497020819 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.497079032 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.491221077 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.492644691 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.489886862 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.49911183 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.497311741 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.495061825 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.496956192 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.497051336 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.491754843 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.49155071 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.496829115 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.492050765 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.496044471 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.490313159 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.497485605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.496882125 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.49466305 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.494672856 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.496195201 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.49378865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.492108278 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.496582004 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.497634223 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.495290586 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.496212276 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.495654075 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.490253002 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.491569311 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.494060239 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.490148672 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.496657374 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.491648062 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.495478429 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.490464509 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.496411905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.497298841 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.495756367 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.489891744 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.492868558 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.498393653 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.496661151 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.497767548 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.496898905 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.498511178 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.492435715 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.49309776 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.499550368 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.488468387 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.490285254 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.492539801 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.493629706 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.491768529 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.494301705 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.493266132 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.498544462 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.496309918 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.488251274 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.501443301 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.519960188 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.495860247 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.494926761 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.495660426 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.491782748 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.497142795 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.494940426 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.493116611 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.502806881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.498875676 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.496334004 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.497268044 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.494696447 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.494465527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.499186271 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.497637759 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.494519942 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.497521923 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.492562276 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.499353519 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.497129169 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.498516981 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.489731805 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.493431964 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.49719268 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.500086026 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.498319233 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.497134184 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.497364653 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.495857644 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.493907929 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.498491604 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.498397427 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.495097239 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.49401742 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.497068029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.494551642 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.499334063 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.493367299 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.493504954 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.500361852 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.496021357 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.495886084 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.501715197 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.506537525 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.499463776 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.492807297 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.497036118 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.500046678 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.500484016 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.500002623 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.497552974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.499128362 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.500715006 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.498764343 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.502054711 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.495589705 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.511448684 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.526279169 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.494567801 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.495449063 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.497680611 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.500321725 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.499320646 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.501976256 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.496335696 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.496558517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.50773195 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.500493824 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.503064942 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.521018419 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.494831266 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.504027961 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.498615583 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.502722613 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.501771915 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.501523283 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.50078577 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.500702386 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.509937508 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.502343701 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.503888354 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.522423641 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.499800176 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.497920919 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.500878175 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.497210115 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.503244686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.499139372 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.499671056 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.50038168 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.50090464 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.500603842 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.49652676 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.500321861 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.501343621 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.504747431 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.500624773 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.496909692 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.496916363 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.502297111 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.500553582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.50443554 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.502495067 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.499583554 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.503509466 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.497272297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.509890732 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.51424125 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.502534392 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.499399695 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.500903597 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.495039596 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.502870665 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.507562682 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.508081937 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.500472986 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.501836219 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.499109405 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.501414782 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.503699575 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.49683163 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.496747637 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.499643175 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.50490736 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.513735148 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.516305826 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.506259686 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.499457275 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.503166928 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.505859107 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.499794636 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.50239927 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.504907376 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.502505456 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.502651805 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.509109032 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.508397898 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.505409388 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.501429888 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.512717769 seconds)
  done (took 889.439118072 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.506136713 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.505489517 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.503666276 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.506123933 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.50323108 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.504653575 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.505429891 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.503734745 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.506100315 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.501888287 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.50463108 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.503700225 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.505594416 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.505524762 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.505868536 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.504049219 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.505779332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.50459118 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.507198562 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.505431045 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.505921344 seconds)
  done (took 33.01386201 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.501737822 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.505800805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.505377774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.503706004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.506515848 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.504733827 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.506592422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.503919705 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.505459054 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.504558005 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.503650152 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.504745415 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.504768415 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.502372042 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.506925445 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.504195432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.506190068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.508513845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.504052799 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.508965106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.508509135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.50679985 seconds)
  done (took 34.526789795 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.504254532 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.504982881 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.504734985 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.508146002 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.507575336 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.504542274 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.505666673 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.509319634 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.506846521 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.502552897 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.500616547 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.502469403 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.508415776 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.515344685 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.50269251 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.506954254 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.505125992 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.507201619 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.508648788 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.508595791 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.507610108 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.512143378 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.507477881 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.500187321 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.507602532 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.509515526 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.507514739 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.507194092 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.504619311 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.50889834 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.506591748 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.502088778 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.505397348 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.505981921 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.502067811 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.51338597 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.508015513 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.508772183 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.509151792 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.513225959 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.525330395 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.507169129 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.512602442 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.514098814 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.506733428 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.506047609 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.513735719 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.508873702 seconds)
  done (took 73.779201612 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.142365308 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.181816879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.170130561 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.178961991 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.176891858 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.173942228 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.180030352 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.17542346 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.183356283 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.169834605 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.165837501 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.169093172 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.173221425 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.16813164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.16968088 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.172666784 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.243154333 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.186038137 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.175157438 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.193638105 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.176028167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.168241857 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.186367241 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.194703948 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.172505042 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.184653458 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.176082408 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.177334936 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.178884928 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.196632855 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.188542188 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.178022267 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.180546943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.175906556 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.183162054 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.176674108 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.187131436 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.180759177 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.182698956 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.171859498 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.176829377 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.206393272 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.187165116 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.180084773 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.173123406 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.187517482 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.212716726 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.175987433 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.192038643 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.183897132 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.175165347 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.178280843 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.187767503 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.180329117 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.197820214 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.174709809 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.213315064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.177646825 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.175237396 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.177123715 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.189094691 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.180407328 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.181805022 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.199974946 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.192349825 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.181682657 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.183973164 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.189171821 seconds)
  done (took 149.793853504 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.512274219 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.515521362 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.512949914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.515467103 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.511409968 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.512905136 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.511201269 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.513426034 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.514244184 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.514870822 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.516808963 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.511926071 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.510941203 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.515833778 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.511441751 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.513555063 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.514949595 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.514391227 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.514454353 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.51294349 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.514144384 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.514909088 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.513145208 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.512276233 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.515856053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.514173915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.513721343 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.517492703 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.516191195 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.514273331 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.513135628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.514902547 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.514720762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.515210622 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.51702306 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.517757776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.514578618 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.513664124 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.514994546 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.514635849 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.51474732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.514832296 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.518670046 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.515392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.516039043 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.519489253 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.514196692 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.515548266 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.516283172 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.511170296 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.515154433 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.518284587 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.512546591 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.513296516 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.514219099 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.517896631 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.514050262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.515476938 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.518775726 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.516646898 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.513617199 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.516346563 seconds)
  done (took 95.333135525 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.515048765 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.515659186 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.51783358 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.517407538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.515557775 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.51729175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.517272481 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.51562843 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.515336103 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.515906771 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.516092858 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.516246535 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.521043145 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.51731229 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.518441455 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.518965518 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.518058793 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.515394368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.516572767 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.51712737 seconds)
  done (took 31.75525688 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.514327281 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.518154191 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.516529944 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.517354599 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.514556091 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.516994638 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.517028206 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.517261667 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.517464331 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.517305588 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.517185637 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.517759669 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.518133188 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.516127071 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.517619176 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.516429525 seconds)
  done (took 25.691103562 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.517765322 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.518096638 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.516140361 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.519116175 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.521581957 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.515643459 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.518291798 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.517621833 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.519962731 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.516630983 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.519641288 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.518628214 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.519258862 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.516170025 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.519350379 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.519157977 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.519279531 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.519525033 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.517806831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.516455701 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.521118817 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.518995888 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.520885093 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.516887091 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.518888984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.516972129 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.520668976 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.519296236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.520527511 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.519941019 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.520062332 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.518638537 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.518601565 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.520227699 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.51805735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.523547822 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.519777815 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.521068178 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.520407431 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.516927905 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.520943149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.519015283 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.51794394 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.5178328 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.519870258 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.51853723 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.521117314 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.52160346 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.519643438 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.52227847 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.523251917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.518768733 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.523633179 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.521008479 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.520660567 seconds)
  done (took 84.986441913 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.520651344 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.520826404 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.520564086 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.521246652 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.522804155 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.523425597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.521088185 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.522897991 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.519263861 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.518377449 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.520117691 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.520686045 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.5210307 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.522752967 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.522051102 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.522155521 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.52102471 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.521852817 seconds)
  done (took 28.806031001 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.520376381 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.520620345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.522356294 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.518935371 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.520295207 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.521222843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.520542974 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.520904391 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.521411093 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.520977095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.522789061 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.522132425 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.52243906 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.524397445 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.522376833 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.520792233 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.522754007 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.520846987 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.522185254 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.520691587 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.522445491 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.522139603 seconds)
  done (took 34.89577855 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.513731921 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.516600125 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.517038604 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.531776035 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.534487249 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.516727913 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.517097339 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.517005101 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.537745324 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.584762559 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.578001877 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.534896119 seconds)
  done (took 19.826060775 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.525324853 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.522901457 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.521990423 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.521479415 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.523306718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.524137254 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522100355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.521775846 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52258122 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522530917 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.523389247 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.524545377 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524526409 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.522287363 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.521959763 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.522939525 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.523432228 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522683101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.52304834 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.522649059 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.523647967 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.524406235 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.524658096 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.522300873 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.523946652 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.524697428 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.52375443 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.525259737 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525869792 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.525456709 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.52475292 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.523887718 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.52555544 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.523747466 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.524661072 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.523256995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.526923066 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.524269887 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.522920696 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.525786592 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.526507023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525875511 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.52853461 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.524536337 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.525562652 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.524736226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525629215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.525624402 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.523229163 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.526835565 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.525786994 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.525215554 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52439355 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.523535912 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.526507091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52656758 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.526482327 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.523607559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.525463493 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.527344065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.523864301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.52712748 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526402441 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527371498 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.527870422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.525652083 seconds)
  done (took 102.047469746 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.526145226 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.525145524 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.52757405 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.52770933 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.527177535 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526651486 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527595425 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.526528284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.527545068 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527466909 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52741827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527815981 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528198245 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528543828 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.525348732 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.52745238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.527109088 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.528043669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.526359393 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528029581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527750262 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526720419 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.528143154 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527167775 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528311664 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528838889 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.526310326 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52944299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.529193233 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.526961639 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527202144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.527962013 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.527240353 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.529395759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.524843911 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527768859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528548266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.528995712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.527821455 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.529660012 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529450548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.529136387 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.529391977 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529633545 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.528956678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.527312841 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529160513 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.529152747 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.528493476 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.527030148 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.528894895 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.526727058 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.528189067 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.527668861 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.528544249 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.529456705 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.532347163 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.530120478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530677732 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.530800393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.530631257 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.531816299 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.52977406 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.531710728 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.530253277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.529196309 seconds)
  done (took 102.299854218 seconds)
done (took 2127.639449716 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.688238103 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.643535912 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.52730988 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.53940686 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.521852276 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.526162275 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.534060313 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.522362211 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.52696253 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.523371709 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.525422065 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.717497347 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.530789742 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.52260513 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.526120239 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.625211532 seconds)
  done (took 30.430860714 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.555069162 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.536663994 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.669345928 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.543987086 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.55737171 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.754589691 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.587310308 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.529134579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.731210868 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.549995725 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.52386735 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.551724333 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.534429818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.530385628 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.546227903 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.753104623 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.8094814 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.526992553 seconds)
  done (took 33.223589819 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.075455544 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.541454264 seconds)
  done (took 6.052170373 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.553758542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.533966903 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.53405772 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.52760559 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.519393686 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.518939503 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.526046139 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.5284834 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.529885555 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.681399761 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.526746541 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.545939057 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.552721242 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.528162129 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.53570996 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.57665301 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.698424693 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.538395424 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.528860688 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.534103352 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.529152931 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.638726749 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.577583853 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.531122061 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.676179738 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.534520363 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.533487197 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.53830351 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.673809351 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.539900858 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.526512824 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.530986661 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.533422796 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.537929868 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.025371941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.535529132 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.542536718 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.560932803 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.531433393 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.679700016 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.533972827 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.537028443 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.521365313 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.013345555 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.673868848 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.664846125 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.544371639 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.528407131 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.533361253 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.604078573 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.533771095 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.532267676 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.595328658 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.38512598 seconds)
  done (took 96.445033792 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.583159214 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.520287424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.70702642 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.546421 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.525149604 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.51959846 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.521904973 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861650622 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.541965354 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.522500569 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.875396957 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.151661273 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.54153215 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.574782539 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.464169369 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.591668769 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.526564062 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.544858176 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.521780366 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.523618329 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.120972102 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.528384597 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.537194406 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.592273565 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.566912988 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093095389 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.520880648 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.542904921 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.545146111 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.523399078 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.10174886 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.542498329 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.589177518 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.523745754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.822098786 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.954503883 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.9142913 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.526483156 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.574096289 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.524174816 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.547549549 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077042737 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93533582 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.52472866 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.52520239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087947174 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525485635 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.532934365 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.527993349 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.783174504 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.532271308 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.527825235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.544405642 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.542155924 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.524700359 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.544573061 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.631505769 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.102030892 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.523910901 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.526162378 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.570569697 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.525569882 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.536324499 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.530506316 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.543391751 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941799627 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.736007476 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.526775908 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.940891031 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.116775958 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.545917505 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17336882 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.544877795 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.543518112 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.712425362 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.527159229 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.546903961 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112503624 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.535168077 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.525628431 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923851368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.531024001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.879866211 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.542830023 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.543192668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.135909147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.538440752 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.532678429 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.526864194 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.527143516 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.552326508 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.550469706 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.851615548 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.557854858 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.52752562 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.530010927 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.537959817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.540913713 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.533198352 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.531637838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17062815 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.546739119 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.528424184 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.532586149 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.531141509 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.549942636 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.531713571 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.527791425 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.802967484 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.5338049 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.554517179 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.523577804 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.526592441 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.532220751 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.602814741 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.532935162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.895067783 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.528967328 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.526875084 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.543971802 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.535439879 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.577668358 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.527651803 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.539964789 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.462235441 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.80716067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.550379654 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.531915403 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.527872789 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.551083174 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.532776245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.527644356 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.570837472 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.563586512 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.382207096 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.572728196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.555543468 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.528276718 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.539305135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.529860871 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.532402871 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.525942071 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839053495 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.832642689 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.732388186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.536405856 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.532333624 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.365148309 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.568252917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.716037088 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.556018375 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.53020599 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.78754849 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.744344127 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.528662882 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.530555644 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.533530343 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.796370336 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.534391934 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855615325 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.137930025 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.545343932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.539247609 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.38007344 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.286744343 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.536170536 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.538519438 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.884064744 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.546646126 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.53330563 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.530384524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.532278854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.532429126 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.554501103 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.538401807 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.530684471 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.531330082 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.851709297 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.732462627 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.55383571 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.534247516 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09428717 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.546407597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.529065826 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.559453033 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.528685462 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.533445971 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.59882754 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.535353705 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.55482619 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.534203689 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.541725313 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113239407 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.531302067 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.53494038 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.727308553 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.299335609 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.555170932 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.534090256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.55016196 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.447141064 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.118423172 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.565741255 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.900040981 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.539578961 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.576397852 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.534289915 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.596643713 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.120125208 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.53308751 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.555716251 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.247970487 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.54739939 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.945381007 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.534897447 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.533451408 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.202098253 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.549341511 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.537308355 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.533007361 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.545091814 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862577912 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.535623194 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.567044339 seconds)
  done (took 545.355788297 seconds)
done (took 712.938300429 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.533352674 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.538548862 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.528646737 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.534659102 seconds)
  done (took 11.579708333 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.548045529 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.543794718 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.546810983 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.540856001 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.548738574 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.546115244 seconds)
  done (took 10.723686915 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.535956763 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.539369119 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.539334146 seconds)
  done (took 9.061341521 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.778315053 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.553337252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916253567 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.555298065 seconds)
  done (took 10.24845786 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.546053147 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.548683295 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.547591991 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.546735578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.551568295 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.55044826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.549720321 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.552468569 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.556610952 seconds)
  done (took 15.396619629 seconds)
done (took 58.456899483 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.227218569 seconds)
    (2/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.631463456 seconds)
    (3/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.708630074 seconds)
    (4/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.554442455 seconds)
    (5/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.201368356 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.693719493 seconds)
    (7/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.512078613 seconds)
    (8/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.583886331 seconds)
    (9/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.538732538 seconds)
    (10/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.705389098 seconds)
    (11/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.530163669 seconds)
    (12/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.595556555 seconds)
    (13/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603580035 seconds)
    (14/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.7677027 seconds)
    (15/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.691776334 seconds)
    (16/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.58922151 seconds)
    (17/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.52910969 seconds)
    (18/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.560838322 seconds)
    (19/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.638411668 seconds)
    (20/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.205340442 seconds)
    (21/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.782227087 seconds)
    (22/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.569123084 seconds)
    (23/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.714104576 seconds)
    (24/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.578470873 seconds)
    (25/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.566642724 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.192808149 seconds)
    (27/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.535507358 seconds)
    (28/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.549393136 seconds)
    (29/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.574100364 seconds)
    (30/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.695741791 seconds)
    (31/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.575955776 seconds)
    (32/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.535747858 seconds)
    (33/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.595776338 seconds)
    (34/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.663064446 seconds)
    (35/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.607756349 seconds)
    (36/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.534761988 seconds)
    (37/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.317550686 seconds)
    (38/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.717340191 seconds)
    (39/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.226358233 seconds)
    (40/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.578181304 seconds)
    (41/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.715975939 seconds)
    (42/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.641149123 seconds)
    (43/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.745443431 seconds)
    (44/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.537954897 seconds)
    (45/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.617416799 seconds)
    (46/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.770188046 seconds)
    (47/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.680363871 seconds)
    (48/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.578010187 seconds)
    (49/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.398503217 seconds)
    (50/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.558339423 seconds)
    (51/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.79672871 seconds)
    (52/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.578055319 seconds)
    (53/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.571941379 seconds)
    (54/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.657580528 seconds)
    (55/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.353594811 seconds)
    (56/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.945537774 seconds)
    (57/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.606802361 seconds)
    (58/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.853507332 seconds)
    (59/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.55566839 seconds)
    (60/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.629188104 seconds)
    (61/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.552665948 seconds)
    (62/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.678003227 seconds)
    (63/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.7128974 seconds)
    (64/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.644755422 seconds)
    (65/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.60256491 seconds)
    (66/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.577893621 seconds)
    (67/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.570242083 seconds)
    (68/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.563256832 seconds)
    (69/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.651728661 seconds)
    (70/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.58924964 seconds)
    (71/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.358601131 seconds)
    (72/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.605585485 seconds)
    (73/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.733734853 seconds)
    (74/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.84121421 seconds)
    (75/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.720034338 seconds)
    (76/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.649604984 seconds)
    (77/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.525648393 seconds)
    (78/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.329923873 seconds)
    (79/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.737314316 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.711278159 seconds)
    (81/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.304243072 seconds)
    (82/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.533067208 seconds)
    (83/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.639844201 seconds)
    (84/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.682625702 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.648073415 seconds)
    (86/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.61851185 seconds)
    (87/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.681294669 seconds)
    (88/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.564657948 seconds)
    (89/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.703296508 seconds)
    (90/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.635540837 seconds)
    (91/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.735905808 seconds)
    (92/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.771935316 seconds)
    (93/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.70320002 seconds)
    (94/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.714209534 seconds)
    (95/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.35032866 seconds)
    (96/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.792332068 seconds)
    (97/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.720534656 seconds)
    (98/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.788251927 seconds)
    (99/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.698441349 seconds)
    (100/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.711766556 seconds)
    (101/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.624630635 seconds)
    (102/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.65850616 seconds)
    (103/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.729518261 seconds)
    (104/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.677325705 seconds)
    (105/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.624462937 seconds)
    (106/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.56997947 seconds)
    (107/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.54760076 seconds)
    (108/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.660145482 seconds)
    (109/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.547272842 seconds)
    (110/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.479808028 seconds)
    (111/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.670989182 seconds)
    (112/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.641747236 seconds)
    (113/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.482582631 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.667428402 seconds)
    (115/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.778566861 seconds)
    (116/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.667283803 seconds)
    (117/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.572532393 seconds)
    (118/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.768960124 seconds)
    (119/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.580029375 seconds)
    (120/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.58141253 seconds)
    (121/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.595047111 seconds)
    (122/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.581710331 seconds)
    (123/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.549570235 seconds)
    (124/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.581772677 seconds)
    (125/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.535748214 seconds)
    (126/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.664966033 seconds)
    (127/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.55738497 seconds)
    (128/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.541648716 seconds)
    (129/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.617054747 seconds)
    (130/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.672900043 seconds)
    (131/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.210399689 seconds)
    (132/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.580882816 seconds)
    (133/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.333005749 seconds)
    (134/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.371623552 seconds)
    (135/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.653576919 seconds)
    (136/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.609899552 seconds)
    (137/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.597422109 seconds)
    (138/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.552924338 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.584505579 seconds)
    (140/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.575823629 seconds)
    (141/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.595419159 seconds)
    (142/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.546062179 seconds)
    (143/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.642301072 seconds)
    (144/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.308183781 seconds)
    (145/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.648299647 seconds)
    (146/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.540288197 seconds)
    (147/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.650554472 seconds)
    (148/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.615731116 seconds)
    (149/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.906746295 seconds)
    (150/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.95801368 seconds)
    (151/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.67252588 seconds)
    (152/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.679683012 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.620704465 seconds)
    (154/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.552346669 seconds)
    (155/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.584318082 seconds)
    (156/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.543121604 seconds)
    (157/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.648121289 seconds)
    (158/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.598137706 seconds)
    (159/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.57729101 seconds)
    (160/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.640422254 seconds)
    (161/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.805208308 seconds)
    (162/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.625793911 seconds)
    (163/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.685872359 seconds)
    (164/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.694962241 seconds)
    (165/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.676347614 seconds)
    (166/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.648336744 seconds)
    (167/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.776759699 seconds)
    (168/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.702240157 seconds)
    (169/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.580475848 seconds)
    (170/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.717645632 seconds)
    (171/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.597992605 seconds)
    (172/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.60673811 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.754657283 seconds)
    (174/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.724079632 seconds)
    (175/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.810074617 seconds)
    (176/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.547877577 seconds)
    (177/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.959262321 seconds)
    (178/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.339845138 seconds)
    (179/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.675592824 seconds)
    (180/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.798091122 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.665245911 seconds)
    (182/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.662693535 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.70130757 seconds)
    (184/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.605093539 seconds)
    (185/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.63244141 seconds)
    (186/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.541352566 seconds)
    (187/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.682549877 seconds)
    (188/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.235356837 seconds)
    (189/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.609400613 seconds)
    (190/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.547404511 seconds)
    (191/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.660347754 seconds)
    (192/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.584958453 seconds)
    (193/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.602549486 seconds)
    (194/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.642772344 seconds)
    (195/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.668673189 seconds)
    (196/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.239358349 seconds)
    (197/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.582149748 seconds)
    (198/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.643192749 seconds)
    (199/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.705667871 seconds)
    (200/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.269704118 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.671282954 seconds)
    (202/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.405054974 seconds)
    (203/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.574375895 seconds)
    (204/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.751729727 seconds)
    (205/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.683754213 seconds)
    (206/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.604092608 seconds)
    (207/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.568377995 seconds)
    (208/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.548198662 seconds)
    (209/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.693685996 seconds)
    (210/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.5570375 seconds)
    (211/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.538097987 seconds)
    (212/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.800032105 seconds)
    (213/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.702030808 seconds)
    (214/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.776951546 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.754193928 seconds)
    (216/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.784155391 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.643045583 seconds)
    (218/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.552848348 seconds)
    (219/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.814822911 seconds)
    (220/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.764004527 seconds)
    (221/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.273837448 seconds)
    (222/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.610456894 seconds)
    (223/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.632860125 seconds)
    (224/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.77348654 seconds)
  done (took 422.50559947 seconds)
done (took 423.956910797 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.60567604 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.74205249 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.557590744 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.556938663 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.601797353 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.551861356 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.600522355 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.567965618 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.565706062 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.566784135 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.548087373 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.569119228 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.570921578 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.602954729 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.671998812 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.5704927 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.560089288 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.565253308 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.605070586 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.625780863 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.60290536 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.602941934 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.577005223 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.560188222 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604346868 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.608410729 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.565120568 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.55240253 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.565306549 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.604822236 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.556359655 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.564356556 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.616156474 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.613467128 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.602343153 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.564994803 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.602543599 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.743311744 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.601722978 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.598969943 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.570260209 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.619125913 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.569900111 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.569980396 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.617612511 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.580241606 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.609055932 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.686296335 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.560954634 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.564150887 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.608813952 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.631552242 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.57707221 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.567165254 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.552253018 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.681811431 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.569208731 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.609696508 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.570800715 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.604622374 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.67596821 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.611448624 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.631481198 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.611916044 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.572659261 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.574473846 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.570345888 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.630575125 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.571216092 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.60710777 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.610234449 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.57635522 seconds)
done (took 124.34596976 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.691123271 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.55998137 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.707075015 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.566999038 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.73206187 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.707714248 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.566189498 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.565896835 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.567221553 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.387390456 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.567154094 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.565423003 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.560216958 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.565693495 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.688531299 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.56786211 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.564304778 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.27716483 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.564303185 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.705902368 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.555868531 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.566163142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.563683651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.38618011 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.56028064 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.556398057 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.70588462 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.566833179 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.279666356 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.557471165 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.557245882 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.281208735 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.708621058 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.586047372 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.576084574 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.575128457 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.733168138 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.582917808 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.691276463 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.694662878 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.706558056 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.604514616 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.555076568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.561218455 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.567342124 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.566348656 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.567575316 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.593970073 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.560959915 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.566848724 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.275299367 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.579204651 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.575075254 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.568652072 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.570380076 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.587230652 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.567225612 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.568404409 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.710247067 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.568171202 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.692989245 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.388759656 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.391746866 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.568014018 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.559349086 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.567849855 seconds)
  done (took 124.014079011 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.630854114 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.645222106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.687196683 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.580034204 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.612652667 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.690157467 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.57692867 seconds)
  done (took 12.887600865 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.569024528 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.569356423 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.617779746 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.619385505 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.56670303 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.719640745 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.56739762 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.575899713 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.569539044 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.621615337 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.566999162 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.573216933 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.581133115 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.561419778 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.619429851 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.57957204 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.682267028 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.569145451 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.567327727 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.717692361 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.571042654 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.579000381 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.623021201 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.579640396 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.572164703 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.572791565 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.339581044 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.56964549 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.571533101 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.568700808 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.571217951 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.616989977 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.57013944 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.562488795 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.569927288 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.681379921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.571301405 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.569720173 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.571040253 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.563164563 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.570854165 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.568336237 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.570509938 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.57034392 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.569817324 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.591168509 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.572906425 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.573435454 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.571194814 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.573571866 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.623666214 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.573440445 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.568880358 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.569524759 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.626364237 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.580960667 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.571311641 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.573865931 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.571793107 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.573842013 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.719844583 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.619118153 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.571045664 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.61894596 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.572003338 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.571615972 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.571849486 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.573552591 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.661008575 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.571165519 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.620570619 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.575790871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.750400097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.592447991 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574264971 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.572164168 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.571897832 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.571251367 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.565491267 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.569382421 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.573950235 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.569766736 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.576603401 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.574982738 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.570240366 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.726146632 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.678331756 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.573018095 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.580233423 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.575493197 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.571808654 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.626668088 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.571011113 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.573639803 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.620981263 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.683211596 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.628910978 seconds)
  done (took 160.730573435 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.580580598 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.581091646 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.572091275 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.596140006 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.571090873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.568988381 seconds)
  done (took 10.938841891 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.572683617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.577874746 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.572844788 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.572657443 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.574597763 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.575958102 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.57713619 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.570632453 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.576085604 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.576936472 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.575810958 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.578152596 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.575165025 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.575705802 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.573963735 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.575009435 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.572121897 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.575632813 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.573706552 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.574196761 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.567591706 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.572845451 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.574480217 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.573095084 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.578929615 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.580145457 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.588982149 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.577832339 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.573534681 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.576237896 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.59380101 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.573470632 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.574862766 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.578376112 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.580341566 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.572837499 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.580930241 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.578365039 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.578014159 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.575738001 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.579430971 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.574942286 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.573734059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.577040583 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.573190545 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.572508414 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.58342902 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.592801274 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.576689908 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.579316698 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.579531248 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.578026998 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.575640727 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.578144771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.572823137 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.595512354 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.582084087 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.576548956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.578074151 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.576325438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.58210674 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.576171595 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.576205826 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.580747023 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.581858808 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.576174567 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.574957474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.579587699 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.577856712 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.577962518 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.575628541 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.577732321 seconds)
  done (took 116.030203785 seconds)
done (took 426.063207325 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.444844699 seconds)
  done (took 4.91513981 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.837945303 seconds)
  done (took 4.316289047 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.117073565 seconds)
  done (took 26.603567258 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.628675229 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.657572142 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.573443301 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.571048016 seconds)
  done (took 11.903741775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.094660483 seconds)
  done (took 4.570764889 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.575934744 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.574540425 seconds)
  done (took 6.624945721 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.037776021 seconds)
  done (took 4.512421237 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.921052577 seconds)
  done (took 4.405027529 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.595883236 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.585714699 seconds)
  done (took 6.664154029 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.558518798 seconds)
  done (took 4.032603675 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.658260761 seconds)
  done (took 36.136641067 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.576124941 seconds)
  done (took 4.057386685 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.611777966 seconds)
  done (took 4.086108485 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.818567868 seconds)
  done (took 7.293488001 seconds)
done (took 131.597335304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.566686105 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.573643234 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.572336236 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.573738344 seconds)
  done (took 11.759481643 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.630137631 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.631358256 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.631197759 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.632049153 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.631591752 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.629220644 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.605405251 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.60594826 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.629805965 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.633547059 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.634763968 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.634028583 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.632848686 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.60536076 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.631048267 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.641230013 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.633383788 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.633846352 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.606925534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.63296065 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.579571711 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.633361615 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.631659471 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.581789255 seconds)
  done (took 40.451856925 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.094629411 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.646366762 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.732283708 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.632161627 seconds)
  done (took 8.581024663 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.658654319 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.660395271 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.671458813 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.711177511 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.722255173 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.673671624 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.604687516 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.601764415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.589201901 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.658101518 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.707343879 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.651426055 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.736985964 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.579424736 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.786440817 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.580289058 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.579809537 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.659904438 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.709716769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.712199159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.581159289 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.660641568 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.669821705 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.650652124 seconds)
  done (took 41.294877304 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.588001663 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.596254472 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.583211956 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.59867609 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.58214708 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.581954434 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.585803637 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.591534888 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.583538551 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.583690233 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.584059967 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.597772701 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.586784032 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.582635418 seconds)
    (15/22) benchmarking ("StatsBase.var", "Float64")...
    done (took 1.587679428 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.590522412 seconds)
    (17/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.586569501 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.588910932 seconds)
    (19/22) benchmarking ("StatsBase.var", "Int64")...
    done (took 1.592095921 seconds)
    (20/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.588249591 seconds)
    (21/22) benchmarking ("sum", "Float64")...
    done (took 1.58372531 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.593503966 seconds)
  done (took 36.413460734 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.572578859 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.570446168 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.92258746 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.830958273 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.575162079 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.575232058 seconds)
  done (took 15.525598481 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.663937382 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.841368674 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.57449486 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.023939026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.113934909 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.583196012 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.579990637 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.877369361 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.272217623 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.254999587 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.65166443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.661376386 seconds)
  done (took 23.579393035 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.582022957 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.574929343 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.57842323 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.592205093 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.648899357 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.599929007 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.587464938 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.572435097 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.649041614 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.667244429 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.603521533 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.647477068 seconds)
  done (took 24.785228958 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672066751 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.57818952 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.579842964 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603592091 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582490526 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428109894 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587810118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370902848 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.605117136 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855082435 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594291293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68230644 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.838455958 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58295579 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.58093779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.572753713 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810092797 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191466462 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.58410495 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597667583 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616264802 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.581823663 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593514552 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.840544347 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.582942711 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.577879373 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.843985957 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.57589056 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923646133 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599440993 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591490063 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.57840028 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854583401 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314462982 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69892711 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836808428 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580482095 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.584032122 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.576335371 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.623224293 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596696756 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.585867734 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590362575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579144251 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.579999221 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.583999545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372670981 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.607984889 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.58337558 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.57919299 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899603995 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6806635 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.587003158 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.582275134 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644182717 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584208321 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.588563692 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719862128 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186829418 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580861389 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604174917 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.58312703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.599281275 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582903081 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332674725 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.610999042 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.587478447 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586932897 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583387876 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.598392652 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602111336 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58096217 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.605717309 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.581619789 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437374274 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.617345805 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584710268 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26402631 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587404458 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.585226559 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.817032758 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.584956145 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583146971 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.580770844 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.583872693 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.471682642 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.596222792 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.575213097 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631027508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.387615653 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.85983441 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607954162 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.618349435 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810589707 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.568068642 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586512823 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.597740523 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.589185082 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603963309 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368533046 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602655763 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.590553002 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843053086 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.794499249 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587674677 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.572307909 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128380684 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616884515 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.596875648 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.583238981 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.842625274 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.265020201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617317032 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595111181 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.603846869 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.584041909 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.519635773 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.587949826 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.712256048 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.592569677 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905896424 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.571503842 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590317612 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65270545 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.591491426 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.583480192 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.582621721 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603989648 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584478636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.833622474 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.616552346 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596367544 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.584781078 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.58547838 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.587501099 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.602049983 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.590602215 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.81061807 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598741106 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859968918 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.586138632 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583132706 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583841006 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.808544681 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.58564952 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.947860492 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852884421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589670518 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.586743487 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59391581 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602984401 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689729515 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605859902 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.593242744 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.847048814 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.592599792 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.598574989 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.588130899 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.583983156 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594131016 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.594610859 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.582003611 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26362128 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.578965107 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.590632828 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.481106766 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.60319446 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.655358055 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595429437 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845542373 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.600869058 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589381053 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.593514709 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.593858878 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.816698046 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600378902 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.589925946 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685268364 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.134140814 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287081889 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62249402 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.591785708 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.589044427 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.588128366 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.589134604 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586402975 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.588278526 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846837253 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606863004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.584625314 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267477351 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60556672 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.592655719 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.615214914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602585673 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.598540684 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.590197274 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.605637254 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.610820215 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602378011 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.597604039 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731944503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.60435466 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.589522221 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.109668113 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597744806 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.590204439 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.589750549 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.624112003 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.591014099 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498226275 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876922861 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594104449 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916963278 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595876041 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.629120358 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.589558858 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598644486 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599501215 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.586511963 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604614426 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.602039625 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.587367092 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596324601 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16677957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440143345 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216170301 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.611328235 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.604131085 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.587909207 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384092721 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607532407 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.589189308 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865009168 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424760712 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608659687 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165692429 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.613728656 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.528073669 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913423701 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.829091755 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594538407 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.597537026 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919191348 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.807536345 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628391803 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.601276354 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.585699982 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.57563273 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21726642 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.613260587 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676216466 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385972873 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608862446 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.593524672 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.632332313 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.598315224 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093538958 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.613340861 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.590017689 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.599280552 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.595494534 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486512167 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.617536896 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.589908152 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295794691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.617735858 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.139126377 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.61383879 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854266544 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606843484 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.60113333 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.592196954 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.600608519 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.847836829 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914667035 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592827656 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.595812471 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222634975 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.489256842 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.601361149 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.593822765 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.530406411 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59545816 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955648283 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.610399048 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.589860953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.614520988 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.592277726 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.593333108 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.593248583 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.600762525 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563821757 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208100453 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.599381846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596260773 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.609618722 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59090589 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.852968847 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.6097433 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.283221035 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847264743 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605786814 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614547031 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.598612739 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602983796 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.581800101 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.594552579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.598529896 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692358336 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.818818549 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.598459896 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.584885255 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.603147896 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804775878 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.595785169 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.601137172 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890670558 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.595245074 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.607317311 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443413426 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.64163741 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.594879441 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.59815594 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.591354334 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634275459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689021187 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856371863 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.612335755 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606580043 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085844799 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.621214982 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.601318205 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.613631904 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691665105 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594563569 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.607783174 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.368887286 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286662798 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486182006 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288075992 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935389021 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.600503485 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596016179 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59788004 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757661583 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.598729785 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.873689502 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597998023 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.594469736 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6168612 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.605522562 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.610862522 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810762445 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876651533 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.594824246 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596091028 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.596213309 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.59861471 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610203971 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.807200593 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217241829 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292051128 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602959097 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.611564964 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388702526 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893077905 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597717595 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.596896877 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599455849 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.607842879 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.617308036 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.610260629 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.613176608 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740180211 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920958451 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.346191001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.628012906 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.627577958 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.11629438 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.600194528 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8572583 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.597304617 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.883931871 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283354984 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.444172483 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868493565 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667030529 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85508276 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.598570178 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763215899 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.614545277 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.596193553 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.599599955 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597944222 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.599755609 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60929693 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285358221 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885484444 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.604031539 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.613793119 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.628714395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.609661376 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.825096575 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.493249474 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828828068 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610444692 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.605945732 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.60113103 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288051296 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941850411 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.606529555 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.607341492 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883537471 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.599694752 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627033191 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.11930639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.598769219 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266354026 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.577472354 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.622622199 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618098151 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428844412 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292391581 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.62779205 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216737666 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.606260659 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.599577595 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90258629 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.607659014 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.621024993 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876782129 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.610150101 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.602724098 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859813642 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.280354612 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.528180897 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.609844984 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608083798 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.602103437 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603328425 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.639257287 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600818842 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.6031172 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.101388518 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.621986962 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603793919 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616510457 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.62152144 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.622779705 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.600950908 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604005156 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.610333111 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.609664078 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.63228134 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.620068014 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737719094 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236877744 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623251637 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.282061294 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.932262081 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.861926463 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.622752539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.591804414 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.611499883 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603201965 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.605935411 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.60150688 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.602352821 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.31101144 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.629342185 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.612819516 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610651041 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.605907891 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817442328 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.603044996 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865521891 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603242373 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643501384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.589764524 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.604951597 seconds)
  done (took 1089.886287752 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.636228837 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.621802444 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.68834646 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.686269895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.610148894 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.732011834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.70278509 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.630578634 seconds)
  done (took 22.811854614 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.603266187 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.606285868 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.60199631 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.625531545 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.611387557 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.151838726 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.63137282 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.607214898 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.627745475 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.62025915 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.611662108 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.589136977 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.611390825 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.612958469 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.6022954 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.609580406 seconds)
  done (took 36.837915328 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.998754889 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.920563528 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.340193651 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.635987218 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.650502179 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.608763584 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.056147121 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.638484239 seconds)
  done (took 30.354177655 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.611159305 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.615206049 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.614346635 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.614386127 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.61468064 seconds)
  done (took 9.573136814 seconds)
done (took 1393.332156621 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.613885278 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.612652188 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.614832587 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.612310575 seconds)
  done (took 7.95669148 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.592948416 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.592922851 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.59507337 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.608671992 seconds)
  done (took 10.892987627 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.457783875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.393795613 seconds)
  done (took 6.358861446 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.14115354 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.146451913 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.158887567 seconds)
  done (took 7.95592169 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.909129642 seconds)
  done (took 3.419053238 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.56066221 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.608998074 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.336460133 seconds)
  done (took 9.015170654 seconds)
done (took 47.107904634 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.61556354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.854451184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.761395727 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.619370306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.764852372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.762103346 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.387613101 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.603276492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.608909218 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.610140933 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.615824108 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.762826613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.37271792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.856931747 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.374373383 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.857534877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.765389576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.605068014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.600602602 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.60897554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.384340646 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.602940045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.600235878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.60288573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.763647817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.752053088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.605140715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.855843287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.605204196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.608355503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.749507149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.612652972 seconds)
  done (took 90.260587094 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.605872292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.621305634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.618495411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.615753709 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.60157185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.6018473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.634525708 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.619978809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.607671229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.604395998 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.599968412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.619154596 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.619850186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.60110816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.602887644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.62353779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.605069188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.602994424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.602283574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.604430526 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.616218736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.604167972 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.638235669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.601965278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.619005654 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.623060837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.620915449 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.619575299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.603092839 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.61049839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.604202887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.634801287 seconds)
  done (took 85.119745973 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.606640442 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.622319011 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.625594297 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.603839118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.603262407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.622424236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.605900015 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.616096595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.615563965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.608062793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.602934135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.603453774 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.604506375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.602817867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.608023978 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.612848012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.605302447 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.604376359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.607001627 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.620963328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.606494647 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.60359567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.636682866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.603320288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.620760835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.605789069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.622119939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.611871687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.618186512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.606364455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.606278244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.622925382 seconds)
  done (took 85.078541321 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.893575481 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.619528173 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.623043872 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.612940691 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.62324048 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.619596249 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.612774666 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.901861822 seconds)
  done (took 17.019262004 seconds)
done (took 278.988866801 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.620734628 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.210699087 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.662353827 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.624077203 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.640900526 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.642482346 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.872273513 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.65744189 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.87611606 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.631996026 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.655396234 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.616097068 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.613795089 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.78180217 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.588774401 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.61813888 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.610427413 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.609551681 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.309246401 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.938793478 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.643083928 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.612551496 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.593497621 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.635974971 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.608741142 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.712570664 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.734041882 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.862530379 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.794848692 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.709637903 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.22479087 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.618431804 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.647928728 seconds)
  done (took 73.692230573 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.616845377 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.749801227 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.623860066 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.623583544 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.749128804 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.647126405 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.616735205 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.623879702 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.622835452 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.624844943 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.622045035 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.624010457 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.625237843 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.676593133 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.760373555 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.642557065 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.615106098 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.746159547 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.618421461 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.615768354 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.673871385 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.623153552 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.625485717 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.67807753 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.62383319 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.623278139 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.750515638 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.645491172 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.625924714 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.74720125 seconds)
  done (took 51.176862295 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.625471431 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.307867586 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.50158695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.626935852 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.622468239 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.623015116 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.980786965 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.625727089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.622620693 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.625379446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.19854822 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.625281761 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.6609339 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.53066396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.625356829 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.626398492 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.626820366 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.619944384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.320637928 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.633002464 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.004587972 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.628968217 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.983512038 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.632098664 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.645118146 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.622534079 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.627839691 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.568090279 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.645663077 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.214626619 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.582040534 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.978224533 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.483299723 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.530750724 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.581570897 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.628683079 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.629315412 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.216265407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.62631218 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.623442199 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.9840929 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.627409864 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.515571106 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.357884806 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.646774662 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.629296172 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.582524701 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.244461612 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.930967644 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.630698337 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.53760676 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.627618334 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.630013596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.626432492 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.928249436 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.625706443 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.6234832 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.599370369 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.646620175 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.986299807 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.628204491 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.622056767 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.307674422 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.621853513 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.313133274 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.624076875 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.631049113 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.645700481 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.511668563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.629344173 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.374231153 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.644636941 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.630678696 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.217010893 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.313046511 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.620100071 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.631341533 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.327579103 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.537493763 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.004913449 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.631687769 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.552489624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.01567333 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.631987454 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.63339253 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.632245856 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.630573914 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.724046334 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.983043207 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.309037472 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.367950572 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.640729152 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.008713221 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.635505394 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.629581753 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.628709475 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.633481255 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.63262914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.510456866 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.376121288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.648766965 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.634499397 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.38564873 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.652030203 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.990766717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.636229684 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.525432231 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.631128905 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.713367543 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.630037709 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.63355229 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.652272241 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.993212212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.631264994 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.631938968 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.359487691 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.253461116 seconds)
  done (took 227.831821 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.623859245 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.616626225 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.622494299 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.61584324 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.623842273 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.63171955 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.626306607 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.623290154 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.624790907 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.622770477 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.625574891 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.63098162 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.629265374 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.625482085 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.620279688 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.616766466 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.625133315 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.646889463 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.635666175 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.624238332 seconds)
  done (took 50.030723209 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.632070806 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.322864166 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.304727256 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.636843137 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.634381204 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.62981455 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.696623359 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.632122611 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.633722589 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.010124949 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.842762036 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.653668804 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.632591079 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.632945673 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.293534657 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.629090575 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011619972 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.342469446 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.637584155 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.324476934 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.619133291 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.633804545 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.626432113 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.344526712 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.034801899 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.986452799 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.704205025 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.358853059 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.656346344 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.634089475 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.338488364 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.634605833 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.629088313 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.322910097 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.647582262 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.649102822 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.635924313 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.69924942 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.713824046 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.0127686 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.32390997 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.009940695 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.649599933 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.827204569 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.637793719 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.624046924 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.321552744 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.648523163 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.625900826 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.638833243 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.642516219 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.303178559 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.655627636 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.306858485 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.657189681 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.63860791 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.329605286 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.298175336 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.318437849 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.844407746 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.643926976 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.993723065 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.640984119 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.316290322 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.65309951 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.639335321 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.639024093 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.848418786 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.336297098 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.988121838 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.998574097 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.994853512 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.634411942 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.709438841 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.65261526 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.00013839 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.702602677 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.076536222 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.004614247 seconds)
  done (took 149.314826158 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.957871855 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.757468981 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.091735877 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.315533788 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.628260925 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.791905064 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.756603344 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.925023288 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.62771946 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.732129873 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.397083822 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.768873566 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.456889714 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.731947953 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.774603486 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.796293715 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.118007042 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.623063853 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.42305781 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.371166826 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.627600896 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.766776547 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.254961925 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.87421948 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.627604301 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.289013674 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.652403372 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.438150406 seconds)
  done (took 62.100451861 seconds)
done (took 615.661198088 seconds)
SAVING RESULT...
DONE!
