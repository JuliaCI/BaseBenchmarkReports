cset: moving following pidspec: 2581
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.236802157 seconds)
loading group "string"... done (took 0.569745524 seconds)
loading group "linalg"... done (took 8.215573634 seconds)
loading group "parallel"... done (took 0.171736647 seconds)
loading group "find"... done (took 1.261602644 seconds)
loading group "tuple"... done (took 2.037838753 seconds)
loading group "dates"... done (took 1.33268738 seconds)
loading group "micro"... done (took 0.20179689 seconds)
loading group "io"... done (took 0.935149615 seconds)
loading group "scalar"... done (took 41.026112669 seconds)
loading group "sparse"... done (took 12.900095588 seconds)
loading group "broadcast"... done (took 1.040343656 seconds)
loading group "union"... done (took 14.632023034 seconds)
loading group "simd"... done (took 5.307096401 seconds)
loading group "random"... done (took 9.92984846 seconds)
loading group "problem"... done (took 1.821514719 seconds)
loading group "array"... done (took 23.009412128 seconds)
loading group "misc"... done (took 1.747069868 seconds)
loading group "sort"... done (took 3.596573646 seconds)
loading group "collection"... done (took 18.925602172 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.552355496 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128001134 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141189414 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123551314 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153999141 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118880391 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129154648 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08725241 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.872534217 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156469807 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118131262 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423787804 seconds)
done (took 5.423044003 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172464524 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08819943 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079772429 seconds)
  done (took 1.243042433 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065959632 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128037192 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067373651 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069038503 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06828007 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068754841 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069026302 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068531379 seconds)
  done (took 1.614522824 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073411802 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070839931 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068258594 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070533096 seconds)
  done (took 1.359408622 seconds)
done (took 5.541238711 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.808936894 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.214776522 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189770932 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416893667 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139363255 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183710118 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653369154 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317522535 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.194514764 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09707448 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117053612 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398025354 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127464818 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649161021 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077952104 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095952756 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139534937 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455631342 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071454224 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086807256 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09362383 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131518285 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080403013 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077691235 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153526241 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070786689 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.145011115 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.088509591 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069733206 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.261006373 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178129546 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664699105 seconds)
  done (took 10.562604154 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102390844 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100804795 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071635727 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128728579 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098950771 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070524948 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077517161 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070131311 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093641847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.132783833 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092386803 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.111362532 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068962811 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072166037 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086174139 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.201004188 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08660319 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083854816 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070933417 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081264858 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111051361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079033145 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082528047 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084089614 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132039928 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.173201098 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100866511 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099026576 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069992472 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.088059421 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11836964 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13033029 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067375617 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068743494 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128927557 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095743942 seconds)
  done (took 4.646157131 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.015613501 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121597997 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154735003 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093351784 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139137821 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067676699 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114511348 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068076874 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086278069 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.24380159 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.377938573 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626154064 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122546902 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119157 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066234743 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104560338 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072342282 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070670629 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070355256 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.286442495 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102325924 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111414601 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086151357 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072889043 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072282109 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070373871 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074413214 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066257735 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071088708 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091485618 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078714672 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065758242 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334171671 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130350425 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070977752 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.964204998 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168222175 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070432295 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109353322 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16299409 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096166802 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142081826 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073001595 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06608514 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.298766805 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068363428 seconds)
    (46/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066648716 seconds)
    (47/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074211599 seconds)
    (48/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069667445 seconds)
    (49/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087870177 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112932133 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123083473 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067107815 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068883319 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.172885182 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068218753 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084444185 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.225477927 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153310191 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066358624 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300412122 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096165865 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074633679 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067404119 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193622173 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120585052 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069467744 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07296586 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072166854 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07130513 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.375229423 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068040666 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.219744155 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068735052 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07713287 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071296394 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071841741 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079895536 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080571249 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092927258 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069343519 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076948133 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069562769 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06838566 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069197469 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095690576 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.395399112 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070112633 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07494441 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067236616 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095673631 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101397151 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069974921 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067970893 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105274906 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070950602 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066796044 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070759665 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121329651 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071324722 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114705697 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072477795 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206288963 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098416895 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070584489 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102909078 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083662163 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073517742 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.471835396 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.068352259 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075014729 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068581835 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070644053 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069159022 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081899458 seconds)
  done (took 22.39351261 seconds)
done (took 39.692557262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.24771005 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086077599 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086345143 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086641139 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086653587 seconds)
  done (took 1.761804463 seconds)
done (took 2.910849298 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128082764 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102498026 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066677519 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101181933 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067442399 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107782582 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104029589 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086203513 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103937463 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066802537 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100795506 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066896074 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066949781 seconds)
  done (took 2.335871126 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082938027 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085363396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071585677 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087589456 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064553292 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084038802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083411296 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090524796 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082986014 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074651257 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065034337 seconds)
  done (took 2.016382234 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082456616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085919927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071061225 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083424761 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064238041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083541353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082918709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087408555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083320177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076177106 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065481355 seconds)
  done (took 2.007295685 seconds)
done (took 7.497910097 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07645115 seconds)
  done (took 1.206287244 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545471374 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.597827552 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078744887 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101963225 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198366271 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.112255499 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240834113 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085992982 seconds)
  done (took 8.264479685 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110150894 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072649393 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071308478 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073112277 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070649141 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072027861 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071294167 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071449893 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072852877 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072154528 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072578179 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072733683 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072051205 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071698747 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072784578 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072117867 seconds)
  done (took 2.404509828 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099755377 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098163464 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075953976 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077313228 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075359095 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074434507 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076629485 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076762216 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073894421 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075891168 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078023043 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076102217 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076080176 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.0667015 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076895949 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079297193 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07419104 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077045193 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077533791 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078423158 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078117522 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066471983 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075603462 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077057952 seconds)
  done (took 3.105970529 seconds)
done (took 16.121067254 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106339752 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070394644 seconds)
  done (took 1.314831167 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078912923 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080407302 seconds)
  done (took 1.307419495 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077679885 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063015319 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084755825 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074223108 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063881098 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064000605 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.083374248 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064276217 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064186043 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064317896 seconds)
  done (took 1.850086769 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065818595 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072894551 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069532006 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079595443 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071027807 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064607373 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069248866 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066145098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073890368 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063955043 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068838951 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085173281 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070575361 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087959333 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07170174 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070665714 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072781446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069155395 seconds)
  done (took 2.443022231 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063826694 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064383444 seconds)
  done (took 1.281893161 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06750444 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06407256 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068198437 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06827418 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065481887 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064944372 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065326645 seconds)
  done (took 1.61221648 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404623556 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124531619 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337144541 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073236079 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081918424 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262921704 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066509554 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071775763 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072238506 seconds)
  done (took 2.68978358 seconds)
done (took 13.655127016 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080654631 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088270878 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099712664 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42774077 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093659643 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070248999 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115662457 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184567084 seconds)
done (took 2.326890559 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219366968 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.821136776 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.485086711 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211691074 seconds)
  done (took 2.67680027 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346438782 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.0832303 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079687094 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06945486 seconds)
  done (took 1.745455933 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.181588424 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071444187 seconds)
  done (took 1.416171222 seconds)
done (took 7.223931681 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065226116 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065160711 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09157694 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.066549518 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066453414 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066659182 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06713668 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066520701 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066836186 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066845855 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066415979 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06648988 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066556837 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066550801 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067099302 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066304157 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067049906 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066794333 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067057104 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067137237 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066209074 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066851948 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06651875 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066642706 seconds)
  done (took 2.820013911 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082462976 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066897212 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069854282 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070690613 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071434302 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070775969 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070901997 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068968915 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070624447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068600754 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071171948 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071445749 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068352837 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071117024 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068941114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071389299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070828127 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069463668 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068580673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071140446 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070738516 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069358918 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070733801 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070872777 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070750361 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070871771 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068321057 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069017828 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0702237 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071192043 seconds)
  done (took 3.28983207 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068222693 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061638322 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063191974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071728672 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063083354 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063823372 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062294296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063797797 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064085901 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063440553 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063872302 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062494678 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063297426 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064050266 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063457187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067379566 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081028487 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063468512 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062850855 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063658537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067237207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062970782 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062905191 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065625655 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063361589 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062779813 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063419662 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06270659 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063859999 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062957859 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067042669 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067441581 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062586333 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071586587 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067194844 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062668463 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06760399 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062522881 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06348106 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062632242 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062690478 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062546011 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062981161 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07234236 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062874625 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064576948 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063314844 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063991668 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063323027 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065071168 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062571809 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062898593 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064801506 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064359971 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067939709 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062639545 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063738727 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062532908 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063507133 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06285436 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062647291 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062766262 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066608166 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063769907 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08091876 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072015241 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062604782 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064793303 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063839593 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065924506 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06452686 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078887204 seconds)
  done (took 5.860007927 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085853285 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087615181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068307215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068351537 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063870151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063891795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072411332 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064040928 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06863296 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083517248 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06359186 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06833888 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068616229 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067660924 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064002007 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069151871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072725543 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064775944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064130322 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067669853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06410556 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072311208 seconds)
  done (took 2.72182903 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146627946 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069349228 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109030129 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074743389 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072834802 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075338625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070178407 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070036168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07038587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070386326 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070521676 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069877643 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072533621 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070352976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070296112 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070577177 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070213188 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070484234 seconds)
  done (took 2.573932189 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07877965 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06964955 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089074106 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069649042 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069064967 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068466196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073456782 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074053609 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068819842 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069321186 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074177334 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069024898 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069448385 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069219386 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069433341 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069090688 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069367847 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074663454 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073631361 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073381127 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083511852 seconds)
  done (took 2.77560889 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078754032 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066492249 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084385285 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07067589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064029167 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063683756 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069852101 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068544885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069891638 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067957341 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068916996 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063840737 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070969024 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068787616 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071400816 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06863988 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068626761 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068547188 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067850174 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063834293 seconds)
  done (took 2.569113623 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084076524 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065564613 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065076168 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073070874 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067051403 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06705314 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073641553 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066890418 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066841453 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087808727 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066796585 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06707479 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07378835 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071223328 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066818894 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073416101 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07642299 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073625716 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066718963 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067096815 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087583614 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066670666 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073701584 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067359835 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067278168 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06735988 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066979922 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071307292 seconds)
  done (took 3.170355687 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065337028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064750519 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067221958 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067128227 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066805509 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066465796 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067061251 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06654388 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066085561 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067079638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066306623 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066724232 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066403481 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066442243 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067052826 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066514334 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06680245 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067297024 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067099509 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066468635 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066183758 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06652371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067081803 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06627978 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066080974 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065997405 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066749085 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066458881 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066117105 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066337502 seconds)
  done (took 3.18241065 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075413334 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073303749 seconds)
  done (took 1.335323978 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06357381 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079032703 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06172045 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074035372 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072199608 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066975927 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073146187 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072590142 seconds)
  done (took 1.744246058 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085412714 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077173583 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066163881 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078533886 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076716056 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086946625 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129304577 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066226478 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076028913 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066463745 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084457052 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068390299 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076408645 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070837303 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076240086 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079418561 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063445133 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070596792 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067516334 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064248046 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066515625 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079469087 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075351873 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063812412 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071089336 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093899567 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082885928 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064955201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07273574 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078411522 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0761097 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062718421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065147007 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065729007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063649401 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076373682 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083508888 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072744453 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078137728 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065677025 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073886089 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063103715 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074459251 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076351227 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081435627 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065740446 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065776493 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063381324 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066686188 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07146976 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063146313 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07034589 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062907028 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077515086 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073742849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081304856 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064292478 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071356965 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072204642 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072737783 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076935391 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071587596 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074947023 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065357353 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081178672 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075394207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077820189 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063297289 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062603761 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063345165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079593707 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094938761 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075290775 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065852993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06603372 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0635716 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072783478 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065937085 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075051593 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076835648 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064960155 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070169488 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077693414 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070388992 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071828363 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.0722172 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064014474 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068758537 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066745899 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086296608 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064265158 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063356918 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066100278 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080666233 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074791808 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064537183 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06638166 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076555775 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062277198 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064971516 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066099163 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070906685 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079323348 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069735103 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070251322 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078949443 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074523944 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071175059 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071809639 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062343664 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066056979 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06725153 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076621479 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062271898 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072556786 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069117981 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065173035 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077422364 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063329245 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064688326 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07784765 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076525645 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06329223 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061919102 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071700403 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064214056 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066622842 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078521727 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062734614 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062253302 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061990024 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072054452 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063607439 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071418245 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068135684 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071700581 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061829 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062795319 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068247858 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.202340921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069544805 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072046252 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07655967 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071956638 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065201921 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078239473 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072502862 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068001841 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075438346 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069800841 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063634962 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067500129 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072282108 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064202497 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072864376 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067810065 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072070479 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066147323 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06445498 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071794312 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066665366 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067378049 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070230505 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064643628 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080680831 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071921106 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063344116 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062772773 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072212361 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06724818 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064954975 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068465332 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072673612 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066254934 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063780876 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065118842 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07164203 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073741893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06875075 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066613167 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074775769 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083389501 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065231241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072615071 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065343477 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066195987 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066253088 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080562239 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075863204 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069517814 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072574027 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062520145 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075160718 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077962277 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067771756 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063737664 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068130179 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069384857 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077248127 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070156565 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066114893 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064052088 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071544733 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06832407 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072248881 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065286765 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067637611 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070999598 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063861097 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.071308489 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065894469 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080269412 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073079411 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063864083 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068147948 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063711918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076854636 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063631162 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066692035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067934252 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065645412 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064357972 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071951411 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063023089 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077867572 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078842356 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070799441 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067688613 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064928137 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077953978 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071238841 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073875164 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072718265 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075228276 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080811744 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067958706 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072397453 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081083207 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065245297 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062976897 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077846241 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064625197 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064323308 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064555264 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064091856 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072676734 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072539807 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075665247 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062714644 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072001966 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064198843 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067979996 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063654766 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073606995 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072082123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069635461 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077270964 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066213195 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065519564 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073203432 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064943219 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066117155 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067035816 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072471258 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065393749 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071292115 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067509169 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070925476 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066859574 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063116549 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070119128 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064538772 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069429354 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073460374 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.063482508 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069810775 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070669466 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064646195 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070267719 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067875671 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066854978 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07205019 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07047619 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069482566 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.20150964 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06431934 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078492725 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066119148 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078754471 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071092962 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063069659 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071404391 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072468843 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070567419 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065951117 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066155933 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071025534 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065140037 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072333556 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078003058 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066598157 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081821259 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076940607 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071218278 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072536953 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070825236 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071543685 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067546594 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069946399 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066430547 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071392663 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065076682 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073775635 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07255132 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070374758 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072273817 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065779676 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.0703608 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066105913 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063051146 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067671917 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067966276 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065389593 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078861483 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066149686 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068451363 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064560828 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066501133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065321528 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062359923 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072711623 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07319626 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066497413 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076485584 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068193763 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072081569 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081614108 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062825514 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064462444 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063922155 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067749396 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078742763 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06618231 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079251682 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071322203 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067987899 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063207006 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066215903 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064138098 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063073092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063761397 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073776474 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067577647 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064802949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065739248 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072380068 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066181437 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078703698 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065142667 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069893288 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06602684 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06315897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06838844 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067601345 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072675096 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066336004 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06714792 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063506158 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065141497 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069860279 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071702806 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064967665 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071094404 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078108692 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065778292 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072263007 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068435804 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063179198 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072389543 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064870399 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065181689 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067645656 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073294429 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073259747 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065781802 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079874898 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067766868 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071656145 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065338351 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063536529 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06505677 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065820307 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06557308 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067647241 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.0665908 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078738707 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064260052 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071809233 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070530356 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069069637 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075730296 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066213859 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071827686 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071179403 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067116453 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071508005 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078800497 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06905044 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073489596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065635487 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071289609 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075321802 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067298832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076992625 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070702636 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065465685 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070568736 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066541235 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064155122 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064623596 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063638788 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074374156 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064524954 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066690175 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066869708 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062459805 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068605618 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06633777 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0774738 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071426629 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072232818 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.195378636 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062096914 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065381703 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066745542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071867695 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072975607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076335124 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072995058 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069295257 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064835197 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080506678 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075660235 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073493647 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067156474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073533804 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066429509 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072681736 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070677522 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070731439 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066216193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074050903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071565101 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068779201 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077016252 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073930124 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066729351 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071607204 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071555708 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070454217 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064355862 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066090674 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072027989 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074504199 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072093976 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065803851 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081693207 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066822082 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070915199 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067941596 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065318328 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075055815 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063471551 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072029075 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066416889 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067026697 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063683251 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068468356 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066929862 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072536631 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068797761 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064683304 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081987362 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080652308 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072362698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066029877 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064758777 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064101381 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06423149 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069278494 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067113379 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072835294 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081218917 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067877597 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067860717 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063775719 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065843052 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073223886 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073671146 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063105693 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06416371 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068385374 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072066886 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077227427 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064529077 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065357946 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073427195 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072352778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063998747 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068343885 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063471515 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073452636 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083283474 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066022272 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07160947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07555856 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078826279 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066276043 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064118944 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065780054 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07210199 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071521562 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066646354 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066781211 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085919467 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073371537 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067938614 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064805729 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072365103 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068405867 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079651535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066097111 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065922116 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077558618 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071831645 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072784902 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076427996 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077454164 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072037547 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071689211 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064342315 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070670803 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064513323 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068045092 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066340462 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065920452 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070466199 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073421172 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067087703 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081821829 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080258539 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068309806 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062999301 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068293347 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06839503 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064119834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066297761 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06454845 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064257618 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064025131 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064365041 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071237236 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074527034 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069752921 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065387613 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064214909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06200217 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0741212 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071341142 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070490159 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062567798 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064815051 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064959191 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072556903 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066585978 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066397605 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070928572 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070562308 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.201700594 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063953183 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077557135 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065900218 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072819187 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068785215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065795672 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066553953 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0736619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070263971 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06719752 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07248676 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072556353 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067406641 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063803016 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063066825 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075578958 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064141259 seconds)
  done (took 43.433972781 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099686702 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063422124 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064686673 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063977266 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074087802 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065148559 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064223599 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065885236 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065209541 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067809894 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064510554 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064165975 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072434329 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079986065 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075007605 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069120598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065210462 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066074386 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064999898 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065858668 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072657522 seconds)
  done (took 2.71915824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070014109 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077708307 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074884229 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080106752 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071654052 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067351971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076607319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069411975 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077913488 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074827044 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077643829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069655218 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075102725 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07518739 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075106121 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069804042 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078414637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073689211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069875791 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077285079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070105839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077715144 seconds)
  done (took 2.883635837 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064227602 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063260902 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070381206 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061761699 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062960119 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062429884 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068525324 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063736051 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068856359 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067770016 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06800642 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067841924 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071918091 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063989536 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068965448 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06350132 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113993911 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069409387 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065451553 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066873194 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063873403 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07298439 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06443038 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064224983 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068076658 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06786567 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066274812 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06362256 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065649074 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06752908 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065100366 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063959314 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072137658 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071226783 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067549047 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067380465 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065096883 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065202134 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063807625 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063827498 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07416062 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064362214 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065558346 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071938521 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064265951 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063181834 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071830123 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066155978 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063828876 seconds)
  done (took 4.567429667 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074221335 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112641061 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.07055944 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094043584 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079392208 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071865566 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070013456 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094755187 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065916676 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083745866 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080361633 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080372948 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067364641 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06925209 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072137814 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067324321 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068170326 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066792717 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070547623 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066773968 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070455697 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071573681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079203788 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080230742 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068470648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066744218 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067112636 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069042123 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078867413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071293532 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069061811 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069604194 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079375727 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073056182 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066734437 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066591367 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080122118 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066968479 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066873741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064961289 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066552421 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068457907 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071799351 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080331197 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067601213 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07208329 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067281601 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064845434 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079228078 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066740829 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071456725 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080168673 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068339093 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067797041 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068674956 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078775163 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067313117 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066115022 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067131041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078785693 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065520483 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06804843 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079665673 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066884777 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071090971 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079799006 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072404865 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068225256 seconds)
  done (took 6.341644425 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072963615 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094525075 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081244639 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081377049 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075508649 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075627286 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075867246 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075784869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075231846 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079305494 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075940164 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117793019 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071150378 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07805157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076034993 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07557396 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075371713 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075199363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075503391 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074818416 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075307996 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081693938 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075452485 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082067116 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078553059 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071115497 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074781201 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075457669 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081511768 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075152803 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078521271 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075291535 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075891577 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081994249 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078336174 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075061609 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064676176 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07435075 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074321087 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075120362 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071181107 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081635576 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074792559 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069983433 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075369374 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075226274 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082213543 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078397582 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077329938 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079448824 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075133367 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081704379 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075052125 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075250976 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081648856 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.084478349 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08162808 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081641056 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075149012 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081911008 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081676484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084109696 seconds)
  done (took 6.13485349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078074957 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070492291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081912017 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064023364 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063437222 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074654142 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063878439 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066525968 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072188784 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072139718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074542675 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073407912 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074693734 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072500582 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072427483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075049797 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073221101 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072283002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070502087 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072736433 seconds)
  done (took 2.736922879 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076370456 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081503327 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069410037 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073957949 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069220913 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074124184 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068689789 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069576291 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069792649 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06959845 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076037005 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075979996 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069926596 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074219266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075628856 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074461898 seconds)
  done (took 2.454106902 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083740324 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071052081 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077367482 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064088198 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067780159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064199238 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065692221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063788163 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064172424 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078641826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064997749 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076812403 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065439676 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064153074 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065103931 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.0710796 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064360713 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065886069 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064960275 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079167709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072505532 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066395567 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069352776 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06451218 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068935552 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071325663 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06522854 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067430959 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065085197 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065744394 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071261235 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072242738 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065128268 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066383244 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064439769 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06507247 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06529984 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065478993 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089021027 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06525955 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06362646 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.0706819 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065133148 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066239272 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064523738 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065281215 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064032395 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071004965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064949993 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070994183 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065057522 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067173363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065702925 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072646019 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068050124 seconds)
  done (took 5.041619796 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078299272 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069179439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063525111 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063160444 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068869585 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070030582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069208196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069976056 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070452332 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064150715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07058031 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068729645 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070203261 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069857954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070813849 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069769525 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063810582 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069923225 seconds)
  done (took 2.542379828 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073166261 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068529659 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073361919 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069224824 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068853637 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068424879 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064118291 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064362134 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064035768 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069191529 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068855022 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068438586 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063876591 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06873293 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069123874 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068950491 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068636348 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064313824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068883164 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064154999 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068796395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064058783 seconds)
  done (took 2.78208134 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095490706 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085854441 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142663213 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081363919 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088659328 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.074090817 seconds)
  done (took 1.862749254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092330534 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09968109 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068842496 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069392905 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075035094 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07209028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072560321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072615952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077306992 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077517326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073072014 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07778655 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07787151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079227699 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075368917 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078133564 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072876511 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07284383 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069324692 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082452327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073072868 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077691428 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072875905 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072801382 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072734119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079561769 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077425989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077726345 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072643112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077490527 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075145755 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072628999 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077818596 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077844679 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06915292 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077164253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072536192 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082237987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075053184 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078863013 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069030966 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07497265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077467102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076623483 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077223545 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072990649 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076501831 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073201183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072945021 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083872275 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075185628 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078821963 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074736912 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077190803 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076869928 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083916106 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077247846 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078756921 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075410795 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077375503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079207148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075101149 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078943162 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077927729 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075054286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079511203 seconds)
  done (took 6.339815105 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104483679 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069952365 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072706882 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077663712 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079297166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073079128 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073068526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073034772 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073554913 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070492118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108706058 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073101379 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079829607 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079791657 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073295873 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073540639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07347594 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080317792 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070128858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084892535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072932367 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079333633 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079340461 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079377092 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077944453 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075210061 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072450673 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07262381 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07259691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07303121 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076679267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0727727 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079241399 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070267799 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079583379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072847964 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07262871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076575802 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07253479 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0751645 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079524493 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082156872 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072505383 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072528838 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077842593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07259549 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072674561 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070380164 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072499984 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069880641 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077490284 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077394176 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077931878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078875124 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072623694 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072822816 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07222288 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07222538 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072433971 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074947582 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080736451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072395087 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083833133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072649358 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0726224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079378069 seconds)
  done (took 6.336261252 seconds)
done (took 129.383761168 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213120738 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.192080023 seconds)
  done (took 1.685071296 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073996756 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104144855 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085415612 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.136278054 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071350055 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105977277 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104573647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083618967 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071338168 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072601553 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073218438 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076001613 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139527458 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071823585 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071617161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076258583 seconds)
  done (took 2.71970102 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103915102 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169391286 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109556821 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069778194 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104348316 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077504676 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069659987 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08346768 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076519287 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071804348 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079200474 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080818423 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072993546 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077608938 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078632422 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079778228 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073080708 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079767938 seconds)
  done (took 2.862227662 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103443762 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094325212 seconds)
  done (took 1.504702876 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173531029 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133417066 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20217532 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346513948 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.157594005 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.422733288 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142355739 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140642727 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112511125 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136352594 seconds)
  done (took 3.268122753 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103990007 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170142783 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296212994 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123685764 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078332481 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09370015 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125947247 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084446923 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08698927 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085806325 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086846138 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080717284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1059686 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079298393 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078283809 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081455438 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109840706 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077417613 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078659108 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081667059 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109386716 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072305011 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079010808 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077069301 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083838051 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083691736 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073405492 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071728669 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080817825 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078005788 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082110387 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09062503 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083198971 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109622343 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076933907 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110527337 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080980205 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078946749 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077911158 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079003846 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083407478 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08291442 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080844837 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080827046 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072942609 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080689076 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072933921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0716877 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082206923 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07356495 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082980625 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081335232 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109625772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073516799 seconds)
  done (took 6.243216211 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108556919 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107096234 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073078087 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.116225698 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107916109 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072717102 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.10905747 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101898092 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111377048 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073268703 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07149557 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073057418 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082835367 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08597744 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119277731 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109515997 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074865208 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072751295 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1106734 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.11129416 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072535965 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105053134 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101085735 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111222539 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069541373 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073406856 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071444535 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073241387 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079198544 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080827173 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072415035 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082206734 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090142239 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07773936 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069338359 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071303111 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071465663 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080784549 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081461871 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079429595 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076718268 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068401726 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070789205 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071839529 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07207473 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070130234 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079868208 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081603601 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080059337 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071057768 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072692737 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071046438 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072043432 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080497468 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077915955 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080887614 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081220421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071208727 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070968268 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074255696 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082575531 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081206753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081241903 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071865883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081410937 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071205689 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083104038 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088896396 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071181263 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072641242 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071252091 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070781128 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072414592 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078804491 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078795612 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07279903 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071109474 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070843602 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081281408 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079165708 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070974823 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078388348 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07065576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071552123 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072413579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072461437 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078705682 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08053633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073416157 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071343457 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07155205 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071107166 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07015733 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078431826 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080877725 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080248033 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079963112 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071747276 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080180857 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079721972 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072008058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080012513 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071052249 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072119354 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072559348 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078564239 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07640086 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078517247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06940038 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068937344 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076816757 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0810893 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070677237 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077262405 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079427483 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077525917 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069522461 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081236094 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07147297 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079980509 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068618481 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07745375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067972675 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.208604793 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072455106 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071853681 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072056372 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081168083 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073799827 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071603044 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072736841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071326257 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080409631 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084566077 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073665624 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079876332 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08036014 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07321939 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080235702 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071854707 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081187779 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071624258 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073036169 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07109788 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084018276 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071923874 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071489242 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071962559 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081611967 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069815407 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079154209 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076491686 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068491133 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081502393 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079190412 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076421007 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079622364 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07111927 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069564275 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069949681 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069301775 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076549387 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078430447 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070923594 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069441591 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077434778 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082510193 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071208846 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080247874 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080151093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080449874 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072127804 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07172994 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082679896 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07971626 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077866497 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077484106 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078562408 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070232024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077050805 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078862789 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071958924 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087298842 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072016427 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083470652 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0794096 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077517253 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078350191 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080660793 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082017893 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082365063 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085800061 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071488688 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071352808 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080937189 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071644417 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071813958 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079449814 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073208877 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072632215 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085655522 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070256343 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082036432 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07090414 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08048386 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070742104 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072859131 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085498654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07117994 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072959877 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080922208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071439347 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079092599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082785477 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082761401 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071961836 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072657546 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08109518 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08079421 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071551281 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07111512 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072405041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079381056 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078456429 seconds)
  done (took 18.92594742 seconds)
done (took 38.525382751 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20789337 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157055786 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190119353 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119386957 seconds)
  done (took 2.083347357 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108060281 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099182729 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.089557969 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068184786 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.097492743 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067963909 seconds)
  done (took 1.871876984 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285533656 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199108613 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181107396 seconds)
  done (took 2.003467146 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210320294 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195641348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462605854 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286190804 seconds)
  done (took 2.590528484 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140140446 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083242931 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064516742 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083144043 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123833728 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149695916 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093032481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118349893 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076076131 seconds)
  done (took 2.322578158 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146541782 seconds)
done (took 12.377000052 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.111494516 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.133350287 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.211855022 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102916231 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081379661 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073516145 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069224006 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074545695 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.168385037 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079022649 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133646534 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09185556 seconds)
    (13/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.207856462 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087933153 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124052502 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077211714 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.199922038 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077031893 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.08035308 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.124509574 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083876411 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.427631162 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.238902256 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075777381 seconds)
    (25/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.180040871 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069231526 seconds)
    (27/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142571309 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078603096 seconds)
    (29/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077567138 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.232817062 seconds)
    (31/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067296698 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076755517 seconds)
    (33/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.190922257 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.129680477 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077258954 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091938899 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183559316 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.144487412 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103575036 seconds)
    (40/309) benchmarking ("sort", Bool, false)...
    done (took 0.161457326 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068662202 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.244316671 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091624808 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094899885 seconds)
    (45/309) benchmarking ("sort", Int64, false)...
    done (took 0.069297395 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.18448853 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.200061198 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085408595 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067562517 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094431732 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.092076425 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067786615 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07891363 seconds)
    (54/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076771863 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232186893 seconds)
    (56/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072784729 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.215340207 seconds)
    (58/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072977087 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076836676 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.075067863 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066862705 seconds)
    (62/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167652612 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092885291 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139309978 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074243408 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09085251 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.209763861 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076770113 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077005487 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076358559 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.06777096 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078635027 seconds)
    (73/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.127981497 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066884967 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.182370824 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068983089 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.140968405 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220654341 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078820798 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078855768 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.06875692 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0689027 seconds)
    (83/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070302076 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126176109 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074514518 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.207540401 seconds)
    (87/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078130092 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075425346 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120590875 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169008389 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173007688 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.080118296 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.067021638 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089564483 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078024397 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145657521 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.217120298 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.214077101 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081836138 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.185445128 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.072289466 seconds)
    (102/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.09035138 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130250844 seconds)
    (104/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095737716 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13777378 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075113978 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080780921 seconds)
    (108/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121690567 seconds)
    (109/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123859684 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147841411 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.199746335 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07816736 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077216166 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067939154 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14091704 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068143681 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077246349 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06877748 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.095676056 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184452547 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.082128068 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091365018 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076217121 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069243759 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068992813 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076889307 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073488998 seconds)
    (128/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176112642 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072443991 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068556398 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090027977 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108159394 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.171969678 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078249429 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.068330914 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06952765 seconds)
    (137/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072202805 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136291564 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120631636 seconds)
    (140/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06952912 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07060608 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076336811 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067418818 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076114606 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076950218 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097959428 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090234747 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10609283 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094065616 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168891189 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124463414 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075703139 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074796523 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079461101 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127602024 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068556455 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.090787621 seconds)
    (158/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.139820405 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068460078 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090914079 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081922997 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 0.14925694 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08180299 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067557481 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131970254 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079013615 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.168825598 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082194887 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068811325 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.22159136 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076188699 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083098763 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142917527 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.071254997 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067930936 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.083936413 seconds)
    (177/309) benchmarking ("sort", Float32, false)...
    done (took 0.133362757 seconds)
    (178/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069382739 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068405868 seconds)
    (180/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070512055 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.169874469 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081107894 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.198250504 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.137826769 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068318238 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06925175 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071474843 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068088378 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137038878 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068069888 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110725231 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115037538 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068247154 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069124736 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074438722 seconds)
    (196/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127664915 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069281474 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084759168 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079937314 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.166883549 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068338725 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068145111 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17679231 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071461408 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.196647729 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067553796 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074934845 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067722634 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171274011 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067038449 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075650825 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073998744 seconds)
    (213/309) benchmarking ("sort", Float64, false)...
    done (took 0.132798937 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21504147 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067344468 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066811372 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067341527 seconds)
    (218/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068074751 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076747336 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.236345239 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138723589 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.181263391 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070450759 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142694358 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069772735 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076517059 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134058714 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.069728712 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076974572 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083581923 seconds)
    (231/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089950125 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184334733 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075078403 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066953929 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074167534 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091078479 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.083126749 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066015315 seconds)
    (239/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076563149 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066485156 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06718186 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093065477 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.197490626 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093509113 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070082095 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068090164 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.068620558 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069126221 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074733186 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067366714 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06972172 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.235449457 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.070381759 seconds)
    (254/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196510627 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123708358 seconds)
    (256/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068166567 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.069159926 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069264402 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069388525 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077465419 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068295025 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077676202 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141775288 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076734454 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075409075 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184201806 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090097307 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081552287 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068145871 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.069554289 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.069387449 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.070944515 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.0693888 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079934571 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072283477 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070136941 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069611456 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070109896 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183744529 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.130053453 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070239115 seconds)
    (282/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06801582 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068065485 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072387751 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067932242 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093627431 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076965624 seconds)
    (288/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.070861185 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092291581 seconds)
    (290/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06899041 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069095309 seconds)
    (292/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.069212133 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068248089 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068753832 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094842224 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123427778 seconds)
    (297/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095049965 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074986501 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067464015 seconds)
    (300/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074636125 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127043444 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068372015 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068762217 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067301573 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067876073 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068407181 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.08155911 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.068135831 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071405024 seconds)
  done (took 33.689125597 seconds)
done (took 35.038689102 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08681641 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100895759 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076510743 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097129444 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084895206 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099009508 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077088295 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082273251 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085303499 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083880815 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082425118 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075590648 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078612861 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078028121 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076597652 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100921901 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083691873 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077620514 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07715525 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068518871 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077381278 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069283827 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068902704 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075703125 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080354098 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076747137 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078703786 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078043235 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06892389 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068921462 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0736024 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077937971 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068695048 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082012798 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07850252 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077409268 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078974589 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082342369 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069107778 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069259645 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07872151 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068875611 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076793118 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075436055 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073904763 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075566656 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077316246 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081726326 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101275881 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074639513 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.079095838 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080207173 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080753159 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074276443 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074139486 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076867229 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075058061 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100514259 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077639028 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074246909 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078466234 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078566099 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075488005 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077040043 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076673393 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079561149 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081385483 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075287337 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079096682 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075914196 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068365678 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076956037 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073362733 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068526965 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080102775 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081614386 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068021016 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073511761 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079951881 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07766974 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068435318 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07392332 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0680004 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073164749 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073700743 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.075094471 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073925474 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075997347 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068454926 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077212185 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075797004 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076329353 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.0680799 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081672818 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069357234 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075175527 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069184584 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068893511 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068189918 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07375393 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068356112 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073437671 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077278995 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068314357 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072906898 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082475242 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068496039 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076733661 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068083741 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068510402 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079949506 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078803265 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068560159 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073729917 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068045491 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073586937 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06802641 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067954453 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067742613 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068358328 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07257816 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068258275 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073201319 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073678842 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080990154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068417386 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073000011 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073606646 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068013125 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074894193 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068513821 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068104381 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068052078 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082317187 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073471211 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068701591 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074056528 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073551778 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076551648 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06796043 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076906297 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074458429 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072599656 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07468537 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067511831 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079111565 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072881968 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073013093 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066794969 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0670028 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06635703 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066777497 seconds)
done (took 12.945641618 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.0702196 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.118309585 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094712607 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095238287 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085761142 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069973435 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077417032 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095628871 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071443636 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099736269 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092168162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092334381 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114350548 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069255746 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070224919 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070798288 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071231666 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082648774 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098163215 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092651188 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.110246178 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069857588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08982287 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091594814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087392196 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092283894 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07176378 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071641197 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073286922 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093726172 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095525037 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072590714 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07109427 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093127762 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088611965 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083696351 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07076144 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078841967 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070677058 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069439916 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072000072 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090734273 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079287758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080010414 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071001458 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07835527 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070803316 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086700333 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091185254 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079043414 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085681151 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.094666757 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074420877 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086943803 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068821743 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08586628 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079290878 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069928912 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069780364 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074860055 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069914475 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071964932 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082045975 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078413797 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074909055 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085518864 seconds)
  done (took 6.829637908 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085376904 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.098162795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087257932 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087642312 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069519757 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070385729 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.073272359 seconds)
  done (took 2.017005822 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067784364 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091363956 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094318376 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094546524 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084613202 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095026668 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078478247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070496401 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099935689 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069131837 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090550308 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10197311 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074485904 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08257577 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095969043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070063873 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095559773 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069930215 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070666409 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094906496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075367302 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098098056 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.081985201 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070603202 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083056752 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070199253 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103696661 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077872906 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07128568 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07104222 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071396082 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.098233396 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082873077 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082813714 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071318605 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085271616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084071656 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073500488 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081204959 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082310376 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083600272 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071303708 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068758669 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.071682686 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073399943 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081304046 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069240178 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071131162 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070793165 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089889472 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068649366 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082401593 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07361046 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076141217 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075708462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075261916 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078685922 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071440177 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089860536 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071191375 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087292943 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086891123 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083135435 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086528571 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070066037 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08258163 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083535161 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070908759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071806203 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071293219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087189568 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073123939 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071828507 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081511501 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069533939 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094978438 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094516754 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069446605 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083285258 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070881219 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070875077 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081899094 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09411897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075494469 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070536042 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073968522 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071274285 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072842267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068024099 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073159707 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070413273 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075095669 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070333571 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073071461 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071762898 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086391401 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068714041 seconds)
  done (took 9.113293282 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069604533 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068642149 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07252572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070664034 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070532669 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071222357 seconds)
  done (took 1.89402307 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091336815 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071040675 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084009197 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070473095 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107239449 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086828265 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08691048 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080710953 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084834197 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.08262489 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087559782 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090113591 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091190779 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073750517 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086509325 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072050897 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086546774 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075216684 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082529627 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073636239 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084471484 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073581627 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073770459 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090389309 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074772902 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071791175 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080742499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082425457 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082220575 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081067775 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073254017 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074607615 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078004999 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080490802 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087358845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07774568 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070669636 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077922666 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073940743 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074747957 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08874977 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073374096 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076611557 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077711905 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080949554 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077835448 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077718119 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079252599 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086370098 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077373713 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077162649 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071664206 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074366841 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077542122 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077996152 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081064977 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077413293 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087022051 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073050974 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078256164 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070330214 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074335109 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079797219 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073947024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07838224 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076639468 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077908556 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073219957 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073095342 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070570477 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07766434 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071693115 seconds)
  done (took 7.135702788 seconds)
done (took 28.448546108 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515755666 seconds)
  done (took 1.937323485 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619461893 seconds)
  done (took 2.071014993 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.517121736 seconds)
  done (took 7.9664436 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.382989853 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.456836228 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.748104335 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138831364 seconds)
  done (took 3.210343795 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707038771 seconds)
  done (took 2.16828827 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236812217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23114033 seconds)
  done (took 1.93657412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351933788 seconds)
  done (took 1.804557179 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.076638422 seconds)
  done (took 2.528621783 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235887092 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164879214 seconds)
  done (took 1.856725082 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451964276 seconds)
  done (took 1.907549493 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.209635429 seconds)
  done (took 5.667436046 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220182616 seconds)
  done (took 1.709245183 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237164298 seconds)
  done (took 1.693812431 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72998823 seconds)
  done (took 3.18718949 seconds)
done (took 41.107726528 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083190375 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088619018 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088865103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08493801 seconds)
  done (took 1.784362387 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075133332 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.0736246 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077606447 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073348553 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077230726 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073040635 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075198439 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075911454 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072830379 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073513465 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073452015 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073123141 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076532875 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074955754 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072237593 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076079308 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077832151 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07329598 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076560936 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.0736702 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071515211 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076475287 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076498942 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072511339 seconds)
  done (took 3.251559922 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078678686 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07581868 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078380421 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074077019 seconds)
  done (took 1.772364537 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076956792 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.0909868 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088637047 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079790158 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092343141 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086749043 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069981032 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069348095 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071020849 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079460285 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068636911 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096384637 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089670982 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079880474 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081712624 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066121377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068304241 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088299029 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080136787 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080242607 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071387414 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079787688 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068855206 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089754658 seconds)
  done (took 3.375594859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081251029 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068527426 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083460125 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094880609 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096504731 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068515328 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082379165 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096462397 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139331912 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068732275 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074571975 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069211367 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.11283249 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069041795 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084176707 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112274931 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115095453 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072611736 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103888998 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068853269 seconds)
  done (took 3.233539181 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083644883 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069944933 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072145147 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067583675 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.0782651 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07602412 seconds)
  done (took 1.921272549 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06828993 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069211593 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070393372 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069509099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074684566 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069973721 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068795478 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070433085 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070443688 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069919521 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069059059 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069468495 seconds)
  done (took 2.309318885 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192124639 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068527448 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069265093 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066607993 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071771013 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067989666 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082585655 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069790931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096707388 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069222178 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069496372 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071680289 seconds)
  done (took 2.465984913 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190835238 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076325448 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224799651 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146972135 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106403945 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111554905 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115061108 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111089688 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136463473 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100813573 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157507241 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16342943 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10630123 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131189604 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089824118 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.122435832 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146833776 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158248783 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103019846 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15522676 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135927533 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122132105 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142538387 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09790416 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101027926 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112753162 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072023867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077031141 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158322956 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126290397 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139336323 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1080137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091795327 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171551823 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158719196 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133761452 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146242316 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083504577 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.120947488 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131239014 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194732759 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087754839 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151242063 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104401864 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080839373 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126791862 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111657589 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.116813422 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101772414 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088684259 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134137095 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316890162 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130440433 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087133064 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119510492 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10801497 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112557016 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11649035 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173234524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153814807 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123477197 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072407381 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110605302 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146270997 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129248758 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10730578 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120269561 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09300556 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126692581 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155320068 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121558301 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136492647 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115654674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087040713 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117379081 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132827148 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122192695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161593263 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120003079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073398329 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117649038 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097853757 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080076207 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144949241 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076839732 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166569359 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09907573 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.123237267 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128151627 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1070879 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106363436 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151172767 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134184776 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103697778 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.087122206 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102408612 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.116715447 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141242545 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086374652 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10565655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111598854 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078432789 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12711815 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074277944 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115775144 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.094138627 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116232501 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122710138 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079124124 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116044301 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09776205 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097165995 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268030278 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149735684 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086034732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079782647 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157761946 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117448419 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101846684 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139053559 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15165739 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121523964 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097571753 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140071721 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167083452 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090744801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155509449 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101956645 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083034752 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102834429 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117892121 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107219816 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119647993 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080044158 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117607253 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157296393 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075033621 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096398072 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129779395 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081163537 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080035087 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104922714 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101874202 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093355253 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098358184 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103090678 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131712239 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118283103 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105419628 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121755599 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100269645 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158517887 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08633709 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102310817 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102423078 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071408132 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12734212 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150405837 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079946503 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153050993 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119447076 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113633312 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114795028 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082273665 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13058186 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078007792 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072091741 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134072263 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109121388 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104361539 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143745443 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111099401 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11821195 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.262522093 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127908926 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125408752 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126288331 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105337665 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08870369 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113189827 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125807578 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073505807 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092507482 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082110019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102412568 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093685155 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084473221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134235115 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118592019 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109606474 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113142458 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096598139 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143479191 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078395464 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120381965 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11904396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093941339 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148396938 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147267155 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12903568 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100926273 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132281933 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074139723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074771739 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089258809 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120129512 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083280049 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083191027 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109835123 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14153248 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121448139 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130699127 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121084042 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115399973 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152767269 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073821838 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119083635 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136988932 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117545325 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104176298 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090658356 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097420066 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138741122 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102291396 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17417978 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111703356 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120309692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150493204 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101820447 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07960733 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10186905 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125501831 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100368124 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134630909 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095722985 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08543768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25416383 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079768578 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102063082 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122504791 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115460782 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131538181 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.109113251 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129066191 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078315527 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110175264 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12012711 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118671556 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084125946 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113327123 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160005573 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096185801 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114457208 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144447184 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07937405 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137017494 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163551938 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136915182 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085687526 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104309829 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118771055 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123501854 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115212573 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135203236 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10339701 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13216229 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10982445 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085015821 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087189228 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094770945 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101558385 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10940778 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102406135 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111690523 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095738222 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126683581 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10258701 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108804606 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115488992 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099377359 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095531859 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096051962 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167773762 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115855706 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160767037 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099276556 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.137660644 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1527893 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073668776 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078871129 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079863037 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130663332 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082998759 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123851967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109544797 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111262989 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117894976 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129213352 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241962826 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072521311 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108202957 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129317967 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121783252 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096277564 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102422818 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149924789 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.116304216 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078655295 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1116475 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114774233 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102174903 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1657095 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081069992 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108394711 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077859252 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080326748 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123184854 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144307429 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082232338 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103163189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117199445 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108763452 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122625582 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097780822 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110931193 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1285873 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141300452 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121874642 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088127505 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106475142 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121809171 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144892723 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1001329 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097175626 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165567298 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146488245 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.151894626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088673067 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111928479 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112897939 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108255841 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131538883 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081683586 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153380889 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082310321 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130457673 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099963497 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090145992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12403883 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109049662 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085685754 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137684627 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114061419 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082437258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080790488 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107919207 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114948454 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100220295 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073777453 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278907609 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072414258 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128167802 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161300982 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080517317 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104574733 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096208056 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082070999 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101901457 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098965714 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084508137 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098717836 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162087976 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087562953 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139479918 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12912051 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108450008 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132938666 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102811193 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641471783 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078909905 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143952391 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112113811 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167334793 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099015647 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115770781 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110000574 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118466495 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137624561 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100535887 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178825274 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126551586 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115140698 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080278948 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101372597 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101456644 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08861516 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106744853 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11159559 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112086898 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095149789 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116222874 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119091994 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083345404 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095531714 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149342427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114057687 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138454849 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134794483 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084664043 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115385073 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13236241 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080722685 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.115367306 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146161795 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104105785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097783151 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082893648 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100009554 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162962589 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072366997 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30100049 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116729571 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112427063 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111964226 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.109348111 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125549155 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102235426 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118063764 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094754848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145296464 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111870165 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083542234 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07946284 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104810388 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109681594 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09689103 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09820434 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098744496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146081728 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072663525 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097179529 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112168847 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138399527 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163254633 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10530623 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084418188 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117161927 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116658449 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113118077 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11925481 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081414987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081170866 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081819836 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099986297 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120920955 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111657308 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116009399 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10787897 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15552774 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083668882 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223984751 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09600303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10506532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090198315 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080210613 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095847186 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095547049 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101356643 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108009822 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16595343 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09493121 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090724577 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092602888 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075549565 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083477222 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122531999 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108797622 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116351839 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103217293 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081810422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101976312 seconds)
  done (took 57.622300704 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105037558 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082302239 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100480644 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145649226 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120938883 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199492687 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150059994 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189006873 seconds)
  done (took 2.687428325 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068117792 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094432519 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105884286 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085339961 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068820865 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070461104 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22795703 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083725415 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069905526 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094479542 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079885182 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071465951 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.454655202 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068635505 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070137129 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078517857 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069555489 seconds)
  done (took 3.417586032 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.382533753 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603046128 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.34851254 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078335044 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.981123533 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092339271 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.195272716 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142413506 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082229327 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540590665 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367039037 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.136749685 seconds)
  done (took 18.524294736 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083081895 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079641969 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094815873 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094232394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081776493 seconds)
  done (took 2.091126146 seconds)
done (took 105.930564079 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082521389 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.434753462 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071461413 seconds)
  done (took 2.107322364 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092183123 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091214916 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092660521 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.091099606 seconds)
  done (took 1.947566284 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075776254 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077891478 seconds)
  done (took 1.726858712 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23155676 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.179340463 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100425908 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084240288 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08188805 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084041733 seconds)
  done (took 1.827021931 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073569325 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074692419 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076140867 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076680842 seconds)
  done (took 1.874206458 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068872901 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067509132 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069784485 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072480637 seconds)
  done (took 1.852144777 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085348777 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085794892 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080201704 seconds)
  done (took 1.823404941 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102065945 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091505298 seconds)
  done (took 1.765874536 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082520831 seconds)
  done (took 1.656529058 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090413743 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09988247 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133240744 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115548704 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139344561 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116403987 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085636665 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086882988 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081407834 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088355609 seconds)
  done (took 2.611161062 seconds)
done (took 21.358759038 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079563379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377354547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364384397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095492247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673000842 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361818968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.029737335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097830893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.146480211 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072512453 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088534093 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652436921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012538349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.334155068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99936564 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.333503154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654511047 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072724681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072286512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072154829 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005183854 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072152424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072178031 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072567017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653308179 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379171112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072117636 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.332579398 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07016157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072174262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360947207 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07343201 seconds)
  done (took 16.380761968 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071580067 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124019291 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076683742 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089137272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074660271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07308845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076082691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073421506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12606462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073183493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09034996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071830067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07577347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072886717 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092223096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072898746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073363165 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073896005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07379855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073650431 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093700069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073483385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.076966669 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074136083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0735914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08652103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07359534 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073479038 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073476511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073746009 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074412185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072215885 seconds)
  done (took 4.136698909 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118003809 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131708621 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077907975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112223874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117344689 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074677621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.153397647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099424852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.13299769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072668622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089985152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07253674 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107669462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073341534 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094101569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074158333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074730249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074319671 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073936048 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073978035 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.094031885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073284767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073068076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074460397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07416306 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087627917 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074464186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074067122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073777497 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075917821 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074776751 seconds)
  done (took 4.413449003 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071538939 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07443357 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084092932 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084906144 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070706977 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073676311 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075063446 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070864448 seconds)
  done (took 2.196499397 seconds)
done (took 28.709083505 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080794355 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071388442 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075634372 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091125385 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077364052 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082745223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068996907 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078479801 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075528257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075508293 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077453128 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070683198 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073854811 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0687073 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075765281 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06947337 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08509832 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073597334 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083783343 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084755536 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073429506 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076892448 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078821446 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085334532 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085388701 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084643395 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080249319 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076599936 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071531278 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074214602 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.074703863 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082989841 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.084757732 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08491391 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070967698 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07061287 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075306897 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072490628 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085955507 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080123661 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073446036 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080482841 seconds)
  done (took 4.827094802 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.085127171 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090125032 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083193392 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081147162 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092908092 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085403795 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090403318 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.081912255 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.081750963 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090206465 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077920654 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084394483 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082468405 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075424587 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07948998 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078404902 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083023242 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077796229 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.081779865 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081641096 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091398534 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076306603 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.091751934 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.084097104 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078147665 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083407708 seconds)
  done (took 3.771753495 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074343782 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088172298 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.097005439 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149220843 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11491738 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083659245 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085653981 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095074112 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.101244107 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072099258 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076478546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096200011 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097360284 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078097081 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072155433 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087610315 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088018243 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074343734 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078869973 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101853292 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093554481 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089717748 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098876595 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.089034286 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071537289 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075070641 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076937642 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091721791 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074648761 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083601989 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075399856 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076466067 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073094987 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082135786 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074302708 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070850663 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096639022 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083377271 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084708322 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07217312 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081517285 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072538731 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097829041 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132000858 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070784253 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07544405 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075658297 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082881012 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070750469 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098712572 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083921015 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071677752 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071627568 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070646731 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070795283 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073876726 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07351555 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074371796 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081396502 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078353781 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093802488 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075631027 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08900772 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069443252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079001386 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069307443 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072412973 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069553218 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099565075 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073054341 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117225926 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072252895 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070328972 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082627378 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081958042 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077632516 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071166739 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089348026 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083171678 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074735643 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080110822 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074492048 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074697582 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.103224758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071748445 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070824489 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069887294 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075244215 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075111966 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072265159 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083958968 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071046858 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075341599 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.090204322 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071195642 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07218782 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07570299 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074374237 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070721902 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082663607 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075170023 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072433743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081988912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072090167 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07497244 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085292521 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078397023 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070251129 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073938655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075313091 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072565555 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072773623 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075289407 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07350868 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078395311 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078350993 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077779912 seconds)
  done (took 11.091056241 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165988774 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160261788 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075283432 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154139698 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080983971 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083699748 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157320609 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100209837 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07174246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073855609 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072035734 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114490058 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110117873 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.123791521 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084872118 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072258865 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095285996 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119050612 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159148396 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153254367 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094937792 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080403603 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076021331 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073968965 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073718606 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082243688 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092646641 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081816279 seconds)
  done (took 4.519605625 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078742959 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104763534 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076329107 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093907055 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090959162 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071603699 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073347974 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072408256 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088702651 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081477322 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071309692 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077098151 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074945281 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073920147 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071313076 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076269847 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077052303 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069218915 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07369763 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075582974 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081384484 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095848616 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076039331 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071864396 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075214365 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072080859 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.080127204 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087391273 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072264555 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.108178457 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069820016 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076282103 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08520833 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07088977 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069252254 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071088406 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072263712 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072100062 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073234892 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070586764 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070665054 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07563658 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.07127265 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080642447 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084662759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073963608 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074191683 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074970961 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074927383 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06929265 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074582344 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074758233 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075580455 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079385 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076254033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074932662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072852801 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100007579 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078083941 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071621202 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070855367 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070773674 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074885828 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.082220474 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087675615 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074158556 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07065392 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072332582 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085062553 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085089662 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071362116 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076803813 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06925686 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073697461 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074794405 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074622693 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072870964 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070532099 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071551557 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071876945 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072611223 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07161525 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075100004 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075357569 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070443966 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070649977 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0727296 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073542579 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08089375 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071314081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076202601 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072631668 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070527867 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075071553 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.0775568 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075218371 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083119854 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08350414 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072939878 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070390871 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085985056 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074842138 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070957042 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0772937 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076220195 seconds)
  done (took 9.656985369 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092699839 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072412432 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088942739 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095984781 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.081881431 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078406485 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082349251 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071864658 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088757447 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077148774 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080004781 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070540643 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08302948 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082104003 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072181438 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083199262 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075147211 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.09029624 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086623276 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070947035 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080441953 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084883484 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084510743 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087126783 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085740271 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087769523 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084219936 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082543225 seconds)
  done (took 3.946270754 seconds)
done (took 39.398556738 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.683972326 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.843735343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.667876049 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.881515727 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.732503373 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.890918168 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.753017832 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.655524608 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.066943357 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.705629811 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.943162832 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.882045808 seconds)
done (took 64.447736229 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.720079948 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.812889585 seconds)
    (2/2) benchmarking "String"...
    done (took 1.911847411 seconds)
  done (took 5.323529028 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.842573381 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.3277159 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.89516342 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.658244434 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.665478779 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.912274027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.431699316 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.106254952 seconds)
  done (took 29.596763591 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.805954016 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.882457382 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.336807242 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.37106749 seconds)
  done (took 15.037517074 seconds)
done (took 61.211049027 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.714266055 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.681916324 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.688569813 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.660097173 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.751706108 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.67030505 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.771638961 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.676836584 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.661056026 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.67132379 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.661808144 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.144069926 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.66686765 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.815876494 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.659945792 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.661798083 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.707826376 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.304985233 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.863333347 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.673906882 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.673357285 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.697801001 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.663791321 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.668136688 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.720111931 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.661879086 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.052821623 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.674550311 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.279361145 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.66201517 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.693749177 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.991323639 seconds)
  done (took 200.146984625 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.660898607 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.819738413 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.860335944 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.668880786 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.328891159 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.835569823 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.758238301 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.35568582 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.663222619 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.676607386 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.796354642 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.663197142 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.81911617 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.608477796 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.696719661 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.698525187 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.975772539 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.835004634 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.702181905 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.8070026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.68767348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.734249797 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.714766205 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.795190528 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.705215687 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.702957808 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.680534818 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.675370047 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.853423384 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.943175117 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.669143006 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.681600857 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.829579375 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.532386267 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.662731057 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.673364726 seconds)
  done (took 166.37388231 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.837941783 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.66365963 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.661748582 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.662276027 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.663081063 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.6684634 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.662950955 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783612706 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788248699 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.303145115 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.002676211 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.720106122 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.662101755 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.432497851 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.666060706 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.661882102 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727673335 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.676448195 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.667530197 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.677272707 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.688041923 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.665929937 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.662939173 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785948833 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.675488111 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.664880363 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672625907 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.663202148 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.668462446 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.051129276 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.663059881 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.663290843 seconds)
    (32/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.904583697 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.668576678 seconds)
    (34/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.668870891 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.903939628 seconds)
    (36/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.66457617 seconds)
    (37/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.665133339 seconds)
    (38/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.490162613 seconds)
    (39/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.1812258 seconds)
    (40/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.908883366 seconds)
    (41/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.668467843 seconds)
    (42/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.671795401 seconds)
    (43/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.666584047 seconds)
    (44/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.891789618 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.664682108 seconds)
    (46/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.664468149 seconds)
    (47/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.665010185 seconds)
    (48/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.664937487 seconds)
    (49/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.664800907 seconds)
    (50/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845097776 seconds)
    (51/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.663844427 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.789962066 seconds)
    (53/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.664409675 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.146012296 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.665386019 seconds)
    (56/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.666634185 seconds)
    (57/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.087507481 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.252553792 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.664612027 seconds)
    (60/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.667346868 seconds)
    (61/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.663636542 seconds)
    (62/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.665889583 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.670539521 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.131334535 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.740115832 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.667491182 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.666785612 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671615001 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.666354414 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.824612969 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668666165 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.114283722 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.680989828 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.786862052 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78799823 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669053394 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.729838297 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75724106 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.665954383 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.664861154 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.665829815 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.664982517 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.745707257 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.666490901 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.781550943 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.677506468 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.667506515 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.723373683 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.735272117 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.666314387 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482662899 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.668556395 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.665513358 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926397517 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.731538904 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.666689955 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668035093 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.767604705 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.78872455 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.396136046 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.670192691 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.004333545 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.768365747 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.668413735 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.785753523 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.667395015 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747398135 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674644723 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.667705698 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.703144165 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.668598634 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.680794728 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.667764794 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.039623434 seconds)
  done (took 388.353489943 seconds)
done (took 758.370919312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.313914107 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.27744233 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.379790594 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.296750326 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.273776586 seconds)
  done (took 13.14874001 seconds)
done (took 14.756261923 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.751450943 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.753155371 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.687106134 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.750413128 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683275358 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.749634746 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.733187249 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.689284526 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.718224653 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.690872205 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.720568763 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689754407 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.676162261 seconds)
  done (took 23.899274659 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89861497 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.907390187 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.7323801 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.904900359 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.709442968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.89200187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828408742 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.816584728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811443236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.6802865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.674938398 seconds)
  done (took 21.46488206 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.895112041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.905949615 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.741048371 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.89732365 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.713492848 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.906170136 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.8289174 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.817788753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817672744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.680477151 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.677320952 seconds)
  done (took 21.489178946 seconds)
done (took 68.461476299 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.670804781 seconds)
  done (took 3.279193338 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.692843343 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.846998452 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.673781631 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.678675909 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.671774089 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.673435019 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.679358571 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.67176633 seconds)
  done (took 15.198939886 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.672340975 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.671040146 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.671509792 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.670592127 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.671842755 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.671894191 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.672007379 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.671764182 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.67243527 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.672153923 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.672333228 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.672172114 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.671347219 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.671820871 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.672631306 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.672355408 seconds)
  done (took 28.359560682 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.673497461 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.671084632 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.671784138 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.671407451 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.672756691 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.672600098 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.673375304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.672935477 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.672639885 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.671845104 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.671570557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.671971888 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.672457757 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.673231923 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.673162574 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.674852718 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.672383335 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.673243383 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.677612806 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.673404056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.673491246 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.672846343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.674461874 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.673748004 seconds)
  done (took 41.763166307 seconds)
done (took 90.210756621 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.427446707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.331127721 seconds)
  done (took 9.369135419 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.677742321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.673952465 seconds)
  done (took 5.03090438 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.674381941 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.675631244 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.673984439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.673591276 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.673322859 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.673721073 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.674513519 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.673762777 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.674587171 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.67521778 seconds)
  done (took 18.352665584 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.674837587 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.674183951 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.674465632 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.674537385 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.674117118 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.674383647 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.674834214 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.674412433 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.674845408 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.674866526 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.675062936 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.674811392 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.674787409 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.675321414 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.675597148 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.67497272 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.676106393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.675589968 seconds)
  done (took 31.759478616 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.67421368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.675705421 seconds)
  done (took 4.962075031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.674809954 seconds)
    (2/7) benchmarking "second"...
    done (took 1.675344832 seconds)
    (3/7) benchmarking "month"...
    done (took 1.67602365 seconds)
    (4/7) benchmarking "year"...
    done (took 1.675436699 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.675653243 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.675166678 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.676361273 seconds)
  done (took 13.340758094 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.676551148 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.826595878 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.88945495 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.261418331 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.676552838 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.678105256 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.611857522 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.678686437 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.68042305 seconds)
  done (took 18.592995125 seconds)
done (took 103.019921771 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.524547082 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.675216386 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.898645196 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.783014759 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.694705289 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.011892793 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.694245779 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.932610395 seconds)
done (took 41.828633075 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.698165944 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.437907832 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.477866587 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.707498023 seconds)
  done (took 15.235866102 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.676915273 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.95721298 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.701174721 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.482408416 seconds)
  done (took 21.436006351 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.035857114 seconds)
    (2/2) benchmarking "read"...
    done (took 2.016346804 seconds)
  done (took 5.669855332 seconds)
done (took 50.656273378 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677560127 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.676594717 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.676338386 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.677220206 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.677014295 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.676986936 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.67721866 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.677749397 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.676546881 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.676363884 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.676347321 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.676140429 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676565569 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.677139272 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.67695757 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.676846891 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.676248289 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.677233071 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.677337856 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.677842422 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.676669664 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.678170662 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.67709067 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.67744362 seconds)
  done (took 41.861956265 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.678121813 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.677498302 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.677950933 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.67760814 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.676993514 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.677785571 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.678686362 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.676701348 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.677268697 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.677639638 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.677796936 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.678896209 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.678712841 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.678243611 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.67866672 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.678302944 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.677621631 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679115536 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677852023 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67916261 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.679056164 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.678904638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.677721622 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678298088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.678799871 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.679440533 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.67869237 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.679737087 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.678836964 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.67880317 seconds)
  done (took 51.964523963 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.683119613 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.687613227 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.679450301 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.68013395 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.680481309 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.679449785 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.679303836 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.67989584 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.679222507 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.679849266 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.679658319 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.679658875 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.680684816 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.679603468 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.679849086 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.679350337 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.681490178 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.682048951 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.680149493 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.679020413 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.680448286 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.679916004 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.679871354 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.680301658 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.680726057 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.680311164 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.681319731 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.68052552 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.680528251 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.67951335 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.679938448 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.681426171 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.679500704 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.681654134 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.681673769 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.681020424 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.684163764 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.689524716 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.6813835 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.68166368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.680368124 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.681840119 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.680593156 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.681298307 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.681637955 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.68095555 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.682049557 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.681666473 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.681563726 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.681999387 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.682204325 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.682476134 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.681326233 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.681766168 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.681779976 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.682218122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.681653487 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.681975371 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.681206796 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.683234838 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.684109198 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.683352202 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.683337042 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.68288947 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.683788983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.684335113 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.684471021 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.683687495 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.683518615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.683980479 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.683478461 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.684322546 seconds)
  done (took 122.693763987 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.684155115 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.684201347 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.684201771 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.683700358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.684857491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.682980477 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.683190333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.683510465 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.683806802 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.683227708 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.683530659 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.684495162 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684928155 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.684107033 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.684206626 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.684243671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.684388336 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.684163937 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.684853535 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.685106134 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.683808792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.684686161 seconds)
  done (took 38.672189311 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68590752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.685074764 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.684893372 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.684772033 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.685336133 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.68463696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.684204979 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.684202187 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684528823 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.684190242 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.684732752 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.684673001 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.685096806 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.684690826 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684885218 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.686033795 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.685780166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.686507955 seconds)
  done (took 31.95261786 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.685023687 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.685796877 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.685132606 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.686256094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.684674085 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.685430742 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.685749084 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.68478037 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.685685982 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.684838247 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.686296506 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.686133366 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.684966974 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685395274 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.686399161 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.685746172 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.686156969 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68623305 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685805672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685858902 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.687597117 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.686204839 seconds)
  done (took 38.709541237 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.686862817 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.686603566 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.687048101 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.686815682 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.686198761 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.685732414 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.687382077 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.68727155 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.686694983 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.688432389 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.686791771 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.686341292 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.686596631 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.687819951 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.687642385 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686966332 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.686065064 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.687346433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.68769552 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.687832073 seconds)
  done (took 35.364189105 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.688803787 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.687555853 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.68948343 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.687823877 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688939825 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.688898712 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.689417744 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.688509452 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.689133754 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.689170648 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.688696752 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.689063564 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689440762 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.688879928 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.689994919 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688874646 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.688689955 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.688914141 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.689956105 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.689253867 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.689190739 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.688743184 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.689044568 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.690156163 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.689862912 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.688832582 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.688762516 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.689327179 seconds)
  done (took 48.919018955 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.68814491 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.688356955 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.688760662 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.688080153 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.68948596 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.68875181 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.688077197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.689086007 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.689638284 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.689641625 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.688561916 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.688674755 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.689231382 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.689774819 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.688988156 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.689701368 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689082391 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.689353269 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689727687 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689855567 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.689153969 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689715747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.690151541 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.690034896 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689766936 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.689395095 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69056789 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.690503384 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.689729817 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.690033839 seconds)
  done (took 52.306069035 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.710151018 seconds)
    (2/2) benchmarking "in"...
    done (took 1.711781312 seconds)
  done (took 5.049152131 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.690286669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.69181173 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.691058542 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.69091565 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.691767058 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.690979426 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.69127572 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690022182 seconds)
  done (took 15.156700452 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.69133912 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.688866141 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.690196165 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.690611587 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.690906261 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.691602143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.697796659 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.691089925 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.692276167 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.692224847 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.698764932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.699218317 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.694462671 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.693501061 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.691409451 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.695096826 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.69090639 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.691287654 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.691471901 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.691764738 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.691642324 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694990637 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.695558353 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.691815108 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.694086648 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.70321352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.696953759 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.691462532 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.692842925 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.695891787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.693791856 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.692283867 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.691151949 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.692685295 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.692089778 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.693335361 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.700293649 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.694207819 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.698659083 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.692383184 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691803263 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.692005639 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.694442108 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.695425801 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.696580398 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.693297844 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.692921663 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.693196612 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.694600048 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.6985629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.702287613 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693768101 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.692348533 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.698977793 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.695989322 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700001821 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.694496231 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.697247602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.704059429 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.704464512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.706517215 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.702601957 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.695926798 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.693708868 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.704920073 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.720803059 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.700317562 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.693226794 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.694296755 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.693962954 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.703521517 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.707592183 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.704884722 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.693491263 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.694288403 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.694449174 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.695997295 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.693742836 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.701677566 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.698554479 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.693691218 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.695894605 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704988332 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719401767 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.696500778 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.695086612 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.694246872 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.694891052 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.695808294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706176637 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.695345518 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.694584075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.694569062 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.695939187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.697233347 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.695308915 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.693938118 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.697322108 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.695368779 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.694232517 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.695170885 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.698830884 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.705640335 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.694469447 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.696350996 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.703021965 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.696009156 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.69733405 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.702595987 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.694926676 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696653167 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.696944181 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.702889326 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.696518679 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.699914465 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.706099541 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.694738214 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.698788536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.695494068 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.695731643 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.706488191 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.724259959 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.696171136 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.696251422 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.70154488 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.708125569 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.697441612 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.700370708 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.696912183 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.696899448 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.696661933 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.699771527 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.697673849 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.698088925 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.696375528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.700030403 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.698368686 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.698664171 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.699490867 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.70008195 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.700038435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.69756118 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.700075966 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.70125637 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.697660843 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.701910834 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.708555792 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.699672744 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.70252461 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.701221026 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.699269099 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.698336368 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.699779381 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.697929909 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.69800456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.698379846 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.699646872 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.698028946 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.696309152 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.698377024 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.697159956 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.698597661 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703686716 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.698066239 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.703154258 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.700291403 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.697147502 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.698497743 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.698148718 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.69776296 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.698367725 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.697846616 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.702640607 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.707692637 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.698549663 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.698236551 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.701335326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.699173512 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.699746897 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.698578557 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.704274085 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.70924079 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.698999968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.707458505 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.698802621 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699303894 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.698674622 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.701123483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.701598769 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.699666498 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.703264103 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.707828485 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.711991607 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.709796235 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.701188491 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.704450345 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.701240236 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.704001657 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.705152356 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.699459158 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.70040118 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.699803081 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.701628226 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.700124493 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.7024277 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.700987138 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.700483155 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.700102385 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.70107475 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.699817582 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.700603554 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.702857264 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.702125245 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.70029203 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.700271517 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.700413765 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.701580884 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.700829082 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.699799402 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.702750985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.701178988 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.701054551 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.707751583 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.700214185 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.70500263 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.703994454 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.702628288 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.701791319 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.700936462 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.70405862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.703344928 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709673462 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.703463562 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.701789198 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.709768085 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.703786684 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.701684668 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.706285744 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.70218056 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.700220771 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.705720639 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.709544344 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.70020363 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.702134385 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.703159997 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.703101145 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.702756785 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.709611235 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.700839964 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.702445337 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.702648239 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.70346783 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.702045966 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.704484969 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.704184184 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.703044709 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.707113449 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703031226 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.702877475 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.704975399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.702977578 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.703503922 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.702196684 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.7055018 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.711625491 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.708259093 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.702614685 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.705712287 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.703615125 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.706201985 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.704055369 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.703620868 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.70340258 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715349312 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.711351689 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.71067981 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.705773969 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.702971511 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.709595257 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.705448278 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.70822423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.704767726 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.704921699 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.704424652 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.70593738 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.704646352 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.70508002 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.704129179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.706930171 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.706121789 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.707912979 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.704277532 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.705416445 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.705177985 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.704252732 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.703981758 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.70485779 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.704309072 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.706918578 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.708146703 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.70494283 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.70646743 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711625349 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705771833 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.707622503 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.705895325 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.705395741 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.704969027 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.706085486 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.705535949 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.708545437 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.712429679 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.709629772 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.716096375 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.707352526 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715340852 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.704141173 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.710284667 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.712997513 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.704895051 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.705088685 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.705742574 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.704504879 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.712722845 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.70593154 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.706777657 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.709980579 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.705025569 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.705518137 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.705347857 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.705391906 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.705644467 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.705888266 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715460517 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.708712523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.71199425 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.709789107 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.70563846 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.706393658 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.706350375 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.706961052 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712545271 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.706822113 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.708951573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.706830807 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.707678298 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.706357228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.706632629 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.707092208 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.705774212 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.70743738 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.713863914 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.708203926 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710554509 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.707049739 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.71635534 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.706631979 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.714064224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.708776684 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.708039816 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.707525984 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.707427437 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.709728825 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.707185053 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.709005005 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.706977233 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.708714303 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.710984142 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.707651417 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.709831023 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.709639765 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.707520814 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.708140139 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.717048747 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7321742 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.709413658 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.711832973 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.707373843 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.710607042 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.712599061 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.707718693 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.707922497 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.711934115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.719340261 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.716853681 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.709574921 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.708830368 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.709665599 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.70832791 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.707125614 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.707884934 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.709625113 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.708602805 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.709680433 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.707985586 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.713774251 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.710102084 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.710149273 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.71093593 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.708995848 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.720907172 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.710201694 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.711150784 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.710635294 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.708338125 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.710990097 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.710628402 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.711126066 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.711617241 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.710557494 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.711570165 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.717099757 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.718233155 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.714844406 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.710839464 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.70964101 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.711759865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.71017901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.709725211 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.709409349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.709153013 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.7109584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.708989354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.7106152 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.709407592 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.709472424 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.71168974 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.709056946 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.713153945 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.718310568 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.711537187 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.709312662 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.710794132 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.709311883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.709849586 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.711642854 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.71877439 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714294777 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.722604041 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.720475307 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.715570494 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.711476136 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.714745548 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.720094636 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.71084474 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.713813365 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.71308457 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.714959668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.713053575 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.718024757 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.712362849 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.719997579 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.712013462 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.71027405 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718843107 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.71341779 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.71011226 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.713834401 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.716895417 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.712692286 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.710924351 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.711845413 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.712860174 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.719397547 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.715436607 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.713940983 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.715620351 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.711185894 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.714747176 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.716721066 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712306344 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.715042128 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.711439328 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.715424303 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.712599847 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.713311048 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.711649669 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.713776573 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.713472016 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.716992859 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.720408828 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.711820575 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.715830246 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.713959609 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.713482169 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.713085661 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712901035 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.713317582 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.712708372 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.714001736 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.713828026 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.715047798 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.717078983 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.713557669 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.715305552 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.716748183 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.714158402 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.721972566 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.725247568 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.722164153 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.71347047 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.714840953 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.714461127 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.71859662 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714359031 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.713530278 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.715464106 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.716737188 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.714013132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.714834921 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.714167041 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.718160297 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73126475 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.715339916 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715909477 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.715652816 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.718691683 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.715271099 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.714769023 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.714908347 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.717596531 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.718203605 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.722626554 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.7156564 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722144854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716503036 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.716456695 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.719463959 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.718767371 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.723689394 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.720629741 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.716021165 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.716226734 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.719824562 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.733346659 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.714758953 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.72488559 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.746594964 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.716132425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.7170498 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.716272571 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.717114499 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.715344352 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.718149754 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.717074193 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.716583729 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.716519709 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.715494257 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.717910616 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.723711069 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.720651718 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.716581981 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.715519786 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.717850708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.717593737 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.715619535 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.716774915 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.717018902 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.716922406 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.716744172 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.716896061 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.717777972 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728311099 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.727414166 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.715474924 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.717083023 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.715856833 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.72225794 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.720751219 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.728051874 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.725095783 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.717407175 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.716659546 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.719638225 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.717338689 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.716654061 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.718966615 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.718370798 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.718126099 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.718467893 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.729417979 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725857088 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.724859281 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.719174573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.718580015 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.717895486 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.721051951 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.718620424 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.71927172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.721759566 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.718587915 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723406413 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.718835649 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.719195381 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.722396779 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.727809538 seconds)
  done (took 1019.008201171 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.719100795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.719269088 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.71900747 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.719541484 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.718618719 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.718827731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.718789253 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.718542459 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.718294809 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.71820048 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.719049 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717829353 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.719337914 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.719692346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.719459387 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.720280342 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720157771 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.719175697 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.71864472 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.719184086 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.720400126 seconds)
  done (took 37.756841663 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.719266903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.719143569 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.719150549 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.720549236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719745602 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.719853523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.719706596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719884921 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.72085002 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.718973454 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.720559402 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719639401 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.720855817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.720279095 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720568967 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.721574131 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.721582318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7214742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.719530016 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.720367086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720787519 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.720661982 seconds)
  done (took 39.501132644 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.722141572 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.721037384 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.721941119 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.721128525 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.721925651 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.720950731 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.721178976 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.722222689 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.72138909 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.722338945 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.721360284 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.723436893 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.728854633 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.728893491 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.724465833 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.720532241 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.866017351 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.721132193 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.722772317 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.722118168 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.72096213 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.728424141 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.721816215 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.722216872 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.7216461 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.721865034 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.721828281 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.721661619 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.721378578 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.723747223 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.726398974 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.721094651 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.723857378 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.7271381 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.725473849 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.724603368 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.728888327 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.725141999 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.723982071 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.722681189 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.731795625 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.745217241 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.722421598 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.729412626 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.721365166 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.721912614 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.726410904 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.7304091 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.721936614 seconds)
  done (took 86.28043242 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.723267818 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.723342399 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.723567414 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.722886371 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.722093187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.72412021 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.723763922 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.723353395 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.721788299 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.722484622 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.724506914 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.725043803 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.720440877 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.721002345 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.720762 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.72117635 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.721882835 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.721405724 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.720579248 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.721696387 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.720567285 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.719876249 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.721169869 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.722489723 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.720321401 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.720922726 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.720918119 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.721308001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.721940032 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.721129635 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.722212896 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.721043908 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.722102011 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.721843624 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720504903 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.721604933 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.722943241 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.721854683 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.721811801 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.721958124 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.723958708 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.71908591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.719958343 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.719585133 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.720289157 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.719496344 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.722406022 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.719504611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.719970057 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.720538385 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.720065536 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.720893397 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.720185685 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.72071614 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.7191191 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.719474908 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.720956827 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.718912865 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.719363236 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.720515207 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.719493903 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.720872741 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.720716766 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.718962567 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.720248143 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.72125717 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.72057723 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.719561017 seconds)
  done (took 118.704666159 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.72071533 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.716953975 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.716172838 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715558802 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.717559044 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.715936282 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.716561394 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.715100858 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.714494829 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.715385576 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71334644 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.714733823 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.714721707 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.713286724 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.713253629 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.713236116 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.714117605 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713478957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715757378 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71361243 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.713062067 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.714387319 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.714456194 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.714058268 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.714608029 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.713429253 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.714014574 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.713399313 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714237597 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.714345383 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.715667729 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.714544563 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.713394634 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.714412475 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.714686159 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.71387364 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.713857565 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.714347505 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.713253601 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.714600235 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.714654841 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714633534 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.71468147 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.714486552 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715164356 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.71395218 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.714247931 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.716325786 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.713984959 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.716001783 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.715965706 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.715864017 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715031583 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.716270015 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.715775675 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.716452085 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715868982 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.714921536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.714488149 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.71645298 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715464993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.715015442 seconds)
  done (took 107.981073237 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71450553 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714555187 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.715506137 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.715380492 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.712910332 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715467618 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.715297507 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.714427224 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.716233597 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.714880009 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715318729 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715243571 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71568946 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715822372 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.714562925 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716292173 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.714839635 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.71541515 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714895043 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.718189951 seconds)
  done (took 35.9566584 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.71433959 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.715704092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.716113939 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715755697 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.716265251 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.715276773 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.716516619 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715037663 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.715825301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716128646 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.718842949 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.716337273 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715816142 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.716303005 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.716593524 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.716111738 seconds)
  done (took 29.10855783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.717154682 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.715687411 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.71577272 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.71585 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.71591614 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.717047422 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.715838826 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.716825417 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.716047699 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.716832443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.71655657 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.71619232 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.716240564 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.718208551 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.717357636 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.716210273 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.717859663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.711911981 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.711382452 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.711978256 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.712883628 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.712743087 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.711715369 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.707929817 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.709515288 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.710142239 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.709010041 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.709474966 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.711136528 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.708825851 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.708634378 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.709117207 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.709695227 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.708403522 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.709835977 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.707392636 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.708017526 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.707848078 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.708522741 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.708032287 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.710341089 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.708667656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.707812539 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.708766206 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.708156928 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.711260736 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.704593033 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.706512968 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.705888159 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.706745757 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.70388833 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.705526702 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.705909534 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.705538746 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.704836335 seconds)
  done (took 95.76462231 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.705594677 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.709993347 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.706145922 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.704817941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704981122 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.707028999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.70488893 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.704246407 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704978468 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.704761938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.704929444 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.705461466 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.705076926 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.70771915 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.705482637 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.706277288 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.704807935 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.706503958 seconds)
  done (took 32.340873474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.705960898 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.705702174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.706776081 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.705602405 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.706917947 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.706744193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707089909 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.706736887 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70856808 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.705811259 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706035695 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.705971415 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706340036 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.706284461 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.706896203 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706451297 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.705491444 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.707883361 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.702608249 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705272398 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.706192549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705015741 seconds)
  done (took 39.172566219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.707602859 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.704718902 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.719762317 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.729374218 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.725727754 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.744933965 seconds)
  done (took 11.96902568 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703788553 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70225304 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.703118361 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704040988 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702059384 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70518552 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702320885 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701626536 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701951996 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70239951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702879398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705492904 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.701746812 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701602142 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702626185 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701181562 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702368436 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703149314 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701617058 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700100138 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702056563 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701848467 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701438415 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70445833 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700345842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700187724 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699844082 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700837566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700166821 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.701406737 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698785846 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.699101883 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698767423 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698825649 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70084892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695063768 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696613353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69670012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698006919 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697330628 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69939168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695343021 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697861762 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696930236 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698553885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697040367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697079558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696294187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695301829 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696732653 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696807111 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697295867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700430375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696757477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696511179 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69661236 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69645714 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697742229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698072553 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695620409 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696490611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696679707 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.697606376 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698528402 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701173025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694686486 seconds)
  done (took 113.810822706 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694297214 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.695459611 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694508345 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696513128 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693772773 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693946656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693339902 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.695318821 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694313703 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696608139 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696047529 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695941538 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696295502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696620407 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696430298 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698779955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69565031 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695331053 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694072008 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695553733 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695714557 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.695233104 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695910533 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696165068 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697093784 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694550908 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696047028 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695810649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693704072 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696195643 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694677942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694930118 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695008967 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.692957644 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693990064 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694351535 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.694203796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693323836 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693989215 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693574095 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693979337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694053735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694863217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.6929164 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698518168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693727861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694489196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.694255251 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694497534 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.692855654 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693692682 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.693024601 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693773168 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693492885 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693329791 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692703188 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698032365 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692598914 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693099996 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693053396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694110271 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.694674223 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695587041 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693853489 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693379657 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692403119 seconds)
  done (took 113.478412925 seconds)
done (took 2365.101401012 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.742662004 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.704843071 seconds)
  done (took 15.070408868 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.85744451 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.80955918 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.69515175 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.727272678 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.69216459 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.716727005 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.694182859 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.693872067 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.695771677 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.696303117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.696220616 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.881880488 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.753501974 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.691957199 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.697369731 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.785889411 seconds)
  done (took 49.414524029 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.696579037 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.697293881 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.706215825 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.701648966 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.696716674 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.707589778 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.724921694 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.70117948 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.730089059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.709175229 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.762217867 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.704458612 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.693996828 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.745493537 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.706403018 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.708776443 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.787337927 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.768587878 seconds)
  done (took 32.572027722 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.773530351 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.702341322 seconds)
  done (took 10.105363246 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.712086901 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.744629379 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.697778518 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.703968389 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.692132773 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.722862725 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.709932289 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.724831921 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.694974977 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.721179227 seconds)
  done (took 68.750325797 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.698253889 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.694284147 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.695355698 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.692730723 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.690605641 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.695850846 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.69316776 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.69486645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.34341744 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.727801146 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.697867854 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.697256021 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.691803102 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.692324845 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.688437673 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.713353452 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.80207888 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.691100932 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.688542927 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.69660183 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.692828454 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.753802048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.70875905 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.690525597 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.723232185 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.346214573 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.699432688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.698939257 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.809905643 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.689014646 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.692104685 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.876102661 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.694720578 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164803787 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.955253823 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.69653709 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.708876294 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.698483915 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.688095674 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.812070636 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.694652627 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.696776676 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.684030074 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.93462931 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.781915765 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.733400676 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.008378853 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.708135337 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.69356478 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.721958264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.695614858 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.694129694 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.70586194 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.209656244 seconds)
  done (took 123.071919702 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.692310597 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.035376891 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.855820828 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.691950029 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.971593767 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.89648383 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.692452583 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.737211204 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.696200962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.91938421 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.943237039 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.796967619 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.691246374 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.691099663 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.688171374 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.688402659 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.841712325 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.762930349 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.691318624 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.688864434 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71514211 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930990084 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.811273882 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.691856974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.715328571 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902954274 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.809085065 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.792324267 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.417952717 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.694334121 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.751971323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.691487847 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.693942082 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.688979868 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.846055613 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.786914961 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.770046107 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.692228872 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.690692082 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.691002367 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.347521728 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.890007524 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.784258423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.822956274 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.940619936 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.893384508 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.469419986 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.690803284 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.426341296 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.852278779 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.917604181 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.920799413 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.808579701 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.692127587 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.037882937 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.689709248 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.690758483 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.941519647 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910401113 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.786538069 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.693628053 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.692462172 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.692338146 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.929928514 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.692991919 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.785270336 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.694290363 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.691133943 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.789036416 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.789501847 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.922316417 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.90352015 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.720790076 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.030353291 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.189901768 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938356034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.758200653 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.941010018 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.693959173 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.695109844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.768327412 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.529268063 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.944517462 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.933963459 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936301374 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.727367575 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.412945756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.69167771 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.917620813 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918439197 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.951683665 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.938893741 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.926022831 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.010648366 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.693962002 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.696671631 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.020227686 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.815994643 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.694192402 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.034536571 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.922038586 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.407713133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.718347745 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.992437852 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.819959046 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.693098498 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.322928515 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.6944836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.919605709 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.734450926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.699089841 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.694874858 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.910350926 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.679674611 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.697301635 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.345455341 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.75462637 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.698301201 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926514518 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.696025076 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.962796642 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.695212535 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.924020453 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.112323911 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.722383519 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.867907112 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.939901816 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.698218185 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.934248229 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.933548079 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.806398169 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.91063953 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.400260068 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.695712759 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977799854 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.695797241 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.694972349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.862241507 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.696368769 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.834683086 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.697618073 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98836461 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.714480721 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.922769325 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697401158 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.945993245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.724419202 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.746767542 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.695303695 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.814049598 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.698134275 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.512321518 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.850928942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69804863 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.694304983 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.243801452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.697389753 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.841862627 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.9208657 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715084094 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.181265726 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.356721012 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.693834917 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.780291409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.716869591 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.081136435 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.696043405 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.946945338 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.6989791 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.693590299 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.696727917 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.928846704 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.876573018 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.699142054 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.69560483 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.600200458 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.694927294 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.695252699 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.87708787 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.012974786 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.695151943 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.896278575 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.696984911 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.821858299 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.698809875 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.770481628 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.027744024 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.694843694 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.695197558 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.697739858 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.698891824 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.695649257 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.905703651 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.720407366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.196395076 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.832548951 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968101274 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.008446493 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.937983729 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.73724678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.699166086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.949441558 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.699148559 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.758336853 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.697991222 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.717060663 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.923816189 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.699053338 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.902230341 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965366339 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.539233387 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.744958043 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.697728111 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.697960723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.697361457 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.843032304 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.78189013 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.698363913 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.69879326 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.811843698 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.816852354 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.90546995 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.699671909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.813125598 seconds)
  done (took 863.401932642 seconds)
done (took 1164.011589695 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.698602881 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.700358341 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.699777226 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.702236357 seconds)
  done (took 28.432124394 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.701862259 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.699490329 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.701021841 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.70074919 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.701445332 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.699571561 seconds)
  done (took 11.834783083 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.698756349 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.703601395 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.701480223 seconds)
  done (took 20.73608347 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.772601135 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.080252579 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.833753475 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.119947548 seconds)
  done (took 9.438711091 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.701399164 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.701947045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.700708761 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.706432151 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.700344995 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.701472089 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.701299398 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.701587028 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.703738305 seconds)
  done (took 16.953482763 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.694609391 seconds)
done (took 92.723098058 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.081172765 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.041285045 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.115016038 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.053719971 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.713973267 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.877717951 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.809412428 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.80791296 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.734123979 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.728587204 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.807095068 seconds)
    (12/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.713930877 seconds)
    (13/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.92232009 seconds)
    (14/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.861062786 seconds)
    (15/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.630141999 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.878968522 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.819679744 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.736992013 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.712866953 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.949422942 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.268121412 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.941569112 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.093798994 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.804123003 seconds)
    (25/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.855271404 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.092649452 seconds)
    (27/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.908541239 seconds)
    (28/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.743041534 seconds)
    (29/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.880403217 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.157558997 seconds)
    (31/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.820728027 seconds)
    (32/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.845565722 seconds)
    (33/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.207301602 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.600377339 seconds)
    (35/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.84649519 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.689193453 seconds)
    (37/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.946440887 seconds)
    (38/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.962069103 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.102431415 seconds)
    (40/309) benchmarking ("sort", Bool, false)...
    done (took 1.935060017 seconds)
    (41/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.714816128 seconds)
    (42/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.822085219 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.077047851 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.49233159 seconds)
    (45/309) benchmarking ("sort", Int64, false)...
    done (took 5.443142076 seconds)
    (46/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.829398582 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.460871643 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.964546516 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.043109735 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.332999451 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.040473125 seconds)
    (52/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.869531355 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.720350329 seconds)
    (54/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.730944223 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.108351326 seconds)
    (56/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.85431064 seconds)
    (57/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.969754409 seconds)
    (58/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.777126399 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.735980966 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.957481553 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.804168908 seconds)
    (62/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.798594105 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.839812397 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.983953082 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.726086618 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.826159231 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.938441154 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.79533086 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.717867834 seconds)
    (70/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.737212541 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.958411458 seconds)
    (72/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.738881482 seconds)
    (73/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.816152616 seconds)
    (74/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.719715142 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.714150499 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.626553767 seconds)
    (77/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.975489487 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.721545889 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.777080185 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.847785683 seconds)
    (81/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.795296044 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.718476399 seconds)
    (83/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.891720465 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.719388074 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.960459644 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.723176296 seconds)
    (87/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.720657868 seconds)
    (88/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.096621317 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.745250224 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.719254167 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.834998192 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.720901638 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 3.193336486 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.677730557 seconds)
    (95/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.758958233 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.722784613 seconds)
    (97/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.03641128 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.916984531 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.221520675 seconds)
    (100/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.979155215 seconds)
    (101/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.794291025 seconds)
    (102/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.128046038 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.026318015 seconds)
    (104/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.606755339 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.72298211 seconds)
    (106/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.737701365 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.717409212 seconds)
    (108/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.718496906 seconds)
    (109/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.726757523 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.719652948 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.903026886 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.736434157 seconds)
    (113/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.868813481 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.033781324 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.721735678 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.110408921 seconds)
    (117/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.722657305 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.376731955 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.725737292 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.994684926 seconds)
    (121/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.727577848 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.663209492 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.940612613 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.938455702 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.093533358 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.750575159 seconds)
    (127/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.819900805 seconds)
    (128/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.594326579 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.816468589 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.03780079 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.663321922 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.351076343 seconds)
    (133/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843137757 seconds)
    (134/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.758975303 seconds)
    (135/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.96332913 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.780978762 seconds)
    (137/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.86586679 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.847515572 seconds)
    (139/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.746152508 seconds)
    (140/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.106339914 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.727742121 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.650221362 seconds)
    (143/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.79977405 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.97385191 seconds)
    (145/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.723465915 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.178366385 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.741974884 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.397732955 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.629871377 seconds)
    (150/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.843792026 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.849835412 seconds)
    (152/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.743602395 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.733629473 seconds)
    (154/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.89226662 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.855418229 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.61344936 seconds)
    (157/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.506985051 seconds)
    (158/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.858213676 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.730017034 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.935542146 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.411347046 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 4.604040392 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.212741492 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.750563596 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.758761857 seconds)
    (166/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.755212773 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.13415935 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.39788838 seconds)
    (169/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.809406604 seconds)
    (170/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.08146037 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.753259805 seconds)
    (172/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.885482493 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.729778646 seconds)
    (174/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.045999131 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.727877574 seconds)
    (176/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.143572803 seconds)
    (177/309) benchmarking ("sort", Float32, false)...
    done (took 5.448244113 seconds)
    (178/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.040806898 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.031384287 seconds)
    (180/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.729190607 seconds)
    (181/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.295602169 seconds)
    (182/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.991872209 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.067753281 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.867214628 seconds)
    (185/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.878724934 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.955964113 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.037865326 seconds)
    (188/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.815437156 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.727409823 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.816928651 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.85216191 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.856717259 seconds)
    (193/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.17472273 seconds)
    (194/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.810483464 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.746678625 seconds)
    (196/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.009443735 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.082357377 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.571347782 seconds)
    (199/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.730181774 seconds)
    (200/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.822998956 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.14558418 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.731599347 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.80987085 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.886965415 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.10283229 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.405417711 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.791057254 seconds)
    (208/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.855116276 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.894944058 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.914559664 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.809658502 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.955185348 seconds)
    (213/309) benchmarking ("sort", Float64, false)...
    done (took 5.459916359 seconds)
    (214/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.824717926 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.245739157 seconds)
    (216/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.058112286 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.838973849 seconds)
    (218/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.807240306 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.46575783 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.927897957 seconds)
    (221/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.905484496 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.92904872 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.909838035 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.731202975 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.122841433 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.942130848 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.830362407 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.825729906 seconds)
    (229/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.756122985 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.631325721 seconds)
    (231/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.026559828 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.731053263 seconds)
    (233/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.751604218 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.032489717 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.109182165 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.741057649 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.727454305 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.084854216 seconds)
    (239/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.189421374 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.478493638 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.732092124 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.773127801 seconds)
    (243/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.061483905 seconds)
    (244/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.737260911 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.672178014 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436925269 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.988559372 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.736546318 seconds)
    (249/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.054589525 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.893072969 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.729775875 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.813653872 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.352307134 seconds)
    (254/309) benchmarking ("sort", BigInt, false)...
    done (took 7.175165458 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.741052092 seconds)
    (256/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.210776319 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.904045756 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.733297138 seconds)
    (259/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.837370093 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.760125942 seconds)
    (261/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.967726578 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.064669151 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.862503567 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.754354119 seconds)
    (265/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.747449992 seconds)
    (266/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.731451479 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.640317037 seconds)
    (268/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.265141108 seconds)
    (269/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.868255133 seconds)
    (270/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.820432916 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.057105289 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.740681379 seconds)
    (273/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018894953 seconds)
    (274/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.207265932 seconds)
    (275/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.795004268 seconds)
    (276/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.924364824 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.500959323 seconds)
    (278/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.729316844 seconds)
    (279/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.881503552 seconds)
    (280/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.851681284 seconds)
    (281/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.817242908 seconds)
    (282/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.83500861 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.733861015 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.990237286 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.804812722 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.396992625 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.503155286 seconds)
    (288/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.876145994 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.135258538 seconds)
    (290/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.8377994 seconds)
    (291/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.028607973 seconds)
    (292/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.846173359 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.9950257 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.119384192 seconds)
    (295/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.735495821 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.839272659 seconds)
    (297/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.970304439 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.790089897 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.861514413 seconds)
    (300/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.730978723 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853168595 seconds)
    (302/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.85901345 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.031123972 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.949421844 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.06814283 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.729945697 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.048060239 seconds)
    (308/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.902378357 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.79891345 seconds)
  done (took 959.125674444 seconds)
done (took 961.056568174 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.75645561 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.751396456 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.732465882 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.752794856 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.843995122 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.777437126 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.745543807 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.735078859 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.78276513 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.783272121 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.730257998 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.779399939 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.734600204 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.734412492 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.732053491 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.748378242 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.040253443 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.763943328 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.752887338 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.747808589 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.752267405 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.731952611 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.78232227 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.777334237 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.736987572 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.740783241 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.736659336 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.752830224 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.848163192 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.735954134 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.740355966 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.745678359 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.040131844 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.761225736 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.731412424 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.754173775 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.746352983 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.747022816 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.737458807 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.767084267 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.131445912 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.772609867 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.733307821 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.734332809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.734838936 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.739594838 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.735000612 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.742415401 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.750787987 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.749792192 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.121964274 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.791425356 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.739103851 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.735248491 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.750376086 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.73652626 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.739642021 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.754958196 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.75828404 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.752650878 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.025704649 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.770959773 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.74173225 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.753625798 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.747780249 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.158523058 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.778142781 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.74738627 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.133727937 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.788411867 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.160682715 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.787973527 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.740926252 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.753005699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.771922007 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.047850948 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.768026397 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.738607654 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.749524022 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.737137695 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.75455 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.755625554 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.745528267 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.738990327 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.756808166 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.785821651 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.754077453 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.740623426 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.752439478 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.761312513 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.750589954 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.751929677 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.745145453 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.738852831 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.752577484 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.744992915 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.743383822 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.74462131 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.746172437 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.754738136 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.13329987 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.797054099 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.737354614 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.73767398 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.741741945 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.75706656 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.132802981 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.781500623 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.764600667 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.792356736 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.743138261 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.033238704 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.773892663 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758640925 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.75432348 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.74475776 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.740369894 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.031670161 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.158118481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.795331562 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.742495648 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.739794292 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.759711623 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.743907459 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.73874774 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.049642788 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.773895984 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.757336876 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.866128874 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.755134623 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.775022104 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.741725354 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.748670278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.791658836 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.760317419 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.775754757 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.748187766 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.759108958 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.761277834 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.739176031 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.754755005 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.757959903 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.74388803 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.750971957 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.740457631 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.791456154 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.758437503 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.759051062 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.766402008 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.86602182 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.742088944 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.035062463 seconds)
done (took 273.987499544 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.820392454 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.74293563 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.846747401 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.742280912 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.829128252 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.814921788 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.740627787 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.74221523 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.741344584 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.223865272 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.740963835 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.749755292 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.742321658 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.741352878 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.813685655 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.742324874 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.742242991 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.189744326 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.743101363 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.820300124 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.740866032 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.744009536 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.743663611 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.235008976 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.740720853 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.742029804 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.843227165 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.744563597 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.180813995 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.742757369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.742129084 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.18345352 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.843877776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.769131586 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.753667937 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.749459009 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.831077338 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.753624512 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.811164694 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.811710846 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.836832255 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.777445813 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.74546857 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.742514164 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.74775999 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.744465935 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.745349432 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.777059429 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.744231417 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.752718248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.175208094 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.750659583 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752175911 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.745122543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.748229149 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.772746559 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.745215658 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.74564394 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.823412602 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.747642742 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.812105863 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.233789862 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242946616 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.745469544 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.743291995 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.745406104 seconds)
  done (took 176.795686673 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.810220495 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.821960182 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.81148901 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.748933045 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.792736553 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.811248736 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.750987634 seconds)
  done (took 14.226066188 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.751655346 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.743817101 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.794615928 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.795376196 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.746413519 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.90609129 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.745663479 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.755449729 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75000872 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.773968286 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.746465149 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.745929548 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.754394467 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.746640507 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.797033975 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.756360056 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.861520726 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.750140292 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.748482581 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.896139291 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.750873138 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.754231839 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.772472882 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.757724785 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.748410831 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.752387974 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.389946152 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.748425202 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747510319 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.748796466 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.74804794 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.787187677 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.74717723 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.746361331 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.747060081 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.862920364 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.746889964 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.749201712 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.74713543 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.746220772 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.747831783 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.747474895 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.746138349 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.746085409 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.746399613 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.770143761 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.748958367 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.747760507 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.74498829 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.748006121 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.7739308 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.749230275 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.748085797 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.753527017 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.789189543 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755421591 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.747430346 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.74762814 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.747511818 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.747375841 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.898136105 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.798609792 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.746617071 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.798156842 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.748066339 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.746958864 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.74788915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.748153241 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.83619792 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.749890575 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.796524666 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.747591873 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.91181317 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.770591148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.750139175 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.750920477 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.752788828 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.74882546 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.74825955 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.754286725 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.750266509 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.752184132 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.75528174 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.75440588 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.749485472 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895954151 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888423649 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.749338559 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.751635595 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.756751025 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.748064348 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.792731674 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.749011234 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.749895262 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.808777505 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.86712813 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.775604211 seconds)
  done (took 193.944723795 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.755892836 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.755657158 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.752076625 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.765619738 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.751315663 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.751009268 seconds)
  done (took 12.211489737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.752577446 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.754763033 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.751407829 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.75020755 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.751700748 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.748821412 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.75187566 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.751061572 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.755808365 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.749121563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.75126963 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.750392287 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.75170648 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.750533177 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.750573602 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.75053701 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.751197759 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.750511409 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.750074847 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.749246146 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.00282597 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.751297007 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750531804 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.757958539 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.753609673 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.750127525 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.765012607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.749315997 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.751024211 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.759661511 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.755397336 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.751832712 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.753861042 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.757374511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.756161587 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.755408248 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.755677753 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.752891712 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.752013907 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.752862307 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.753423823 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.750911221 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.751226354 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.753214719 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.753332942 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.760671771 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.757446429 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.765251118 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.751866646 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.754192301 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.753226006 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.753559011 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.752570649 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.753544773 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.758954618 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.759272893 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.756925593 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.752869181 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.751825081 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.755890671 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.756876381 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.753380613 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.7568451 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.756186217 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.758184546 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.753397866 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.757945201 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.756676223 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.752483559 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.751107818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.753789738 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.753318683 seconds)
  done (took 129.201998583 seconds)
done (took 528.074641558 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.007084454 seconds)
  done (took 8.690013587 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.82412121 seconds)
  done (took 8.56712021 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.2543334 seconds)
  done (took 9.941879272 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.769285586 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.806331684 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.769159681 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.761773557 seconds)
  done (took 28.817162863 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.944307797 seconds)
  done (took 8.631041768 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.777133934 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.752420429 seconds)
  done (took 15.284076433 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.915648977 seconds)
  done (took 8.602703137 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.780317966 seconds)
  done (took 8.479131427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.772669792 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.767488628 seconds)
  done (took 15.255807912 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.758911394 seconds)
  done (took 8.449131451 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.917225239 seconds)
  done (took 9.708681478 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.784528736 seconds)
  done (took 8.542399862 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.770034269 seconds)
  done (took 8.45858436 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.772974474 seconds)
  done (took 8.461221902 seconds)
done (took 157.575774426 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.758899952 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.757362452 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.758608472 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.755802111 seconds)
  done (took 28.719694391 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.78792843 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.788667615 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.790679866 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.801756785 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.789326848 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.789599416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.78089503 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.783006999 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.802117102 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.792014109 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.791756283 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.791430213 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.790191023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.78306098 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.793277527 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.794417416 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.800916788 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.793324423 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.779973436 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.7932691 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.7589602 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.800520743 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.793024761 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.756456729 seconds)
  done (took 44.615718472 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.949951681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.828694017 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.911847321 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.810069934 seconds)
  done (took 9.191392647 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.810994732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.813991725 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.823316307 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.860330761 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.897152536 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.823393861 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.784442389 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.779477008 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.766709044 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.811452666 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.88646409 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.806889982 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.89715339 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.760664772 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.945289982 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.758171409 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.759736052 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.810854071 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.863021136 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.883873455 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.760153442 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.810623271 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.813802654 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.808013956 seconds)
  done (took 45.430273614 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.760781186 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.769796866 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.768117004 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.762893694 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.760754138 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.760189698 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.769033646 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.763358198 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.783987045 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.762271963 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.760726806 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.759958168 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.767103948 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.763561967 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.761441867 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.776411331 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.775299869 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.760089356 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.766366585 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771575412 seconds)
  done (took 37.017446625 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.757538224 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.605649133 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.105119518 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.012111189 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.760069138 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.763304103 seconds)
  done (took 30.69697746 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.772985144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.76691424 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.759383671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817474598 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.903717036 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.767523507 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.760491878 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.772111827 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.806306265 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.826619368 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.779852084 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.790944643 seconds)
  done (took 23.218714764 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.76064462 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.763195077 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.76430649 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.775465458 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.771043854 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.768433827 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.770683094 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.761038281 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.778817292 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.778909849 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.767260029 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.775972856 seconds)
  done (took 42.93506773 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840930255 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.637874275 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20778703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22774749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289729978 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967322394 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.764189663 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847357601 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.763998896 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031612981 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.116765361 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966617563 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.005782738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487177026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.767554722 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.240720129 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050238691 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980251418 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796691486 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447961033 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874304456 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.247359647 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.403667337 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874234248 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968642899 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.886864856 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.028203179 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.71355755 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812836636 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768144332 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770357939 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.766391693 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037131055 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886677827 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836867456 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769867271 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.177878926 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.470890292 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.777561347 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.448102245 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.313854914 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888017187 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767978173 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767488849 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.692082864 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.249011624 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853724178 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.767814103 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.465944579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.767140701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770347708 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840972006 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.764940359 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.571160736 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450044485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.034280382 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.764529973 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765742605 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324927901 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791734299 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345240435 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.695967396 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.852356928 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401477561 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233566344 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.924174788 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.766574052 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766448873 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691222778 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.409808201 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883435757 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902734003 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.784881194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411986291 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058467838 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.18733881 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825914506 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039764557 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.529129632 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.697330203 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.983576458 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.709174056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694652718 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.595008634 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694358365 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979247724 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802168683 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.373918899 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.808085904 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.852096043 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.771309679 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781065745 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767881828 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980660345 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.660774128 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767474295 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.070101157 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02200321 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784421064 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850026027 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.694494707 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.770011792 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011169178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.973818655 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.962719744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246651626 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862736592 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543398974 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.881354458 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.642121694 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.774041258 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.037418766 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835661766 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.792512515 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88964144 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.723353885 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017936679 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.607996368 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.970643666 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.151798721 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012285669 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.114915039 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017471708 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832155068 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770842304 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.770548632 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.476985814 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382207699 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.986902277 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.781045726 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.219574037 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771502556 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.770203258 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706890227 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.4263242 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.155075572 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.853748109 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985549233 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.675378177 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045996582 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698002643 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909075091 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.7794121 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.987146392 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.418151088 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.862885858 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022809824 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.850271976 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.9602492 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895648753 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786605899 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.865869869 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79179915 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.032907847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11750711 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.775859135 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.776254548 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.478904097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.827851093 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781393966 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.777329327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.328363042 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056446618 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.80321879 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.783092196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651443076 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.784645881 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838226019 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776684292 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778095559 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.294951724 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280860399 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.777077881 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.433336864 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995885734 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781048004 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.429203641 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958902574 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.789968306 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050661542 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849581471 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.704512383 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.477272108 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.479294043 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778055884 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.705782563 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779912506 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780382353 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784817407 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.965931281 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056132506 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833172995 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.479655249 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.88655719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782525632 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.77871573 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778970653 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.265137787 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816230277 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.248965592 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884766856 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905935872 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.789799628 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705206815 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.778864733 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779005328 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777420129 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.723937313 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825111085 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.477602878 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982352358 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027170904 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.183708571 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786060081 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.477686729 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.901726898 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.795051732 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.10182472 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268404544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.87402882 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843360006 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.78263922 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.482551448 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514521917 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341018799 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080654 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.097261377 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137221928 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.101475657 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.093447078 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865115861 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005702591 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299348056 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834436128 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.867927358 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713997242 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795262055 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.428607974 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139352663 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787353367 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9983931 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078715813 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.17706398 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921865334 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984890305 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809324769 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.535878516 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798870596 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.31820572 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796554714 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.256559868 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986710082 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862751221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.097444109 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869278832 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.780762608 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122727684 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825431414 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.482915534 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133334789 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.17438964 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.272140775 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017312563 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.790538468 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220214017 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132971275 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.920185208 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.896368088 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709807213 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787015413 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787485547 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.792874119 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.75432737 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.628828052 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.026181352 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788745486 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007602347 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.85149622 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141779457 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.691156058 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.785893753 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782733534 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05136286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417515719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931839854 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.040477302 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.344370109 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790100487 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.709724313 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709618614 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.483366963 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.789919784 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.747788702 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998817536 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.887703325 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.466279284 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.115042421 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085768551 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025431502 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.794560922 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.056489081 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062928139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.277152441 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804727965 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.881596247 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.113359932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.490032978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.001050497 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00953354 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315541866 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000678513 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232851452 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.757151339 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.783573739 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989446652 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997463708 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.174988457 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959831001 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.493104632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.78748538 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145031597 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846224771 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.177012273 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971824915 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.86784578 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790251668 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.860717672 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788756012 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789552376 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790571915 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796002495 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.187775468 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91065086 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.797293498 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861025991 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821784716 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.352063254 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.792630837 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059285946 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153138809 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120321957 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853352024 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784538353 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.796036084 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712295607 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913114425 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.224929041 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057189329 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.905105226 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.919121936 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806651394 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.105334056 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.988202812 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088072703 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.058165903 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.66907883 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373126288 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89531914 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.001352782 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791357899 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.989612037 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005985613 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106518922 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356445695 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.863505439 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.971278759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057629175 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.146511594 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78861636 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363560023 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.791437645 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.184203527 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.822862097 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.176692165 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047380269 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78976637 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905887507 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.78968542 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.989931464 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.237495753 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491673177 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135499944 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644707137 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790891955 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063222586 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124120068 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096190868 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863637685 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792569345 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.479246309 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921669193 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.633613518 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003676374 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788143692 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992518628 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.496923583 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.790362719 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060580866 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096350097 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.791331571 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.652717694 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809008386 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.790170344 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.001490329 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005570981 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03405082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791893641 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.795069416 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.594655443 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065571978 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85387707 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.714639445 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.789872921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833668686 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.015161886 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806056361 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.303013919 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.489223077 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071373965 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.695135094 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806078604 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.140080847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.158645758 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123880733 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.312264022 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009783397 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342414834 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.597983552 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15662747 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.791494519 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.14631117 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159507494 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.790094478 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.247504605 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892119675 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.060639193 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119581651 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.805938491 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549717803 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.826576654 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00347107 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145156485 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.721282014 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.792106194 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.837060324 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.788999824 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.771413861 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797943406 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.698353969 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.174118325 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.622675109 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346089979 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.792312408 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.904159758 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.169315112 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27262603 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887547836 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806663725 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.794034967 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.490293731 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.074820794 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.033616442 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.252727237 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.876685246 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.790268618 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791166649 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.707352037 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.976673752 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.978204787 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076935978 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.088458554 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.888541518 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791709098 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.997387796 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994325233 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.190275541 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923976494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858634185 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894509785 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.730217167 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49513392 seconds)
  done (took 1616.281957047 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801835697 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.800200303 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.803689457 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.807525543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.810340613 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801242822 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.847758469 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.880618745 seconds)
  done (took 56.277562981 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.784264409 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.941997894 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.788896299 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.784699184 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.789002213 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.785129258 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.942094865 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.795615037 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.790960185 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.789525627 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.785095026 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.785580326 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.61223223 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.810205041 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.80409302 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.786171018 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.790228133 seconds)
  done (took 73.292667561 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.787192577 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.254059592 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.821532637 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.786331336 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.860287587 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.80416675 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.87396726 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.79509292 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.791325939 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.044012633 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.089641266 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.812266708 seconds)
  done (took 89.440661072 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.799075377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.788691413 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.789408451 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.789155363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.789172487 seconds)
  done (took 10.683403255 seconds)
done (took 2109.507602716 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.016132154 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.980278043 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.037432226 seconds)
  done (took 5.737860076 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.930117746 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.980680179 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.09372888 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.115000135 seconds)
  done (took 9.84382647 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.068445254 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.166818989 seconds)
  done (took 5.955976888 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.10700315 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.818915816 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.201488427 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.790052685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.793628282 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.794029574 seconds)
  done (took 22.103165547 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.789093402 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.790666702 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.789367834 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.788930717 seconds)
  done (took 8.880216831 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.78696383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.513581153 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.789730485 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.803836799 seconds)
  done (took 20.616175256 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.971717262 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.905620012 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.932458077 seconds)
  done (took 7.53183188 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.999355009 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.582441474 seconds)
  done (took 6.302914887 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.949864931 seconds)
  done (took 3.670590924 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.817338419 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.060244305 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.290954046 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.304641101 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.394237753 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.60660796 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.122106009 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.013861229 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.226870507 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.241905769 seconds)
  done (took 23.801171199 seconds)
done (took 129.30897374 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.131030371 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.819244711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.993811192 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.142329018 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.031628635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.994183043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.00935615 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.137344302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.831216691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.813630617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.147558202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.027693946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.963095896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.809990147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963518494 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.809921867 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.023708639 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.152683059 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.832761191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.048386965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.022112694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.79048223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.985470472 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.810780139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.028187852 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.946585687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.336502654 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.816307173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.975047328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.353130843 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951545054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.191358056 seconds)
  done (took 165.61449119 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.792810918 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.792609939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.791637065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.791928324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.393508192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.793062483 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.791566999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.792154717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.299291635 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.2952328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.793377925 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.350804171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793673909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.792698835 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.794797795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.792359351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.434450196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.793195015 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.793230256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.793344582 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.791450701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.197785345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.794975695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.19654566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.44767866 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.793848992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793675526 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.793242274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.794281104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.794859691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.795960792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.792179543 seconds)
  done (took 207.37888096 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.792573463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.79506651 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.79658071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.794088196 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.795820573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.793691477 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.792782874 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.794140668 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.439824982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43072368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.795342905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.795000151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.795945575 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.795032444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.796128165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.793674692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.793722522 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.793202747 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.795833584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.796182779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.798227505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.521115414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.80352484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.529128132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.795624726 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.795667138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.795296956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794664121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.794942973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.795825948 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.797690528 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.796074656 seconds)
  done (took 217.919395159 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.036592503 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795405676 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.795862184 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.702479473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.795990501 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.795737523 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.78800592 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.041498001 seconds)
  done (took 18.480382309 seconds)
done (took 611.123320241 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.169097964 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.008264009 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.972004101 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.818410872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.080359655 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.871248861 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.813959749 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.879263714 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.629947965 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.893030438 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.479466598 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.839099424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.575085435 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.84381087 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.938432469 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.873873948 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.412762486 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.510217586 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.990215626 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.881750243 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.001042718 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.711630084 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.899219847 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.665822134 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.5992585 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.771538662 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.828341512 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.410286709 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.828879541 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.972851193 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.496530548 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.073272766 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.832093875 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.815864366 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.87181619 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.848360375 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.007914675 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.829302707 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.943654953 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.507506714 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.890019148 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.538732273 seconds)
  done (took 99.552653939 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.808303534 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.802910646 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.803237304 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.803183535 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.811859461 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.803602292 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.802841849 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.804451486 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.803501444 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.803542533 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.803111822 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.812769912 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.804297978 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.813141291 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.804413905 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.804415551 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.803838274 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.813612016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.803759476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.804826822 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.804731501 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.804432804 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.800942026 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.805109311 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.804259736 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.804927976 seconds)
  done (took 48.683042946 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.798810667 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.951379225 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.04616183 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.821010236 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.799813594 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.802442923 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.818550235 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.804331035 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.801619164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.802325626 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.902218759 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.806580304 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.817327329 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.045052218 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.817457888 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.799808596 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.799760378 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.80045149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.957803345 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.816278412 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.820333873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.8045351 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.818474747 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.813098579 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.802720976 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.800927995 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.803063618 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.241557374 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.810009992 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.90131539 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.846441254 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.825860393 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.179769072 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.055679322 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.857430942 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.812216096 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.801305607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905127522 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.806771591 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.802839153 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81957194 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.807906751 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.047605385 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.329785262 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.819354261 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.803881619 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.254117112 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.917785835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.844158851 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.811564402 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.048158258 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.818712495 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.800890362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.80149128 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.837627227 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.810658017 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.802154778 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.119245581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.813930028 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.819595768 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.806484179 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.80276266 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.965702204 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.811370614 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.95336539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.812229206 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.809676996 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.803307446 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.048382174 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820263011 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.339434447 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.817499942 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.802694145 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.904449651 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.957951037 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.279637998 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.816207329 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.968159582 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.197386501 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.828699351 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.810877791 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.231138187 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.83170714 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.810972233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.804261203 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.803702154 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.803246341 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.845503661 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.819326326 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.250758913 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.340293689 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.136630199 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.830384119 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.81916646 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.805030988 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.119644147 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.812694527 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.803266847 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.042666677 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.346278389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.819501986 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.811427862 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.321115354 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.82127396 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.822941298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.813227735 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.05364484 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.822399972 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.846645597 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.804530817 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.812500106 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.80708912 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.824838752 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.81282354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.804512348 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.312466287 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.92618724 seconds)
  done (took 224.232367685 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.805005708 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.807072018 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.803114839 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.807813307 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.80434012 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.805089098 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.803365944 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.805507496 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.804961676 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.803422741 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.804458317 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.80676386 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.807427232 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.805272505 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.810341102 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.806315641 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.407958206 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.803646842 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.803084702 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.806989644 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.447209865 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.807558012 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.804528404 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.806721579 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.80558328 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.806606363 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.805224252 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.807841967 seconds)
  done (took 165.542975563 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.808205961 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.918944972 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.826074639 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.8343277 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.814310064 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.80738616 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.90301931 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.823010431 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.81227131 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.808385928 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.807183773 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.866851182 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.821517191 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.904213384 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.837594601 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.913412574 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.907997127 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.815246548 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.808363983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.807411432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.83479549 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.815228106 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.867137818 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.932421128 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.826696362 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.919298394 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.825867125 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.80812816 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.80734343 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.919569049 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.825571868 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.868264554 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.836516088 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.825240571 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.924379495 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.925116177 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.911925825 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.912485702 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.813700033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.809953228 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.808981867 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.808279987 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.920061141 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.827533362 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.808863165 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.923288775 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.827572053 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.811134849 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.809627429 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.809754652 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.821150821 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.826782002 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.872578059 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.937656207 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.847703956 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.832807769 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.906366099 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.928840702 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.80984595 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.906598942 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.815765 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.920956077 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.831176765 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.809549704 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.810374592 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.812423639 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.838642271 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.913930682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.913689722 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.81643816 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.906988174 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.844687445 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.816185743 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.809302013 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.808765516 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.922317454 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.925226987 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.844900709 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.84634934 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.840689545 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.818968519 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.810311041 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.810864515 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.826724937 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.813533482 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.922852683 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.925220955 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.81617124 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.809554123 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.810269543 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.810698115 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.835133512 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.931892232 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.845745089 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.913587433 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.876820631 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.883925019 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.823717174 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.824366424 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.815866649 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.873657086 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.82488825 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.821639928 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.095803764 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.87095708 seconds)
  done (took 196.303859944 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.179061423 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.860108439 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.866299987 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.125328799 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.16860002 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.733901337 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.859729745 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.861180149 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.882034148 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.051477898 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.922606557 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.876400427 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.845790016 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.832942427 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.855904806 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.878225708 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.867531511 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.195801881 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.076322844 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.985947239 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.846735918 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.157088439 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.170342843 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.457179263 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.906311073 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.25281956 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.419591283 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.991608194 seconds)
  done (took 59.876741629 seconds)
done (took 795.920292264 seconds)
SAVING RESULT...
DONE!
