cset: moving following pidspec: 14587
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.984216918 seconds)
loading group "string"... done (took 0.518763036 seconds)
loading group "linalg"... done (took 9.45422962 seconds)
loading group "parallel"... done (took 0.170709557 seconds)
loading group "find"... done (took 4.093261021 seconds)
loading group "tuple"... done (took 2.066881619 seconds)
loading group "dates"... done (took 1.402324625 seconds)
loading group "micro"... done (took 0.195111333 seconds)
loading group "io"... done (took 0.519040375 seconds)
loading group "scalar"... done (took 57.391219024 seconds)
loading group "sparse"... done (took 14.122079561 seconds)
loading group "broadcast"... done (took 1.342093782 seconds)
loading group "union"... done (took 11.19457621 seconds)
loading group "simd"... done (took 3.955583598 seconds)
loading group "random"... done (took 14.141883196 seconds)
loading group "problem"... done (took 2.262678725 seconds)
loading group "array"... done (took 24.418963543 seconds)
loading group "misc"... done (took 1.162900464 seconds)
loading group "sort"... done (took 3.81735352 seconds)
loading group "collection"... done (took 22.516684559 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.713560642 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148573642 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.17613832 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.229773073 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.279244728 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167933226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162479321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.173295012 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.696421312 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.215342188 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138376256 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.419368064 seconds)
done (took 6.29278402 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.367971794 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.063438444 seconds)
    (2/2) benchmarking "String"...
    done (took 0.172502872 seconds)
  done (took 0.956991318 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.095819866 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161544495 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112635343 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097550883 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093828552 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109858034 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.154794265 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110731749 seconds)
  done (took 1.563348314 seconds)
done (took 3.708935613 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.50739029 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887088016 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.521474134 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.184329236 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.312068524 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.313617675 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.266351328 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.221599549 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094764564 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088979053 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177947977 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.429019919 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.392242267 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.969067854 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069713963 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094130196 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153379421 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786232523 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081789102 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111136689 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537785567 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.216785669 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115555267 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.109099348 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185940474 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134964718 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142842675 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103864185 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.671752393 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136142871 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218073541 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083556226 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.140990555 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165512249 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216508747 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111042054 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679454629 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202027367 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09867421 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103243227 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684716052 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123512425 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211140746 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10772159 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068924337 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.162344737 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.100966331 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094420177 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095577237 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085835077 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163407582 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.485387912 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109897285 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195262261 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094722101 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699214823 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099960058 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.277762417 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126755923 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095173136 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092001294 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087525656 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158325441 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093234133 seconds)
  done (took 20.310566798 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.17248171 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.188709961 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077592269 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157697638 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122539954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098502121 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084131997 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079229908 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12656414 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178574873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13903011 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.172589615 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094850818 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089986444 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172374365 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.236741348 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.131033074 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10600936 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089456208 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107904853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122707574 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095924559 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108244561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093810044 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173171812 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205061761 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109290714 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122860037 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091627155 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096706292 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144047088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144291114 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092176945 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088382538 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169979087 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123441535 seconds)
  done (took 5.350867663 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235687862 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10389771 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.251303117 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.198149988 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132755779 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.200632077 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176573781 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.301809259 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.207216714 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181804055 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131664299 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097751397 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079398365 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079870911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095813301 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.814865005 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.169006338 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.165364255 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166252497 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115547165 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098405251 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.722325863 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100521721 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087391421 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109743285 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066090388 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.224269092 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094896076 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.602211496 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.088448189 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099404819 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099538565 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.19969837 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135303798 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123651967 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12002057 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116880227 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086579795 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218354932 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120080074 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084812462 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084071794 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078611743 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.096872444 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116666232 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128905778 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107762376 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109120859 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.134992864 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088740684 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112123756 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.080601661 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193083003 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.149888893 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.105141932 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273160226 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128406342 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101335162 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111207997 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.827894665 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139214561 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086707953 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098165765 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096506965 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078595679 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.830375078 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11017672 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.268096942 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085090569 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157611803 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096320139 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119036297 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086038525 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085476373 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127954679 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086231286 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100291245 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080317127 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087000938 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096523308 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090916659 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114366708 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101114954 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080209152 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147859725 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114919153 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111040587 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123664329 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.09141791 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085787865 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130067168 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08226535 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104494922 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.168502992 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117226709 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113496346 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115106188 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143414676 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088673357 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.256308432 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098597873 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123415625 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099212826 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112391666 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116163445 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082139496 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082742854 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095870572 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082250124 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147061089 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100827486 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081589844 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088870449 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109392262 seconds)
  done (took 28.112021438 seconds)
done (took 54.49395674 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.420835359 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082515871 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082051286 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103193918 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082726093 seconds)
  done (took 1.568563223 seconds)
done (took 2.338256841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.305351749 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203233805 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087028805 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189209606 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086665351 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197812096 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184255554 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101538959 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.211274771 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085854633 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19322974 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08437295 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10676183 seconds)
  done (took 2.837167771 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106869945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108517012 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104520624 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120697122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0860321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10131428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120503312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107476865 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102018001 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113978321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086268652 seconds)
  done (took 1.929295478 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103276541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107242268 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095115936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118564169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086805312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098711785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117763788 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106301157 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098407207 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113544117 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086898621 seconds)
  done (took 1.906731506 seconds)
done (took 7.444490393 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.214364829 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.032629568 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190520526 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.245967591 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.344682239 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.297828726 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625560485 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.201026611 seconds)
  done (took 16.060161282 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114388359 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096722984 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.188433948 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094860247 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110567412 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095340965 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091103345 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111267431 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091434183 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095305904 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09536052 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.111754924 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096207276 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092046412 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108774376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097041321 seconds)
  done (took 2.531305273 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.137147608 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115174423 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116743268 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099156464 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093956291 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117982531 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102117665 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.096286406 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113268873 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095700927 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102231646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115238607 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097211593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092729599 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.116163655 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.119025402 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092630844 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116342029 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116997839 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098879613 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116278474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098741468 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095799054 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116426397 seconds)
  done (took 3.443835281 seconds)
done (took 22.810912967 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.151378049 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106296548 seconds)
  done (took 1.037354122 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.168173411 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.187983611 seconds)
  done (took 1.141567793 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115946658 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093079783 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140657203 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108466098 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091233179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107832078 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117892924 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108781291 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092120374 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091232411 seconds)
  done (took 1.85822834 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09711647 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095974705 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123504533 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.168650078 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118154271 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093834837 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095607479 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111948384 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.096055162 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090676545 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113300371 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108892339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095669219 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127825892 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095434902 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09576986 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117451668 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095278457 seconds)
  done (took 2.731374849 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093049822 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093489961 seconds)
  done (took 0.975087334 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097030775 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09390412 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094029834 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111944543 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090864837 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090759307 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108006822 seconds)
  done (took 1.476445294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.535503293 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.241848912 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.375220131 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074209926 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125950095 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.324316381 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106022281 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073698408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.093716456 seconds)
  done (took 2.774131054 seconds)
done (took 12.780662542 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094076279 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.446713161 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.619403278 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129911842 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091193301 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147802454 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.339167152 seconds)
done (took 2.661503812 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359698325 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.166887632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085353522 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091376844 seconds)
  done (took 1.490250192 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085681426 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102717671 seconds)
  done (took 0.983983927 seconds)
done (took 3.273139343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092745243 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111010834 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108510726 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089193186 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.089538132 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.090299821 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.107854288 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089443218 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089099668 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087974735 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10913399 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089253249 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089428621 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107361418 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089382945 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08865415 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.207687514 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106429456 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088473471 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087424456 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105150942 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089537363 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088258221 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087486894 seconds)
  done (took 3.222616019 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.114818302 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094756603 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112996911 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094261848 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094173847 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110330929 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094173289 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09089026 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111007203 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092179669 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094727409 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093429199 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.107835152 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095015574 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089777688 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112578562 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09452452 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091252246 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108723113 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094301447 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094033606 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110140892 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094581441 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093664844 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111508034 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094289225 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09160725 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10996524 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094510831 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.094802977 seconds)
  done (took 3.778469315 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099491493 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09061292 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092335974 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120005484 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089968563 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091393884 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104267868 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090044621 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091035529 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087905103 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.11010625 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090122215 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089294246 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108972726 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091786044 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093185034 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098013581 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108077431 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090147707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091749935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109700542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090725573 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089509986 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08904624 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108399399 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086764455 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090657827 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109128961 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090591338 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08975031 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09169958 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.111192422 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.08986492 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.098786515 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110517057 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091122761 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094193961 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104335335 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091451085 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086373484 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085838221 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107801977 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08973732 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096503333 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108428593 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090981472 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090511579 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09074429 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10761131 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09348165 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086109343 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107979025 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093258717 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091157403 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109874237 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086824379 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089708266 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086812995 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108713545 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089963325 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087007293 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085953178 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112403191 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091364342 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104546256 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.115519718 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090407306 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090915122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.109974459 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096682685 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092452329 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118682202 seconds)
  done (took 7.760796467 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118162791 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103451493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111957114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093454273 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09267226 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089635002 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113990054 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090564799 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092134691 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114500803 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091203218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091957853 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108303717 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092082729 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090606843 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090990901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116007908 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091001377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089683961 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109653678 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091072196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094851238 seconds)
  done (took 2.981567978 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.247753922 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101524153 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14109385 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123226983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109331012 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122759815 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095984413 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096790032 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112419464 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100824343 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099948813 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113965749 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110169387 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099288744 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118984893 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102983347 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112866029 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103468954 seconds)
  done (took 2.920331978 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.107929088 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09591506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156535059 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093700533 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093234272 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.111420523 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098100813 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110456714 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111899426 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094125657 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0990744 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111341673 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094191866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092695237 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110222955 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093791466 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093663797 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091151465 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118058239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099377931 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097355676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118829567 seconds)
  done (took 3.102495645 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110012034 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09657932 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130312032 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09758727 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091657535 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090398088 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.117978759 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092745872 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097918038 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111787749 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094033955 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090127313 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126693276 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093417606 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097805873 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111048199 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092560304 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093166107 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112172295 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091879561 seconds)
  done (took 2.853177279 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.199724421 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132247334 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110392111 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115460423 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128970101 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109070574 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13572983 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108401983 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112323013 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137930459 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110086904 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109198104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136630922 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114522594 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125677295 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118705947 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117098969 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136159214 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108499063 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127322196 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120211935 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108580428 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135933278 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109462174 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108934035 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127251936 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108694269 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131332483 seconds)
  done (took 4.259604452 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095606571 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095780756 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094033676 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112872174 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091680304 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090794367 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090508018 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109807051 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091318177 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090197085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109759698 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091999409 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091732475 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090007884 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110452524 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092171357 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091879072 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109628955 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092327383 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090942081 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090747364 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109770663 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091500044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091020513 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0912725 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110411526 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091240095 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090671098 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111192631 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092646628 seconds)
  done (took 3.717935081 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10940644 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10246729 seconds)
  done (took 1.029773688 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103768364 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107235285 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091270614 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111592753 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100009715 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093006939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119484328 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099213315 seconds)
  done (took 1.644098876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.17182185 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.191348844 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096721657 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.122547567 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169646922 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.182449738 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130332077 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.119104252 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.092098025 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085435376 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.183915637 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083849629 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.112176626 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091295757 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092691186 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120540958 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094659523 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102726611 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119433553 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096545797 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097283112 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117278182 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09654405 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103166471 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106060066 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097101943 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09716934 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.123023117 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089888596 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093378006 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111123908 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093742717 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097268864 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09654887 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114481876 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.171247126 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121052056 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089861707 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092252024 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119225077 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126536412 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092195034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.115095292 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092429352 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095580032 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.118534347 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098380038 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093366203 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104990027 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089408995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093113657 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107325171 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094415009 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093992679 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.111746682 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100594217 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095191924 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108587412 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090651961 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089376031 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091662703 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.108857488 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095167898 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094628304 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114847844 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094340349 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091192881 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112850035 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094703943 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09269873 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111036955 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107888371 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093603104 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.117176632 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099131181 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093633135 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109502821 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098789448 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092834152 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.112657413 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097808946 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121579008 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11345507 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08990445 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088875757 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099450845 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115641801 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097023791 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085590284 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120663948 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097138679 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095227752 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105180414 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093103739 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089764977 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116674544 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088116443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094359904 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091507376 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.1175389 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09943143 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09141323 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11493333 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098328985 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098728407 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113115153 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156645688 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110980384 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090961079 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094307174 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117885661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088344475 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093392463 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091902958 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112295844 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08955189 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096837873 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114075261 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095377282 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096818666 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114600397 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096112013 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094588286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.111766378 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091413999 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097926629 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120638525 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096269714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09498694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093360755 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.114091114 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094569358 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097068838 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110468727 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098957207 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08973669 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113126956 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096331384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098420547 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112488815 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091294221 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092850704 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113474207 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094845301 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096585117 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.114047743 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090641694 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.086477896 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095010895 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109739723 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095804361 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10092729 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.109947082 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097171225 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089912341 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121443376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093114704 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099702203 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115361737 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.10033301 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099516217 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.106706935 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093829181 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096247994 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095982387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.110452244 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096110057 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.093321853 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120229116 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089036811 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09736273 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106686402 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092602558 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09934308 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093973053 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.117027941 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090402139 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132286445 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125858952 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099239645 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092542634 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113678492 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098015397 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093626431 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.118250094 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099383798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09853767 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110918575 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09350819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099674197 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108972936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098382483 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093011688 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093847339 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107820903 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095247378 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08589975 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120115275 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096604534 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098056464 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118774671 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098305168 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092744196 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122335669 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091476577 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097035454 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085149585 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120699357 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104987443 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099114071 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11988836 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097718641 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091846247 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.11548808 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103434662 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097279619 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114170035 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096173962 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087092011 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.107452352 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100733969 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096179968 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091385434 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.114760473 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095424285 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095006075 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112325457 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08772177 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097176603 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116673636 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090481967 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094651771 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110944346 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09254864 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099833157 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106103297 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091375726 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095479251 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.117703725 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094257866 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093940787 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09470925 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.11926335 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09720021 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096580299 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111924359 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101890959 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09164685 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.112442511 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091147135 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095897809 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086807338 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.126058698 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094145771 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089870856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110096403 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099187194 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09911009 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119398773 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092325219 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097700622 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120719751 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101524223 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092339465 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.118600697 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090620881 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086888074 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090510463 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107864555 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096599574 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090253098 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.119639237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092726107 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092324729 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117384061 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097368458 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092378437 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119414278 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105651215 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087405458 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.10685437 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092988291 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09385579 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111036745 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09176572 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095676971 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114657807 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10865418 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095494825 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089611396 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115232251 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100181315 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089828672 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120441224 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100133474 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098884781 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110618048 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100110706 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090773135 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116795718 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089385389 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093052545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11228928 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094940425 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09147064 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.113472949 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091756221 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088256754 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090500755 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121409992 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093409434 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098648089 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.115173934 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092675123 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090681923 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109975856 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101378115 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09441892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.119972518 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095631714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087744607 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086919572 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119425033 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094655402 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099762896 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11017225 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098768216 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100525492 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117306258 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096914838 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103129595 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121762062 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102258045 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100094223 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087887014 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113120531 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098946801 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094429536 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117676138 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097520222 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087905522 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116151781 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101918896 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09540466 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.112876295 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090476868 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095350812 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.098999042 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119792188 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09914536 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096038959 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116466137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090282012 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098026991 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.120531319 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0967028 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10039901 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115126861 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100612655 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092158438 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098841759 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116430728 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089861217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088118328 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112687305 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102248198 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088056868 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118997465 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101460319 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091645802 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092189586 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120934443 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090925249 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097166826 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12161777 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093467612 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104486681 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116271699 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093447986 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09863007 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.120594385 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089434907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094262126 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113577292 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102939348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093973682 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100072293 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116713166 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100954039 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096674165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120757186 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101551461 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102388789 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.109083774 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103085944 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098026502 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.116642137 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093601009 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094434425 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088776024 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115268988 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101352833 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092289878 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124726755 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101131226 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092750482 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113287172 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103119328 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093890222 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121073357 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09213539 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096742958 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.108899043 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.099433245 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094263244 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100694649 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113931806 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089615027 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099425213 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120169821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100836845 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096708178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121525161 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089890551 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08937184 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117868341 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094856825 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105913119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117803458 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094234678 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093822895 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096791429 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.117548607 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102192185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090165097 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111771336 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097293657 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097225632 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.115208365 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090582608 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098979766 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114613317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097600679 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094462641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089426875 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116974791 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102460864 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092973066 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.113221451 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093435555 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10193468 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115211718 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0929496 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088237059 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120625884 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0990172 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103119678 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112636809 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09691854 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093075732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.117668525 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103873195 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094768895 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094874635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.116336442 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101106782 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098685594 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109741399 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093892107 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104521323 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120870468 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097241416 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097365244 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114809851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10423658 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101456338 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.118575833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090750088 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091242399 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094994482 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110922345 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098346305 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10118675 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.115950569 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093322831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100354452 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121562385 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099468444 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099081663 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089651624 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12349252 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093136983 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097806991 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111232232 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09015511 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098158222 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120971109 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094969758 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095325739 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117282931 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099367175 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09085052 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093500857 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120639154 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100427435 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101562007 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118420785 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096245898 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09938729 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126645155 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098726032 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095431688 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125006678 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102991868 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096294438 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116338258 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101343194 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102836052 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118814201 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103711443 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094064755 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095353606 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.124226341 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102772217 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104638376 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117808277 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090227116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100505938 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114787572 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091419307 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100872465 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12469833 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103478103 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09609134 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.113799248 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106087373 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101892357 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116574112 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096015143 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094923035 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100252065 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11555401 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100508312 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092718145 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.126442965 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103948414 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10163094 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126057999 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092942406 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101385727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119219141 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105924224 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099262902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089978202 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112616485 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098590959 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102203359 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123332862 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100079137 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.09952341 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120731344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097746439 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096699657 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114250771 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104034948 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101531207 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09707715 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118939356 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095102247 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097350787 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.119838214 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102243867 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102182407 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117972614 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108399888 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103297354 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114969159 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094691511 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097603823 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098161505 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119921744 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102186807 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092480126 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112419254 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102546839 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103301195 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116329947 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104785392 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104001144 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11570773 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.099730489 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104855164 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.122565377 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099533188 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098492622 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099063225 seconds)
  done (took 62.412099683 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152626183 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104858307 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119890665 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098422502 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117236836 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121467122 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098397917 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100250109 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121931427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109196358 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099115677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117982113 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115548003 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121183776 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136850713 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108907425 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119118779 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101708813 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098903709 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100287334 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136532097 seconds)
  done (took 3.271143628 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.123446913 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112060689 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131151315 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112911984 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106143456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131968039 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110028726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130484749 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114519311 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106745278 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134280135 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110963133 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126705289 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107521703 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106944186 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127789923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112906467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106142339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132776521 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111468714 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10696437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.132418864 seconds)
  done (took 3.465184295 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.138003443 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102217049 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097857905 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121212201 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101873918 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098246781 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123255199 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099606033 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108742948 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114665908 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091491872 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094213097 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096873841 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120718004 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093514267 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099754096 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129589035 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103490395 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104285049 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098463709 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091210342 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099463137 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099057639 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.111204784 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104335405 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103660598 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.12031544 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103549829 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091246449 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100837683 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120256423 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093959504 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090781796 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.111169513 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09165572 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102140223 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100387626 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.120470767 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099874922 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090597275 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.11983123 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105048066 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090359605 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098871302 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.121517757 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093724977 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101794789 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.11976956 seconds)
  done (took 5.927671529 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.135423925 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15701438 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10380063 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126615612 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13578717 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108450174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10164421 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130516527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100965214 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124516812 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114899737 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11324422 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127953771 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107110827 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.101696522 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12721513 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105138439 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101795277 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129079892 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103260687 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10671811 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126623783 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114091813 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131998699 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10569696 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102839474 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102376566 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127968368 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113524701 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127731816 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108678834 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107050973 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13587503 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103090553 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101476312 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.125937523 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115043052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103125684 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.37228973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10117788 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103992903 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.127402375 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104892459 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114988156 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126658635 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104699627 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10261235 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122059865 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112391876 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103011493 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130912388 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113862454 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126801879 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106030872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106008173 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134226008 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10393277 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102128001 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124697072 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113755248 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101814344 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125672545 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114009191 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102323626 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130482514 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113010809 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103642788 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126276812 seconds)
  done (took 9.099845588 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139550707 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106828669 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136465468 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114838975 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106366668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12830654 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107534764 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107099583 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130498927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111478213 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128133403 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226059333 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127638717 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112864562 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106485189 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130292546 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107542936 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10725023 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131092089 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107014725 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.128797035 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116971789 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107401018 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135670185 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118477636 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103306363 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129937543 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108050752 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136369017 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108815932 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118617459 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128749752 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110696549 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114359375 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141289406 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107828167 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101227328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129928394 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107503406 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127484717 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105176852 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115956994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128356476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105756326 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107110758 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127870311 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115699769 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11712055 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134333703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113757483 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128057625 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117136473 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106135494 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128998038 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115081255 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144038149 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116808988 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114936822 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13042322 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115685381 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114604378 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.143710593 seconds)
  done (took 8.387250013 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109494581 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100382109 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099406845 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122820856 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101165099 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099575233 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099192013 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123123758 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100443569 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099864655 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121095288 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101447328 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099578165 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099073702 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123074939 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102782903 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100470458 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120481942 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101562566 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099865144 seconds)
  done (took 3.012302961 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.117087026 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117401242 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123085904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109282752 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102533779 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128899143 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103045575 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102674299 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101227538 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125678482 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111491133 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109755577 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125496895 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107330618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131249651 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108811951 seconds)
  done (took 2.716036236 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12550765 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11764848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.210546187 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10457496 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125869289 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109440104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102605715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126583136 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101823423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106789558 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129631289 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107184719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103295259 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102455347 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125531955 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105635291 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101404446 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128105257 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104748585 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.216565318 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107297164 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103741753 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127437156 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106807996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104542904 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129839905 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109750409 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10316703 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126479422 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10443856 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103950509 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13121927 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104530122 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.10759804 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103124426 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126987308 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103993881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103930744 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127972279 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103927462 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104264656 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126199777 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104821151 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105047716 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121489192 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104309493 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102552636 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108436695 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126434165 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104387087 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101883207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129685486 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107474841 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110093819 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131889957 seconds)
  done (took 7.280170335 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120511833 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103916706 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135257283 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102165855 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103843652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10455778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.126936882 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105678452 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10430628 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123745624 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10529684 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10421856 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127295517 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106231595 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104827087 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124324888 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102257487 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104505887 seconds)
  done (took 2.903038089 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.112135628 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103814319 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106682282 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12591678 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103220528 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103262991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124906107 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103590477 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101740242 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102860916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126061492 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103269347 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101038826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125722971 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104688034 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102302884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124130869 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104360198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103584122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100745004 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125415669 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103421322 seconds)
  done (took 3.312658963 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120166888 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21370902 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10943347 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.22244351 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099628102 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121994913 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110907469 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10037247 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.139841177 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100356337 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098271016 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122846348 seconds)
  done (took 2.457805842 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136892268 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140022764 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127757657 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105453354 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112155254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130922026 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109656891 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107213564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140093933 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118050557 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130773543 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11823396 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115918722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137660243 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112164822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134188572 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108816002 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107686739 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125598723 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123949771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107207627 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137125957 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109619596 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107410935 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130111378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116817648 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137676446 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120498913 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108630155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13939105 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112313025 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108217323 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138899507 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12086509 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126355593 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116770436 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108679673 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145454601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112191013 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138000789 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105482757 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112754492 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139273157 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114632664 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11615688 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131974045 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114236524 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129668026 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108837653 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128304164 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134767347 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115774289 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134393976 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116754512 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116360328 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150449928 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120177922 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138774211 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113184575 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1402355 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117199541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112802264 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138604078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119042303 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135163347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116691027 seconds)
  done (took 9.00753322 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148130709 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104008827 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132151093 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120270601 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139047709 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11057286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109231488 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130015975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11089839 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106224612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173359825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109144746 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115891343 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140361424 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109481101 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130598032 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110579076 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1164213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128128723 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130274318 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109071482 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139538833 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116319331 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139206739 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119569395 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135076744 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109267037 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10824044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130113892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109846441 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114036778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130662496 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11747723 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105334414 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139705615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109187628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107965754 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137813265 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109705362 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135579671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118932722 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123773561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131505829 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108611088 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141141132 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11158039 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107793666 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126090685 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111650022 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106050846 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143609323 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120761167 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141221171 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118587357 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107741355 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13056388 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110541152 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109049342 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131126451 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113470575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115720022 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131356717 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129651473 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131682388 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109560162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116175109 seconds)
  done (took 8.954227979 seconds)
done (took 170.274618376 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180304911 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.21553502 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.197568281 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.157798349 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094635707 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15370984 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.129301358 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197617658 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094622298 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094736908 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093931987 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.12216763 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163237867 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093888546 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119907287 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098186648 seconds)
  done (took 3.107397456 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.188997008 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.342907991 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109986822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.123255827 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10312729 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099074331 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124215097 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102283956 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099897131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.13163706 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100594984 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097070305 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129611594 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097374674 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100549099 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122279097 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108481881 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100081931 seconds)
  done (took 3.195872813 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.126957835 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151724322 seconds)
  done (took 1.19420179 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.136533843 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21628295 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294879677 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172210796 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120758023 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141861685 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151489795 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134388668 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191101536 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135365049 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.114341984 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097239809 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148509877 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105468719 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138901043 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099833924 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128044984 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13566823 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11444975 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101498591 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146004251 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104258998 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105446649 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.137249785 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18155968 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.136167456 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104830091 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103525106 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125254057 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114838696 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10714931 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140408008 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112838511 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181861534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103575462 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177650943 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106908637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12446925 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114001089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100118668 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127268419 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104892319 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.1340799 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100555106 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10406917 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106477227 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127285041 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104578872 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130180731 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108686936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10796778 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130627086 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152930761 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131331575 seconds)
  done (took 7.99157777 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.88324004 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142579723 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099567061 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.019167591 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14538448 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114232333 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.862132538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149325274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252978399 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.89256888 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117386017 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107074371 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260983258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259049562 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.26427844 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.381738279 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705785351 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135933207 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130490686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163198407 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107845698 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145690524 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122867579 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.522841627 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101982452 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101611944 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131858108 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108473012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178106796 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100904521 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103684274 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198646281 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292947937 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209550809 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100573055 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121917249 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101864979 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184145414 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273796619 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221959021 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171943863 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120380113 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100513271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108356587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143757108 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098702565 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178134803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.168388522 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188539967 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125707047 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110019508 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111140809 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130472806 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155479199 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121594513 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3588339 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361326465 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099850128 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133442738 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112956054 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26707677 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123278805 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23757665 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128149745 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218312887 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099870941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.850005158 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162298781 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122729224 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10754496 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108076174 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12931421 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109662967 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190177885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479569853 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132608413 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106263722 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099705905 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234427018 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09958075 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123229567 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158996266 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124779764 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109963984 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134601543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112344315 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190079758 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248117376 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133240966 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109609539 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128577943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115293572 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102029315 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234186833 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230737302 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177981851 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228746966 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109637615 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179817978 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162216927 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129282501 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187245528 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109461965 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113125 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130702933 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228643322 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133030535 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125617999 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107001247 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10897126 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159508203 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104682237 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132070775 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164540337 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.55346703 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184540715 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097328508 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128498882 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110483603 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180043636 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108104599 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263596789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109993666 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184770354 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130071918 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098411536 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109779533 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179260435 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108538663 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133535137 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107868536 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109297768 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280419808 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221405809 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132461886 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254612965 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175678415 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128972406 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169374122 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134664191 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163988102 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133696889 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10882599 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102051874 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.84409882 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116266391 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108766065 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130906102 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183706112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122921847 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104683423 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101964363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100434909 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808100876 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128085492 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098894699 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102601595 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129669073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110063996 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109554923 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129974908 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155041015 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268225938 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110481159 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10746143 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125020297 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156520113 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125381447 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102582248 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101387614 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126067987 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111256955 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106640097 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127373321 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165504147 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177482486 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229088489 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.639584126 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124752945 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101810992 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243234632 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100815544 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.34966339 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111676422 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237702853 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185390055 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09915842 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36073023 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185903878 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207453685 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106363805 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189573269 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099551975 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109402949 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179395648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10155223 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133464947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153157116 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135790033 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111337692 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.280644418 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126026152 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248981452 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100256464 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187507643 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104862427 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106908567 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325742052 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124912951 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115847134 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180694836 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106371418 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101805684 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.638344374 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126245244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115181895 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106123621 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.257564457 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160874648 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.135258471 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111525355 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109314739 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181215363 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230115785 seconds)
  done (took 47.779428586 seconds)
done (took 64.181025117 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.262273156 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173236834 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.376990957 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152687433 seconds)
  done (took 1.973066617 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.27619427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169328865 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.255353701 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099718966 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260702566 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100268267 seconds)
  done (took 2.108380612 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.185691491 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173198282 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149979058 seconds)
  done (took 1.459873144 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205758847 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.20538352 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.341608105 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236390326 seconds)
  done (took 2.024466938 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.285050774 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118349267 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125546412 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.237939685 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252871751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209457642 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.12530092 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175448638 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130122483 seconds)
  done (took 2.650362871 seconds)
done (took 11.156282932 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.42782256 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.341523667 seconds)
    (3/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.232136433 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.403806797 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.219483636 seconds)
    (6/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.377351757 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.112411501 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.286501238 seconds)
    (9/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.219011231 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115800061 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.111838663 seconds)
    (12/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.379273579 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.354891638 seconds)
    (14/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.219953599 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115368302 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.404026797 seconds)
    (17/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.122557344 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.173663075 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.141971545 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.127240203 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.131471257 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127226304 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.283258925 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.231009125 seconds)
    (25/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.285998659 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.133673005 seconds)
    (27/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11088966 seconds)
    (28/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089729427 seconds)
    (29/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10558703 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.149218766 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120485572 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109787495 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.136192388 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121475433 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126494019 seconds)
    (36/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.171843222 seconds)
    (37/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087430811 seconds)
    (38/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.173949844 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12977607 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.082213248 seconds)
    (41/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.300621329 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113064587 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.104023843 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.339706397 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.199716179 seconds)
    (46/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093480812 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.192342825 seconds)
    (48/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.159809987 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.157148895 seconds)
    (50/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08594815 seconds)
    (51/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100076832 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.179330766 seconds)
    (53/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.142579374 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.144298168 seconds)
    (55/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086047325 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.278958798 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.199404896 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.182532639 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223045402 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.123185777 seconds)
    (61/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.167875887 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.226663042 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090059707 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120070227 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.136626033 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177010638 seconds)
    (67/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.088555675 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.11106594 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.081215496 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.103488718 seconds)
    (71/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.145355286 seconds)
    (72/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15828172 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.193056324 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.08013114 seconds)
    (75/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.157017453 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126270037 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101355277 seconds)
    (78/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.166358306 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.122847605 seconds)
    (80/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082525228 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110174066 seconds)
    (82/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.107216707 seconds)
    (83/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.140928954 seconds)
    (84/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.13721284 seconds)
    (85/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134595747 seconds)
    (86/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.081315647 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103940312 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12931379 seconds)
    (89/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.111361089 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108793793 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124513949 seconds)
    (92/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.079774461 seconds)
    (93/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.11231973 seconds)
    (94/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083182785 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.117416886 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109690835 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.128925054 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102737995 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111567399 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.192610737 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08748431 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081554156 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104424941 seconds)
    (104/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.110712053 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.129795486 seconds)
    (106/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119721928 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159747269 seconds)
    (108/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.080132257 seconds)
    (109/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.112347038 seconds)
    (110/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110707724 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.112348854 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150502937 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.081240638 seconds)
    (114/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104184548 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181274868 seconds)
    (116/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080071915 seconds)
    (117/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131450096 seconds)
    (118/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158660539 seconds)
    (119/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081061356 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115227362 seconds)
    (121/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08185168 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175477273 seconds)
    (123/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111863736 seconds)
    (124/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108584897 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089231738 seconds)
    (126/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.145052454 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.088674405 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083830702 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10445616 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.137068338 seconds)
    (131/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081616524 seconds)
    (132/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.19647275 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159571758 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.081648092 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105022154 seconds)
    (136/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080210759 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130052432 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112482809 seconds)
    (139/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081353292 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.15994038 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080929006 seconds)
    (142/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089144436 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10188642 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149557287 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127266394 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089326373 seconds)
    (147/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.137248668 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.108018764 seconds)
    (149/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131529505 seconds)
    (150/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081528384 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111696676 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.217294113 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.081434727 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080010175 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128427644 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.095538615 seconds)
    (157/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.086953026 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084620538 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129079822 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.081706689 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.104957551 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101232217 seconds)
    (163/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107965056 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088725389 seconds)
    (165/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.208962397 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.139282656 seconds)
    (167/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.087486125 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111728873 seconds)
    (169/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.08294253 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153499547 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.084926512 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.084989579 seconds)
    (173/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086536982 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.131011772 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.084685071 seconds)
    (176/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084748696 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.1045751 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.108355818 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103811874 seconds)
    (180/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104908033 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128965212 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112129901 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106176281 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.148093903 seconds)
    (185/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.114834436 seconds)
    (186/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110404752 seconds)
    (187/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.08102867 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110653456 seconds)
    (189/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.081280448 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0887425 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104810326 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087649623 seconds)
  done (took 27.57911687 seconds)
done (took 28.526419946 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233529417 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131949112 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.112565781 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111396987 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234294319 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118852894 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152427414 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.115012461 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120944919 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137525659 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.10295548 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124343675 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136035665 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.205443933 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.139669507 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.105443995 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102944376 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.149549744 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127850965 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128830768 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23536324 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104081112 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.148660385 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10472903 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236278999 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106135704 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111662384 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.140027444 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127564965 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111830072 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138741037 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.105603513 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128723771 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152958976 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1041219 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112533654 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102192465 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112661952 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113173819 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.143771914 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.158752171 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115737553 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113271178 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129885581 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115693623 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11361347 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102373424 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140595952 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101922598 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112510886 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131150267 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129347733 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111747031 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126312082 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10281929 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10453089 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.149559661 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104144529 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127306413 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127230635 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105868211 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103590826 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114482784 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129813435 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113100555 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103273328 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.137185043 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114947438 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110917108 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130283257 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104484237 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111899006 seconds)
done (took 10.215188678 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.116047998 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148383045 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.234912554 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.238160383 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.133101912 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.147077222 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117644779 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126802997 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142600816 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123145827 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140881463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160352374 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.24160733 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119718855 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119726468 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.141153355 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116319819 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113245407 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.238302581 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130749448 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155303199 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120995554 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156097085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121819961 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106762808 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.158186806 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111828118 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115720162 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.132480115 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127752838 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128042958 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132753753 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111508104 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126593193 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149298035 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120764589 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119726399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.141577012 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109325983 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107535742 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140023811 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12429786 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107712021 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.146751064 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117053991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123170272 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.139651558 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121351814 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108126739 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139733272 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11039707 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133029766 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.145171673 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125432361 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11997217 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145313241 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122351243 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120481801 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135576667 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.121335262 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108209501 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132521182 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112605661 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130100413 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137114782 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122547218 seconds)
  done (took 9.871660077 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132999594 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138277919 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143065539 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118529738 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114012543 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127159746 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102269569 seconds)
  done (took 1.873806927 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10921291 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.244836651 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218017319 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.246127877 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.243663806 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.256650794 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128596591 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103599906 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167162598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114116187 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.24723109 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.274984759 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114069604 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119103903 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.251005802 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128710432 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.223400056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.13071809 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119201052 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.250551205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121952449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161383023 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118036518 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104458115 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241708181 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105247182 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294866268 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149274569 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114791763 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118645814 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144515793 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.186857071 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.242238556 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118511439 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13884091 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.220071841 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.24298027 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117650436 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.259363079 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.135268878 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.216558544 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144939311 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119789465 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.118377414 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.145684099 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206466618 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150657217 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119744766 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117443636 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.252723479 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.141183316 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.218866869 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142602352 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119179122 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115106257 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.147218162 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126162692 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119271732 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.253592234 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120049484 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247446341 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.251533104 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.245798785 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250492468 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128880146 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24749488 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.232901404 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117986232 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113884384 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146172708 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.222049885 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.144934422 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11727895 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.238794053 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122157713 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.252367079 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.24989798 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116792506 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118487135 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.136355189 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118019128 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105382814 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.241779838 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117901445 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145165108 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124102653 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11721707 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147834652 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110834835 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.154515459 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119031757 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116679921 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149545135 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119428735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121896716 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25290304 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115882822 seconds)
  done (took 17.203253082 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112703298 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105624185 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111330359 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132448756 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107340466 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106591976 seconds)
  done (took 1.704412761 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.149484023 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119720602 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154097948 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121158075 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168535259 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.253281092 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26191927 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113217609 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.166073563 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13209501 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25433318 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257996006 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256691162 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123455853 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260089499 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121496247 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264250852 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118144633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15464236 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118226836 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.118552436 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.150034163 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118249324 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245629909 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119957922 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120843509 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140960663 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128790121 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126883384 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141798689 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123899136 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119926144 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137144745 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114816765 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259423423 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111491133 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142633082 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123537567 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122586818 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147257553 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232545843 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.144549387 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127388685 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122075999 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141519952 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112747299 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122514183 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139512923 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.263206376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122570684 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122707852 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.149181191 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121406361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.143167019 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.14082971 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115368162 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121911802 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260393937 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150546589 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112130181 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120255935 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148260963 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115731337 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123581567 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147977826 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122213097 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112932448 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147768512 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117518715 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120491789 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149151997 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.122421783 seconds)
  done (took 11.922051051 seconds)
done (took 43.563085642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.665451382 seconds)
  done (took 2.681435398 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.110237971 seconds)
  done (took 2.129509416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.47346363 seconds)
  done (took 19.529496943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.448640222 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478404132 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.140374065 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149154232 seconds)
  done (took 3.237815088 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.842930865 seconds)
  done (took 1.88973102 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.305070428 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264945703 seconds)
  done (took 1.598563127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811933627 seconds)
  done (took 1.849920231 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.559714961 seconds)
  done (took 2.591528713 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.312645344 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242229127 seconds)
  done (took 1.598576118 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.655026173 seconds)
  done (took 1.693809388 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.243001223 seconds)
  done (took 21.2880228 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267031373 seconds)
  done (took 1.312529757 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291996 seconds)
  done (took 1.340085356 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.709062025 seconds)
  done (took 4.758400073 seconds)
done (took 68.534535225 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.121616164 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118498449 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118226137 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142552346 seconds)
  done (took 1.533716683 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131131689 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120925434 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149634322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120651306 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125612831 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.146284174 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121509166 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122158063 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119181706 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147711171 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121165477 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117884683 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148991921 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120349872 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117510753 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14937102 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12391911 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119151535 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.148005832 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121587109 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120053325 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148645159 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124136666 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122398945 seconds)
  done (took 4.15372716 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121645217 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.111157431 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112972886 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135314064 seconds)
  done (took 1.533166473 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133827004 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133059099 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156195282 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128172654 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13160689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.158089308 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120597249 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115800829 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145575356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129831175 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.136553468 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160488425 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132499252 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121632437 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156493783 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113775991 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120123376 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157921409 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127577048 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129050419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146823489 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127150876 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.125458133 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.156513408 seconds)
  done (took 4.312732366 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200937773 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.13347256 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17908213 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165480122 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181739451 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118599649 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148410982 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153268094 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.127472286 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.12119062 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.149882049 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166429195 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151516963 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121867871 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11932509 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151191642 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132789093 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.1255212 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.194872337 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125896736 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153742386 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133210655 seconds)
  done (took 4.305556035 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129975955 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111167488 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106523951 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.138475779 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122543866 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112119216 seconds)
  done (took 1.777264343 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.116398182 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104334776 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104879608 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130767397 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108815863 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104229874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103654173 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.131713746 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106051405 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104454764 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131090552 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10446049 seconds)
  done (took 2.41013784 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214049217 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148972715 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259053055 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399527622 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189031231 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161325194 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.318845295 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191462196 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180799597 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166424376 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215740423 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163708737 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183245439 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188566996 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168881322 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161440082 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194996933 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211054353 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171030129 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242482092 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160337777 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204232675 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190451244 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179440766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14134472 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192823962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121099408 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128464731 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198960845 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194121403 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178393426 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179589667 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143386599 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221474183 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264161665 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20798413 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273362625 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134839563 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200554693 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191861759 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263800236 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167939303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195545258 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182933458 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130452343 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217727687 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154037326 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.21543836 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134353328 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173117965 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215069178 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18216688 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200421017 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138071678 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332548922 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136077779 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170106827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17997994 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216591859 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229439861 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205198859 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.125237923 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201774192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192622051 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24414641 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170350713 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.168347874 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153156069 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166882744 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236448852 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182837705 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188652621 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.242109419 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131313346 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202876288 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197088889 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159230305 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238737272 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172687812 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.149710798 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153796862 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162643587 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12769452 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189620273 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149811788 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217471649 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160542552 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343806919 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180643921 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185927204 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162891594 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189411237 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190575002 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149919972 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102991309 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171316618 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164708654 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18704683 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130311264 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18228582 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141820828 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125892965 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181594112 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123249751 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198663671 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136592929 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194192152 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174468695 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.160592279 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179550626 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177729445 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163169771 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198952045 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22155925 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131519029 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133511811 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248889681 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197288356 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137951831 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204005202 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196244229 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.180423781 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135828027 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195967797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195083258 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171015043 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230957093 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140372948 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135482522 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170332485 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201444262 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162647918 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187752647 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128559504 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192482089 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194218902 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.155538355 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14144187 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211419972 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133809405 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125343034 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165320464 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137146211 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.170584052 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150564817 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139692554 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183451052 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167734319 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195185575 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187215358 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135230744 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203131278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132797194 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.195469549 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15069081 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120280659 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205144803 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226925784 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12955188 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208781438 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16307786 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212010271 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201955989 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130494178 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183208214 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157331809 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121178468 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193301606 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169370351 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19458466 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215978792 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181156626 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194158209 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190623472 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152962329 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200801094 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184881052 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18694151 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144278054 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205410059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171650669 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150083121 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124192259 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128789911 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166259271 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131977118 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165974947 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183957541 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194612178 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20560366 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168557957 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165018121 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193191187 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154903917 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162051683 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203611228 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140282644 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218847104 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190520178 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208185552 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142486345 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194169524 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120752226 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156845993 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135402972 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192714171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138191386 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135740935 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17017618 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221740069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175195532 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177855299 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219880894 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166590459 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231567157 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121552398 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.190389504 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171365786 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197750985 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186632671 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135881945 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.189839015 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221329263 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144224485 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223279859 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170126732 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209495356 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228957816 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166388616 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157930069 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149007146 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161689137 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169165925 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163037004 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177079012 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13230174 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183832804 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138320103 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168146382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189947339 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173136612 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180775572 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187854544 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204025037 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126529708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142838625 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203178909 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145583039 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.135832357 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171347627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226911956 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177281553 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158278507 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202252046 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132102972 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317227072 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215532227 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208479584 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136898764 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16992524 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172198504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190864215 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164410782 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216809414 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140787875 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239134599 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200788662 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143288193 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130535664 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178647019 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151920087 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171251316 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153670449 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191788006 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144900899 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22156812 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137488503 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199768909 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207693101 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146490067 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150950481 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168962478 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25764673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168781589 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205321292 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163796737 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19606781 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184072639 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152814754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126855447 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131744896 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216192087 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129625981 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207268187 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194273658 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211489674 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175769349 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193469784 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14063199 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127256686 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195751988 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150362767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216646544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164191759 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138747602 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220930469 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129922597 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130627156 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192377397 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32242494 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152119344 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205900904 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107938657 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.31410824 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129064527 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132654579 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191492857 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19968475 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134802966 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185437129 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204561069 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141359806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192825219 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13566823 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208172142 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211721407 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169462123 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209075749 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145908289 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192769066 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162286908 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206058256 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146106428 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177454549 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160241606 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224571226 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206315133 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132028032 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168612642 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199282954 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200760516 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176979209 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168550903 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184747027 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157266717 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1670431 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166739639 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12574099 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161163441 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196506973 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158310914 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178144302 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200991481 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131406305 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127182026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177340568 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167203664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171027475 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129869727 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219074996 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129844654 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213636245 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24206514 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133548617 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166408592 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175463654 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131944502 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16841583 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146005927 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131768013 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.203875507 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182860544 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160535708 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179527229 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194454966 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193509105 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160420051 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173464796 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.26697536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127525365 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221646692 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152290455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229440211 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178688295 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175942067 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199841754 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152074087 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196172991 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148370823 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.250162329 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167361506 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.199028731 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131381721 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173363246 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139829444 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.133801862 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183643605 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168558167 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17337952 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136967976 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198306992 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145548746 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177479832 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142604378 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231283042 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151859605 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220724437 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216450081 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140026745 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205241183 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177060435 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157777047 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.166844121 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20460444 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145627387 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182168906 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134877627 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137853354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245828189 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125439555 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192118984 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173416885 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198904694 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201768884 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137470205 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207327552 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142146567 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204902523 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129156578 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.153176672 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199045633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13529416 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155883091 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17235006 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19400826 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166381214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172373107 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177806549 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225938508 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12476412 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134641213 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318036183 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191472742 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197699512 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.167408718 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139579901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147007661 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189896844 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166994281 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202509551 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129831035 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159867885 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146600556 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186193509 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14408166 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198558909 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182812563 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192669472 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186179961 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164184426 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253773682 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17132458 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172888466 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.119019675 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15891099 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141232066 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162914641 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144688092 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209958823 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246506487 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164779823 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148355388 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167413607 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127260596 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160056666 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167608744 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181620931 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171448897 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177320804 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107190167 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141352472 seconds)
  done (took 86.359223476 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248658716 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.177546042 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.209810689 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243601578 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289165612 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.317511186 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.284677192 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.302689888 seconds)
  done (took 3.217212957 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128029339 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161943917 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143997571 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145307445 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111049317 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.494729323 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163485385 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121934221 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163250229 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154900285 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136916504 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.577733873 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117676487 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147756359 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123710284 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137579716 seconds)
  done (took 4.165038934 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.380635484 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552020337 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.206077952 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28503038 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.270485165 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.209448213 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.797175744 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.205663024 seconds)
  done (took 13.043074053 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.176027482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167682776 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46327211 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.311879185 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.186503325 seconds)
  done (took 2.452625855 seconds)
done (took 130.298977757 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131768363 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125311536 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124770684 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155938615 seconds)
  done (took 1.668297554 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.203208872 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.094529828 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.096029111 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.122140672 seconds)
  done (took 1.662148658 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.476739675 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093668686 seconds)
  done (took 1.74494927 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.156101834 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.147927052 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168819513 seconds)
  done (took 1.63476389 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143978644 seconds)
  done (took 1.29190772 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126076507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129658108 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.281911198 seconds)
  done (took 1.690823952 seconds)
done (took 10.847701793 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129253168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934255048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.437007178 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135758884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.7175527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431917843 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.433993876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179829642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177298384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.140666631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134760573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693580238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.445039205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883771253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.408816722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.914774567 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697379534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113834867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147983552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114174226 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.404484398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13859877 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114611572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113689876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.722191488 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42539355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11092046 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.92627624 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112939292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115534594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.431249113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114787921 seconds)
  done (took 21.141933972 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121372976 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170491722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149140544 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114946251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115651578 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142001787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125266907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124679122 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20628091 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1135562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164318241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111732365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118694354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140845564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139836218 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112620746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116346988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146093089 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120282125 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114580841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162903467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111814009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114252028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144186492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112941247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135876077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142469793 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126978508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112757495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145807927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11938243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113022473 seconds)
  done (took 5.372343648 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1688075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179509419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150304589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152471624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.191394381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114963712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201263862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.181016734 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.208907432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113218727 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135144001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.141105374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155398183 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114140073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167877283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112686048 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115046403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14252399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121563713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114639368 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163388794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112431686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114743292 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14345239 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113863432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137337297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141834726 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126482635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111124885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14656382 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118758817 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112393064 seconds)
  done (took 5.687422192 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133410401 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127935892 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13577809 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166712751 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122426881 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126036908 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.156987422 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123356469 seconds)
  done (took 2.256954114 seconds)
done (took 35.611819074 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144572434 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130324603 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134086045 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157497961 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.228051486 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.151506068 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13003155 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.120355947 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.159726527 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133966478 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112222301 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.155449307 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13391242 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.124180177 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.261966553 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.128181104 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.266651018 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.263181931 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.121061205 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127321428 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152706011 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234173285 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157588056 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.12140664 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.260751455 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116589128 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.254935701 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124906596 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122579764 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.142285412 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.231419931 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.157012355 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.12223342 seconds)
  done (took 6.531582194 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.248814951 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.153899389 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122188164 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.122194449 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.122459707 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151211687 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.24777208 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153238272 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121744113 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120298538 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15181763 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229250661 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159435917 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.117605039 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123110348 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112142962 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.282349523 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124329637 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146681851 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096340743 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.117023051 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119246798 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.293290788 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.148369077 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122497001 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121953497 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122759186 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158294012 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123744367 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122429884 seconds)
  done (took 5.730114493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134763367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135267271 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139715253 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.221873117 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.152055998 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164432083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141865387 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137380948 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174173406 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11694895 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130995568 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183401185 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131793645 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.183868982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149576702 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135523589 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138071957 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147407083 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125540755 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134093309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.167304376 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134630249 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139163926 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153663954 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114751184 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122196196 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154911738 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127155485 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125803009 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129971206 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.1489306 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119497947 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117334195 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180478258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.117048613 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158440539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14266039 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128118806 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159010723 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.150597294 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118327337 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146613966 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141967635 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172243272 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146059914 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12959972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12670466 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130095663 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144378835 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133920102 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157450958 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.145195838 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136300782 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114420835 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143211926 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125590133 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.116190683 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.149110023 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131204184 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11757829 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.17148291 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123334539 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125893454 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147106067 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127612248 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114166683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114010098 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150233559 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141657609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12278824 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182622385 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115151445 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126378501 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.158151605 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126152215 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127777073 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.1460354 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12948588 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126990381 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149640607 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.12961774 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118851776 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117909966 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.163250089 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135407443 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128751359 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.157623047 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129197924 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117614607 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148215217 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133084033 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115556804 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150918773 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131086223 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115468804 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.149271776 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128704704 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127363612 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112969743 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.173276853 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120121001 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113885851 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.172087806 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119800989 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120737979 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15640264 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158414349 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114378442 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157069624 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128886431 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115284982 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153211801 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119468544 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115058905 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163177804 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132708496 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123070958 seconds)
  done (took 17.372063794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.366308243 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.345634316 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190351091 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.438979636 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130318737 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.278054143 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.347081078 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348517015 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115265566 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180821457 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.178343838 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.317129364 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115710734 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.178140321 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350755079 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.406580195 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17900314 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152656354 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183224068 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131472514 seconds)
  done (took 6.125519105 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142860276 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152581623 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168963246 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143008828 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125522876 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163679543 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116538004 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137147748 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157720336 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127585638 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118559141 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161563423 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129654407 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131825353 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.16177986 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151138423 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123490284 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151303109 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139309266 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120884018 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134286211 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142215711 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124750431 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.168614738 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.13697915 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126040818 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.144669584 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.12233958 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122856964 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123630177 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151940411 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134745417 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152542862 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109260682 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127989879 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131086433 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152747846 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119424125 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120650957 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147935782 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133084242 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.128739695 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123834323 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.132552121 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134766579 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112594136 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129736889 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158663682 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.109595361 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.136057805 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.158483282 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131240991 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12354979 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168506274 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123634856 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133045899 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157735352 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130939346 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120538303 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142987876 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115234416 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119506258 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123862399 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.160433111 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129051188 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134144223 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.16166134 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116318143 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119883472 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14989015 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119974614 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129369314 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16636089 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124874818 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121639561 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15884932 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124684012 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096629187 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124278514 seconds)
  done (took 11.907827456 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147695388 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126303352 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134853322 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181509674 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129418902 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121693268 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156847739 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136056198 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131478381 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165310058 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.135133245 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129814971 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169324884 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125968532 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126006875 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.162390482 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129567943 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15342405 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165007226 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143914041 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130397168 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151643585 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129276076 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127269955 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176403647 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128672438 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142288695 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161518934 seconds)
  done (took 5.223092825 seconds)
done (took 54.055220152 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.34985259 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.634603744 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.300251659 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.299373545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.353282914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.304869286 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298689519 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.305235673 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.79161973 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.271542002 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.301083748 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.305157939 seconds)
done (took 29.713683983 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.556042077 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.523231132 seconds)
    (2/2) benchmarking "String"...
    done (took 1.691767158 seconds)
  done (took 4.417267657 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.292505981 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.294065746 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.622019812 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.29388423 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.287835485 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.291858693 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.290339784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.308700849 seconds)
  done (took 16.572801402 seconds)
done (took 27.02535113 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.27259493 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.675196615 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.561650682 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.265974745 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.311418652 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.304513723 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.292221797 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.36322957 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.303297996 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.284270716 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.801682532 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.590726027 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.293507924 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.717144617 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.266798872 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.325801487 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.304676663 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.666564303 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.288466291 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.271246993 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.283440513 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.270448777 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.323096115 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.303801832 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.304669958 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.304269907 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.330341938 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.295554274 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.638770055 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.309486214 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.267502243 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.311432271 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.33964794 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.309950937 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.298072821 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.303041539 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.652550439 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.304679456 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.278751369 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.31811657 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.661919299 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.294783786 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.29331188 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.299386884 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.27759794 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.337578823 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.277676373 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.497186479 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.322683213 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.303773685 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.366705152 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.716832707 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.302849685 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.323040102 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.294300693 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.682872033 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.325950947 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.396539253 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.327011976 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.318966539 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.295144795 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.29827117 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.36532425 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.297346611 seconds)
  done (took 150.96967024 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.297542377 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.295678312 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.295962217 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.302564244 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.299152986 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.297286687 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.298074078 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.296524021 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.296216579 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.328165055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.296203938 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.295603373 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.296619564 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.307829438 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.309466588 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.324233899 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.299971177 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.315520291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.32503442 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.29730736 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.309988721 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.298307347 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.297596084 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.295870445 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.297192191 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.390384349 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.313679903 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.328191944 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.303106142 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.29659868 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.301604135 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.304831361 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.030652571 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.254566939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.306862625 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.325264267 seconds)
  done (took 83.919108361 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.299719888 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.297599366 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298659488 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.336511298 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.300369551 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.919557369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899198774 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.358952281 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.460447939 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.879818865 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5813388 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.296085767 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397158745 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.312127821 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.297647278 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.396042821 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.325863226 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.301128656 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.298992561 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.90052953 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.310029788 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.373639973 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.481356393 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.314286964 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336838086 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.694534759 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.299906084 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337207895 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.848330085 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.641233358 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.352752051 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297452421 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.302485602 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.65493056 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.414094767 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.298448078 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33639564 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.300780777 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.595218707 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.297061658 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.300973399 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.301349215 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.302974003 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.304486486 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.949687667 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.299563233 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.922470448 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.305762136 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.363041697 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.303940256 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.302872663 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.588130446 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.118403255 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.299707735 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.301590796 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.304772556 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.301478072 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.304986759 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.340266175 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.470107128 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.247991103 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.305093825 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.306142073 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340615242 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.300469703 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.323788871 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.302713076 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.733044545 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.362077818 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.407156734 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902399111 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.301810307 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.406027471 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422328845 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.30243818 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.3063942 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.30609046 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.302192688 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.305251667 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.421352185 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.302219647 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.045342708 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.482635397 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.318543091 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.840113677 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.403993413 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.301020193 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676417232 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.298668777 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.30649568 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.073707767 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.399183025 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.299125678 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.304388428 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.306826657 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.054316963 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905296337 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.653820503 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.307549235 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.02560584 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.303577431 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.215680151 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.930539351 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.976677132 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.305048568 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.421539079 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.487079607 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.31929605 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.306890423 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.775279175 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.301850745 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.364561304 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.308505781 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.709381758 seconds)
  done (took 390.164348703 seconds)
done (took 626.240948952 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.283488564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.288368165 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.284507409 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.283494989 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.286471695 seconds)
  done (took 12.62234178 seconds)
done (took 13.81909152 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.585206331 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.584079861 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398579247 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.587559912 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.370673812 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.603015021 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.564269311 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.35345612 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.502808073 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.423600235 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491460541 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.390795924 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.373114836 seconds)
  done (took 20.425791995 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.689928168 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.317843841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.441484843 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.665810925 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.37994203 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.695468956 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.727889839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.321004438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.544660183 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.361074757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.358924973 seconds)
  done (took 19.699536513 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.698416817 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.320727867 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.441481211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.686808008 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387688197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.713585086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.720251437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.32058567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.587711398 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.387842476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361762624 seconds)
  done (took 19.825135306 seconds)
done (took 61.148613243 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.37085107 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.440407192 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.365419793 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.348617376 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.347249535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.348885986 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.351076837 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.347897801 seconds)
  done (took 12.117136264 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.347115091 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.347640646 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.348185059 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.350608761 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.347358278 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.350526139 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.348288005 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.349057795 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.347237313 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.349156062 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.349824653 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.348246031 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.345812969 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.351490578 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.348546488 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.347316093 seconds)
  done (took 22.776818338 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.350968654 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.351369402 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.347032888 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.351093809 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.34602368 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.354506743 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.352415555 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.351215891 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.348583992 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.349593688 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.346069078 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.349458266 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.350225542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.348363922 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.353706292 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.352238787 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.353522679 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.351531993 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.358163493 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.350131745 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.349813199 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.349157459 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.351388748 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.358832363 seconds)
  done (took 33.625098555 seconds)
done (took 69.722617522 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.315254684 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.314693231 seconds)
  done (took 5.832235789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.448582951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.449757263 seconds)
  done (took 4.10045181 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.349258589 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.352053707 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.352513612 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.350433599 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.352890965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.35114172 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.350038227 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.351208349 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.350519504 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.35515487 seconds)
  done (took 14.714893913 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.351249415 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.350095986 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.351727409 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.352229848 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.347027859 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.348589649 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.349671282 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.352897739 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.351230418 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.349919288 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.352229358 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.353346749 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.353034419 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.353208254 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.352502648 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.35218466 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.351630958 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.353546565 seconds)
  done (took 25.529423051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.371194339 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.377257611 seconds)
  done (took 3.95330279 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.532430766 seconds)
    (2/7) benchmarking "second"...
    done (took 1.435644994 seconds)
    (3/7) benchmarking "month"...
    done (took 1.516961828 seconds)
    (4/7) benchmarking "year"...
    done (took 1.507497497 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.435809679 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.380279853 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.430972751 seconds)
  done (took 11.443397935 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.349804469 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.719179024 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.901633791 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.558034021 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.336785076 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.363009709 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.294388903 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.36441345 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.367050377 seconds)
  done (took 15.457940916 seconds)
done (took 82.235153719 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.316276811 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.368005805 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.345682227 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.335347253 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.754899558 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.367304529 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.319403466 seconds)
done (took 17.012802746 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.298732192 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.310839109 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.300412643 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.331214884 seconds)
  done (took 10.445725955 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.31339083 seconds)
    (2/2) benchmarking "read"...
    done (took 1.727756721 seconds)
  done (took 5.245733554 seconds)
done (took 16.899381759 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356698921 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.353409256 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.362118535 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.354562337 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.353120324 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.353948431 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.358827753 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.356133347 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.355252019 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.357167277 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.356979264 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.3537336 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356383587 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356488908 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35693268 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357559226 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.354521968 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.356223022 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358085689 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354243162 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.353140368 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353588121 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.35503181 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.354622261 seconds)
  done (took 33.741571816 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.354791276 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.356135441 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.357629417 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.355891207 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.355979277 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.355892254 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.357292292 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.356660438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.354125689 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.358193175 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358522896 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.358605449 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.356676362 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.359046775 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35956388 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.35541859 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.3592255 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358229912 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35723607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.359527563 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.358788992 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360495563 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.360825214 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36034289 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.357800038 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357473461 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.361986046 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.360794484 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.364433285 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.362269951 seconds)
  done (took 41.956426094 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.36461131 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.365771443 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.357305492 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.360516655 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.359164179 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.358459061 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.358759239 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.356730978 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.360226255 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.35796214 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.35844188 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.361331005 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.357646946 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.357749194 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.361664287 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.359622338 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.36205896 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.357940769 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.356754724 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.35942322 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.360094744 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.361009456 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.359546909 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.361669665 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.360456941 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.358647004 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.359401569 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.359756992 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.358717753 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.359026242 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.35826127 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.361646268 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.3603827 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.358128642 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.361847341 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.358660483 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.367207031 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.370474835 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.360160954 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.360054516 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.360672122 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.360435221 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.360263899 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.362306059 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.362818694 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.359497461 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.363197303 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.360959449 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.360814179 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.360578186 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.358660833 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.361487589 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.362182998 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.362081798 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.3617951 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.360329341 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.361839449 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.363231735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.362466694 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.363262325 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.364135831 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.362608332 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.364193729 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.361898256 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.361647106 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.365814396 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.363736478 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.364834453 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.363227754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.363255271 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.361717297 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.361405107 seconds)
  done (took 99.204641249 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.363199608 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.36155324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.368474581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.365141126 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.362372338 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.366883177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.364896053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364887952 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363670897 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363469335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362568872 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.3632647 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361225474 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.368173704 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.362598554 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.361428922 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364215379 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361176236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.361454274 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.366478098 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363986929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.363772795 seconds)
  done (took 31.216246284 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364499145 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.366835336 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.364888999 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.368238028 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.36810959 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.366881152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.363237672 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.365605081 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362667837 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.366782256 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365379564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364936701 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.367548066 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365435157 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365738339 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.367008752 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365492637 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.366303844 seconds)
  done (took 25.800695886 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.364825583 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.364269367 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.368655959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.363463119 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.36763879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364445786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365859723 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.364528548 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.365818097 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.365474199 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.367334491 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364954789 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.364039309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367205076 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.366462104 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.365027843 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.367460276 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367269399 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368462078 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.367278478 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.366271227 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367528371 seconds)
  done (took 31.269455565 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367333723 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.367448332 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.367768765 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.368699889 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.366601437 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.366619806 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.367175742 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.367132022 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.36850112 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.367649406 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368706104 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.370044473 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.370850441 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.366768637 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.367908307 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368326307 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.369926092 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.368299209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.371342543 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.372213882 seconds)
  done (took 28.586893278 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369668308 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371234987 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366929132 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370736391 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368712949 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.375896823 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36689526 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.36828971 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370266778 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.371943527 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.368830911 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368851793 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370537063 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371886187 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371053331 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369842561 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369076752 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369021438 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.371091953 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370036372 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.371239946 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369776282 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.369122079 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.368511108 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.368489736 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.369443698 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370554105 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.372145717 seconds)
  done (took 39.577630997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.369766016 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.371426632 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.372729452 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.370744492 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.371280454 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.370504447 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.370412048 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.369226562 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.371170454 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.371886467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.370530847 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.372370817 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.368505101 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.371539635 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.371107876 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.371477476 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37395782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.371145171 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.372578733 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373752835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.370748822 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372217375 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.370145533 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.370812517 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372690969 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.372311102 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372630486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.374494341 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372343089 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.373888537 seconds)
  done (took 42.369289559 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.397257152 seconds)
    (2/2) benchmarking "in"...
    done (took 1.395980662 seconds)
  done (took 4.013880047 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.370814613 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373401255 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.372753966 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.368719514 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.371100613 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.369246746 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.374049801 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372754035 seconds)
  done (took 12.193725474 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.366367469 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.376022328 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.37590248 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.376534475 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.371076727 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.374964232 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.38197085 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.381661313 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.370886479 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.370264403 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.375854988 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.376335007 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.369636879 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.37053001 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.371707115 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.371593832 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.379249135 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.37628982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.375724106 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.376894715 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373791667 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.374467451 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.375322937 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.381820761 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.369332999 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.389186991 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.384353625 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.379327637 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.371792321 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.383665758 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.369814975 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.382263345 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.37596003 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.376732194 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.374578779 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.375855128 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384431358 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377362512 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.384997002 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386185422 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.374163642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.379080608 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.373773998 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.373696054 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.375650702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.381300932 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.379111967 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.377910557 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.36791578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.376271941 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.385033111 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36844427 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.379700379 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.38236231 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.380630316 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.388242946 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.384032495 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.373340493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.37979271 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.39020842 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.396851024 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.388073162 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.381963237 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.382313701 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391219442 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.399348828 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.392296674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.384873244 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.380876646 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.380861281 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.387648387 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401443647 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.398862173 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.386198413 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380417371 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.381813847 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.375755814 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38236245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392880198 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.392040566 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.386255193 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.379063567 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39229842 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393752725 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.375864906 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.383431929 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.382023301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.380973376 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.372562252 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393690567 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.389911175 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.381294506 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.374105464 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.3752825 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.378117566 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.383555967 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.373819115 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.376910639 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.385232997 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.382207123 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.381509967 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.380683116 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.390200388 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386210286 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.381912951 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.387887105 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.385054203 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.372612886 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.39253169 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.388073651 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.383735809 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.374317991 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.384671752 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.385311777 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379278468 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.387149441 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.388363632 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.38478664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.390130686 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.382397231 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.393052357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.408001115 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.387340596 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.38270998 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.385854025 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.396890275 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.381473161 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.385704984 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.389513708 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.383130425 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.37951977 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.386959054 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.392123188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.379024246 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.385370165 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379600646 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.389347975 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.384695149 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.387143994 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.387045587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.386606355 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.383759416 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.391568928 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.396206599 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.392081144 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.390275816 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.401713933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.387030222 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.392348776 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.393617093 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.393200979 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.388101238 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.380693732 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.390240477 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.378220652 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387397797 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.380939294 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.389585715 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.386423022 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.383953365 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384962292 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.380073611 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.384882672 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.386823981 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.391990699 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.385487638 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.388037473 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.382272913 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.385159942 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.374883636 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.38698273 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.376620029 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.386390546 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.391550979 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.386319587 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.386698826 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.390810521 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397531068 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388734349 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.3876032 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.385408298 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.392675493 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.395471728 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.399034612 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.395738383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.387522883 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.386897384 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.383489898 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.381093364 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389920045 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.381548519 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.393635811 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.400931361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.400004568 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.384183911 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.394804255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.380017249 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.39204734 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.395503786 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.397417367 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.389272337 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.388852661 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.384272539 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.390826725 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.387192464 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.394697049 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.382335212 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.393005633 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.389855162 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.38779687 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.393810135 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.385977085 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388188261 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.394544236 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387292127 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392470509 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.383269409 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.394704452 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.38219511 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.386401302 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.395043741 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.38858908 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.401532485 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.399276751 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.393738826 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.399140562 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.395649335 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.385679702 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.39552802 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395293214 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.390659874 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.405435985 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.393167665 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.388391848 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.407118251 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.394131195 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.383134475 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.399326199 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.40138526 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.393911195 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.383166952 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.397484974 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.388186025 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.392348078 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.392029322 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384767155 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.394010928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.401906765 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.396413748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.384908654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.392064451 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.385490711 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.393483417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.393325436 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.396125444 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.393063951 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.401609101 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.399365311 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.391500413 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.388512464 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.395669938 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.390931976 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.393797074 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.390017334 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.399324523 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.402236974 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.395165824 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.399780308 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.391554681 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.398716974 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.384856692 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.395039551 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.389391765 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.413971847 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.413579269 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404194277 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.405768219 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.397836625 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.403565495 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.395115538 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.38764748 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.387590209 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.390599321 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.386461994 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.387319505 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.397433081 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.388402394 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.397105596 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400010435 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.395445329 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.397816161 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.395148294 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.390222458 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.399211101 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.397063132 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.392515836 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.385917302 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.398224314 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.393155512 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402603571 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.393546414 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.390569429 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410152087 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.400702283 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.399305107 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.395430033 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.387739181 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.387667314 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.393853925 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.402624733 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.393626383 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.403760492 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.393380471 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.3968967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.395362846 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.411684125 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.410338074 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.392608795 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.404035876 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.395540732 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.386206724 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.384622304 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.400583203 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407041845 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.410078265 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.391092401 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.401713654 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.397393691 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.397404935 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.397078846 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.396861571 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.398703494 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.397380631 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.412641789 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.403498936 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.397662371 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.409895979 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.408886913 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.401159533 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.397419462 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.387815797 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40661295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.410589433 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.397050352 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.39693204 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.393322852 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.400629228 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.398606694 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.400491781 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.399565126 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.398082745 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.412128875 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.40384067 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.401793553 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.400535361 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.412583332 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41268104 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.411355801 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.413798291 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.399182326 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.405680987 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.400417189 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.395375348 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.390073137 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.399208377 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.407261776 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.391947886 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.404845826 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.401475355 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.40507714 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.405818785 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.410237084 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.391745697 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414628285 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.425285156 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.393205729 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.401328898 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.402589184 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.394343303 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.404071216 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.402582899 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.390203461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.397441253 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402283698 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.408222232 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.390488972 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.404660258 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.395411107 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.404709565 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.401749412 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.400692085 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.400342879 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.401563076 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.393084624 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.40762928 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.410409802 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.414495865 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.401827634 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.404652226 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.399382212 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.417004075 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.412326875 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.403614943 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.405722124 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.403530714 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.399450098 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.405105286 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.407588842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.396897119 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.406090886 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.394475862 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.403562004 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.401639901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.412095421 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.407120277 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.405220035 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.397678364 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.396861221 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.402715178 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.403593222 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.405418803 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.409930481 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.409568424 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.397740662 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.400207945 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.406664493 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.402107069 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411065681 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.398403317 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.405225972 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40414015 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.408055732 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.408113071 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.404445775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.395124827 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.400034389 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.420981467 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414835225 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.408410594 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.402510333 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.407790963 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.400680911 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.404699369 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.408458366 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.402085558 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.402130606 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.409120531 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.401690467 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.397440345 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.3995946 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.409299604 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.419105181 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.41025196 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.402773565 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.419034292 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.422311734 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.414498589 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.397847939 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.404482861 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.40408721 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.408084436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.407648347 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.39984959 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.422469017 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.41713405 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.410996677 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.414498939 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.408233757 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.398350726 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.411811376 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.407405858 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.412161211 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.415812514 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.409823554 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.415002145 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.407700169 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.407849699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.400885615 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.403124587 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.406508676 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.407948105 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.409787376 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.418706876 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.412834341 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.409287591 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.413497485 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.407070271 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.411679097 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.40827657 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.400591863 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.410799795 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.400748727 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.417124203 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.411406367 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.402400892 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.412790411 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.407524449 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.406710867 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.411668691 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.41697579 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.410942411 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.401162886 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.410211173 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.42357195 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.42206268 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.411837008 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404001166 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.409526519 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.412748786 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.411324233 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.41087725 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.406110651 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.427874453 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.425033868 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.402718391 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.407453769 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.42092294 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.420987822 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.408824824 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.411089008 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.415162919 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.410408055 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.419197022 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.409603135 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.422923194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.417891479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.405993388 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.415479161 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.408128366 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.408347388 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.422600039 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.425638554 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.410737566 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.414589942 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.434222746 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.422228972 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.419701555 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.445653529 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.424842643 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.416483828 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.4189076 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.402025285 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.416006044 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.414367847 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.419112445 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.415470711 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.411376126 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.41548852 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.412563566 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.420496978 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.426718649 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.424041633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.413943911 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.403053279 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.408212455 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.413573193 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.413641916 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.416433193 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.413857168 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.415112913 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.417290914 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.411973827 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.433087616 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.441249478 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.419038273 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.415155098 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.411612049 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.422460287 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.420129333 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420604045 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.420119486 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.415681422 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.415726818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.420165581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.424365836 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.414741358 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.408498595 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.410589015 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.410875293 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.419205543 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.431327335 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43902168 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.42751889 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.418652749 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.422208578 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.418195009 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.411767586 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.420788286 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.414975815 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.41298897 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.416367542 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.427163258 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.424631513 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.415074221 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.411473834 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.419784946 seconds)
  done (took 834.218357887 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.413842431 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.415958971 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415217954 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.415368673 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41683506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.417773378 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.415317968 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.417482629 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.419187733 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.418601276 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.416512882 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417450641 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.414173408 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.41784273 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.415402475 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.419753866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418233632 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.418933162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.417713244 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419241022 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.415889479 seconds)
  done (took 31.011210504 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.416624489 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.421831296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.418817994 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.421042089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420419943 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.419509772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.41831353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421229055 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.422515391 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.417366342 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.421257968 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.421698248 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.418462781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.422619175 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418468228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.419107486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.42096261 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421438229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.421371041 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.421187289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.423982268 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.41942687 seconds)
  done (took 32.503849268 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.420813708 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.421633784 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.412749555 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.424605741 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.421783315 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.420605651 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.418735022 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.422120369 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.424072852 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.413034856 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.414940405 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.413054062 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.422526635 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.425533861 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.422746007 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.423419277 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.419863518 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.427847215 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.421546344 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.42133689 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.433273813 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.432109907 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.420558788 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.411799015 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.425984618 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.421994724 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.419541061 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.423440439 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.41496911 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.423717359 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.421001442 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.414028068 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.430971354 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.424315062 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.414752043 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.424778737 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.422574617 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.422466013 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.421579517 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.434548765 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.443309167 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.422780718 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.431826421 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.434261997 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.420695676 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.421062692 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.429974859 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.422209347 seconds)
  done (took 69.556036004 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.419995937 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.420771035 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.422189721 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.423838185 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.421093074 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.419762178 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.42102414 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.424266382 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.422688947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.421450172 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.426004173 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.424155195 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.423385474 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.423395741 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.422443944 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.419034781 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.42187788 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.425555512 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.424275881 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.420677588 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.423274426 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.423675734 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.42628284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.425136325 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.426008364 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.42455364 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.427464764 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.429478986 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.423559378 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.425489722 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.422417265 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.424585836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.427015964 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.426138128 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.425299125 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.425760427 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.424200662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.425885652 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.425561589 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.424336363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.426218795 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.426673322 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.423880719 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.42833317 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.426440471 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.427308249 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.426800643 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.426687919 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.425864211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.426291011 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.426941513 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.425773766 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.423925696 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.425621373 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.427467488 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.425372179 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.426816776 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.425194293 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.424070756 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.426829208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.424404947 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.425728439 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.428472224 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.426011017 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.425870008 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.426812236 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.424798363 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.427661088 seconds)
  done (took 98.151836001 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.426661868 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.428312637 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.427003531 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.429984637 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.429954186 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.432388085 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.429949088 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.428383805 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.429108828 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.429610986 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.431645044 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.42799423 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.431131082 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.427306224 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.428288123 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.429815342 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.430139476 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.431325031 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.43100851 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.430242491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.429806332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.430252898 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.428542834 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.430566695 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.430342853 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.429672027 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.4303615 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.431202669 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.431676682 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.430695412 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.429905996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.430652948 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.428373887 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.430310726 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.430689336 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.43221872 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.428585646 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.428947564 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.431447114 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.430109513 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.436129832 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.431451444 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.432213272 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.432617095 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.431605095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.430424987 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.431868256 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.43265851 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.431200784 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.431323634 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.430260929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.431669209 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.432877114 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.432334028 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.434114701 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.433415939 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.433369774 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.429337069 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.430137031 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.432145736 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.432243235 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.434839445 seconds)
  done (took 89.968667736 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.428726237 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.432722067 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.430496434 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.430265189 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.433890721 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.432185895 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.43549225 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.434391273 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.435107146 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.433505545 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.43369286 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.431130174 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434843705 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.431287317 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.429971088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.43350359 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.43190625 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.432034479 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.434096472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.431896961 seconds)
  done (took 29.917813781 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.43422973 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.43335867 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.431613616 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.432425031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.434638581 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.432144968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.43293159 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.435701286 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.433614498 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.433658428 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.433708505 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.433886949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.433944638 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.434253127 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.435311921 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.434035432 seconds)
  done (took 24.212094639 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.434320174 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.433942822 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.437589864 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.437532594 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.433068968 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.431824745 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.434656879 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.43308999 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.436687794 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.435575641 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.436322244 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.4327382 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.432780593 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.437647344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.435003012 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.434893292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.435607069 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.437558785 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.434367108 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.436068162 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.433068688 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.437145254 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.435496302 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.436210987 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.435874422 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.435669368 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.435983515 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.436998867 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.436350321 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.433983889 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.433254187 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.435434562 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.437686734 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.437275368 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.437801343 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.436817559 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.435601064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.432012688 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.436630385 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.435502657 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.43801415 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.436080105 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.437293597 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.437165718 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.433950993 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.436949699 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.436998308 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.436937127 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.433556879 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.437890461 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.435366047 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.443848761 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.438011426 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.438442975 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.440126429 seconds)
  done (took 80.250585988 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.43854229 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.435825114 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.435918282 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.436435946 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.438011076 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.439436747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.437985724 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.438997306 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.436632689 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.437253788 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.439907128 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.445388761 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.438201813 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.435004061 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.440686836 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.439331077 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.439977947 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.437875794 seconds)
  done (took 27.166631386 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.436136048 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.440436804 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.440030537 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.44045189 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.43925935 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.439913763 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.437927057 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.440864442 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.438058429 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.440646048 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.440869401 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.443536011 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.439434302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.439111217 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.43962434 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.440792297 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.443242608 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.440986664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.439185318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.439008969 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.440045484 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.441316525 seconds)
  done (took 32.955343414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.43249592 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.430293196 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.432720878 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.457702478 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.454014928 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.431939355 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.431629889 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.434094517 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.461955602 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.484977664 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.480762812 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.451734819 seconds)
  done (took 18.661203217 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444969015 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443382151 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.441366392 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441702887 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443225915 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443203566 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440881972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440352576 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441755198 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.440492188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.439950639 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.441375611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441613141 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.441962976 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441088214 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.444092018 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442827611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441259954 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44389283 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445580475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443158309 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448565701 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443232202 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.441690525 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444648164 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442808824 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.441652531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44388382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.443641122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.443714944 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443636722 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44275344 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443094964 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443680583 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.441519344 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445071821 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444089015 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443301485 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443659281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.442691351 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.442963033 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443260976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.443308469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444137694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446496722 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.442885999 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444470628 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.443300646 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444462666 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444642228 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44485224 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444273186 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445680069 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.443755522 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445667706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446160088 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444866208 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444729808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448467784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444548081 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446529548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444745662 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444965383 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450042495 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445079503 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446057002 seconds)
  done (took 96.566558641 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445167783 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.446008253 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445743484 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447400818 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447353466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.445449802 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444201808 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446681383 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448156012 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447059853 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447302831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.448132476 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446883015 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44530984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447705745 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445451898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446540793 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447876717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449273473 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.445334145 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449941155 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447992793 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444813408 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.445758011 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447907237 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448095739 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.453295283 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.448461567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447520247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447367644 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448544469 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.444766475 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446415427 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.446724685 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447362266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.44804273 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449559752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449589714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448215586 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45179614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446439732 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450911739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448236958 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.448105796 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449831085 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448875447 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446836919 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450196705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451398464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451349854 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452784603 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450623225 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.450498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452100089 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451220788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449753562 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449836184 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.446243479 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449789809 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449009263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448100349 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449426356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44796339 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446620273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.450095156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.45149261 seconds)
  done (took 96.867139182 seconds)
done (took 1953.147130353 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.666296252 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.626255895 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.440105547 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.437557737 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.433809215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.424310941 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.431157272 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.434994841 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.441944468 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.438183864 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.442034842 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.73106154 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.45940451 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.441096106 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.441244518 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.595491298 seconds)
  done (took 29.170426002 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.481328177 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.455347569 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.593260637 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.442764195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.482200006 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.701315509 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.520443417 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.450082375 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.658058053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.46525239 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.425348293 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.475643795 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.447026819 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.421034127 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.464751349 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.71690604 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.790538727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.420996972 seconds)
  done (took 31.697295376 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.027509364 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.429329595 seconds)
  done (took 5.743214553 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.474096462 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.447075428 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.450660241 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.444748666 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.421625194 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.41141391 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.448418406 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.416270463 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.427416224 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.59727742 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.451266394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.470205743 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.462970326 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.448660336 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.458705538 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.514480997 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.671728926 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.457213937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.45176094 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.460383545 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.448594336 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.608401878 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.501353908 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.459829284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.601164087 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.436437832 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.452368001 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.464515565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.625331755 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.458007055 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.449930749 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.448780393 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.449413155 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.433995482 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.080672339 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.425315817 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.48119478 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.466372015 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.457618249 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.654639811 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.452491479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.462643679 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.418817365 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.078815051 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.612720793 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.616646642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.438340867 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.450356572 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.451973118 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.531311 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.454103277 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.4591227 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.560037069 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.402672365 seconds)
  done (took 92.478205856 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.468254587 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.41717805 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.690765774 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.439396518 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.421651664 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419968559 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.414800094 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.822738562 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.429501615 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.421589296 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.85904262 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.168664185 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.422855099 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.487235423 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.455929976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.501374581 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.423040318 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.43680799 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.435552943 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.41676033 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.117518506 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42356734 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.418200667 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.493715158 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.489490528 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.110449311 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.42468089 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.418802838 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.440710512 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.421800705 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.150815058 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.429314161 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.47650843 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.418166234 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.816785431 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949167907 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910776363 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.425280198 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.443319294 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.421013035 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.453004115 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116250957 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944437697 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.419344806 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.4348194 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128995803 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.421617163 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.435418848 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.434016225 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.79027333 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425888166 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427902599 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.428962509 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.421985366 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.425134858 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.472880874 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473389737 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.131230934 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426548027 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.439270804 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423663302 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.422537671 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.421600051 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42299555 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.423814369 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.957037623 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.684080567 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.422540534 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952532512 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.154715833 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.428012668 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.222984152 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.423231125 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.453101124 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.455672471 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.423045207 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.420382788 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105647583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421000813 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.421141124 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91714086 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.427302382 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.854518441 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.440764429 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.422934509 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.132603176 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.428698231 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.470406398 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424985259 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.420530921 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.440943502 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.43563354 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.827367363 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.470511857 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.427874383 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.426033925 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.458301087 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423347201 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.424545259 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.429172033 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224756235 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.429645208 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.426240026 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.448579809 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430797031 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432167805 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.432404359 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.429190751 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.802223942 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.429975278 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.431433844 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.428848808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.422970616 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.427183094 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.524209538 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.431707831 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.865677542 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.42662143 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.424984769 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.422064496 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.425545804 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.437955483 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422362508 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.442218246 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.427820535 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.835379765 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.446915352 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.424750033 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429334275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.438335909 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.440559725 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.423931912 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.486476039 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.432656974 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.34533337 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.435311013 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.446741657 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.4273123 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.446990571 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.430311983 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.446506291 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.427103893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832842012 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.830872767 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660865813 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.426218796 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.42448694 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.372746702 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.470179623 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.699418551 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.446740958 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.422870185 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.826188302 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.649907156 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.428951964 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.427720662 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.433586282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.802486545 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.429690116 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846608427 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.173292707 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427178623 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.437876632 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.338028111 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.364128287 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.432465609 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.430714409 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.846693005 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.447953682 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.431444879 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.433161018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.432557031 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.426448922 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.434781197 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.437326842 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.431314415 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.43104399 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.722940117 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.718527824 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.452076552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.437837381 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11627156 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.455074419 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428332961 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.436587642 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.436611807 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.430982949 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.49086682 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.432880326 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.471314543 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.433272067 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.431255748 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.151460042 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.427068973 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.454121506 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.719563291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.31219382 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.429386446 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.433131127 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.429947411 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.49483192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.146381673 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.459723963 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.876421646 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.431229279 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.505314258 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.434359984 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.445972703 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140331392 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.447956965 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43123333 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.32020266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.429109805 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.872561378 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.428982974 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.434055476 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.242316988 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.428365227 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.438019598 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.42978063 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.447438602 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.829009471 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.431556485 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.445173929 seconds)
  done (took 526.713770249 seconds)
done (took 687.088586492 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.431133526 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.430932663 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.435543026 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.430142688 seconds)
  done (took 11.029718793 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.476382506 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.464459132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.475449008 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.464729628 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.474636544 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.46300371 seconds)
  done (took 10.123991675 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.434382822 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.432053824 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.435350333 seconds)
  done (took 8.605492919 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.753128104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.464577304 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.933297942 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.438412455 seconds)
  done (took 9.89495424 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.473765065 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.475698132 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.474461871 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.476955555 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.475675643 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.477730374 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.47991885 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.478363135 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.472585515 seconds)
  done (took 14.588482167 seconds)
done (took 55.550505062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.786573069 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.413975199 seconds)
    (3/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.450276603 seconds)
    (4/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.447965206 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.581534496 seconds)
    (6/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.447436927 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.79888518 seconds)
    (8/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.749496707 seconds)
    (9/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.439066728 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.502671464 seconds)
    (11/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.64449348 seconds)
    (12/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.603095547 seconds)
    (13/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.414779561 seconds)
    (14/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.930947294 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.64113125 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.115838893 seconds)
    (17/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.432785901 seconds)
    (18/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.642062374 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.630540308 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.638092805 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.598891801 seconds)
    (22/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.439401617 seconds)
    (23/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.710910026 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.638796596 seconds)
    (25/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.759705267 seconds)
    (26/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.633674157 seconds)
    (27/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.500891419 seconds)
    (28/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.416152291 seconds)
    (29/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.579809975 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.646662191 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.441819033 seconds)
    (32/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.522163258 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.593295419 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.629974245 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599433001 seconds)
    (36/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.591070764 seconds)
    (37/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.419934686 seconds)
    (38/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.854568727 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.62842293 seconds)
    (40/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.842008959 seconds)
    (41/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.417032292 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.579576285 seconds)
    (43/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.442147636 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.420962121 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.70949546 seconds)
    (46/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.41972593 seconds)
    (47/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.818706555 seconds)
    (48/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.692671254 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.927016488 seconds)
    (50/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.761084284 seconds)
    (51/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.537219503 seconds)
    (52/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.699465204 seconds)
    (53/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.585481506 seconds)
    (54/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.760512702 seconds)
    (55/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.424395099 seconds)
    (56/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.852542702 seconds)
    (57/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.418740469 seconds)
    (58/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.455034331 seconds)
    (59/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.456609741 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.79257062 seconds)
    (61/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.414993206 seconds)
    (62/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.425911563 seconds)
    (63/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.419815118 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.682589525 seconds)
    (65/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.508509148 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.76192643 seconds)
    (67/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.422770731 seconds)
    (68/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.450015676 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.416225067 seconds)
    (70/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.668957554 seconds)
    (71/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.643248907 seconds)
    (72/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.639361332 seconds)
    (73/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.691442047 seconds)
    (74/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.62671112 seconds)
    (75/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.843088147 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.618748865 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.639196297 seconds)
    (78/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.592852275 seconds)
    (79/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.44587318 seconds)
    (80/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.615115581 seconds)
    (81/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.50321881 seconds)
    (82/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.616943747 seconds)
    (83/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.529729235 seconds)
    (84/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.721541964 seconds)
    (85/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.512146692 seconds)
    (86/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.519612236 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.696874093 seconds)
    (88/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.612933251 seconds)
    (89/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.761146372 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.634493255 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.603971217 seconds)
    (92/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.587815602 seconds)
    (93/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.717237855 seconds)
    (94/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.87804378 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.688265037 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.508295294 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.446315345 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.651900357 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.509870494 seconds)
    (100/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.42327268 seconds)
    (101/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.677155873 seconds)
    (102/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.421636299 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.795100131 seconds)
    (104/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.638985167 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.601541928 seconds)
    (106/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.513912698 seconds)
    (107/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.70840447 seconds)
    (108/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420180387 seconds)
    (109/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.518644445 seconds)
    (110/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.515461429 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.937623353 seconds)
    (112/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.807588241 seconds)
    (113/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.64061624 seconds)
    (114/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.44699071 seconds)
    (115/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.812914477 seconds)
    (116/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.424581855 seconds)
    (117/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.60825137 seconds)
    (118/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.642130469 seconds)
    (119/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.507481713 seconds)
    (120/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.681930572 seconds)
    (121/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.640913765 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.439350353 seconds)
    (123/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.514425753 seconds)
    (124/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.742153175 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.424160362 seconds)
    (126/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.582930204 seconds)
    (127/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.87749322 seconds)
    (128/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.848878618 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.651701658 seconds)
    (130/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.51929362 seconds)
    (131/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.425130319 seconds)
    (132/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.754692898 seconds)
    (133/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.716114529 seconds)
    (134/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.424633677 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.6613202 seconds)
    (136/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.425203163 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.487643157 seconds)
    (138/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.520533652 seconds)
    (139/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.422736369 seconds)
    (140/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.808198095 seconds)
    (141/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.67339017 seconds)
    (142/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.855831946 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.627029806 seconds)
    (144/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.677745612 seconds)
    (145/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.624085647 seconds)
    (146/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.423928699 seconds)
    (147/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.879806294 seconds)
    (148/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.70712833 seconds)
    (149/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.61728129 seconds)
    (150/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.426858611 seconds)
    (151/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.586448319 seconds)
    (152/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.948127342 seconds)
    (153/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.607048704 seconds)
    (154/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.426929849 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.626146523 seconds)
    (156/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.894018017 seconds)
    (157/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.708558888 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.020556455 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.705186393 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.75672039 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.634691325 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.574913123 seconds)
    (163/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.764546316 seconds)
    (164/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.428545069 seconds)
    (165/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.587275659 seconds)
    (166/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.604725504 seconds)
    (167/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.766389358 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.520746528 seconds)
    (169/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.725623768 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.644300787 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.658842651 seconds)
    (172/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.429414522 seconds)
    (173/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.986634403 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.704380075 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.45705882 seconds)
    (176/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.702204589 seconds)
    (177/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.452990006 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.639844075 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.749170897 seconds)
    (180/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.450859358 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.680213175 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.518479061 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.703717212 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.748332662 seconds)
    (185/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.586521652 seconds)
    (186/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.513726571 seconds)
    (187/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.526482802 seconds)
    (188/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.699768455 seconds)
    (189/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.613539194 seconds)
    (190/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.689709844 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.810136331 seconds)
    (192/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.121047515 seconds)
  done (took 360.196619915 seconds)
done (took 361.504888794 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.510291707 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.62678627 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.482410228 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.482345904 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.482454648 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.451561752 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.513451606 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.485351315 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.506293992 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.507763173 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.452010273 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.493913716 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.508772729 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.495767024 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.524751576 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.489173379 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.484064139 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.49530237 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.509133668 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.508461586 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.485505454 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.492871265 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.517430324 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.484326603 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.502651349 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.500671908 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.498603768 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.454549283 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.487076603 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.51141678 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.453104895 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.501060994 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.5098677 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.504712226 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.486803176 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.497211203 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.490419627 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.6307198 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.517341207 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.497427361 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.497079971 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.513218615 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.495969076 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.49599792 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.496137602 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.519675302 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.501102829 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.508071522 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.454118641 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.473253548 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.508962557 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.508553217 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.497487495 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.463282656 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.450584673 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.510144272 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.498327965 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.51381059 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.493094757 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.494395481 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.527127227 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.51410553 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.510951846 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.502540372 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.49396477 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.508886011 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.49630606 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.513962844 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.495678885 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.498718937 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.493961977 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.500269482 seconds)
done (took 117.303341091 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.668249293 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.459379715 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.708798304 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.496827354 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.716629398 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.66433888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.499508283 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.497593305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.494827799 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.363892084 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.498261057 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.499053197 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.462069653 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.497844942 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.662835407 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.498362815 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.499275432 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.259981595 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.494231913 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.681378198 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.463457469 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.495636072 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.498626396 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.366127494 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.461298396 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.466127013 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.684270954 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.495349862 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.263572973 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.458134586 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.459571919 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.259517917 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.679122115 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.515330127 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.509882856 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.508192348 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.715844592 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.502126842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.670087307 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.670518227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.707451276 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.536487985 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.468210657 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.464597418 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.500505895 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.498549082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.498078492 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.528431793 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.458830903 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.499086092 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.265695519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.512158634 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.501436181 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.502082214 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.500218568 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.530173146 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.4995974 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.499232829 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.681221404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.501026702 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.67289765 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.366994504 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.362779303 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.500307476 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.461265151 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.500189165 seconds)
  done (took 120.105179788 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.616445709 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.624567622 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.670801853 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.492784732 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.584011556 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.671873637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.492454453 seconds)
  done (took 12.47939504 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.508221262 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.500834847 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.587741639 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.584593473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.504595871 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.728850576 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499284301 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.511554437 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.503615089 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.584221989 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504620665 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503195763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.515470787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.466421812 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.583808248 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.513408304 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.669425211 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.498806936 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499218791 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.705493695 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.500800416 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.511656196 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.586123976 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.513233212 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.506953363 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.507645001 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.340583534 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.502617826 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.502317928 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.506680564 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.509709161 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.618542344 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.507118817 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.467409787 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.502428696 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.668201941 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.503568156 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.503102315 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.501198232 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.471278366 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.504006131 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.50366782 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.502163788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.505206982 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.500412517 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.530727826 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.503251007 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.502798086 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.50471516 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.504310429 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.586781112 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.502694721 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.502478842 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.501478924 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.591698847 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.511598228 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.504253998 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.504297299 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.500462035 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.503617115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.708599326 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.587556211 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.504535318 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.589065201 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504716278 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.508918139 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.505004093 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.506355941 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.646052965 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.503728302 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.587449912 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.507197878 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.740856013 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.528705082 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.506718836 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.504864061 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.505464417 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506257814 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.470194219 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.510348418 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.50609201 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.498431399 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.514857511 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.507204653 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.502847674 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.714593455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.665388665 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.506560227 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.51982581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.512556869 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.505843725 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.590180986 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.507497496 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.505833668 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.58901778 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.672071847 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.594749654 seconds)
  done (took 155.15131757 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.513337345 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.518056312 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.50754897 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.535085432 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.49873507 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.502069712 seconds)
  done (took 10.404299109 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.500783165 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.509563332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.506516716 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.508526747 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.510492431 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.511050323 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.508620824 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.501376048 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.513048203 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.50836304 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.507200462 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.510670247 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.509326291 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.508750101 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.508848087 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.510713897 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.510431809 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.509173129 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.51074344 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.51194038 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473075592 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.509813294 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.510144551 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.500820321 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.511686088 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.510810418 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.532073806 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.508729985 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.506639636 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.51245951 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.512495898 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.513250324 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.50387462 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.508049173 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.515920356 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.50169606 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513453631 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.512316685 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.507162399 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.509200576 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.514101339 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.511059612 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.508422754 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.51225725 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.501158492 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.508954874 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.514909822 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.533694404 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.50982817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.511751948 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.516662 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.512086628 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.511252513 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.513887625 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.503308556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.506395821 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.513890698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.512528234 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.512254456 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.503527438 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.516896667 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.512417327 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.50678728 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.519244242 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.513470673 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.512940996 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.50571829 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.516268933 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.513072996 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.512966628 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.514030031 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.509308971 seconds)
  done (took 111.069303509 seconds)
done (took 410.535281278 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.844122566 seconds)
  done (took 4.177022023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.654789342 seconds)
  done (took 3.9920925 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.038652541 seconds)
  done (took 26.384083549 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.504655795 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.471278017 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.501711356 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.4731645 seconds)
  done (took 11.287435924 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.832321833 seconds)
  done (took 4.168140306 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.490065811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.483057518 seconds)
  done (took 6.310533972 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.861201414 seconds)
  done (took 4.196808267 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.973884388 seconds)
  done (took 4.317493517 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.503652036 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.504636798 seconds)
  done (took 6.354278362 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.450153822 seconds)
  done (took 3.787977647 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.489558135 seconds)
  done (took 23.826149611 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.482586438 seconds)
  done (took 3.825602963 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.513248158 seconds)
  done (took 3.852092434 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.659899349 seconds)
  done (took 6.996590629 seconds)
done (took 114.812399331 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.47286537 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.477435084 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.47596269 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.480092406 seconds)
  done (took 11.242214321 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.625702892 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.633132957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.636725173 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.623497932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.622472383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.631832792 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.548029955 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.545149212 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.607496596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.61079024 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.643578279 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.610908133 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.634932626 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.547189834 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.609913244 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.646205918 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.615033448 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.639568272 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.558961234 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.608078444 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.517865854 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.626371832 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.612781905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.515358972 seconds)
  done (took 39.812960643 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.093567346 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.632709439 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.723105291 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.602589058 seconds)
  done (took 8.390341189 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.681649531 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.68275435 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.699297725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.745040902 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.788885165 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.690633425 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.554348007 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.542091071 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.534593191 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.682475195 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.771870571 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.68001776 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.901767187 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.516400584 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.904372825 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.515879638 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.518955169 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.682857715 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.731627953 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.759847534 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.520330972 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.682502084 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.691954473 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.675956908 seconds)
  done (took 41.494202581 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.537581001 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.541963402 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.519844807 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.541628722 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.520440623 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.519927569 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.518593811 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.532272575 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.517854889 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.518515518 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.522072186 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.543195961 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.518357816 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.519450623 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.535530531 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.520474776 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.523437582 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.533196226 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.53777914 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.521808744 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.520627029 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.531971419 seconds)
  done (took 34.936088312 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.478212418 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.480601339 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.919383044 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.825555471 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.483088317 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.477379282 seconds)
  done (took 15.007822713 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.607607714 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.80493141 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.510819916 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.96743287 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.10109002 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.509735491 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.512699974 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.85535074 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.219511643 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.187825421 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.588120179 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.604657268 seconds)
  done (took 22.811328802 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.652055893 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492023602 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507960055 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575448246 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494263551 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490012592 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.578554089 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402712942 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.521914064 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.849911501 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4932519 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657379545 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.831144589 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51098984 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493337316 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.47537763 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.810671804 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13869997 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491059443 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493008224 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573506239 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.510657186 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491762395 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.785862364 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495864104 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495778339 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.92575222 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495007291 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911965342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868757333 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870207098 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497483025 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8549546 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.332958752 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673695656 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784327882 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488638604 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495449317 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.470425394 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.4955047 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504168582 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49481865 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863949599 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497387691 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495331704 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504326214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41057784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.528630282 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.495614771 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496937285 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.876545544 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.659460536 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.523486751 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495975152 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517834077 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494369151 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.523735455 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711799384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220531745 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511481104 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505433896 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.496749063 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486627245 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528981444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344719604 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.529549743 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.525713361 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523460211 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496290485 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49056322 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549166832 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497779571 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.542336284 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497827202 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490330788 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498703152 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497031641 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195612096 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50755784 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.495172536 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812654249 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497622358 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496997349 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.495880028 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49815811 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.460735754 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528663875 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.464628009 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603095966 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405981026 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789014301 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547794241 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559383913 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.8049752 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.464694148 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496325057 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.50493083 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500593826 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544396533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.412814088 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502146747 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.522009119 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838405079 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.798874214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499143851 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.467897977 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15628866 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501358029 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.570414227 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504059001 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.789553406 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.316292875 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887145006 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501361312 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.567184137 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501817584 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.498918193 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514700438 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.529854879 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498824327 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890481045 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.47231062 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500041032 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648653855 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504085121 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502137108 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497938321 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502495534 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498327196 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.781170776 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5008294 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.873688686 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.505176461 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500254257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.494886745 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501110581 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.504253998 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.811281239 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517856775 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860004823 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502323585 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502503775 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495230643 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.808738877 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.499055152 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.53336168 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931641377 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501002816 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505734842 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884665152 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565934676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698906125 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563033958 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.504905058 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.842227982 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.53047479 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.529806479 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506115897 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506199078 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511540818 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.530990219 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502267572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316668622 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508628157 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499339197 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503026397 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.548495098 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65793213 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534533477 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.796166957 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.50733323 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50156427 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.534164156 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.518337492 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804612304 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873248756 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.504688061 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75614853 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.160678673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.319529389 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550306991 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.503933217 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.504758042 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.501164708 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501219324 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502389166 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503101407 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793998943 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893315344 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514205194 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326079944 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509139605 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505197344 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.535364588 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882343837 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.535435267 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505735959 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.519375264 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505005001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50516368 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884905406 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807786242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.552757163 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507292163 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.108801196 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533806149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502433026 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503998239 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565257705 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.508761763 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521473855 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92958504 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505011007 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885556745 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.508520252 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.554117462 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.508081859 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50611429 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510332564 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.515865251 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537069623 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.79984396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.508718113 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510415465 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230895842 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510580919 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262374846 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511079097 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.529784829 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525716853 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434945254 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507776443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507116373 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876641716 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.417805085 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505253357 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163745474 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505565757 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.481594552 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884336549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819825203 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508535478 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.527938015 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.893141509 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.810354585 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566883121 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517534458 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51199353 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.473956709 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277948613 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525410948 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.765601128 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42668778 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529401679 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.512607993 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.581004191 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.508483167 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071071677 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50939229 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510000189 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.519188718 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.511400786 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511964266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504186042 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510237929 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35891275 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.523534662 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.175316707 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509886627 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.802745866 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.893218264 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.871793682 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.519421848 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.514763016 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.847026707 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895801345 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511898964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.528839038 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266813888 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.466299032 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.539501148 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514431479 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51804367 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526049926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93769913 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.51359059 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.512601847 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515499213 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513058889 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515889346 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.511885205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.517003385 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513196546 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158513035 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.499594746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51532007 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54175283 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514066559 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.846508694 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.560985444 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33374726 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833694424 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522976491 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575890132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.542993211 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512572025 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.480709105 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51178645 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.515524286 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.537691839 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.8223346 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512228755 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.47957146 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.595946384 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812551093 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513397828 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.527715292 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849471291 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.514641212 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.513372545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516217391 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575118317 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519924007 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517442546 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502506219 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608780278 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668199846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809632286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.89929711 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.898032076 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083054067 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520389709 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51783701 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.558281049 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681135289 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511956723 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.518798724 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.512658628 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331213767 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524911233 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340237191 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905834254 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51776179 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520539239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515478191 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841072527 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515084705 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878558021 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517280864 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.523380592 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56916323 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532879705 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515929365 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819275831 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870737752 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517720165 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511865091 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520286344 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.516974609 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908793151 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.821254434 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170812573 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230440058 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514259599 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517548286 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444688812 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878990128 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518192223 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518475639 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520469048 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.543353732 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.522504084 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.549793308 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533928511 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833783891 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898943644 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360000039 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894428055 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.546909142 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.520334953 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518969835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877282998 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443729123 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816960733 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350527117 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474654005 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857570925 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672901142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8144887 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.522174991 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846367335 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.531911844 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522099982 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.520174527 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520942363 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.517625251 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.894028633 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349300145 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864755567 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.548958775 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.532584346 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58111028 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.816535609 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.828235071 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.488910427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.82179773 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916343202 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.532867063 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521264541 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328777843 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907908471 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52209216 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.545063447 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856011717 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.523304325 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585433525 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.484664915 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.519269385 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229856185 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.816641488 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572193573 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523187481 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476273554 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355837778 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.524434707 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176212142 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519521442 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521191417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.885039292 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.553008382 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522966223 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.890465819 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.550506039 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.525256738 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822328803 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.350901885 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.542147364 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.545569797 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518692635 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.524418503 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523181964 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.602888747 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526256935 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522775697 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.092645859 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529231895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527265862 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562557221 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.523909081 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520355487 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.525588205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526040916 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.553833347 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.517833169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.48963042 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.558731386 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.744061239 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244623984 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526126262 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.228283918 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.95042952 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.86511036 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.530265336 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.493136592 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.550640483 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526892701 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525491615 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520449423 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.528920612 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248816906 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.524083964 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.904202692 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556710598 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.825386734 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.826138785 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.535954467 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823612137 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531571718 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57686812 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.494350853 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526383698 seconds)
  done (took 1070.418823958 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.530685362 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.550188051 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.548453404 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.575513548 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.571082468 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528940867 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.566905052 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.520893963 seconds)
  done (took 21.763153471 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.523896928 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.547881194 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.522370338 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.548086038 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.533082734 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.1833113 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.512967466 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.544961548 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.569899357 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.526420853 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.516586012 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.351090038 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.555415043 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.530501888 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.527138472 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.54901353 seconds)
  done (took 35.422981932 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.823217394 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.732709237 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.163396686 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.601614283 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.522554579 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.554312109 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.906862946 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.522018407 seconds)
  done (took 29.201105602 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.56125545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.562875139 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.569266315 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.580250812 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.567506594 seconds)
  done (took 9.214851833 seconds)
done (took 1341.057711703 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.559597488 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.557509373 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.560172003 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.560807628 seconds)
  done (took 7.613180559 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.500021546 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.499396537 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.500124842 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.534957344 seconds)
  done (took 10.409007249 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.461809843 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.24811549 seconds)
  done (took 6.08551241 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.178002524 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.165714998 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.162425543 seconds)
  done (took 7.882387419 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.925208575 seconds)
  done (took 3.301159037 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.521609417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.545504006 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.52898738 seconds)
  done (took 8.973106496 seconds)
done (took 45.643524922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520362541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.290844108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.682985246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.520510325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.705866926 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.678438647 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.807877594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.520238153 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.5182944 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.526328732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.518873315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.701140138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.794240105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.291203232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.797395884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.296645475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.689547463 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.521127861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.532548029 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.519759322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.805983498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.522054306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.545715206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529509374 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.685827157 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.748451252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.524688929 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.288387162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.538129255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.534821083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.700612627 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.522224579 seconds)
  done (took 87.760129066 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.52426625 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.54013384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.53801283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.539104799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.523674693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.522213334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.536314919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.520333976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.520431893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.525522135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52097903 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.530114828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.522762846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.520054261 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.520846401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.521306585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.518971302 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.520701201 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.537758468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.537998163 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.525089748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.521192884 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.523112681 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.54246158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521781645 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.537416036 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.526936072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.520115163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.520026674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.522584471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52239129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.520757283 seconds)
  done (took 82.225336897 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.534531661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.52054343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.523878211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.535562868 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.526504103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.531267838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.523993379 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.526344586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.527754962 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.535959357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.521334871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.544380749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.539547103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.53188761 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.521487963 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.525441259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.534578664 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.537835503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.525736409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.540983738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.525636885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.534222403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.528828422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529064276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.528787006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526341164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.550900293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.523611906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.54381678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.540889662 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.528598784 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.540369414 seconds)
  done (took 82.39000232 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.901579384 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.566891013 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.572901764 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.539076722 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.570979382 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.568375489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.5415329 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.863900849 seconds)
  done (took 16.505970906 seconds)
done (took 270.260754534 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.538447173 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.215888208 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.590815144 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.54334591 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.584183436 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.596651152 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.842510909 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.590307748 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.840850851 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.535981357 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.577322507 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.540504697 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.542510399 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.760550276 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.499740575 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.534203617 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.530249063 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.52270823 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.300866542 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.868589225 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.591287552 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.529458879 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.522802935 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.536839636 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.516732331 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.639799167 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.648803804 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.786223025 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.751121005 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.645793365 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.199638655 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.537696868 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.534519998 seconds)
  done (took 71.377530413 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.559126338 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.570283344 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.569771827 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.568628734 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.569042335 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.568925141 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.558787818 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.569883991 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.569159318 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.570150925 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.569899008 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.572632037 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.571349052 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.569292924 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.572874805 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.543698748 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.559256173 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.569347122 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.560544047 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.543892279 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.570377001 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.569481078 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.56963368 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.568955172 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.569502728 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.568299013 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.571932436 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.574173015 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.572160119 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.571975598 seconds)
  done (took 48.400073153 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.568521178 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.271893304 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.483090343 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.569755344 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.561851825 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.566086791 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.963439206 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.569080956 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.565881178 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.569122163 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.196601538 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.572233592 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.610851771 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.500501565 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.560957228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.575294247 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.574031377 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.565869515 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.298595093 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.57789332 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.976855436 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.572869776 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.976190967 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.58357896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.566466728 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.568312772 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.578185187 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.536375052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.582832984 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.216107998 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.548737867 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.953402175 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.440572786 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.552258217 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.54388299 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.577175281 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.574337002 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.205411317 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.56269013 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.569477445 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.971136413 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.567405743 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.499583711 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.342618359 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.581213295 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.575194583 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.538019325 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.202279494 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.87141647 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.576117605 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.5388929 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.565293044 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.579761155 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.568851947 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.876084312 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.56529067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.568226868 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.538046423 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.578109339 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.951977622 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.573036907 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.568637883 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.287733307 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.562671902 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.285085275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.564169578 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.584103956 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.570996982 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.507965503 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.567994715 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.373382956 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.582953042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.575503072 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.203884516 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.276805521 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.536804296 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.565779 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.289000438 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.475180329 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.970608064 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.569881897 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.522858529 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.974776751 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.568175185 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.580455797 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.586504541 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.586327284 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.755366867 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.949469482 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.275831584 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.358984198 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.568685934 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956000131 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.581245911 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.572455618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.538668709 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.575098342 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.580140743 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.499740015 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.365413926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.584112057 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.585377442 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.355594591 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.588389557 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.960256119 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.576997466 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.546775746 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.567459521 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.698373934 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.576932723 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.585028236 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.572723529 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.962228577 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.569874423 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.578948553 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.350069447 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.227219257 seconds)
  done (took 222.629150123 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.544102221 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.537875871 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.543390678 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.536893902 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.540599891 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.570869173 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.541992875 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.543209371 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.572237294 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.542054056 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.542213574 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.579275968 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.572878576 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.54362318 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.545363345 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.536618169 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.540687821 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.542731726 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.536704842 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.543517719 seconds)
  done (took 48.353577995 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.581519898 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.3068738 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.272337426 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.578437453 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.582518838 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.572645376 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.651292528 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.581639816 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.584185042 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.984666067 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.798028856 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.585060433 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.582932578 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.581788648 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.280276005 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.554148122 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.9935753 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.315777446 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.580483873 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.315798887 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.559083106 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.591448955 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.576304012 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.317723783 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.990052506 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.956199179 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.648031639 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.312865483 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.579844476 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.583883048 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.313345713 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.579508958 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.57280175 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.29957804 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.57830699 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.604343751 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.582326985 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.652398465 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.654385938 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.985089445 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.316552336 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.977766098 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.599641057 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.833389008 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.587917081 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.554816503 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.325130242 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.582457587 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.552523613 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.591118117 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.597406905 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.293494026 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.574024043 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.295191798 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.579007777 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.589954002 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.3164577 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.291057963 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.283407618 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.807714793 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.575881752 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.963185891 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.581287467 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.328766458 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.581584292 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.585278198 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.587854084 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.80657254 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.3140069 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.96132937 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.985526651 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.984530575 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.580116717 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.667800284 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.587115164 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.990317414 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.65944978 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.065386807 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.993350202 seconds)
  done (took 145.967839629 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.958686436 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.716706782 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.11504766 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.32506927 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.242981877 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.777549645 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.723273539 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.914286517 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560076041 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.741074197 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.458454947 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.69162119 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.510610742 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.674472571 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.711122273 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.775140959 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.135272579 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.565325311 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.408007192 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.41723986 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.555323271 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.735464335 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.194546178 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.864503719 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.561906092 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290256743 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.590569932 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.266558198 seconds)
  done (took 60.880771571 seconds)
done (took 598.993844345 seconds)
SAVING RESULT...
DONE!
